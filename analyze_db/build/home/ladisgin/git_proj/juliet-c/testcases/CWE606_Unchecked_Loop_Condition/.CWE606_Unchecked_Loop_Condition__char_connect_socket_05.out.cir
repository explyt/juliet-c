!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc214 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":436:10)
#loc215 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":436:14)
#loc216 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":436:20)
#loc217 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":436:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc769 = loc(fused[#loc214, #loc215])
#loc770 = loc(fused[#loc216, #loc217])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc680)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc681)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc682)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc683)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc9)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc684)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc685)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc686)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc687)
  cir.func private @close(!s32i) -> !s32i loc(#loc688)
  cir.func private @__isoc99_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc689)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc22)
  cir.func private @printIntLine(!s32i) loc(#loc690)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_connect_socket_05_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc692)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc693)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc693)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc693)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc31)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc694)
    cir.scope {
      %4 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc680)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc35)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc35)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc698)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc699)
          %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc700)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc701)
          %11 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc702)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc46)
          %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc46)
          cir.store %13, %10 : !s32i, !cir.ptr<!s32i> loc(#loc701)
          %14 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc49)
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
          %16 = cir.call @strlen(%15) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc49)
          cir.store %16, %11 : !u64i, !cir.ptr<!u64i> loc(#loc702)
          cir.scope {
            cir.do {
              %17 = cir.const #cir.int<2> : !s32i loc(#loc53)
              %18 = cir.const #cir.int<1> : !s32i loc(#loc54)
              %19 = cir.const #cir.int<6> : !s32i loc(#loc55)
              %20 = cir.call @socket(%17, %18, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc56)
              cir.store %20, %10 : !s32i, !cir.ptr<!s32i> loc(#loc704)
              cir.scope {
                %71 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc61)
                %72 = cir.const #cir.int<1> : !s32i loc(#loc62)
                %73 = cir.unary(minus, %72) : !s32i, !s32i loc(#loc62)
                %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc706)
                cir.if %74 {
                  cir.break loc(#loc64)
                } loc(#loc707)
              } loc(#loc705)
              %21 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc708)
              %22 = cir.const #cir.int<0> : !s32i loc(#loc67)
              %23 = cir.const #cir.int<16> : !u64i loc(#loc709)
              cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc710)
              %24 = cir.const #cir.int<2> : !s32i loc(#loc72)
              %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc72)
              %26 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
              cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc711)
              %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc9)
              %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc9)
              %29 = cir.call @inet_addr(%28) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc75)
              %30 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc76)
              %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc77)
              cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc712)
              %32 = cir.const #cir.int<27015> : !s32i loc(#loc80)
              %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc80)
              %34 = cir.call @htons(%33) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc81)
              %35 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
              cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc713)
              cir.scope {
                %71 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc87)
                %72 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc715)
                %73 = cir.const #cir.int<16> : !u64i loc(#loc716)
                %74 = cir.cast(integral, %73 : !u64i), !u32i loc(#loc716)
                %75 = cir.call @connect(%71, %72, %74) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc92)
                %76 = cir.const #cir.int<1> : !s32i loc(#loc93)
                %77 = cir.unary(minus, %76) : !s32i, !s32i loc(#loc93)
                %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc717)
                cir.if %78 {
                  cir.break loc(#loc95)
                } loc(#loc718)
              } loc(#loc714)
              %36 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc96)
              %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
              %38 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc98)
              %39 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %38 : !u64i), !cir.ptr<!s8i> loc(#loc99)
              %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc719)
              %41 = cir.const #cir.int<1> : !u64i loc(#loc720)
              %42 = cir.const #cir.int<100> : !s32i loc(#loc104)
              %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc104)
              %44 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc105)
              %45 = cir.binop(sub, %43, %44) : !u64i loc(#loc721)
              %46 = cir.const #cir.int<1> : !s32i loc(#loc106)
              %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc106)
              %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc722)
              %49 = cir.binop(mul, %41, %48) : !u64i loc(#loc723)
              %50 = cir.const #cir.int<0> : !s32i loc(#loc108)
              %51 = cir.call @recv(%36, %40, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc109)
              %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc109)
              cir.store %52, %7 : !s32i, !cir.ptr<!s32i> loc(#loc724)
              cir.scope {
                %71 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc114)
                %72 = cir.const #cir.int<1> : !s32i loc(#loc115)
                %73 = cir.unary(minus, %72) : !s32i, !s32i loc(#loc115)
                %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc726)
                %75 = cir.ternary(%74, true {
                  %76 = cir.const #true loc(#loc116)
                  cir.yield %76 : !cir.bool loc(#loc116)
                }, false {
                  %76 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc117)
                  %77 = cir.const #cir.int<0> : !s32i loc(#loc118)
                  %78 = cir.cmp(eq, %76, %77) : !s32i, !cir.bool loc(#loc727)
                  %79 = cir.ternary(%78, true {
                    %80 = cir.const #true loc(#loc116)
                    cir.yield %80 : !cir.bool loc(#loc116)
                  }, false {
                    %80 = cir.const #false loc(#loc116)
                    cir.yield %80 : !cir.bool loc(#loc116)
                  }) : (!cir.bool) -> !cir.bool loc(#loc116)
                  cir.yield %79 : !cir.bool loc(#loc116)
                }) : (!cir.bool) -> !cir.bool loc(#loc116)
                cir.if %75 {
                  cir.break loc(#loc120)
                } loc(#loc728)
              } loc(#loc725)
              %53 = cir.const #cir.int<0> : !s32i loc(#loc121)
              %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc121)
              %55 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
              %56 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc123)
              %57 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc124)
              %58 = cir.cast(integral, %57 : !s32i), !u64i loc(#loc124)
              %59 = cir.const #cir.int<1> : !u64i loc(#loc729)
              %60 = cir.binop(div, %58, %59) : !u64i loc(#loc730)
              %61 = cir.binop(add, %56, %60) : !u64i loc(#loc731)
              %62 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %61 : !u64i), !cir.ptr<!s8i> loc(#loc127)
              cir.store %54, %62 : !s8i, !cir.ptr<!s8i> loc(#loc732)
              %63 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc128)
              %64 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
              %65 = cir.const #cir.int<13> : !s32i loc(#loc130)
              %66 = cir.call @strchr(%64, %65) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc128)
              cir.store %66, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc733)
              cir.scope {
                %71 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
                %72 = cir.cast(ptr_to_bool, %71 : !cir.ptr<!s8i>), !cir.bool loc(#loc135)
                cir.if %72 {
                  %73 = cir.const #cir.int<0> : !s32i loc(#loc137)
                  %74 = cir.cast(integral, %73 : !s32i), !s8i loc(#loc137)
                  %75 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
                  cir.store %74, %75 : !s8i, !cir.ptr<!s8i> loc(#loc736)
                } loc(#loc735)
              } loc(#loc734)
              %67 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc140)
              %68 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc141)
              %69 = cir.const #cir.int<10> : !s32i loc(#loc142)
              %70 = cir.call @strchr(%68, %69) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc140)
              cir.store %70, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc737)
              cir.scope {
                %71 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
                %72 = cir.cast(ptr_to_bool, %71 : !cir.ptr<!s8i>), !cir.bool loc(#loc147)
                cir.if %72 {
                  %73 = cir.const #cir.int<0> : !s32i loc(#loc149)
                  %74 = cir.cast(integral, %73 : !s32i), !s8i loc(#loc149)
                  %75 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
                  cir.store %74, %75 : !s8i, !cir.ptr<!s8i> loc(#loc740)
                } loc(#loc739)
              } loc(#loc738)
              cir.yield loc(#loc52)
            } while {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc152)
              %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc152)
              cir.condition(%18) loc(#loc152)
            } loc(#loc703)
          } loc(#loc703)
          cir.scope {
            %17 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc155)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc156)
            %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc156)
            %20 = cir.cmp(ne, %17, %19) : !s32i, !cir.bool loc(#loc742)
            cir.if %20 {
              %21 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc158)
              %22 = cir.call @close(%21) : (!s32i) -> !s32i loc(#loc159)
            } loc(#loc743)
          } loc(#loc741)
        } loc(#loc697)
      } loc(#loc696)
    } loc(#loc695)
    cir.scope {
      %4 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc680)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc162)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc162)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc747)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc748)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc749)
          cir.scope {
            %10 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc172)
            %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc173)
            %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc22)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc22)
            %14 = cir.call @__isoc99_sscanf(%11, %13, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc172)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc174)
            %16 = cir.cmp(eq, %14, %15) : !s32i, !cir.bool loc(#loc751)
            cir.if %16 {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc176)
              cir.store %17, %9 : !s32i, !cir.ptr<!s32i> loc(#loc753)
              cir.scope {
                %19 = cir.const #cir.int<0> : !s32i loc(#loc180)
                cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc755)
                cir.for : cond {
                  %20 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc182)
                  %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc183)
                  %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc756)
                  cir.condition(%22) loc(#loc184)
                } body {
                  cir.scope {
                    %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc186)
                    %21 = cir.unary(inc, %20) : !s32i, !s32i loc(#loc187)
                    cir.store %21, %9 : !s32i, !cir.ptr<!s32i> loc(#loc758)
                  } loc(#loc757)
                  cir.yield loc(#loc179)
                } step {
                  %20 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc188)
                  %21 = cir.unary(inc, %20) : !s32i, !s32i loc(#loc189)
                  cir.store %21, %7 : !s32i, !cir.ptr<!s32i> loc(#loc759)
                  cir.yield loc(#loc754)
                } loc(#loc754)
              } loc(#loc754)
              %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc190)
              cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc191)
            } loc(#loc752)
          } loc(#loc750)
        } loc(#loc746)
      } loc(#loc745)
    } loc(#loc744)
    cir.return loc(#loc26)
  } loc(#loc691)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_connect_socket_05_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc761)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc194)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc762)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc196)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc763)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc198)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc764)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc200)
    cir.return loc(#loc193)
  } loc(#loc760)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc765)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc766)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc767)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc208)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc209)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc210)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc211)
  cir.func @main(%arg0: !s32i loc(fused[#loc214, #loc215]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc216, #loc217])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc769)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc770)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc213)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc218)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc218)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc219)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc220)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc220)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc221)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc208)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc208)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc222)
    %8 = cir.get_global @CWE606_Unchecked_Loop_Condition__char_connect_socket_05_good : !cir.ptr<!cir.func<!void ()>> loc(#loc771)
    cir.call @CWE606_Unchecked_Loop_Condition__char_connect_socket_05_good() : () -> () loc(#loc223)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc209)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc209)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc225)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc210)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc210)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc226)
    %13 = cir.get_global @CWE606_Unchecked_Loop_Condition__char_connect_socket_05_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc772)
    cir.call @CWE606_Unchecked_Loop_Condition__char_connect_socket_05_bad() : () -> () loc(#loc227)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc211)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc211)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc229)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc230)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc773)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc773)
    cir.return %17 : !s32i loc(#loc773)
  } loc(#loc768)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc774)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc234)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc776)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc777)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc777)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc777)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc241)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc778)
    cir.scope {
      %4 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc680)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc245)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc245)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc782)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc783)
          %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc784)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc785)
          %11 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc786)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc256)
          %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc256)
          cir.store %13, %10 : !s32i, !cir.ptr<!s32i> loc(#loc785)
          %14 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc259)
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc260)
          %16 = cir.call @strlen(%15) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc259)
          cir.store %16, %11 : !u64i, !cir.ptr<!u64i> loc(#loc786)
          cir.scope {
            cir.do {
              %17 = cir.const #cir.int<2> : !s32i loc(#loc263)
              %18 = cir.const #cir.int<1> : !s32i loc(#loc264)
              %19 = cir.const #cir.int<6> : !s32i loc(#loc265)
              %20 = cir.call @socket(%17, %18, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc266)
              cir.store %20, %10 : !s32i, !cir.ptr<!s32i> loc(#loc788)
              cir.scope {
                %71 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc271)
                %72 = cir.const #cir.int<1> : !s32i loc(#loc272)
                %73 = cir.unary(minus, %72) : !s32i, !s32i loc(#loc272)
                %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc790)
                cir.if %74 {
                  cir.break loc(#loc274)
                } loc(#loc791)
              } loc(#loc789)
              %21 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc792)
              %22 = cir.const #cir.int<0> : !s32i loc(#loc277)
              %23 = cir.const #cir.int<16> : !u64i loc(#loc793)
              cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc794)
              %24 = cir.const #cir.int<2> : !s32i loc(#loc282)
              %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc282)
              %26 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
              cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc795)
              %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc284)
              %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc284)
              %29 = cir.call @inet_addr(%28) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc285)
              %30 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc76)
              %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc77)
              cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc796)
              %32 = cir.const #cir.int<27015> : !s32i loc(#loc288)
              %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc288)
              %34 = cir.call @htons(%33) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc289)
              %35 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
              cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc797)
              cir.scope {
                %71 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc294)
                %72 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc799)
                %73 = cir.const #cir.int<16> : !u64i loc(#loc800)
                %74 = cir.cast(integral, %73 : !u64i), !u32i loc(#loc800)
                %75 = cir.call @connect(%71, %72, %74) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc299)
                %76 = cir.const #cir.int<1> : !s32i loc(#loc300)
                %77 = cir.unary(minus, %76) : !s32i, !s32i loc(#loc300)
                %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc801)
                cir.if %78 {
                  cir.break loc(#loc302)
                } loc(#loc802)
              } loc(#loc798)
              %36 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc303)
              %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc304)
              %38 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc305)
              %39 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %38 : !u64i), !cir.ptr<!s8i> loc(#loc306)
              %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc803)
              %41 = cir.const #cir.int<1> : !u64i loc(#loc804)
              %42 = cir.const #cir.int<100> : !s32i loc(#loc311)
              %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc311)
              %44 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc312)
              %45 = cir.binop(sub, %43, %44) : !u64i loc(#loc805)
              %46 = cir.const #cir.int<1> : !s32i loc(#loc313)
              %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc313)
              %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc806)
              %49 = cir.binop(mul, %41, %48) : !u64i loc(#loc807)
              %50 = cir.const #cir.int<0> : !s32i loc(#loc315)
              %51 = cir.call @recv(%36, %40, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc316)
              %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc316)
              cir.store %52, %7 : !s32i, !cir.ptr<!s32i> loc(#loc808)
              cir.scope {
                %71 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc321)
                %72 = cir.const #cir.int<1> : !s32i loc(#loc322)
                %73 = cir.unary(minus, %72) : !s32i, !s32i loc(#loc322)
                %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc810)
                %75 = cir.ternary(%74, true {
                  %76 = cir.const #true loc(#loc323)
                  cir.yield %76 : !cir.bool loc(#loc323)
                }, false {
                  %76 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc324)
                  %77 = cir.const #cir.int<0> : !s32i loc(#loc325)
                  %78 = cir.cmp(eq, %76, %77) : !s32i, !cir.bool loc(#loc811)
                  %79 = cir.ternary(%78, true {
                    %80 = cir.const #true loc(#loc323)
                    cir.yield %80 : !cir.bool loc(#loc323)
                  }, false {
                    %80 = cir.const #false loc(#loc323)
                    cir.yield %80 : !cir.bool loc(#loc323)
                  }) : (!cir.bool) -> !cir.bool loc(#loc323)
                  cir.yield %79 : !cir.bool loc(#loc323)
                }) : (!cir.bool) -> !cir.bool loc(#loc323)
                cir.if %75 {
                  cir.break loc(#loc327)
                } loc(#loc812)
              } loc(#loc809)
              %53 = cir.const #cir.int<0> : !s32i loc(#loc328)
              %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc328)
              %55 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc329)
              %56 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc330)
              %57 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc331)
              %58 = cir.cast(integral, %57 : !s32i), !u64i loc(#loc331)
              %59 = cir.const #cir.int<1> : !u64i loc(#loc813)
              %60 = cir.binop(div, %58, %59) : !u64i loc(#loc814)
              %61 = cir.binop(add, %56, %60) : !u64i loc(#loc815)
              %62 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %61 : !u64i), !cir.ptr<!s8i> loc(#loc334)
              cir.store %54, %62 : !s8i, !cir.ptr<!s8i> loc(#loc816)
              %63 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc335)
              %64 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc336)
              %65 = cir.const #cir.int<13> : !s32i loc(#loc337)
              %66 = cir.call @strchr(%64, %65) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc335)
              cir.store %66, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc817)
              cir.scope {
                %71 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc342)
                %72 = cir.cast(ptr_to_bool, %71 : !cir.ptr<!s8i>), !cir.bool loc(#loc342)
                cir.if %72 {
                  %73 = cir.const #cir.int<0> : !s32i loc(#loc344)
                  %74 = cir.cast(integral, %73 : !s32i), !s8i loc(#loc344)
                  %75 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc345)
                  cir.store %74, %75 : !s8i, !cir.ptr<!s8i> loc(#loc820)
                } loc(#loc819)
              } loc(#loc818)
              %67 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc347)
              %68 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc348)
              %69 = cir.const #cir.int<10> : !s32i loc(#loc349)
              %70 = cir.call @strchr(%68, %69) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc347)
              cir.store %70, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc821)
              cir.scope {
                %71 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc354)
                %72 = cir.cast(ptr_to_bool, %71 : !cir.ptr<!s8i>), !cir.bool loc(#loc354)
                cir.if %72 {
                  %73 = cir.const #cir.int<0> : !s32i loc(#loc356)
                  %74 = cir.cast(integral, %73 : !s32i), !s8i loc(#loc356)
                  %75 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc357)
                  cir.store %74, %75 : !s8i, !cir.ptr<!s8i> loc(#loc824)
                } loc(#loc823)
              } loc(#loc822)
              cir.yield loc(#loc262)
            } while {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc359)
              %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc359)
              cir.condition(%18) loc(#loc359)
            } loc(#loc787)
          } loc(#loc787)
          cir.scope {
            %17 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc362)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc363)
            %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc363)
            %20 = cir.cmp(ne, %17, %19) : !s32i, !cir.bool loc(#loc826)
            cir.if %20 {
              %21 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc365)
              %22 = cir.call @close(%21) : (!s32i) -> !s32i loc(#loc366)
            } loc(#loc827)
          } loc(#loc825)
        } loc(#loc781)
      } loc(#loc780)
    } loc(#loc779)
    cir.scope {
      %4 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc774)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc369)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc369)
      cir.if %6 {
        %7 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc234)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc234)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc373)
      } else {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc831)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc832)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc833)
          cir.scope {
            %10 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc382)
            %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc383)
            %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc384)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc384)
            %14 = cir.call @__isoc99_sscanf(%11, %13, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc382)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc385)
            %16 = cir.cmp(eq, %14, %15) : !s32i, !cir.bool loc(#loc835)
            cir.if %16 {
              cir.scope {
                %17 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc389)
                %18 = cir.const #cir.int<10000> : !s32i loc(#loc390)
                %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc838)
                cir.if %19 {
                  %20 = cir.const #cir.int<0> : !s32i loc(#loc392)
                  cir.store %20, %9 : !s32i, !cir.ptr<!s32i> loc(#loc840)
                  cir.scope {
                    %22 = cir.const #cir.int<0> : !s32i loc(#loc396)
                    cir.store %22, %7 : !s32i, !cir.ptr<!s32i> loc(#loc842)
                    cir.for : cond {
                      %23 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc398)
                      %24 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc399)
                      %25 = cir.cmp(lt, %23, %24) : !s32i, !cir.bool loc(#loc843)
                      cir.condition(%25) loc(#loc400)
                    } body {
                      cir.scope {
                        %23 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc402)
                        %24 = cir.unary(inc, %23) : !s32i, !s32i loc(#loc403)
                        cir.store %24, %9 : !s32i, !cir.ptr<!s32i> loc(#loc845)
                      } loc(#loc844)
                      cir.yield loc(#loc395)
                    } step {
                      %23 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc404)
                      %24 = cir.unary(inc, %23) : !s32i, !s32i loc(#loc405)
                      cir.store %24, %7 : !s32i, !cir.ptr<!s32i> loc(#loc846)
                      cir.yield loc(#loc841)
                    } loc(#loc841)
                  } loc(#loc841)
                  %21 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc406)
                  cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc407)
                } loc(#loc839)
              } loc(#loc837)
            } loc(#loc836)
          } loc(#loc834)
        } loc(#loc830)
      } loc(#loc829)
    } loc(#loc828)
    cir.return loc(#loc236)
  } loc(#loc775)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc848)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc849)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc849)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc849)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc414)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc850)
    cir.scope {
      %4 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc680)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc418)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc418)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc854)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc855)
          %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc856)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc857)
          %11 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc858)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc429)
          %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc429)
          cir.store %13, %10 : !s32i, !cir.ptr<!s32i> loc(#loc857)
          %14 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc432)
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc433)
          %16 = cir.call @strlen(%15) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc432)
          cir.store %16, %11 : !u64i, !cir.ptr<!u64i> loc(#loc858)
          cir.scope {
            cir.do {
              %17 = cir.const #cir.int<2> : !s32i loc(#loc436)
              %18 = cir.const #cir.int<1> : !s32i loc(#loc437)
              %19 = cir.const #cir.int<6> : !s32i loc(#loc438)
              %20 = cir.call @socket(%17, %18, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc439)
              cir.store %20, %10 : !s32i, !cir.ptr<!s32i> loc(#loc860)
              cir.scope {
                %71 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc444)
                %72 = cir.const #cir.int<1> : !s32i loc(#loc445)
                %73 = cir.unary(minus, %72) : !s32i, !s32i loc(#loc445)
                %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc862)
                cir.if %74 {
                  cir.break loc(#loc447)
                } loc(#loc863)
              } loc(#loc861)
              %21 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc864)
              %22 = cir.const #cir.int<0> : !s32i loc(#loc450)
              %23 = cir.const #cir.int<16> : !u64i loc(#loc865)
              cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc866)
              %24 = cir.const #cir.int<2> : !s32i loc(#loc455)
              %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc455)
              %26 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
              cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc867)
              %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc457)
              %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc457)
              %29 = cir.call @inet_addr(%28) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc458)
              %30 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc76)
              %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc77)
              cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc868)
              %32 = cir.const #cir.int<27015> : !s32i loc(#loc461)
              %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc461)
              %34 = cir.call @htons(%33) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc462)
              %35 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
              cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc869)
              cir.scope {
                %71 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc467)
                %72 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc871)
                %73 = cir.const #cir.int<16> : !u64i loc(#loc872)
                %74 = cir.cast(integral, %73 : !u64i), !u32i loc(#loc872)
                %75 = cir.call @connect(%71, %72, %74) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc472)
                %76 = cir.const #cir.int<1> : !s32i loc(#loc473)
                %77 = cir.unary(minus, %76) : !s32i, !s32i loc(#loc473)
                %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc873)
                cir.if %78 {
                  cir.break loc(#loc475)
                } loc(#loc874)
              } loc(#loc870)
              %36 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc476)
              %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc477)
              %38 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc478)
              %39 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %38 : !u64i), !cir.ptr<!s8i> loc(#loc479)
              %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc875)
              %41 = cir.const #cir.int<1> : !u64i loc(#loc876)
              %42 = cir.const #cir.int<100> : !s32i loc(#loc484)
              %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc484)
              %44 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc485)
              %45 = cir.binop(sub, %43, %44) : !u64i loc(#loc877)
              %46 = cir.const #cir.int<1> : !s32i loc(#loc486)
              %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc486)
              %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc878)
              %49 = cir.binop(mul, %41, %48) : !u64i loc(#loc879)
              %50 = cir.const #cir.int<0> : !s32i loc(#loc488)
              %51 = cir.call @recv(%36, %40, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc489)
              %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc489)
              cir.store %52, %7 : !s32i, !cir.ptr<!s32i> loc(#loc880)
              cir.scope {
                %71 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc494)
                %72 = cir.const #cir.int<1> : !s32i loc(#loc495)
                %73 = cir.unary(minus, %72) : !s32i, !s32i loc(#loc495)
                %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc882)
                %75 = cir.ternary(%74, true {
                  %76 = cir.const #true loc(#loc496)
                  cir.yield %76 : !cir.bool loc(#loc496)
                }, false {
                  %76 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc497)
                  %77 = cir.const #cir.int<0> : !s32i loc(#loc498)
                  %78 = cir.cmp(eq, %76, %77) : !s32i, !cir.bool loc(#loc883)
                  %79 = cir.ternary(%78, true {
                    %80 = cir.const #true loc(#loc496)
                    cir.yield %80 : !cir.bool loc(#loc496)
                  }, false {
                    %80 = cir.const #false loc(#loc496)
                    cir.yield %80 : !cir.bool loc(#loc496)
                  }) : (!cir.bool) -> !cir.bool loc(#loc496)
                  cir.yield %79 : !cir.bool loc(#loc496)
                }) : (!cir.bool) -> !cir.bool loc(#loc496)
                cir.if %75 {
                  cir.break loc(#loc500)
                } loc(#loc884)
              } loc(#loc881)
              %53 = cir.const #cir.int<0> : !s32i loc(#loc501)
              %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc501)
              %55 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc502)
              %56 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc503)
              %57 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc504)
              %58 = cir.cast(integral, %57 : !s32i), !u64i loc(#loc504)
              %59 = cir.const #cir.int<1> : !u64i loc(#loc885)
              %60 = cir.binop(div, %58, %59) : !u64i loc(#loc886)
              %61 = cir.binop(add, %56, %60) : !u64i loc(#loc887)
              %62 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %61 : !u64i), !cir.ptr<!s8i> loc(#loc507)
              cir.store %54, %62 : !s8i, !cir.ptr<!s8i> loc(#loc888)
              %63 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc508)
              %64 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc509)
              %65 = cir.const #cir.int<13> : !s32i loc(#loc510)
              %66 = cir.call @strchr(%64, %65) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc508)
              cir.store %66, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc889)
              cir.scope {
                %71 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc515)
                %72 = cir.cast(ptr_to_bool, %71 : !cir.ptr<!s8i>), !cir.bool loc(#loc515)
                cir.if %72 {
                  %73 = cir.const #cir.int<0> : !s32i loc(#loc517)
                  %74 = cir.cast(integral, %73 : !s32i), !s8i loc(#loc517)
                  %75 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc518)
                  cir.store %74, %75 : !s8i, !cir.ptr<!s8i> loc(#loc892)
                } loc(#loc891)
              } loc(#loc890)
              %67 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc520)
              %68 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc521)
              %69 = cir.const #cir.int<10> : !s32i loc(#loc522)
              %70 = cir.call @strchr(%68, %69) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc520)
              cir.store %70, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc893)
              cir.scope {
                %71 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc527)
                %72 = cir.cast(ptr_to_bool, %71 : !cir.ptr<!s8i>), !cir.bool loc(#loc527)
                cir.if %72 {
                  %73 = cir.const #cir.int<0> : !s32i loc(#loc529)
                  %74 = cir.cast(integral, %73 : !s32i), !s8i loc(#loc529)
                  %75 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc530)
                  cir.store %74, %75 : !s8i, !cir.ptr<!s8i> loc(#loc896)
                } loc(#loc895)
              } loc(#loc894)
              cir.yield loc(#loc435)
            } while {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc532)
              %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc532)
              cir.condition(%18) loc(#loc532)
            } loc(#loc859)
          } loc(#loc859)
          cir.scope {
            %17 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc535)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc536)
            %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc536)
            %20 = cir.cmp(ne, %17, %19) : !s32i, !cir.bool loc(#loc898)
            cir.if %20 {
              %21 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc538)
              %22 = cir.call @close(%21) : (!s32i) -> !s32i loc(#loc539)
            } loc(#loc899)
          } loc(#loc897)
        } loc(#loc853)
      } loc(#loc852)
    } loc(#loc851)
    cir.scope {
      %4 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc680)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc542)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc542)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc903)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc904)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc905)
          cir.scope {
            %10 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc552)
            %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc553)
            %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc554)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc554)
            %14 = cir.call @__isoc99_sscanf(%11, %13, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc552)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc555)
            %16 = cir.cmp(eq, %14, %15) : !s32i, !cir.bool loc(#loc907)
            cir.if %16 {
              cir.scope {
                %17 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc559)
                %18 = cir.const #cir.int<10000> : !s32i loc(#loc560)
                %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc910)
                cir.if %19 {
                  %20 = cir.const #cir.int<0> : !s32i loc(#loc562)
                  cir.store %20, %9 : !s32i, !cir.ptr<!s32i> loc(#loc912)
                  cir.scope {
                    %22 = cir.const #cir.int<0> : !s32i loc(#loc566)
                    cir.store %22, %7 : !s32i, !cir.ptr<!s32i> loc(#loc914)
                    cir.for : cond {
                      %23 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc568)
                      %24 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc569)
                      %25 = cir.cmp(lt, %23, %24) : !s32i, !cir.bool loc(#loc915)
                      cir.condition(%25) loc(#loc570)
                    } body {
                      cir.scope {
                        %23 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc572)
                        %24 = cir.unary(inc, %23) : !s32i, !s32i loc(#loc573)
                        cir.store %24, %9 : !s32i, !cir.ptr<!s32i> loc(#loc917)
                      } loc(#loc916)
                      cir.yield loc(#loc565)
                    } step {
                      %23 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc574)
                      %24 = cir.unary(inc, %23) : !s32i, !s32i loc(#loc575)
                      cir.store %24, %7 : !s32i, !cir.ptr<!s32i> loc(#loc918)
                      cir.yield loc(#loc913)
                    } loc(#loc913)
                  } loc(#loc913)
                  %21 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc576)
                  cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc577)
                } loc(#loc911)
              } loc(#loc909)
            } loc(#loc908)
          } loc(#loc906)
        } loc(#loc902)
      } loc(#loc901)
    } loc(#loc900)
    cir.return loc(#loc409)
  } loc(#loc847)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc919)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"15\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc580)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc921)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc922)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc922)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc922)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc587)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc923)
    cir.scope {
      %4 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc774)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc591)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc591)
      cir.if %6 {
        %7 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc595)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc595)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc596)
      } else {
        %7 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc597)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc598)
        %9 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc580)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc580)
        %11 = cir.call @strcpy(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc597)
      } loc(#loc925)
    } loc(#loc924)
    cir.scope {
      %4 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc680)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc601)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc601)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc929)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc930)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc931)
          cir.scope {
            %10 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc611)
            %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc612)
            %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc613)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc613)
            %14 = cir.call @__isoc99_sscanf(%11, %13, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc611)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc614)
            %16 = cir.cmp(eq, %14, %15) : !s32i, !cir.bool loc(#loc933)
            cir.if %16 {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc616)
              cir.store %17, %9 : !s32i, !cir.ptr<!s32i> loc(#loc935)
              cir.scope {
                %19 = cir.const #cir.int<0> : !s32i loc(#loc620)
                cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc937)
                cir.for : cond {
                  %20 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc622)
                  %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc623)
                  %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc938)
                  cir.condition(%22) loc(#loc624)
                } body {
                  cir.scope {
                    %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc626)
                    %21 = cir.unary(inc, %20) : !s32i, !s32i loc(#loc627)
                    cir.store %21, %9 : !s32i, !cir.ptr<!s32i> loc(#loc940)
                  } loc(#loc939)
                  cir.yield loc(#loc619)
                } step {
                  %20 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc628)
                  %21 = cir.unary(inc, %20) : !s32i, !s32i loc(#loc629)
                  cir.store %21, %7 : !s32i, !cir.ptr<!s32i> loc(#loc941)
                  cir.yield loc(#loc936)
                } loc(#loc936)
              } loc(#loc936)
              %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc630)
              cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc631)
            } loc(#loc934)
          } loc(#loc932)
        } loc(#loc928)
      } loc(#loc927)
    } loc(#loc926)
    cir.return loc(#loc582)
  } loc(#loc920)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc943)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc944)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc944)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc944)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc638)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc945)
    cir.scope {
      %4 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc680)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc642)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc642)
      cir.if %6 {
        %7 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc644)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc645)
        %9 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc646)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc646)
        %11 = cir.call @strcpy(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc644)
      } loc(#loc947)
    } loc(#loc946)
    cir.scope {
      %4 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc680)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc649)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc649)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc951)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc952)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc953)
          cir.scope {
            %10 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc659)
            %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc660)
            %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc661)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc661)
            %14 = cir.call @__isoc99_sscanf(%11, %13, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc659)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc662)
            %16 = cir.cmp(eq, %14, %15) : !s32i, !cir.bool loc(#loc955)
            cir.if %16 {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc664)
              cir.store %17, %9 : !s32i, !cir.ptr<!s32i> loc(#loc957)
              cir.scope {
                %19 = cir.const #cir.int<0> : !s32i loc(#loc668)
                cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc959)
                cir.for : cond {
                  %20 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc670)
                  %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc671)
                  %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc960)
                  cir.condition(%22) loc(#loc672)
                } body {
                  cir.scope {
                    %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc674)
                    %21 = cir.unary(inc, %20) : !s32i, !s32i loc(#loc675)
                    cir.store %21, %9 : !s32i, !cir.ptr<!s32i> loc(#loc962)
                  } loc(#loc961)
                  cir.yield loc(#loc667)
                } step {
                  %20 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc676)
                  %21 = cir.unary(inc, %20) : !s32i, !s32i loc(#loc677)
                  cir.store %21, %7 : !s32i, !cir.ptr<!s32i> loc(#loc963)
                  cir.yield loc(#loc958)
                } loc(#loc958)
              } loc(#loc958)
              %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc678)
              cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc679)
            } loc(#loc956)
          } loc(#loc954)
        } loc(#loc950)
      } loc(#loc949)
    } loc(#loc948)
    cir.return loc(#loc633)
  } loc(#loc942)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":0:0)
#loc1 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":50:1)
#loc2 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":50:25)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("/usr/include/sys/socket.h":102:1)
#loc6 = loc("/usr/include/sys/socket.h":102:62)
#loc7 = loc("/usr/include/arpa/inet.h":34:1)
#loc8 = loc("/usr/include/arpa/inet.h":34:47)
#loc9 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":89:53)
#loc10 = loc("/usr/include/netinet/in.h":404:1)
#loc11 = loc("/usr/include/netinet/in.h":405:40)
#loc12 = loc("/usr/include/sys/socket.h":126:1)
#loc13 = loc("/usr/include/sys/socket.h":126:75)
#loc14 = loc("/usr/include/sys/socket.h":145:1)
#loc15 = loc("/usr/include/sys/socket.h":145:68)
#loc16 = loc("/usr/include/string.h":246:1)
#loc17 = loc("/usr/include/string.h":247:33)
#loc18 = loc("/usr/include/unistd.h":358:1)
#loc19 = loc("/usr/include/unistd.h":358:27)
#loc20 = loc("/usr/include/stdio.h":468:1)
#loc21 = loc("/usr/include/stdio.h":468:12)
#loc22 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":134:30)
#loc23 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc24 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc25 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":55:1)
#loc26 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":147:1)
#loc27 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":57:5)
#loc28 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":57:12)
#loc29 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":58:5)
#loc30 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":58:28)
#loc31 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":59:12)
#loc32 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":59:5)
#loc33 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":60:5)
#loc34 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":129:5)
#loc35 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":60:8)
#loc36 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":61:5)
#loc37 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":62:9)
#loc38 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":128:9)
#loc39 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":67:13)
#loc40 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":67:17)
#loc41 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":68:13)
#loc42 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":68:32)
#loc43 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":69:13)
#loc44 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":69:19)
#loc45 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":70:13)
#loc46 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":70:36)
#loc47 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":71:13)
#loc48 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":71:41)
#loc49 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":71:30)
#loc50 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":71:37)
#loc51 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":72:13)
#loc52 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":117:21)
#loc53 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":82:40)
#loc54 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":82:49)
#loc55 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":82:62)
#loc56 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":82:33)
#loc57 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":82:17)
#loc58 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":82:73)
#loc59 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":83:17)
#loc60 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":86:17)
#loc61 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":83:21)
#loc62 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":83:38)
#loc63 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":84:17)
#loc64 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":85:21)
#loc65 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":87:24)
#loc66 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":87:25)
#loc67 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":87:34)
#loc68 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":87:37)
#loc69 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":87:51)
#loc70 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":87:17)
#loc71 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":87:52)
#loc72 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":88:38)
#loc73 = loc("/usr/include/netinet/in.h":249:5)
#loc74 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":88:17)
#loc75 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":89:43)
#loc76 = loc("/usr/include/netinet/in.h":251:20)
#loc77 = loc("/usr/include/netinet/in.h":33:15)
#loc78 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":89:17)
#loc79 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":89:63)
#loc80 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":90:42)
#loc81 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":90:36)
#loc82 = loc("/usr/include/netinet/in.h":250:15)
#loc83 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":90:17)
#loc84 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":90:50)
#loc85 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":91:17)
#loc86 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":94:17)
#loc87 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":91:29)
#loc88 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":91:62)
#loc89 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":91:63)
#loc90 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":91:72)
#loc91 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":91:86)
#loc92 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":91:21)
#loc93 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":91:92)
#loc94 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":92:17)
#loc95 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":93:21)
#loc96 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":98:35)
#loc97 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":98:59)
#loc98 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":98:66)
#loc99 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":98:64)
#loc100 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":98:50)
#loc101 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":98:73)
#loc102 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":98:76)
#loc103 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":98:87)
#loc104 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":98:92)
#loc105 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":98:98)
#loc106 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":98:108)
#loc107 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":98:109)
#loc108 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":98:112)
#loc109 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":98:30)
#loc110 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":98:17)
#loc111 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":98:113)
#loc112 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":99:17)
#loc113 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":102:17)
#loc114 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":99:21)
#loc115 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":99:35)
#loc116 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":99:48)
#loc117 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":99:51)
#loc118 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":99:65)
#loc119 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":100:17)
#loc120 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":101:21)
#loc121 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":104:61)
#loc122 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":104:17)
#loc123 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":104:22)
#loc124 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":104:32)
#loc125 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":104:45)
#loc126 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":104:56)
#loc127 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":104:57)
#loc128 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":106:27)
#loc129 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":106:34)
#loc130 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":106:40)
#loc131 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":106:17)
#loc132 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":106:44)
#loc133 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":107:17)
#loc134 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":110:17)
#loc135 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":107:21)
#loc136 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":108:17)
#loc137 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":109:32)
#loc138 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":109:22)
#loc139 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":109:21)
#loc140 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":111:27)
#loc141 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":111:34)
#loc142 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":111:40)
#loc143 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":111:17)
#loc144 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":111:44)
#loc145 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":112:17)
#loc146 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":115:17)
#loc147 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":112:21)
#loc148 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":113:17)
#loc149 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":114:32)
#loc150 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":114:22)
#loc151 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":114:21)
#loc152 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":117:20)
#loc153 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":118:13)
#loc154 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":121:13)
#loc155 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":118:17)
#loc156 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":118:34)
#loc157 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":119:13)
#loc158 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":120:30)
#loc159 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":120:17)
#loc160 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":130:5)
#loc161 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":146:5)
#loc162 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":130:8)
#loc163 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":131:5)
#loc164 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":132:9)
#loc165 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":145:9)
#loc166 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":133:13)
#loc167 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":133:17)
#loc168 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":133:20)
#loc169 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":133:23)
#loc170 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":134:13)
#loc171 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":144:13)
#loc172 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":134:17)
#loc173 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":134:24)
#loc174 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":134:43)
#loc175 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":135:13)
#loc176 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":137:31)
#loc177 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":137:17)
#loc178 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":138:17)
#loc179 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":142:17)
#loc180 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":138:26)
#loc181 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":138:22)
#loc182 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":138:29)
#loc183 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":138:33)
#loc184 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":138:31)
#loc185 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":139:17)
#loc186 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":141:32)
#loc187 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":141:21)
#loc188 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":138:37)
#loc189 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":138:36)
#loc190 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":143:30)
#loc191 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":143:17)
#loc192 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":419:1)
#loc193 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":425:1)
#loc194 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":421:5)
#loc195 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":421:14)
#loc196 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":422:5)
#loc197 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":422:14)
#loc198 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":423:5)
#loc199 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":423:14)
#loc200 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":424:5)
#loc201 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":424:14)
#loc202 = loc("/usr/include/stdlib.h":575:1)
#loc203 = loc("/usr/include/stdlib.h":575:41)
#loc204 = loc("/usr/include/time.h":76:1)
#loc205 = loc("/usr/include/time.h":76:38)
#loc206 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc207 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc208 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":441:15)
#loc209 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":443:15)
#loc210 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":446:15)
#loc211 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":448:15)
#loc212 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":436:1)
#loc213 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":451:1)
#loc218 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":437:1)
#loc219 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":439:27)
#loc220 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":439:22)
#loc221 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":439:5)
#loc222 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":441:5)
#loc223 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":442:5)
#loc224 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":442:66)
#loc225 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":443:5)
#loc226 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":446:5)
#loc227 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":447:5)
#loc228 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":447:65)
#loc229 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":448:5)
#loc230 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":450:12)
#loc231 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":450:5)
#loc232 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":51:1)
#loc233 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":51:26)
#loc234 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":232:19)
#loc235 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":154:1)
#loc236 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":254:1)
#loc237 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":156:5)
#loc238 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":156:12)
#loc239 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":157:5)
#loc240 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":157:28)
#loc241 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":158:12)
#loc242 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":158:5)
#loc243 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":159:5)
#loc244 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":228:5)
#loc245 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":159:8)
#loc246 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":160:5)
#loc247 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":161:9)
#loc248 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":227:9)
#loc249 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":166:13)
#loc250 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":166:17)
#loc251 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":167:13)
#loc252 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":167:32)
#loc253 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":168:13)
#loc254 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":168:19)
#loc255 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":169:13)
#loc256 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":169:36)
#loc257 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":170:13)
#loc258 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":170:41)
#loc259 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":170:30)
#loc260 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":170:37)
#loc261 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":171:13)
#loc262 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":216:21)
#loc263 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":181:40)
#loc264 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":181:49)
#loc265 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":181:62)
#loc266 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":181:33)
#loc267 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":181:17)
#loc268 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":181:73)
#loc269 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":182:17)
#loc270 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":185:17)
#loc271 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":182:21)
#loc272 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":182:38)
#loc273 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":183:17)
#loc274 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":184:21)
#loc275 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":186:24)
#loc276 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":186:25)
#loc277 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":186:34)
#loc278 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":186:37)
#loc279 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":186:51)
#loc280 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":186:17)
#loc281 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":186:52)
#loc282 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":187:38)
#loc283 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":187:17)
#loc284 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":188:53)
#loc285 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":188:43)
#loc286 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":188:17)
#loc287 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":188:63)
#loc288 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":189:42)
#loc289 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":189:36)
#loc290 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":189:17)
#loc291 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":189:50)
#loc292 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":190:17)
#loc293 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":193:17)
#loc294 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":190:29)
#loc295 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":190:62)
#loc296 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":190:63)
#loc297 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":190:72)
#loc298 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":190:86)
#loc299 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":190:21)
#loc300 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":190:92)
#loc301 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":191:17)
#loc302 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":192:21)
#loc303 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":197:35)
#loc304 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":197:59)
#loc305 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":197:66)
#loc306 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":197:64)
#loc307 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":197:50)
#loc308 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":197:73)
#loc309 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":197:76)
#loc310 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":197:87)
#loc311 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":197:92)
#loc312 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":197:98)
#loc313 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":197:108)
#loc314 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":197:109)
#loc315 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":197:112)
#loc316 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":197:30)
#loc317 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":197:17)
#loc318 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":197:113)
#loc319 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":198:17)
#loc320 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":201:17)
#loc321 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":198:21)
#loc322 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":198:35)
#loc323 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":198:48)
#loc324 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":198:51)
#loc325 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":198:65)
#loc326 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":199:17)
#loc327 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":200:21)
#loc328 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":203:61)
#loc329 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":203:17)
#loc330 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":203:22)
#loc331 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":203:32)
#loc332 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":203:45)
#loc333 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":203:56)
#loc334 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":203:57)
#loc335 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":205:27)
#loc336 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":205:34)
#loc337 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":205:40)
#loc338 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":205:17)
#loc339 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":205:44)
#loc340 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":206:17)
#loc341 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":209:17)
#loc342 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":206:21)
#loc343 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":207:17)
#loc344 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":208:32)
#loc345 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":208:22)
#loc346 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":208:21)
#loc347 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":210:27)
#loc348 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":210:34)
#loc349 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":210:40)
#loc350 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":210:17)
#loc351 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":210:44)
#loc352 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":211:17)
#loc353 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":214:17)
#loc354 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":211:21)
#loc355 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":212:17)
#loc356 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":213:32)
#loc357 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":213:22)
#loc358 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":213:21)
#loc359 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":216:20)
#loc360 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":217:13)
#loc361 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":220:13)
#loc362 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":217:17)
#loc363 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":217:34)
#loc364 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":218:13)
#loc365 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":219:30)
#loc366 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":219:17)
#loc367 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":229:5)
#loc368 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":253:5)
#loc369 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":229:8)
#loc370 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":230:5)
#loc371 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":233:5)
#loc372 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":235:5)
#loc373 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":232:9)
#loc374 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":236:9)
#loc375 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":252:9)
#loc376 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":237:13)
#loc377 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":237:17)
#loc378 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":237:20)
#loc379 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":237:23)
#loc380 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":238:13)
#loc381 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":251:13)
#loc382 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":238:17)
#loc383 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":238:24)
#loc384 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":238:30)
#loc385 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":238:43)
#loc386 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":239:13)
#loc387 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":241:17)
#loc388 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":250:17)
#loc389 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":241:21)
#loc390 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":241:25)
#loc391 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":242:17)
#loc392 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":243:35)
#loc393 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":243:21)
#loc394 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":244:21)
#loc395 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":248:21)
#loc396 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":244:30)
#loc397 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":244:26)
#loc398 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":244:33)
#loc399 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":244:37)
#loc400 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":244:35)
#loc401 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":245:21)
#loc402 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":247:36)
#loc403 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":247:25)
#loc404 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":244:41)
#loc405 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":244:40)
#loc406 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":249:34)
#loc407 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":249:21)
#loc408 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":257:1)
#loc409 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":352:1)
#loc410 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":259:5)
#loc411 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":259:12)
#loc412 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":260:5)
#loc413 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":260:28)
#loc414 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":261:12)
#loc415 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":261:5)
#loc416 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":262:5)
#loc417 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":331:5)
#loc418 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":262:8)
#loc419 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":263:5)
#loc420 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":264:9)
#loc421 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":330:9)
#loc422 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":269:13)
#loc423 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":269:17)
#loc424 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":270:13)
#loc425 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":270:32)
#loc426 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":271:13)
#loc427 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":271:19)
#loc428 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":272:13)
#loc429 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":272:36)
#loc430 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":273:13)
#loc431 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":273:41)
#loc432 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":273:30)
#loc433 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":273:37)
#loc434 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":274:13)
#loc435 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":319:21)
#loc436 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":284:40)
#loc437 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":284:49)
#loc438 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":284:62)
#loc439 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":284:33)
#loc440 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":284:17)
#loc441 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":284:73)
#loc442 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":285:17)
#loc443 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":288:17)
#loc444 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":285:21)
#loc445 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":285:38)
#loc446 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":286:17)
#loc447 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":287:21)
#loc448 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":289:24)
#loc449 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":289:25)
#loc450 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":289:34)
#loc451 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":289:37)
#loc452 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":289:51)
#loc453 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":289:17)
#loc454 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":289:52)
#loc455 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":290:38)
#loc456 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":290:17)
#loc457 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":291:53)
#loc458 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":291:43)
#loc459 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":291:17)
#loc460 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":291:63)
#loc461 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":292:42)
#loc462 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":292:36)
#loc463 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":292:17)
#loc464 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":292:50)
#loc465 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":293:17)
#loc466 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":296:17)
#loc467 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":293:29)
#loc468 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":293:62)
#loc469 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":293:63)
#loc470 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":293:72)
#loc471 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":293:86)
#loc472 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":293:21)
#loc473 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":293:92)
#loc474 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":294:17)
#loc475 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":295:21)
#loc476 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":300:35)
#loc477 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":300:59)
#loc478 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":300:66)
#loc479 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":300:64)
#loc480 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":300:50)
#loc481 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":300:73)
#loc482 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":300:76)
#loc483 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":300:87)
#loc484 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":300:92)
#loc485 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":300:98)
#loc486 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":300:108)
#loc487 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":300:109)
#loc488 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":300:112)
#loc489 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":300:30)
#loc490 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":300:17)
#loc491 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":300:113)
#loc492 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":301:17)
#loc493 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":304:17)
#loc494 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":301:21)
#loc495 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":301:35)
#loc496 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":301:48)
#loc497 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":301:51)
#loc498 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":301:65)
#loc499 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":302:17)
#loc500 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":303:21)
#loc501 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":306:61)
#loc502 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":306:17)
#loc503 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":306:22)
#loc504 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":306:32)
#loc505 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":306:45)
#loc506 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":306:56)
#loc507 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":306:57)
#loc508 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":308:27)
#loc509 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":308:34)
#loc510 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":308:40)
#loc511 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":308:17)
#loc512 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":308:44)
#loc513 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":309:17)
#loc514 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":312:17)
#loc515 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":309:21)
#loc516 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":310:17)
#loc517 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":311:32)
#loc518 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":311:22)
#loc519 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":311:21)
#loc520 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":313:27)
#loc521 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":313:34)
#loc522 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":313:40)
#loc523 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":313:17)
#loc524 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":313:44)
#loc525 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":314:17)
#loc526 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":317:17)
#loc527 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":314:21)
#loc528 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":315:17)
#loc529 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":316:32)
#loc530 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":316:22)
#loc531 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":316:21)
#loc532 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":319:20)
#loc533 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":320:13)
#loc534 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":323:13)
#loc535 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":320:17)
#loc536 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":320:34)
#loc537 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":321:13)
#loc538 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":322:30)
#loc539 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":322:17)
#loc540 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":332:5)
#loc541 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":351:5)
#loc542 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":332:8)
#loc543 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":333:5)
#loc544 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":334:9)
#loc545 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":350:9)
#loc546 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":335:13)
#loc547 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":335:17)
#loc548 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":335:20)
#loc549 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":335:23)
#loc550 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":336:13)
#loc551 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":349:13)
#loc552 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":336:17)
#loc553 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":336:24)
#loc554 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":336:30)
#loc555 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":336:43)
#loc556 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":337:13)
#loc557 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":339:17)
#loc558 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":348:17)
#loc559 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":339:21)
#loc560 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":339:25)
#loc561 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":340:17)
#loc562 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":341:35)
#loc563 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":341:21)
#loc564 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":342:21)
#loc565 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":346:21)
#loc566 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":342:30)
#loc567 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":342:26)
#loc568 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":342:33)
#loc569 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":342:37)
#loc570 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":342:35)
#loc571 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":343:21)
#loc572 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":345:36)
#loc573 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":345:25)
#loc574 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":342:41)
#loc575 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":342:40)
#loc576 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":347:34)
#loc577 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":347:21)
#loc578 = loc("/usr/include/string.h":141:1)
#loc579 = loc("/usr/include/string.h":142:14)
#loc580 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":368:22)
#loc581 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":355:1)
#loc582 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":387:1)
#loc583 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":357:5)
#loc584 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":357:12)
#loc585 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":358:5)
#loc586 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":358:28)
#loc587 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":359:12)
#loc588 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":359:5)
#loc589 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":360:5)
#loc590 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":369:5)
#loc591 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":360:8)
#loc592 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":361:5)
#loc593 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":364:5)
#loc594 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":366:5)
#loc595 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":363:19)
#loc596 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":363:9)
#loc597 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":368:9)
#loc598 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":368:16)
#loc599 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":370:5)
#loc600 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":386:5)
#loc601 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":370:8)
#loc602 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":371:5)
#loc603 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":372:9)
#loc604 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":385:9)
#loc605 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":373:13)
#loc606 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":373:17)
#loc607 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":373:20)
#loc608 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":373:23)
#loc609 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":374:13)
#loc610 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":384:13)
#loc611 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":374:17)
#loc612 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":374:24)
#loc613 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":374:30)
#loc614 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":374:43)
#loc615 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":375:13)
#loc616 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":377:31)
#loc617 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":377:17)
#loc618 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":378:17)
#loc619 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":382:17)
#loc620 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":378:26)
#loc621 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":378:22)
#loc622 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":378:29)
#loc623 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":378:33)
#loc624 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":378:31)
#loc625 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":379:17)
#loc626 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":381:32)
#loc627 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":381:21)
#loc628 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":378:37)
#loc629 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":378:36)
#loc630 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":383:30)
#loc631 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":383:17)
#loc632 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":390:1)
#loc633 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":417:1)
#loc634 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":392:5)
#loc635 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":392:12)
#loc636 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":393:5)
#loc637 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":393:28)
#loc638 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":394:12)
#loc639 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":394:5)
#loc640 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":395:5)
#loc641 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":399:5)
#loc642 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":395:8)
#loc643 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":396:5)
#loc644 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":398:9)
#loc645 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":398:16)
#loc646 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":398:22)
#loc647 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":400:5)
#loc648 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":416:5)
#loc649 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":400:8)
#loc650 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":401:5)
#loc651 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":402:9)
#loc652 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":415:9)
#loc653 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":403:13)
#loc654 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":403:17)
#loc655 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":403:20)
#loc656 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":403:23)
#loc657 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":404:13)
#loc658 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":414:13)
#loc659 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":404:17)
#loc660 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":404:24)
#loc661 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":404:30)
#loc662 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":404:43)
#loc663 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":405:13)
#loc664 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":407:31)
#loc665 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":407:17)
#loc666 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":408:17)
#loc667 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":412:17)
#loc668 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":408:26)
#loc669 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":408:22)
#loc670 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":408:29)
#loc671 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":408:33)
#loc672 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":408:31)
#loc673 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":409:17)
#loc674 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":411:32)
#loc675 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":411:21)
#loc676 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":408:37)
#loc677 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":408:36)
#loc678 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":413:30)
#loc679 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_05.c":413:17)
#loc680 = loc(fused[#loc1, #loc2])
#loc681 = loc(fused[#loc3, #loc4])
#loc682 = loc(fused[#loc5, #loc6])
#loc683 = loc(fused[#loc7, #loc8])
#loc684 = loc(fused[#loc10, #loc11])
#loc685 = loc(fused[#loc12, #loc13])
#loc686 = loc(fused[#loc14, #loc15])
#loc687 = loc(fused[#loc16, #loc17])
#loc688 = loc(fused[#loc18, #loc19])
#loc689 = loc(fused[#loc20, #loc21])
#loc690 = loc(fused[#loc23, #loc24])
#loc691 = loc(fused[#loc25, #loc26])
#loc692 = loc(fused[#loc27, #loc28])
#loc693 = loc(fused[#loc29, #loc30])
#loc694 = loc(fused[#loc32, #loc31])
#loc695 = loc(fused[#loc33, #loc34])
#loc696 = loc(fused[#loc36, #loc34])
#loc697 = loc(fused[#loc37, #loc38])
#loc698 = loc(fused[#loc39, #loc40])
#loc699 = loc(fused[#loc41, #loc42])
#loc700 = loc(fused[#loc43, #loc44])
#loc701 = loc(fused[#loc45, #loc46])
#loc702 = loc(fused[#loc47, #loc48])
#loc703 = loc(fused[#loc51, #loc52])
#loc704 = loc(fused[#loc57, #loc58])
#loc705 = loc(fused[#loc59, #loc60])
#loc706 = loc(fused[#loc61, #loc62])
#loc707 = loc(fused[#loc63, #loc60])
#loc708 = loc(fused[#loc65, #loc66])
#loc709 = loc(fused[#loc68, #loc69])
#loc710 = loc(fused[#loc70, #loc71])
#loc711 = loc(fused[#loc74, #loc72])
#loc712 = loc(fused[#loc78, #loc79])
#loc713 = loc(fused[#loc83, #loc84])
#loc714 = loc(fused[#loc85, #loc86])
#loc715 = loc(fused[#loc88, #loc89])
#loc716 = loc(fused[#loc90, #loc91])
#loc717 = loc(fused[#loc92, #loc93])
#loc718 = loc(fused[#loc94, #loc86])
#loc719 = loc(fused[#loc100, #loc101])
#loc720 = loc(fused[#loc102, #loc103])
#loc721 = loc(fused[#loc104, #loc105])
#loc722 = loc(fused[#loc104, #loc106])
#loc723 = loc(fused[#loc102, #loc107])
#loc724 = loc(fused[#loc110, #loc111])
#loc725 = loc(fused[#loc112, #loc113])
#loc726 = loc(fused[#loc114, #loc115])
#loc727 = loc(fused[#loc117, #loc118])
#loc728 = loc(fused[#loc119, #loc113])
#loc729 = loc(fused[#loc125, #loc126])
#loc730 = loc(fused[#loc124, #loc126])
#loc731 = loc(fused[#loc123, #loc126])
#loc732 = loc(fused[#loc122, #loc121])
#loc733 = loc(fused[#loc131, #loc132])
#loc734 = loc(fused[#loc133, #loc134])
#loc735 = loc(fused[#loc136, #loc134])
#loc736 = loc(fused[#loc139, #loc137])
#loc737 = loc(fused[#loc143, #loc144])
#loc738 = loc(fused[#loc145, #loc146])
#loc739 = loc(fused[#loc148, #loc146])
#loc740 = loc(fused[#loc151, #loc149])
#loc741 = loc(fused[#loc153, #loc154])
#loc742 = loc(fused[#loc155, #loc156])
#loc743 = loc(fused[#loc157, #loc154])
#loc744 = loc(fused[#loc160, #loc161])
#loc745 = loc(fused[#loc163, #loc161])
#loc746 = loc(fused[#loc164, #loc165])
#loc747 = loc(fused[#loc166, #loc167])
#loc748 = loc(fused[#loc166, #loc168])
#loc749 = loc(fused[#loc166, #loc169])
#loc750 = loc(fused[#loc170, #loc171])
#loc751 = loc(fused[#loc172, #loc174])
#loc752 = loc(fused[#loc175, #loc171])
#loc753 = loc(fused[#loc177, #loc176])
#loc754 = loc(fused[#loc178, #loc179])
#loc755 = loc(fused[#loc181, #loc180])
#loc756 = loc(fused[#loc182, #loc183])
#loc757 = loc(fused[#loc185, #loc179])
#loc758 = loc(fused[#loc187, #loc186])
#loc759 = loc(fused[#loc189, #loc188])
#loc760 = loc(fused[#loc192, #loc193])
#loc761 = loc(fused[#loc194, #loc195])
#loc762 = loc(fused[#loc196, #loc197])
#loc763 = loc(fused[#loc198, #loc199])
#loc764 = loc(fused[#loc200, #loc201])
#loc765 = loc(fused[#loc202, #loc203])
#loc766 = loc(fused[#loc204, #loc205])
#loc767 = loc(fused[#loc206, #loc207])
#loc768 = loc(fused[#loc212, #loc213])
#loc771 = loc(fused[#loc223, #loc224])
#loc772 = loc(fused[#loc227, #loc228])
#loc773 = loc(fused[#loc231, #loc230])
#loc774 = loc(fused[#loc232, #loc233])
#loc775 = loc(fused[#loc235, #loc236])
#loc776 = loc(fused[#loc237, #loc238])
#loc777 = loc(fused[#loc239, #loc240])
#loc778 = loc(fused[#loc242, #loc241])
#loc779 = loc(fused[#loc243, #loc244])
#loc780 = loc(fused[#loc246, #loc244])
#loc781 = loc(fused[#loc247, #loc248])
#loc782 = loc(fused[#loc249, #loc250])
#loc783 = loc(fused[#loc251, #loc252])
#loc784 = loc(fused[#loc253, #loc254])
#loc785 = loc(fused[#loc255, #loc256])
#loc786 = loc(fused[#loc257, #loc258])
#loc787 = loc(fused[#loc261, #loc262])
#loc788 = loc(fused[#loc267, #loc268])
#loc789 = loc(fused[#loc269, #loc270])
#loc790 = loc(fused[#loc271, #loc272])
#loc791 = loc(fused[#loc273, #loc270])
#loc792 = loc(fused[#loc275, #loc276])
#loc793 = loc(fused[#loc278, #loc279])
#loc794 = loc(fused[#loc280, #loc281])
#loc795 = loc(fused[#loc283, #loc282])
#loc796 = loc(fused[#loc286, #loc287])
#loc797 = loc(fused[#loc290, #loc291])
#loc798 = loc(fused[#loc292, #loc293])
#loc799 = loc(fused[#loc295, #loc296])
#loc800 = loc(fused[#loc297, #loc298])
#loc801 = loc(fused[#loc299, #loc300])
#loc802 = loc(fused[#loc301, #loc293])
#loc803 = loc(fused[#loc307, #loc308])
#loc804 = loc(fused[#loc309, #loc310])
#loc805 = loc(fused[#loc311, #loc312])
#loc806 = loc(fused[#loc311, #loc313])
#loc807 = loc(fused[#loc309, #loc314])
#loc808 = loc(fused[#loc317, #loc318])
#loc809 = loc(fused[#loc319, #loc320])
#loc810 = loc(fused[#loc321, #loc322])
#loc811 = loc(fused[#loc324, #loc325])
#loc812 = loc(fused[#loc326, #loc320])
#loc813 = loc(fused[#loc332, #loc333])
#loc814 = loc(fused[#loc331, #loc333])
#loc815 = loc(fused[#loc330, #loc333])
#loc816 = loc(fused[#loc329, #loc328])
#loc817 = loc(fused[#loc338, #loc339])
#loc818 = loc(fused[#loc340, #loc341])
#loc819 = loc(fused[#loc343, #loc341])
#loc820 = loc(fused[#loc346, #loc344])
#loc821 = loc(fused[#loc350, #loc351])
#loc822 = loc(fused[#loc352, #loc353])
#loc823 = loc(fused[#loc355, #loc353])
#loc824 = loc(fused[#loc358, #loc356])
#loc825 = loc(fused[#loc360, #loc361])
#loc826 = loc(fused[#loc362, #loc363])
#loc827 = loc(fused[#loc364, #loc361])
#loc828 = loc(fused[#loc367, #loc368])
#loc829 = loc(fused[#loc370, #loc371, #loc372, #loc368])
#loc830 = loc(fused[#loc374, #loc375])
#loc831 = loc(fused[#loc376, #loc377])
#loc832 = loc(fused[#loc376, #loc378])
#loc833 = loc(fused[#loc376, #loc379])
#loc834 = loc(fused[#loc380, #loc381])
#loc835 = loc(fused[#loc382, #loc385])
#loc836 = loc(fused[#loc386, #loc381])
#loc837 = loc(fused[#loc387, #loc388])
#loc838 = loc(fused[#loc389, #loc390])
#loc839 = loc(fused[#loc391, #loc388])
#loc840 = loc(fused[#loc393, #loc392])
#loc841 = loc(fused[#loc394, #loc395])
#loc842 = loc(fused[#loc397, #loc396])
#loc843 = loc(fused[#loc398, #loc399])
#loc844 = loc(fused[#loc401, #loc395])
#loc845 = loc(fused[#loc403, #loc402])
#loc846 = loc(fused[#loc405, #loc404])
#loc847 = loc(fused[#loc408, #loc409])
#loc848 = loc(fused[#loc410, #loc411])
#loc849 = loc(fused[#loc412, #loc413])
#loc850 = loc(fused[#loc415, #loc414])
#loc851 = loc(fused[#loc416, #loc417])
#loc852 = loc(fused[#loc419, #loc417])
#loc853 = loc(fused[#loc420, #loc421])
#loc854 = loc(fused[#loc422, #loc423])
#loc855 = loc(fused[#loc424, #loc425])
#loc856 = loc(fused[#loc426, #loc427])
#loc857 = loc(fused[#loc428, #loc429])
#loc858 = loc(fused[#loc430, #loc431])
#loc859 = loc(fused[#loc434, #loc435])
#loc860 = loc(fused[#loc440, #loc441])
#loc861 = loc(fused[#loc442, #loc443])
#loc862 = loc(fused[#loc444, #loc445])
#loc863 = loc(fused[#loc446, #loc443])
#loc864 = loc(fused[#loc448, #loc449])
#loc865 = loc(fused[#loc451, #loc452])
#loc866 = loc(fused[#loc453, #loc454])
#loc867 = loc(fused[#loc456, #loc455])
#loc868 = loc(fused[#loc459, #loc460])
#loc869 = loc(fused[#loc463, #loc464])
#loc870 = loc(fused[#loc465, #loc466])
#loc871 = loc(fused[#loc468, #loc469])
#loc872 = loc(fused[#loc470, #loc471])
#loc873 = loc(fused[#loc472, #loc473])
#loc874 = loc(fused[#loc474, #loc466])
#loc875 = loc(fused[#loc480, #loc481])
#loc876 = loc(fused[#loc482, #loc483])
#loc877 = loc(fused[#loc484, #loc485])
#loc878 = loc(fused[#loc484, #loc486])
#loc879 = loc(fused[#loc482, #loc487])
#loc880 = loc(fused[#loc490, #loc491])
#loc881 = loc(fused[#loc492, #loc493])
#loc882 = loc(fused[#loc494, #loc495])
#loc883 = loc(fused[#loc497, #loc498])
#loc884 = loc(fused[#loc499, #loc493])
#loc885 = loc(fused[#loc505, #loc506])
#loc886 = loc(fused[#loc504, #loc506])
#loc887 = loc(fused[#loc503, #loc506])
#loc888 = loc(fused[#loc502, #loc501])
#loc889 = loc(fused[#loc511, #loc512])
#loc890 = loc(fused[#loc513, #loc514])
#loc891 = loc(fused[#loc516, #loc514])
#loc892 = loc(fused[#loc519, #loc517])
#loc893 = loc(fused[#loc523, #loc524])
#loc894 = loc(fused[#loc525, #loc526])
#loc895 = loc(fused[#loc528, #loc526])
#loc896 = loc(fused[#loc531, #loc529])
#loc897 = loc(fused[#loc533, #loc534])
#loc898 = loc(fused[#loc535, #loc536])
#loc899 = loc(fused[#loc537, #loc534])
#loc900 = loc(fused[#loc540, #loc541])
#loc901 = loc(fused[#loc543, #loc541])
#loc902 = loc(fused[#loc544, #loc545])
#loc903 = loc(fused[#loc546, #loc547])
#loc904 = loc(fused[#loc546, #loc548])
#loc905 = loc(fused[#loc546, #loc549])
#loc906 = loc(fused[#loc550, #loc551])
#loc907 = loc(fused[#loc552, #loc555])
#loc908 = loc(fused[#loc556, #loc551])
#loc909 = loc(fused[#loc557, #loc558])
#loc910 = loc(fused[#loc559, #loc560])
#loc911 = loc(fused[#loc561, #loc558])
#loc912 = loc(fused[#loc563, #loc562])
#loc913 = loc(fused[#loc564, #loc565])
#loc914 = loc(fused[#loc567, #loc566])
#loc915 = loc(fused[#loc568, #loc569])
#loc916 = loc(fused[#loc571, #loc565])
#loc917 = loc(fused[#loc573, #loc572])
#loc918 = loc(fused[#loc575, #loc574])
#loc919 = loc(fused[#loc578, #loc579])
#loc920 = loc(fused[#loc581, #loc582])
#loc921 = loc(fused[#loc583, #loc584])
#loc922 = loc(fused[#loc585, #loc586])
#loc923 = loc(fused[#loc588, #loc587])
#loc924 = loc(fused[#loc589, #loc590])
#loc925 = loc(fused[#loc592, #loc593, #loc594, #loc590])
#loc926 = loc(fused[#loc599, #loc600])
#loc927 = loc(fused[#loc602, #loc600])
#loc928 = loc(fused[#loc603, #loc604])
#loc929 = loc(fused[#loc605, #loc606])
#loc930 = loc(fused[#loc605, #loc607])
#loc931 = loc(fused[#loc605, #loc608])
#loc932 = loc(fused[#loc609, #loc610])
#loc933 = loc(fused[#loc611, #loc614])
#loc934 = loc(fused[#loc615, #loc610])
#loc935 = loc(fused[#loc617, #loc616])
#loc936 = loc(fused[#loc618, #loc619])
#loc937 = loc(fused[#loc621, #loc620])
#loc938 = loc(fused[#loc622, #loc623])
#loc939 = loc(fused[#loc625, #loc619])
#loc940 = loc(fused[#loc627, #loc626])
#loc941 = loc(fused[#loc629, #loc628])
#loc942 = loc(fused[#loc632, #loc633])
#loc943 = loc(fused[#loc634, #loc635])
#loc944 = loc(fused[#loc636, #loc637])
#loc945 = loc(fused[#loc639, #loc638])
#loc946 = loc(fused[#loc640, #loc641])
#loc947 = loc(fused[#loc643, #loc641])
#loc948 = loc(fused[#loc647, #loc648])
#loc949 = loc(fused[#loc650, #loc648])
#loc950 = loc(fused[#loc651, #loc652])
#loc951 = loc(fused[#loc653, #loc654])
#loc952 = loc(fused[#loc653, #loc655])
#loc953 = loc(fused[#loc653, #loc656])
#loc954 = loc(fused[#loc657, #loc658])
#loc955 = loc(fused[#loc659, #loc662])
#loc956 = loc(fused[#loc663, #loc658])
#loc957 = loc(fused[#loc665, #loc664])
#loc958 = loc(fused[#loc666, #loc667])
#loc959 = loc(fused[#loc669, #loc668])
#loc960 = loc(fused[#loc670, #loc671])
#loc961 = loc(fused[#loc673, #loc667])
#loc962 = loc(fused[#loc675, #loc674])
#loc963 = loc(fused[#loc677, #loc676])
