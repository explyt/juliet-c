!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":28:21)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":28:28)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":97:10)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":97:14)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":97:20)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":97:32)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":59:25)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":59:32)
#loc114 = loc(fused[#loc11, #loc12])
#loc130 = loc(fused[#loc58, #loc59])
#loc131 = loc(fused[#loc60, #loc61])
#loc136 = loc(fused[#loc78, #loc79])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2BSink.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc109)
  cir.global "private" constant cir_private @__const.badSink.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc110)
  cir.func private @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc111)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc112)
  cir.func internal private @badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc11, #loc12])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc114)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc13)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc110)
      %2 = cir.get_global @__const.badSink.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc110)
      cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc110)
      %3 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc16)
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc17)
      %5 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc18)
      %6 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc19)
      %7 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc20)
      %8 = cir.call @strlen(%7) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc19)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc21)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc21)
      %11 = cir.binop(add, %8, %10) : !u64i loc(#loc116)
      %12 = cir.call @strncpy(%4, %5, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc16)
      %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
      cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc23)
    } loc(#loc115)
    cir.return loc(#loc10)
  } loc(#loc113)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc118)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc119)
    %2 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc120)
    %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc121)
    %4 = cir.get_global @badSink : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc29)
    cir.store %4, %1 : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>> loc(#loc119)
    %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc34)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc122)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc36)
    %7 = cir.cast(integral, %6 : !s32i), !s8i loc(#loc36)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc38)
    %10 = cir.ptr_stride(%8 : !cir.ptr<!s8i>, %9 : !s32i), !cir.ptr<!s8i> loc(#loc39)
    cir.store %7, %10 : !s8i, !cir.ptr<!s8i> loc(#loc123)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc40)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
    cir.call %11(%12) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc40)
    cir.return loc(#loc25)
  } loc(#loc117)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc125)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc44)
    cir.return loc(#loc43)
  } loc(#loc124)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc126)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc127)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc128)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc52)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc53)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc54)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc55)
  cir.func @main(%arg0: !s32i loc(fused[#loc58, #loc59]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc60, #loc61])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc130)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc131)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc57)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc62)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc62)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc63)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc64)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc64)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc65)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc52)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44_good : !cir.ptr<!cir.func<!void ()>> loc(#loc132)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44_good() : () -> () loc(#loc67)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc53)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc54)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc133)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44_bad() : () -> () loc(#loc71)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc55)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc74)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc134)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc134)
    cir.return %17 : !s32i loc(#loc134)
  } loc(#loc129)
  cir.func internal private @goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc78, #loc79])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc136)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc80)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc109)
      %2 = cir.get_global @__const.goodG2BSink.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc109)
      cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc109)
      %3 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc83)
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
      %5 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc85)
      %6 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc86)
      %7 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc87)
      %8 = cir.call @strlen(%7) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc86)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc88)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc88)
      %11 = cir.binop(add, %8, %10) : !u64i loc(#loc138)
      %12 = cir.call @strncpy(%4, %5, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc83)
      %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
      cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    } loc(#loc137)
    cir.return loc(#loc77)
  } loc(#loc135)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc140)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc141)
    %2 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc142)
    %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc143)
    %4 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc96)
    cir.store %4, %1 : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>> loc(#loc141)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc101)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc144)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc103)
    %7 = cir.cast(integral, %6 : !s32i), !s8i loc(#loc103)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc105)
    %10 = cir.ptr_stride(%8 : !cir.ptr<!s8i>, %9 : !s32i), !cir.ptr<!s8i> loc(#loc106)
    cir.store %7, %10 : !s8i, !cir.ptr<!s8i> loc(#loc145)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc107)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
    cir.call %11(%12) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc107)
    cir.return loc(#loc92)
  } loc(#loc139)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":62:9)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":62:29)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":31:9)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":31:29)
#loc5 = loc("/usr/include/string.h":144:1)
#loc6 = loc("/usr/include/string.h":146:14)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":28:1)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":37:1)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":29:1)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":30:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":36:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":34:9)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":34:17)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":34:23)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":34:31)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":34:38)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":34:48)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":35:19)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":35:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":39:1)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":52:1)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":41:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":41:12)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":43:5)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":43:32)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":44:5)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":44:26)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":45:5)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":45:29)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":48:12)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":48:5)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":49:15)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":49:5)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":49:10)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":49:11)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":51:5)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":51:13)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":83:1)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":86:1)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":85:5)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":85:13)
#loc46 = loc("/usr/include/stdlib.h":575:1)
#loc47 = loc("/usr/include/stdlib.h":575:41)
#loc48 = loc("/usr/include/time.h":76:1)
#loc49 = loc("/usr/include/time.h":76:38)
#loc50 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc51 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":102:15)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":104:15)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":107:15)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":109:15)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":97:1)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":112:1)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":98:1)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":100:27)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":100:22)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":100:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":102:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":103:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":103:74)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":104:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":107:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":108:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":108:73)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":109:5)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":111:12)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":111:5)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":59:1)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":68:1)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":60:1)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":61:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":67:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":65:9)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":65:17)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":65:23)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":65:31)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":65:38)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":65:48)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":66:19)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":66:9)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":70:1)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":81:1)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":72:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":72:12)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":73:5)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":73:32)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":74:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":74:26)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":75:5)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":75:29)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":78:12)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":78:5)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":79:15)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":79:5)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":79:10)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":79:11)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":80:5)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_44.c":80:13)
#loc109 = loc(fused[#loc1, #loc2])
#loc110 = loc(fused[#loc3, #loc4])
#loc111 = loc(fused[#loc5, #loc6])
#loc112 = loc(fused[#loc7, #loc8])
#loc113 = loc(fused[#loc9, #loc10])
#loc115 = loc(fused[#loc14, #loc15])
#loc116 = loc(fused[#loc19, #loc21])
#loc117 = loc(fused[#loc24, #loc25])
#loc118 = loc(fused[#loc26, #loc27])
#loc119 = loc(fused[#loc28, #loc29])
#loc120 = loc(fused[#loc30, #loc31])
#loc121 = loc(fused[#loc32, #loc33])
#loc122 = loc(fused[#loc35, #loc34])
#loc123 = loc(fused[#loc37, #loc36])
#loc124 = loc(fused[#loc42, #loc43])
#loc125 = loc(fused[#loc44, #loc45])
#loc126 = loc(fused[#loc46, #loc47])
#loc127 = loc(fused[#loc48, #loc49])
#loc128 = loc(fused[#loc50, #loc51])
#loc129 = loc(fused[#loc56, #loc57])
#loc132 = loc(fused[#loc67, #loc68])
#loc133 = loc(fused[#loc71, #loc72])
#loc134 = loc(fused[#loc75, #loc74])
#loc135 = loc(fused[#loc76, #loc77])
#loc137 = loc(fused[#loc81, #loc82])
#loc138 = loc(fused[#loc86, #loc88])
#loc139 = loc(fused[#loc91, #loc92])
#loc140 = loc(fused[#loc93, #loc94])
#loc141 = loc(fused[#loc95, #loc96])
#loc142 = loc(fused[#loc97, #loc98])
#loc143 = loc(fused[#loc99, #loc100])
#loc144 = loc(fused[#loc102, #loc101])
#loc145 = loc(fused[#loc104, #loc103])
