!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc27 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":63:25)
#loc28 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":63:32)
#loc235 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":178:30)
#loc236 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":178:37)
#loc285 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":213:30)
#loc286 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":213:37)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc346 = loc(fused[#loc27, #loc28])
#loc428 = loc(fused[#loc235, #loc236])
#loc447 = loc(fused[#loc285, #loc286])
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s02/CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.global "private" constant cir_private @__const._ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_21L8goodG2B2Ev.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc333)
  cir.global "private" constant cir_private @__const._ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_21L8goodG2B1Ev.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc334)
  cir.global "private" constant cir_private @__const._ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_213badEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc335)
  cir.global "private" internal dsolocal @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_21L9badStaticE = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc336)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc337)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc338)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc339)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc340)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc341)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc342)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc343)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc344)
  cir.func internal private @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_21L9badSourceEPc(%arg0: !cir.ptr<!s8i> loc(fused[#loc27, #loc28])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc346)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc26)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc29)
    cir.scope {
      %4 = cir.get_global @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_21L9badStaticE : !cir.ptr<!s32i> loc(#loc336)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc32)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc32)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc350)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc351)
          %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc352)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc353)
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc354)
          %12 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc355)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc43)
          %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc43)
          cir.store %14, %10 : !s32i, !cir.ptr<!s32i> loc(#loc353)
          %15 = cir.const #cir.int<1> : !s32i loc(#loc45)
          %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc45)
          cir.store %16, %11 : !s32i, !cir.ptr<!s32i> loc(#loc354)
          %17 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc48)
          %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
          %19 = cir.call @strlen(%18) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc48)
          cir.store %19, %12 : !u64i, !cir.ptr<!u64i> loc(#loc355)
          cir.scope {
            cir.do {
              cir.scope {
                %20 = cir.const #cir.int<2> : !s32i loc(#loc54)
                %21 = cir.const #cir.int<1> : !u32i loc(#loc55)
                %22 = cir.cast(integral, %21 : !u32i), !s32i loc(#loc55)
                %23 = cir.const #cir.int<6> : !u32i loc(#loc56)
                %24 = cir.cast(integral, %23 : !u32i), !s32i loc(#loc56)
                %25 = cir.call @socket(%20, %22, %24) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc57)
                cir.store %25, %10 : !s32i, !cir.ptr<!s32i> loc(#loc358)
                cir.scope {
                  %78 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc62)
                  %79 = cir.const #cir.int<1> : !s32i loc(#loc63)
                  %80 = cir.unary(minus, %79) nsw : !s32i, !s32i loc(#loc63)
                  %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc360)
                  cir.if %81 {
                    cir.break loc(#loc65)
                  } loc(#loc361)
                } loc(#loc359)
                %26 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc362)
                %27 = cir.const #cir.int<0> : !s32i loc(#loc68)
                %28 = cir.const #cir.int<16> : !u64i loc(#loc363)
                cir.libc.memset %28 bytes from %26 set to %27 : !cir.ptr<!void>, !s32i, !u64i loc(#loc364)
                %29 = cir.const #cir.int<2> : !s32i loc(#loc73)
                %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc73)
                %31 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
                cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc365)
                %32 = cir.const #cir.int<0> : !s32i loc(#loc76)
                %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc76)
                %34 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc77)
                %35 = cir.get_member %34[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc78)
                cir.store %33, %35 : !u32i, !cir.ptr<!u32i> loc(#loc366)
                %36 = cir.const #cir.int<27015> : !s32i loc(#loc80)
                %37 = cir.cast(integral, %36 : !s32i), !u16i loc(#loc80)
                %38 = cir.call @htons(%37) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc81)
                %39 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
                cir.store %38, %39 : !u16i, !cir.ptr<!u16i> loc(#loc367)
                cir.scope {
                  %78 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc87)
                  %79 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc369)
                  %80 = cir.const #cir.int<16> : !u64i loc(#loc370)
                  %81 = cir.cast(integral, %80 : !u64i), !u32i loc(#loc370)
                  %82 = cir.call @bind(%78, %79, %81) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc92)
                  %83 = cir.const #cir.int<1> : !s32i loc(#loc93)
                  %84 = cir.unary(minus, %83) nsw : !s32i, !s32i loc(#loc93)
                  %85 = cir.cmp(eq, %82, %84) : !s32i, !cir.bool loc(#loc371)
                  cir.if %85 {
                    cir.break loc(#loc95)
                  } loc(#loc372)
                } loc(#loc368)
                cir.scope {
                  %78 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc98)
                  %79 = cir.const #cir.int<5> : !s32i loc(#loc99)
                  %80 = cir.call @listen(%78, %79) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc100)
                  %81 = cir.const #cir.int<1> : !s32i loc(#loc101)
                  %82 = cir.unary(minus, %81) nsw : !s32i, !s32i loc(#loc101)
                  %83 = cir.cmp(eq, %80, %82) : !s32i, !cir.bool loc(#loc374)
                  cir.if %83 {
                    cir.break loc(#loc103)
                  } loc(#loc375)
                } loc(#loc373)
                %40 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc104)
                %41 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc105)
                %42 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc106)
                %43 = cir.call @accept(%40, %41, %42) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc107)
                cir.store %43, %11 : !s32i, !cir.ptr<!s32i> loc(#loc376)
                cir.scope {
                  %78 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc112)
                  %79 = cir.const #cir.int<1> : !s32i loc(#loc113)
                  %80 = cir.unary(minus, %79) nsw : !s32i, !s32i loc(#loc113)
                  %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc378)
                  cir.if %81 {
                    cir.break loc(#loc115)
                  } loc(#loc379)
                } loc(#loc377)
                %44 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc116)
                %45 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
                %46 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc118)
                %47 = cir.ptr_stride(%45 : !cir.ptr<!s8i>, %46 : !u64i), !cir.ptr<!s8i> loc(#loc119)
                %48 = cir.cast(bitcast, %47 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc380)
                %49 = cir.const #cir.int<1> : !u64i loc(#loc381)
                %50 = cir.const #cir.int<4096> : !s32i loc(#loc124)
                %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc124)
                %52 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc125)
                %53 = cir.binop(sub, %51, %52) : !u64i loc(#loc382)
                %54 = cir.const #cir.int<1> : !s32i loc(#loc126)
                %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc126)
                %56 = cir.binop(sub, %53, %55) : !u64i loc(#loc383)
                %57 = cir.binop(mul, %49, %56) : !u64i loc(#loc384)
                %58 = cir.const #cir.int<0> : !s32i loc(#loc128)
                %59 = cir.call @recv(%44, %48, %57, %58) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc129)
                %60 = cir.cast(integral, %59 : !s64i), !s32i loc(#loc129)
                cir.store %60, %7 : !s32i, !cir.ptr<!s32i> loc(#loc385)
                cir.scope {
                  %78 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc134)
                  %79 = cir.const #cir.int<1> : !s32i loc(#loc135)
                  %80 = cir.unary(minus, %79) nsw : !s32i, !s32i loc(#loc135)
                  %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc387)
                  %82 = cir.ternary(%81, true {
                    %83 = cir.const #true loc(#loc136)
                    cir.yield %83 : !cir.bool loc(#loc136)
                  }, false {
                    %83 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc137)
                    %84 = cir.const #cir.int<0> : !s32i loc(#loc138)
                    %85 = cir.cmp(eq, %83, %84) : !s32i, !cir.bool loc(#loc388)
                    %86 = cir.ternary(%85, true {
                      %87 = cir.const #true loc(#loc136)
                      cir.yield %87 : !cir.bool loc(#loc136)
                    }, false {
                      %87 = cir.const #false loc(#loc136)
                      cir.yield %87 : !cir.bool loc(#loc136)
                    }) : (!cir.bool) -> !cir.bool loc(#loc136)
                    cir.yield %86 : !cir.bool loc(#loc136)
                  }) : (!cir.bool) -> !cir.bool loc(#loc136)
                  cir.if %82 {
                    cir.break loc(#loc140)
                  } loc(#loc389)
                } loc(#loc386)
                %61 = cir.const #cir.int<0> : !s8i loc(#loc141)
                %62 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
                %63 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc143)
                %64 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc144)
                %65 = cir.cast(integral, %64 : !s32i), !u64i loc(#loc144)
                %66 = cir.const #cir.int<1> : !u64i loc(#loc390)
                %67 = cir.binop(div, %65, %66) : !u64i loc(#loc391)
                %68 = cir.binop(add, %63, %67) : !u64i loc(#loc392)
                %69 = cir.ptr_stride(%62 : !cir.ptr<!s8i>, %68 : !u64i), !cir.ptr<!s8i> loc(#loc147)
                cir.store %61, %69 : !s8i, !cir.ptr<!s8i> loc(#loc393)
                %70 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc148)
                %71 = cir.const #cir.int<13> : !s8i loc(#loc149)
                %72 = cir.cast(integral, %71 : !s8i), !s32i loc(#loc149)
                %73 = cir.call @strchr(%70, %72) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc150)
                cir.store %73, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc394)
                cir.scope {
                  %78 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc155)
                  %79 = cir.cast(ptr_to_bool, %78 : !cir.ptr<!s8i>), !cir.bool loc(#loc155)
                  cir.if %79 {
                    %80 = cir.const #cir.int<0> : !s8i loc(#loc157)
                    %81 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
                    cir.store %80, %81 : !s8i, !cir.ptr<!s8i> loc(#loc397)
                  } loc(#loc396)
                } loc(#loc395)
                %74 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
                %75 = cir.const #cir.int<10> : !s8i loc(#loc161)
                %76 = cir.cast(integral, %75 : !s8i), !s32i loc(#loc161)
                %77 = cir.call @strchr(%74, %76) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc162)
                cir.store %77, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc398)
                cir.scope {
                  %78 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc167)
                  %79 = cir.cast(ptr_to_bool, %78 : !cir.ptr<!s8i>), !cir.bool loc(#loc167)
                  cir.if %79 {
                    %80 = cir.const #cir.int<0> : !s8i loc(#loc169)
                    %81 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc170)
                    cir.store %80, %81 : !s8i, !cir.ptr<!s8i> loc(#loc401)
                  } loc(#loc400)
                } loc(#loc399)
              } loc(#loc357)
              cir.yield loc(#loc51)
            } while {
              %20 = cir.const #cir.int<0> : !s32i loc(#loc172)
              %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc172)
              cir.condition(%21) loc(#loc172)
            } loc(#loc356)
          } loc(#loc356)
          cir.scope {
            %20 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc175)
            %21 = cir.const #cir.int<1> : !s32i loc(#loc176)
            %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc176)
            %23 = cir.cmp(ne, %20, %22) : !s32i, !cir.bool loc(#loc403)
            cir.if %23 {
              %24 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc178)
              %25 = cir.call @close(%24) : (!s32i) -> !s32i loc(#loc179)
            } loc(#loc404)
          } loc(#loc402)
          cir.scope {
            %20 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc182)
            %21 = cir.const #cir.int<1> : !s32i loc(#loc183)
            %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc183)
            %23 = cir.cmp(ne, %20, %22) : !s32i, !cir.bool loc(#loc406)
            cir.if %23 {
              %24 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc185)
              %25 = cir.call @close(%24) : (!s32i) -> !s32i loc(#loc186)
            } loc(#loc407)
          } loc(#loc405)
        } loc(#loc349)
      } loc(#loc348)
    } loc(#loc347)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc187)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc408)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc408)
    cir.return %3 : !cir.ptr<!s8i> loc(#loc408)
  } loc(#loc345)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc409)
  cir.func private @close(!s32i) -> !s32i loc(#loc410)
  cir.func @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_213badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc412)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc335)
    %2 = cir.get_global @__const._ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_213badEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc335)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc335)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc197)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc413)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc199)
    %5 = cir.get_global @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_21L9badStaticE : !cir.ptr<!s32i> loc(#loc336)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc414)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc201)
    %7 = cir.call @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_21L9badSourceEPc(%6) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc202)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc415)
    cir.scope {
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc417)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc209)
      %10 = cir.const #cir.int<2> : !s32i loc(#loc210)
      %11 = cir.const #cir.int<64> : !s32i loc(#loc211)
      %12 = cir.binop(or, %10, %11) : !s32i loc(#loc418)
      %13 = cir.const #cir.int<256> : !s32i loc(#loc212)
      %14 = cir.const #cir.int<128> : !s32i loc(#loc213)
      %15 = cir.binop(or, %13, %14) : !s32i loc(#loc419)
      %16 = cir.call @open(%9, %12, %15) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc214)
      cir.store %16, %8 : !s32i, !cir.ptr<!s32i> loc(#loc420)
      cir.scope {
        %17 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc219)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc220)
        %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc221)
        %20 = cir.cmp(ne, %17, %19) : !s32i, !cir.bool loc(#loc422)
        cir.if %20 {
          %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc223)
          %22 = cir.call @close(%21) : (!s32i) -> !s32i loc(#loc224)
        } loc(#loc423)
      } loc(#loc421)
    } loc(#loc416)
    cir.return loc(#loc194)
  } loc(#loc411)
  cir.global "private" internal dsolocal @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_21L14goodG2B1StaticE = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc424)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc425)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc229)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc426)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc232)
  cir.func internal private @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_21L14goodG2B1SourceEPc(%arg0: !cir.ptr<!s8i> loc(fused[#loc235, #loc236])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc428)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc234)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc237)
    cir.scope {
      %4 = cir.get_global @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_21L14goodG2B1StaticE : !cir.ptr<!s32i> loc(#loc424)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc240)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc240)
      cir.if %6 {
        %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc229)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc229)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc244)
      } else {
        %7 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc245)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc246)
        %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc232)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc232)
        %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc245)
      } loc(#loc430)
    } loc(#loc429)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc247)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc431)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc431)
    cir.return %3 : !cir.ptr<!s8i> loc(#loc431)
  } loc(#loc427)
  cir.func internal private @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_21L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc433)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc334)
    %2 = cir.get_global @__const._ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_21L8goodG2B1Ev.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc334)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc334)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc253)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc434)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc255)
    %5 = cir.get_global @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_21L14goodG2B1StaticE : !cir.ptr<!s32i> loc(#loc424)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc435)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc257)
    %7 = cir.call @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_21L14goodG2B1SourceEPc(%6) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc258)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc436)
    cir.scope {
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc438)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc265)
      %10 = cir.const #cir.int<2> : !s32i loc(#loc266)
      %11 = cir.const #cir.int<64> : !s32i loc(#loc267)
      %12 = cir.binop(or, %10, %11) : !s32i loc(#loc439)
      %13 = cir.const #cir.int<256> : !s32i loc(#loc268)
      %14 = cir.const #cir.int<128> : !s32i loc(#loc269)
      %15 = cir.binop(or, %13, %14) : !s32i loc(#loc440)
      %16 = cir.call @open(%9, %12, %15) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc270)
      cir.store %16, %8 : !s32i, !cir.ptr<!s32i> loc(#loc441)
      cir.scope {
        %17 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc275)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc276)
        %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc277)
        %20 = cir.cmp(ne, %17, %19) : !s32i, !cir.bool loc(#loc443)
        cir.if %20 {
          %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc279)
          %22 = cir.call @close(%21) : (!s32i) -> !s32i loc(#loc280)
        } loc(#loc444)
      } loc(#loc442)
    } loc(#loc437)
    cir.return loc(#loc250)
  } loc(#loc432)
  cir.global "private" internal dsolocal @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_21L14goodG2B2StaticE = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc445)
  cir.func internal private @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_21L14goodG2B2SourceEPc(%arg0: !cir.ptr<!s8i> loc(fused[#loc285, #loc286])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc447)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc284)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc287)
    cir.scope {
      %4 = cir.get_global @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_21L14goodG2B2StaticE : !cir.ptr<!s32i> loc(#loc445)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc290)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc290)
      cir.if %6 {
        %7 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc292)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc293)
        %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc294)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc294)
        %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc292)
      } loc(#loc449)
    } loc(#loc448)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc295)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc450)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc450)
    cir.return %3 : !cir.ptr<!s8i> loc(#loc450)
  } loc(#loc446)
  cir.func internal private @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_21L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc452)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc333)
    %2 = cir.get_global @__const._ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_21L8goodG2B2Ev.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc333)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc333)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc301)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc453)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc303)
    %5 = cir.get_global @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_21L14goodG2B2StaticE : !cir.ptr<!s32i> loc(#loc445)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc454)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc305)
    %7 = cir.call @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_21L14goodG2B2SourceEPc(%6) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc306)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc455)
    cir.scope {
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc457)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc313)
      %10 = cir.const #cir.int<2> : !s32i loc(#loc314)
      %11 = cir.const #cir.int<64> : !s32i loc(#loc315)
      %12 = cir.binop(or, %10, %11) : !s32i loc(#loc458)
      %13 = cir.const #cir.int<256> : !s32i loc(#loc316)
      %14 = cir.const #cir.int<128> : !s32i loc(#loc317)
      %15 = cir.binop(or, %13, %14) : !s32i loc(#loc459)
      %16 = cir.call @open(%9, %12, %15) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc318)
      cir.store %16, %8 : !s32i, !cir.ptr<!s32i> loc(#loc460)
      cir.scope {
        %17 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc323)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc324)
        %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc325)
        %20 = cir.cmp(ne, %17, %19) : !s32i, !cir.bool loc(#loc462)
        cir.if %20 {
          %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc327)
          %22 = cir.call @close(%21) : (!s32i) -> !s32i loc(#loc328)
        } loc(#loc463)
      } loc(#loc461)
    } loc(#loc456)
    cir.return loc(#loc298)
  } loc(#loc451)
  cir.func @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_214goodEv() extra(#fn_attr1) {
    cir.call @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_21L8goodG2B1Ev() : () -> () loc(#loc331)
    cir.call @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_21L8goodG2B2Ev() : () -> () loc(#loc332)
    cir.return loc(#loc330)
  } loc(#loc464)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s02/CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":226:5)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":226:37)
#loc3 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":196:5)
#loc4 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":196:37)
#loc5 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":153:5)
#loc6 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":153:37)
#loc7 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":61:1)
#loc8 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":61:24)
#loc9 = loc("/usr/include/string.h":407:1)
#loc10 = loc("/usr/include/string.h":408:33)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc13 = loc("/usr/include/netinet/in.h":402:1)
#loc14 = loc("/usr/include/netinet/in.h":403:40)
#loc15 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc16 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc17 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc18 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc19 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc20 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc21 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc22 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc23 = loc("/usr/include/string.h":226:1)
#loc24 = loc("/usr/include/string.h":227:50)
#loc25 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":63:1)
#loc26 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":148:1)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":64:1)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":65:5)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":146:5)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":65:8)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":66:5)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":67:9)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":145:9)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":72:13)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":72:17)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":73:13)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":73:32)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":74:13)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":74:19)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":75:13)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":75:35)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":76:13)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":76:35)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":77:13)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":77:41)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":77:30)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":77:37)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":78:13)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":130:21)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":79:13)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":129:13)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":88:39)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":88:48)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":88:61)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":88:32)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":88:17)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":88:72)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":89:17)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":92:17)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":89:21)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":89:37)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":90:17)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":91:21)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":93:24)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":93:25)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":93:34)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":93:37)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":93:51)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":93:17)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":93:52)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":94:38)
#loc74 = loc("/usr/include/netinet/in.h":249:5)
#loc75 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":94:17)
#loc76 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":95:43)
#loc77 = loc("/usr/include/netinet/in.h":251:20)
#loc78 = loc("/usr/include/netinet/in.h":33:15)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":95:17)
#loc80 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":96:42)
#loc81 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":96:36)
#loc82 = loc("/usr/include/netinet/in.h":250:15)
#loc83 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":96:17)
#loc84 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":96:50)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":97:17)
#loc86 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":100:17)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":97:26)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":97:58)
#loc89 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":97:59)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":97:68)
#loc91 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":97:82)
#loc92 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":97:21)
#loc93 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":97:88)
#loc94 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":98:17)
#loc95 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":99:21)
#loc96 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":101:17)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":104:17)
#loc98 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":101:28)
#loc99 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":101:42)
#loc100 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":101:21)
#loc101 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":101:61)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":102:17)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":103:21)
#loc104 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":105:39)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":105:53)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":105:59)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":105:32)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":105:17)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":105:63)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":106:17)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":109:17)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":106:21)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":106:37)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":107:17)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":108:21)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":111:35)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":111:58)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":111:65)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":111:63)
#loc120 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":111:49)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":111:72)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":111:75)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":111:86)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":111:91)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":111:106)
#loc126 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":111:116)
#loc127 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":111:117)
#loc128 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":111:120)
#loc129 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":111:30)
#loc130 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":111:17)
#loc131 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":111:121)
#loc132 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":112:17)
#loc133 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":115:17)
#loc134 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":112:21)
#loc135 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":112:35)
#loc136 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":112:48)
#loc137 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":112:51)
#loc138 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":112:65)
#loc139 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":113:17)
#loc140 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":114:21)
#loc141 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":117:61)
#loc142 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":117:17)
#loc143 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":117:22)
#loc144 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":117:32)
#loc145 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":117:45)
#loc146 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":117:56)
#loc147 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":117:57)
#loc148 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":119:34)
#loc149 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":119:40)
#loc150 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":119:27)
#loc151 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":119:17)
#loc152 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":119:44)
#loc153 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":120:17)
#loc154 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":123:17)
#loc155 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":120:21)
#loc156 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":121:17)
#loc157 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":122:32)
#loc158 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":122:22)
#loc159 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":122:21)
#loc160 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":124:34)
#loc161 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":124:40)
#loc162 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":124:27)
#loc163 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":124:17)
#loc164 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":124:44)
#loc165 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":125:17)
#loc166 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":128:17)
#loc167 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":125:21)
#loc168 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":126:17)
#loc169 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":127:32)
#loc170 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":127:22)
#loc171 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":127:21)
#loc172 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":130:20)
#loc173 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":131:13)
#loc174 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":134:13)
#loc175 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":131:17)
#loc176 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":131:33)
#loc177 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":132:13)
#loc178 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":133:30)
#loc179 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":133:17)
#loc180 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":135:13)
#loc181 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":138:13)
#loc182 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":135:17)
#loc183 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":135:33)
#loc184 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":136:13)
#loc185 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":137:30)
#loc186 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":137:17)
#loc187 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":147:12)
#loc188 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":147:5)
#loc189 = loc("/usr/include/fcntl.h":209:1)
#loc190 = loc("/usr/include/fcntl.h":209:56)
#loc191 = loc("/usr/include/unistd.h":358:1)
#loc192 = loc("/usr/include/unistd.h":358:27)
#loc193 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":150:1)
#loc194 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":167:1)
#loc195 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":152:5)
#loc196 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":152:12)
#loc197 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":154:12)
#loc198 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":154:5)
#loc199 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":155:17)
#loc200 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":155:5)
#loc201 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":156:22)
#loc202 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":156:12)
#loc203 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":156:5)
#loc204 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":156:26)
#loc205 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":157:5)
#loc206 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":165:5)
#loc207 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":158:9)
#loc208 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":158:13)
#loc209 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":160:25)
#loc210 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":160:31)
#loc211 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":160:38)
#loc212 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":160:47)
#loc213 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":160:55)
#loc214 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":160:20)
#loc215 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":160:9)
#loc216 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":160:63)
#loc217 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":161:9)
#loc218 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":164:9)
#loc219 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":161:13)
#loc220 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":161:26)
#loc221 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":161:25)
#loc222 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":162:9)
#loc223 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":163:19)
#loc224 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":163:13)
#loc225 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":174:1)
#loc226 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":174:29)
#loc227 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc228 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc229 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":183:19)
#loc230 = loc("/usr/include/string.h":149:1)
#loc231 = loc("/usr/include/string.h":150:14)
#loc232 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":188:22)
#loc233 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":178:1)
#loc234 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":191:1)
#loc237 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":179:1)
#loc238 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":180:5)
#loc239 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":189:5)
#loc240 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":180:8)
#loc241 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":181:5)
#loc242 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":184:5)
#loc243 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":186:5)
#loc244 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":183:9)
#loc245 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":188:9)
#loc246 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":188:16)
#loc247 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":190:12)
#loc248 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":190:5)
#loc249 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":193:1)
#loc250 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":210:1)
#loc251 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":195:5)
#loc252 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":195:12)
#loc253 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":197:12)
#loc254 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":197:5)
#loc255 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":198:22)
#loc256 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":198:5)
#loc257 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":199:27)
#loc258 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":199:12)
#loc259 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":199:5)
#loc260 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":199:31)
#loc261 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":200:5)
#loc262 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":208:5)
#loc263 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":201:9)
#loc264 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":201:13)
#loc265 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":203:25)
#loc266 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":203:31)
#loc267 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":203:38)
#loc268 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":203:47)
#loc269 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":203:55)
#loc270 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":203:20)
#loc271 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":203:9)
#loc272 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":203:63)
#loc273 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":204:9)
#loc274 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":207:9)
#loc275 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":204:13)
#loc276 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":204:26)
#loc277 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":204:25)
#loc278 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":205:9)
#loc279 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":206:19)
#loc280 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":206:13)
#loc281 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":175:1)
#loc282 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":175:29)
#loc283 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":213:1)
#loc284 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":221:1)
#loc287 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":214:1)
#loc288 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":215:5)
#loc289 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":219:5)
#loc290 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":215:8)
#loc291 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":216:5)
#loc292 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":218:9)
#loc293 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":218:16)
#loc294 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":218:22)
#loc295 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":220:12)
#loc296 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":220:5)
#loc297 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":223:1)
#loc298 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":240:1)
#loc299 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":225:5)
#loc300 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":225:12)
#loc301 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":227:12)
#loc302 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":227:5)
#loc303 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":228:22)
#loc304 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":228:5)
#loc305 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":229:27)
#loc306 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":229:12)
#loc307 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":229:5)
#loc308 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":229:31)
#loc309 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":230:5)
#loc310 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":238:5)
#loc311 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":231:9)
#loc312 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":231:13)
#loc313 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":233:25)
#loc314 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":233:31)
#loc315 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":233:38)
#loc316 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":233:47)
#loc317 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":233:55)
#loc318 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":233:20)
#loc319 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":233:9)
#loc320 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":233:63)
#loc321 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":234:9)
#loc322 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":237:9)
#loc323 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":234:13)
#loc324 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":234:26)
#loc325 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":234:25)
#loc326 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":235:9)
#loc327 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":236:19)
#loc328 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":236:13)
#loc329 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":242:1)
#loc330 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":246:1)
#loc331 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":244:5)
#loc332 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_21.cpp":245:5)
#loc333 = loc(fused[#loc1, #loc2])
#loc334 = loc(fused[#loc3, #loc4])
#loc335 = loc(fused[#loc5, #loc6])
#loc336 = loc(fused[#loc7, #loc8])
#loc337 = loc(fused[#loc9, #loc10])
#loc338 = loc(fused[#loc11, #loc12])
#loc339 = loc(fused[#loc13, #loc14])
#loc340 = loc(fused[#loc15, #loc16])
#loc341 = loc(fused[#loc17, #loc18])
#loc342 = loc(fused[#loc19, #loc20])
#loc343 = loc(fused[#loc21, #loc22])
#loc344 = loc(fused[#loc23, #loc24])
#loc345 = loc(fused[#loc25, #loc26])
#loc347 = loc(fused[#loc30, #loc31])
#loc348 = loc(fused[#loc33, #loc31])
#loc349 = loc(fused[#loc34, #loc35])
#loc350 = loc(fused[#loc36, #loc37])
#loc351 = loc(fused[#loc38, #loc39])
#loc352 = loc(fused[#loc40, #loc41])
#loc353 = loc(fused[#loc42, #loc43])
#loc354 = loc(fused[#loc44, #loc45])
#loc355 = loc(fused[#loc46, #loc47])
#loc356 = loc(fused[#loc50, #loc51])
#loc357 = loc(fused[#loc52, #loc53])
#loc358 = loc(fused[#loc58, #loc59])
#loc359 = loc(fused[#loc60, #loc61])
#loc360 = loc(fused[#loc62, #loc63])
#loc361 = loc(fused[#loc64, #loc61])
#loc362 = loc(fused[#loc66, #loc67])
#loc363 = loc(fused[#loc69, #loc70])
#loc364 = loc(fused[#loc71, #loc72])
#loc365 = loc(fused[#loc75, #loc73])
#loc366 = loc(fused[#loc79, #loc76])
#loc367 = loc(fused[#loc83, #loc84])
#loc368 = loc(fused[#loc85, #loc86])
#loc369 = loc(fused[#loc88, #loc89])
#loc370 = loc(fused[#loc90, #loc91])
#loc371 = loc(fused[#loc92, #loc93])
#loc372 = loc(fused[#loc94, #loc86])
#loc373 = loc(fused[#loc96, #loc97])
#loc374 = loc(fused[#loc100, #loc101])
#loc375 = loc(fused[#loc102, #loc97])
#loc376 = loc(fused[#loc108, #loc109])
#loc377 = loc(fused[#loc110, #loc111])
#loc378 = loc(fused[#loc112, #loc113])
#loc379 = loc(fused[#loc114, #loc111])
#loc380 = loc(fused[#loc120, #loc121])
#loc381 = loc(fused[#loc122, #loc123])
#loc382 = loc(fused[#loc124, #loc125])
#loc383 = loc(fused[#loc124, #loc126])
#loc384 = loc(fused[#loc122, #loc127])
#loc385 = loc(fused[#loc130, #loc131])
#loc386 = loc(fused[#loc132, #loc133])
#loc387 = loc(fused[#loc134, #loc135])
#loc388 = loc(fused[#loc137, #loc138])
#loc389 = loc(fused[#loc139, #loc133])
#loc390 = loc(fused[#loc145, #loc146])
#loc391 = loc(fused[#loc144, #loc146])
#loc392 = loc(fused[#loc143, #loc146])
#loc393 = loc(fused[#loc142, #loc141])
#loc394 = loc(fused[#loc151, #loc152])
#loc395 = loc(fused[#loc153, #loc154])
#loc396 = loc(fused[#loc156, #loc154])
#loc397 = loc(fused[#loc159, #loc157])
#loc398 = loc(fused[#loc163, #loc164])
#loc399 = loc(fused[#loc165, #loc166])
#loc400 = loc(fused[#loc168, #loc166])
#loc401 = loc(fused[#loc171, #loc169])
#loc402 = loc(fused[#loc173, #loc174])
#loc403 = loc(fused[#loc175, #loc176])
#loc404 = loc(fused[#loc177, #loc174])
#loc405 = loc(fused[#loc180, #loc181])
#loc406 = loc(fused[#loc182, #loc183])
#loc407 = loc(fused[#loc184, #loc181])
#loc408 = loc(fused[#loc188, #loc187])
#loc409 = loc(fused[#loc189, #loc190])
#loc410 = loc(fused[#loc191, #loc192])
#loc411 = loc(fused[#loc193, #loc194])
#loc412 = loc(fused[#loc195, #loc196])
#loc413 = loc(fused[#loc198, #loc197])
#loc414 = loc(fused[#loc200, #loc199])
#loc415 = loc(fused[#loc203, #loc204])
#loc416 = loc(fused[#loc205, #loc206])
#loc417 = loc(fused[#loc207, #loc208])
#loc418 = loc(fused[#loc210, #loc211])
#loc419 = loc(fused[#loc212, #loc213])
#loc420 = loc(fused[#loc215, #loc216])
#loc421 = loc(fused[#loc217, #loc218])
#loc422 = loc(fused[#loc219, #loc220])
#loc423 = loc(fused[#loc222, #loc218])
#loc424 = loc(fused[#loc225, #loc226])
#loc425 = loc(fused[#loc227, #loc228])
#loc426 = loc(fused[#loc230, #loc231])
#loc427 = loc(fused[#loc233, #loc234])
#loc429 = loc(fused[#loc238, #loc239])
#loc430 = loc(fused[#loc241, #loc242, #loc243, #loc239])
#loc431 = loc(fused[#loc248, #loc247])
#loc432 = loc(fused[#loc249, #loc250])
#loc433 = loc(fused[#loc251, #loc252])
#loc434 = loc(fused[#loc254, #loc253])
#loc435 = loc(fused[#loc256, #loc255])
#loc436 = loc(fused[#loc259, #loc260])
#loc437 = loc(fused[#loc261, #loc262])
#loc438 = loc(fused[#loc263, #loc264])
#loc439 = loc(fused[#loc266, #loc267])
#loc440 = loc(fused[#loc268, #loc269])
#loc441 = loc(fused[#loc271, #loc272])
#loc442 = loc(fused[#loc273, #loc274])
#loc443 = loc(fused[#loc275, #loc276])
#loc444 = loc(fused[#loc278, #loc274])
#loc445 = loc(fused[#loc281, #loc282])
#loc446 = loc(fused[#loc283, #loc284])
#loc448 = loc(fused[#loc288, #loc289])
#loc449 = loc(fused[#loc291, #loc289])
#loc450 = loc(fused[#loc296, #loc295])
#loc451 = loc(fused[#loc297, #loc298])
#loc452 = loc(fused[#loc299, #loc300])
#loc453 = loc(fused[#loc302, #loc301])
#loc454 = loc(fused[#loc304, #loc303])
#loc455 = loc(fused[#loc307, #loc308])
#loc456 = loc(fused[#loc309, #loc310])
#loc457 = loc(fused[#loc311, #loc312])
#loc458 = loc(fused[#loc314, #loc315])
#loc459 = loc(fused[#loc316, #loc317])
#loc460 = loc(fused[#loc319, #loc320])
#loc461 = loc(fused[#loc321, #loc322])
#loc462 = loc(fused[#loc323, #loc324])
#loc463 = loc(fused[#loc326, #loc322])
#loc464 = loc(fused[#loc329, #loc330])
