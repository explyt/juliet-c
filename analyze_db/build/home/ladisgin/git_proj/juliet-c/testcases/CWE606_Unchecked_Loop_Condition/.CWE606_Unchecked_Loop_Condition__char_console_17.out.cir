!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc140 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":188:10)
#loc141 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":188:14)
#loc142 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":188:20)
#loc143 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":188:32)
#true = #cir.bool<true> : !cir.bool
#loc400 = loc(fused[#loc140, #loc141])
#loc401 = loc(fused[#loc142, #loc143])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_console_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc339)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc340)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc341)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc342)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc9)
  cir.func private @__isoc99_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc343)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc12)
  cir.func private @printIntLine(!s32i) loc(#loc344)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_console_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc346)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc347)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc348)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc349)
    %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc349)
    cir.store %4, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc349)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc24)
    cir.store %5, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc350)
    cir.scope {
      %6 = cir.const #cir.int<0> : !s32i loc(#loc28)
      cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc352)
      cir.for : cond {
        %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc30)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc31)
        %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc353)
        cir.condition(%9) loc(#loc32)
      } body {
        cir.scope {
          cir.scope {
            %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc356)
            %8 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc38)
            %9 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
            %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc38)
            cir.store %10, %7 : !u64i, !cir.ptr<!u64i> loc(#loc356)
            cir.scope {
              %11 = cir.const #cir.int<100> : !s32i loc(#loc42)
              %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc42)
              %13 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc43)
              %14 = cir.binop(sub, %12, %13) : !u64i loc(#loc358)
              %15 = cir.const #cir.int<1> : !s32i loc(#loc44)
              %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc44)
              %17 = cir.cmp(gt, %14, %16) : !u64i, !cir.bool loc(#loc359)
              cir.if %17 {
                cir.scope {
                  %18 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
                  %19 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc49)
                  %20 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %19 : !u64i), !cir.ptr<!s8i> loc(#loc50)
                  %21 = cir.const #cir.int<100> : !s32i loc(#loc51)
                  %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc51)
                  %23 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc52)
                  %24 = cir.binop(sub, %22, %23) : !u64i loc(#loc362)
                  %25 = cir.cast(integral, %24 : !u64i), !s32i loc(#loc362)
                  %26 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc341)
                  %27 = cir.load %26 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc53)
                  %28 = cir.call @fgets(%20, %25, %27) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc54)
                  %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc55)
                  %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc55)
                  %31 = cir.cmp(ne, %28, %30) : !cir.ptr<!s8i>, !cir.bool loc(#loc363)
                  cir.if %31 {
                    %32 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc59)
                    %33 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
                    %34 = cir.call @strlen(%33) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc59)
                    cir.store %34, %7 : !u64i, !cir.ptr<!u64i> loc(#loc365)
                    cir.scope {
                      %35 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc65)
                      %36 = cir.const #cir.int<0> : !s32i loc(#loc66)
                      %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc66)
                      %38 = cir.cmp(gt, %35, %37) : !u64i, !cir.bool loc(#loc367)
                      %39 = cir.ternary(%38, true {
                        %40 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
                        %41 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc69)
                        %42 = cir.const #cir.int<1> : !s32i loc(#loc70)
                        %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc70)
                        %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc368)
                        %45 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc71)
                        %46 = cir.load %45 : !cir.ptr<!s8i>, !s8i loc(#loc68)
                        %47 = cir.cast(integral, %46 : !s8i), !s32i loc(#loc68)
                        %48 = cir.const #cir.int<10> : !s32i loc(#loc72)
                        %49 = cir.cmp(eq, %47, %48) : !s32i, !cir.bool loc(#loc369)
                        %50 = cir.ternary(%49, true {
                          %51 = cir.const #true loc(#loc67)
                          cir.yield %51 : !cir.bool loc(#loc67)
                        }, false {
                          %51 = cir.const #false loc(#loc67)
                          cir.yield %51 : !cir.bool loc(#loc67)
                        }) : (!cir.bool) -> !cir.bool loc(#loc67)
                        cir.yield %50 : !cir.bool loc(#loc67)
                      }, false {
                        %40 = cir.const #false loc(#loc67)
                        cir.yield %40 : !cir.bool loc(#loc67)
                      }) : (!cir.bool) -> !cir.bool loc(#loc67)
                      cir.if %39 {
                        %40 = cir.const #cir.int<0> : !s32i loc(#loc74)
                        %41 = cir.cast(integral, %40 : !s32i), !s8i loc(#loc74)
                        %42 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
                        %43 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc76)
                        %44 = cir.const #cir.int<1> : !s32i loc(#loc77)
                        %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc77)
                        %46 = cir.binop(sub, %43, %45) : !u64i loc(#loc371)
                        %47 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %46 : !u64i), !cir.ptr<!s8i> loc(#loc78)
                        cir.store %41, %47 : !s8i, !cir.ptr<!s8i> loc(#loc372)
                      } loc(#loc370)
                    } loc(#loc366)
                  } else {
                    %32 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc9)
                    %33 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc9)
                    cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc79)
                    %34 = cir.const #cir.int<0> : !s32i loc(#loc80)
                    %35 = cir.cast(integral, %34 : !s32i), !s8i loc(#loc80)
                    %36 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
                    %37 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc82)
                    %38 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %37 : !u64i), !cir.ptr<!s8i> loc(#loc83)
                    cir.store %35, %38 : !s8i, !cir.ptr<!s8i> loc(#loc373)
                  } loc(#loc364)
                } loc(#loc361)
              } loc(#loc360)
            } loc(#loc357)
          } loc(#loc355)
        } loc(#loc354)
        cir.yield loc(#loc27)
      } step {
        %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc84)
        %8 = cir.unary(inc, %7) : !s32i, !s32i loc(#loc85)
        cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc374)
        cir.yield loc(#loc351)
      } loc(#loc351)
    } loc(#loc351)
    cir.scope {
      %6 = cir.const #cir.int<0> : !s32i loc(#loc88)
      cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc376)
      cir.for : cond {
        %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc90)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc91)
        %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc377)
        cir.condition(%9) loc(#loc92)
      } body {
        cir.scope {
          cir.scope {
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc380)
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc381)
            %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc382)
            cir.scope {
              %10 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc102)
              %11 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
              %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc12)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc12)
              %14 = cir.call @__isoc99_sscanf(%11, %13, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc102)
              %15 = cir.const #cir.int<1> : !s32i loc(#loc104)
              %16 = cir.cmp(eq, %14, %15) : !s32i, !cir.bool loc(#loc384)
              cir.if %16 {
                %17 = cir.const #cir.int<0> : !s32i loc(#loc106)
                cir.store %17, %9 : !s32i, !cir.ptr<!s32i> loc(#loc386)
                cir.scope {
                  %19 = cir.const #cir.int<0> : !s32i loc(#loc110)
                  cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc388)
                  cir.for : cond {
                    %20 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc112)
                    %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc113)
                    %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc389)
                    cir.condition(%22) loc(#loc114)
                  } body {
                    cir.scope {
                      %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc116)
                      %21 = cir.unary(inc, %20) : !s32i, !s32i loc(#loc117)
                      cir.store %21, %9 : !s32i, !cir.ptr<!s32i> loc(#loc391)
                    } loc(#loc390)
                    cir.yield loc(#loc109)
                  } step {
                    %20 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc118)
                    %21 = cir.unary(inc, %20) : !s32i, !s32i loc(#loc119)
                    cir.store %21, %7 : !s32i, !cir.ptr<!s32i> loc(#loc392)
                    cir.yield loc(#loc387)
                  } loc(#loc387)
                } loc(#loc387)
                %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc120)
                cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc121)
              } loc(#loc385)
            } loc(#loc383)
          } loc(#loc379)
        } loc(#loc378)
        cir.yield loc(#loc87)
      } step {
        %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc122)
        %8 = cir.unary(inc, %7) : !s32i, !s32i loc(#loc123)
        cir.store %8, %1 : !s32i, !cir.ptr<!s32i> loc(#loc393)
        cir.yield loc(#loc375)
      } loc(#loc375)
    } loc(#loc375)
    cir.return loc(#loc16)
  } loc(#loc345)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_console_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc395)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc126)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc396)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc128)
    cir.return loc(#loc125)
  } loc(#loc394)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc397)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc398)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc134)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc135)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc136)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc137)
  cir.func @main(%arg0: !s32i loc(fused[#loc140, #loc141]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc142, #loc143])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc400)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc401)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc139)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc144)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc144)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc145)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc146)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc146)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc147)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc134)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc134)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc148)
    %8 = cir.get_global @CWE606_Unchecked_Loop_Condition__char_console_17_good : !cir.ptr<!cir.func<!void ()>> loc(#loc402)
    cir.call @CWE606_Unchecked_Loop_Condition__char_console_17_good() : () -> () loc(#loc149)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc135)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc135)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc151)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc136)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc136)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc152)
    %13 = cir.get_global @CWE606_Unchecked_Loop_Condition__char_console_17_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc403)
    cir.call @CWE606_Unchecked_Loop_Condition__char_console_17_bad() : () -> () loc(#loc153)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc137)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc137)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc155)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc156)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc404)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc404)
    cir.return %17 : !s32i loc(#loc404)
  } loc(#loc399)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc406)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc407)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc408)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc409)
    %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc409)
    cir.store %4, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc409)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc167)
    cir.store %5, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc410)
    cir.scope {
      %6 = cir.const #cir.int<0> : !s32i loc(#loc171)
      cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc412)
      cir.for : cond {
        %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc173)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc174)
        %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc413)
        cir.condition(%9) loc(#loc175)
      } body {
        cir.scope {
          cir.scope {
            %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc416)
            %8 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc181)
            %9 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc182)
            %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc181)
            cir.store %10, %7 : !u64i, !cir.ptr<!u64i> loc(#loc416)
            cir.scope {
              %11 = cir.const #cir.int<100> : !s32i loc(#loc185)
              %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc185)
              %13 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc186)
              %14 = cir.binop(sub, %12, %13) : !u64i loc(#loc418)
              %15 = cir.const #cir.int<1> : !s32i loc(#loc187)
              %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc187)
              %17 = cir.cmp(gt, %14, %16) : !u64i, !cir.bool loc(#loc419)
              cir.if %17 {
                cir.scope {
                  %18 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc191)
                  %19 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc192)
                  %20 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %19 : !u64i), !cir.ptr<!s8i> loc(#loc193)
                  %21 = cir.const #cir.int<100> : !s32i loc(#loc194)
                  %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc194)
                  %23 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc195)
                  %24 = cir.binop(sub, %22, %23) : !u64i loc(#loc422)
                  %25 = cir.cast(integral, %24 : !u64i), !s32i loc(#loc422)
                  %26 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc341)
                  %27 = cir.load %26 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc196)
                  %28 = cir.call @fgets(%20, %25, %27) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc197)
                  %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc198)
                  %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc198)
                  %31 = cir.cmp(ne, %28, %30) : !cir.ptr<!s8i>, !cir.bool loc(#loc423)
                  cir.if %31 {
                    %32 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc202)
                    %33 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc203)
                    %34 = cir.call @strlen(%33) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc202)
                    cir.store %34, %7 : !u64i, !cir.ptr<!u64i> loc(#loc425)
                    cir.scope {
                      %35 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc208)
                      %36 = cir.const #cir.int<0> : !s32i loc(#loc209)
                      %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc209)
                      %38 = cir.cmp(gt, %35, %37) : !u64i, !cir.bool loc(#loc427)
                      %39 = cir.ternary(%38, true {
                        %40 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc211)
                        %41 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc212)
                        %42 = cir.const #cir.int<1> : !s32i loc(#loc213)
                        %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc213)
                        %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc428)
                        %45 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc214)
                        %46 = cir.load %45 : !cir.ptr<!s8i>, !s8i loc(#loc211)
                        %47 = cir.cast(integral, %46 : !s8i), !s32i loc(#loc211)
                        %48 = cir.const #cir.int<10> : !s32i loc(#loc215)
                        %49 = cir.cmp(eq, %47, %48) : !s32i, !cir.bool loc(#loc429)
                        %50 = cir.ternary(%49, true {
                          %51 = cir.const #true loc(#loc210)
                          cir.yield %51 : !cir.bool loc(#loc210)
                        }, false {
                          %51 = cir.const #false loc(#loc210)
                          cir.yield %51 : !cir.bool loc(#loc210)
                        }) : (!cir.bool) -> !cir.bool loc(#loc210)
                        cir.yield %50 : !cir.bool loc(#loc210)
                      }, false {
                        %40 = cir.const #false loc(#loc210)
                        cir.yield %40 : !cir.bool loc(#loc210)
                      }) : (!cir.bool) -> !cir.bool loc(#loc210)
                      cir.if %39 {
                        %40 = cir.const #cir.int<0> : !s32i loc(#loc217)
                        %41 = cir.cast(integral, %40 : !s32i), !s8i loc(#loc217)
                        %42 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc218)
                        %43 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc219)
                        %44 = cir.const #cir.int<1> : !s32i loc(#loc220)
                        %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc220)
                        %46 = cir.binop(sub, %43, %45) : !u64i loc(#loc431)
                        %47 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %46 : !u64i), !cir.ptr<!s8i> loc(#loc221)
                        cir.store %41, %47 : !s8i, !cir.ptr<!s8i> loc(#loc432)
                      } loc(#loc430)
                    } loc(#loc426)
                  } else {
                    %32 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc222)
                    %33 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc222)
                    cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc223)
                    %34 = cir.const #cir.int<0> : !s32i loc(#loc224)
                    %35 = cir.cast(integral, %34 : !s32i), !s8i loc(#loc224)
                    %36 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc225)
                    %37 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc226)
                    %38 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %37 : !u64i), !cir.ptr<!s8i> loc(#loc227)
                    cir.store %35, %38 : !s8i, !cir.ptr<!s8i> loc(#loc433)
                  } loc(#loc424)
                } loc(#loc421)
              } loc(#loc420)
            } loc(#loc417)
          } loc(#loc415)
        } loc(#loc414)
        cir.yield loc(#loc170)
      } step {
        %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc228)
        %8 = cir.unary(inc, %7) : !s32i, !s32i loc(#loc229)
        cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc434)
        cir.yield loc(#loc411)
      } loc(#loc411)
    } loc(#loc411)
    cir.scope {
      %6 = cir.const #cir.int<0> : !s32i loc(#loc232)
      cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc436)
      cir.for : cond {
        %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc234)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc235)
        %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc437)
        cir.condition(%9) loc(#loc236)
      } body {
        cir.scope {
          cir.scope {
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc440)
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc441)
            %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc442)
            cir.scope {
              %10 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc246)
              %11 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc247)
              %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc248)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc248)
              %14 = cir.call @__isoc99_sscanf(%11, %13, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc246)
              %15 = cir.const #cir.int<1> : !s32i loc(#loc249)
              %16 = cir.cmp(eq, %14, %15) : !s32i, !cir.bool loc(#loc444)
              cir.if %16 {
                cir.scope {
                  %17 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc253)
                  %18 = cir.const #cir.int<10000> : !s32i loc(#loc254)
                  %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc447)
                  cir.if %19 {
                    %20 = cir.const #cir.int<0> : !s32i loc(#loc256)
                    cir.store %20, %9 : !s32i, !cir.ptr<!s32i> loc(#loc449)
                    cir.scope {
                      %22 = cir.const #cir.int<0> : !s32i loc(#loc260)
                      cir.store %22, %7 : !s32i, !cir.ptr<!s32i> loc(#loc451)
                      cir.for : cond {
                        %23 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc262)
                        %24 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc263)
                        %25 = cir.cmp(lt, %23, %24) : !s32i, !cir.bool loc(#loc452)
                        cir.condition(%25) loc(#loc264)
                      } body {
                        cir.scope {
                          %23 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc266)
                          %24 = cir.unary(inc, %23) : !s32i, !s32i loc(#loc267)
                          cir.store %24, %9 : !s32i, !cir.ptr<!s32i> loc(#loc454)
                        } loc(#loc453)
                        cir.yield loc(#loc259)
                      } step {
                        %23 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc268)
                        %24 = cir.unary(inc, %23) : !s32i, !s32i loc(#loc269)
                        cir.store %24, %7 : !s32i, !cir.ptr<!s32i> loc(#loc455)
                        cir.yield loc(#loc450)
                      } loc(#loc450)
                    } loc(#loc450)
                    %21 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc270)
                    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc271)
                  } loc(#loc448)
                } loc(#loc446)
              } loc(#loc445)
            } loc(#loc443)
          } loc(#loc439)
        } loc(#loc438)
        cir.yield loc(#loc231)
      } step {
        %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc272)
        %8 = cir.unary(inc, %7) : !s32i, !s32i loc(#loc273)
        cir.store %8, %1 : !s32i, !cir.ptr<!s32i> loc(#loc456)
        cir.yield loc(#loc435)
      } loc(#loc435)
    } loc(#loc435)
    cir.return loc(#loc159)
  } loc(#loc405)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc457)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"15\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc276)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc459)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc460)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc461)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc462)
    %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc462)
    cir.store %4, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc462)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc286)
    cir.store %5, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc463)
    cir.scope {
      %6 = cir.const #cir.int<0> : !s32i loc(#loc290)
      cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc465)
      cir.for : cond {
        %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc292)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc293)
        %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc466)
        cir.condition(%9) loc(#loc294)
      } body {
        cir.scope {
          %7 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc296)
          %8 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc297)
          %9 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc276)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc276)
          %11 = cir.call @strcpy(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc296)
        } loc(#loc467)
        cir.yield loc(#loc289)
      } step {
        %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc298)
        %8 = cir.unary(inc, %7) : !s32i, !s32i loc(#loc299)
        cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc468)
        cir.yield loc(#loc464)
      } loc(#loc464)
    } loc(#loc464)
    cir.scope {
      %6 = cir.const #cir.int<0> : !s32i loc(#loc302)
      cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc470)
      cir.for : cond {
        %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc304)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc305)
        %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc471)
        cir.condition(%9) loc(#loc306)
      } body {
        cir.scope {
          cir.scope {
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc474)
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc475)
            %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc476)
            cir.scope {
              %10 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc316)
              %11 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc317)
              %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc318)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc318)
              %14 = cir.call @__isoc99_sscanf(%11, %13, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc316)
              %15 = cir.const #cir.int<1> : !s32i loc(#loc319)
              %16 = cir.cmp(eq, %14, %15) : !s32i, !cir.bool loc(#loc478)
              cir.if %16 {
                %17 = cir.const #cir.int<0> : !s32i loc(#loc321)
                cir.store %17, %9 : !s32i, !cir.ptr<!s32i> loc(#loc480)
                cir.scope {
                  %19 = cir.const #cir.int<0> : !s32i loc(#loc325)
                  cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc482)
                  cir.for : cond {
                    %20 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc327)
                    %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc328)
                    %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc483)
                    cir.condition(%22) loc(#loc329)
                  } body {
                    cir.scope {
                      %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc331)
                      %21 = cir.unary(inc, %20) : !s32i, !s32i loc(#loc332)
                      cir.store %21, %9 : !s32i, !cir.ptr<!s32i> loc(#loc485)
                    } loc(#loc484)
                    cir.yield loc(#loc324)
                  } step {
                    %20 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc333)
                    %21 = cir.unary(inc, %20) : !s32i, !s32i loc(#loc334)
                    cir.store %21, %7 : !s32i, !cir.ptr<!s32i> loc(#loc486)
                    cir.yield loc(#loc481)
                  } loc(#loc481)
                } loc(#loc481)
                %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc335)
                cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc336)
              } loc(#loc479)
            } loc(#loc477)
          } loc(#loc473)
        } loc(#loc472)
        cir.yield loc(#loc301)
      } step {
        %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc337)
        %8 = cir.unary(inc, %7) : !s32i, !s32i loc(#loc338)
        cir.store %8, %1 : !s32i, !cir.ptr<!s32i> loc(#loc487)
        cir.yield loc(#loc469)
      } loc(#loc469)
    } loc(#loc469)
    cir.return loc(#loc278)
  } loc(#loc458)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_console_17.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":55:31)
#loc10 = loc("/usr/include/stdio.h":468:1)
#loc11 = loc("/usr/include/stdio.h":468:12)
#loc12 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":66:30)
#loc13 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc14 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc15 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":28:1)
#loc16 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":79:1)
#loc17 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":30:5)
#loc18 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":30:9)
#loc19 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":30:11)
#loc20 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":31:5)
#loc21 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":31:12)
#loc22 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":32:5)
#loc23 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":32:28)
#loc24 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":33:12)
#loc25 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":33:5)
#loc26 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":34:5)
#loc27 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":61:5)
#loc28 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":34:13)
#loc29 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":34:9)
#loc30 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":34:16)
#loc31 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":34:20)
#loc32 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":34:18)
#loc33 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":35:5)
#loc34 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":36:9)
#loc35 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":60:9)
#loc36 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":38:13)
#loc37 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":38:41)
#loc38 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":38:30)
#loc39 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":38:37)
#loc40 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":40:13)
#loc41 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":59:13)
#loc42 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":40:17)
#loc43 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":40:21)
#loc44 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":40:31)
#loc45 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":41:13)
#loc46 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":43:17)
#loc47 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":58:17)
#loc48 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":43:27)
#loc49 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":43:32)
#loc50 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":43:31)
#loc51 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":43:47)
#loc52 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":43:51)
#loc53 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":43:61)
#loc54 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":43:21)
#loc55 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":43:71)
#loc56 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":44:17)
#loc57 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":52:17)
#loc58 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":54:17)
#loc59 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":47:31)
#loc60 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":47:38)
#loc61 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":47:21)
#loc62 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":47:42)
#loc63 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":48:21)
#loc64 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":51:21)
#loc65 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":48:25)
#loc66 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":48:35)
#loc67 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":48:37)
#loc68 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":48:40)
#loc69 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":48:45)
#loc70 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":48:53)
#loc71 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":48:54)
#loc72 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":48:59)
#loc73 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":49:21)
#loc74 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":50:43)
#loc75 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":50:25)
#loc76 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":50:30)
#loc77 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":50:38)
#loc78 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":50:39)
#loc79 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":55:21)
#loc80 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":57:37)
#loc81 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":57:21)
#loc82 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":57:26)
#loc83 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":57:33)
#loc84 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":34:24)
#loc85 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":34:23)
#loc86 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":62:5)
#loc87 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":78:5)
#loc88 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":62:13)
#loc89 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":62:9)
#loc90 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":62:16)
#loc91 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":62:20)
#loc92 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":62:18)
#loc93 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":63:5)
#loc94 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":64:9)
#loc95 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":77:9)
#loc96 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":65:13)
#loc97 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":65:17)
#loc98 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":65:20)
#loc99 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":65:23)
#loc100 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":66:13)
#loc101 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":76:13)
#loc102 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":66:17)
#loc103 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":66:24)
#loc104 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":66:43)
#loc105 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":67:13)
#loc106 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":69:31)
#loc107 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":69:17)
#loc108 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":70:17)
#loc109 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":74:17)
#loc110 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":70:26)
#loc111 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":70:22)
#loc112 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":70:29)
#loc113 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":70:33)
#loc114 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":70:31)
#loc115 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":71:17)
#loc116 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":73:32)
#loc117 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":73:21)
#loc118 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":70:37)
#loc119 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":70:36)
#loc120 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":75:30)
#loc121 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":75:17)
#loc122 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":62:24)
#loc123 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":62:23)
#loc124 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":173:1)
#loc125 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":177:1)
#loc126 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":175:5)
#loc127 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":175:13)
#loc128 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":176:5)
#loc129 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":176:13)
#loc130 = loc("/usr/include/stdlib.h":575:1)
#loc131 = loc("/usr/include/stdlib.h":575:41)
#loc132 = loc("/usr/include/time.h":76:1)
#loc133 = loc("/usr/include/time.h":76:38)
#loc134 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":193:15)
#loc135 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":195:15)
#loc136 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":198:15)
#loc137 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":200:15)
#loc138 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":188:1)
#loc139 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":203:1)
#loc144 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":189:1)
#loc145 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":191:27)
#loc146 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":191:22)
#loc147 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":191:5)
#loc148 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":193:5)
#loc149 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":194:5)
#loc150 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":194:59)
#loc151 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":195:5)
#loc152 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":198:5)
#loc153 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":199:5)
#loc154 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":199:58)
#loc155 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":200:5)
#loc156 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":202:12)
#loc157 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":202:5)
#loc158 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":86:1)
#loc159 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":140:1)
#loc160 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":88:5)
#loc161 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":88:9)
#loc162 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":88:11)
#loc163 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":89:5)
#loc164 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":89:12)
#loc165 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":90:5)
#loc166 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":90:28)
#loc167 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":91:12)
#loc168 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":91:5)
#loc169 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":92:5)
#loc170 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":119:5)
#loc171 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":92:13)
#loc172 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":92:9)
#loc173 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":92:16)
#loc174 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":92:20)
#loc175 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":92:18)
#loc176 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":93:5)
#loc177 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":94:9)
#loc178 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":118:9)
#loc179 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":96:13)
#loc180 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":96:41)
#loc181 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":96:30)
#loc182 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":96:37)
#loc183 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":98:13)
#loc184 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":117:13)
#loc185 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":98:17)
#loc186 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":98:21)
#loc187 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":98:31)
#loc188 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":99:13)
#loc189 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":101:17)
#loc190 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":116:17)
#loc191 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":101:27)
#loc192 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":101:32)
#loc193 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":101:31)
#loc194 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":101:47)
#loc195 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":101:51)
#loc196 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":101:61)
#loc197 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":101:21)
#loc198 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":101:71)
#loc199 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":102:17)
#loc200 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":110:17)
#loc201 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":112:17)
#loc202 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":105:31)
#loc203 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":105:38)
#loc204 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":105:21)
#loc205 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":105:42)
#loc206 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":106:21)
#loc207 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":109:21)
#loc208 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":106:25)
#loc209 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":106:35)
#loc210 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":106:37)
#loc211 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":106:40)
#loc212 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":106:45)
#loc213 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":106:53)
#loc214 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":106:54)
#loc215 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":106:59)
#loc216 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":107:21)
#loc217 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":108:43)
#loc218 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":108:25)
#loc219 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":108:30)
#loc220 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":108:38)
#loc221 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":108:39)
#loc222 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":113:31)
#loc223 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":113:21)
#loc224 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":115:37)
#loc225 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":115:21)
#loc226 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":115:26)
#loc227 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":115:33)
#loc228 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":92:24)
#loc229 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":92:23)
#loc230 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":120:5)
#loc231 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":139:5)
#loc232 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":120:13)
#loc233 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":120:9)
#loc234 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":120:16)
#loc235 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":120:20)
#loc236 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":120:18)
#loc237 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":121:5)
#loc238 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":122:9)
#loc239 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":138:9)
#loc240 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":123:13)
#loc241 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":123:17)
#loc242 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":123:20)
#loc243 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":123:23)
#loc244 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":124:13)
#loc245 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":137:13)
#loc246 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":124:17)
#loc247 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":124:24)
#loc248 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":124:30)
#loc249 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":124:43)
#loc250 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":125:13)
#loc251 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":127:17)
#loc252 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":136:17)
#loc253 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":127:21)
#loc254 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":127:25)
#loc255 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":128:17)
#loc256 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":129:35)
#loc257 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":129:21)
#loc258 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":130:21)
#loc259 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":134:21)
#loc260 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":130:30)
#loc261 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":130:26)
#loc262 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":130:33)
#loc263 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":130:37)
#loc264 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":130:35)
#loc265 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":131:21)
#loc266 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":133:36)
#loc267 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":133:25)
#loc268 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":130:41)
#loc269 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":130:40)
#loc270 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":135:34)
#loc271 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":135:21)
#loc272 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":120:24)
#loc273 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":120:23)
#loc274 = loc("/usr/include/string.h":141:1)
#loc275 = loc("/usr/include/string.h":142:14)
#loc276 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":152:22)
#loc277 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":143:1)
#loc278 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":171:1)
#loc279 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":145:5)
#loc280 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":145:9)
#loc281 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":145:11)
#loc282 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":146:5)
#loc283 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":146:12)
#loc284 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":147:5)
#loc285 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":147:28)
#loc286 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":148:12)
#loc287 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":148:5)
#loc288 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":149:5)
#loc289 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":153:5)
#loc290 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":149:13)
#loc291 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":149:9)
#loc292 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":149:16)
#loc293 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":149:20)
#loc294 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":149:18)
#loc295 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":150:5)
#loc296 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":152:9)
#loc297 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":152:16)
#loc298 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":149:24)
#loc299 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":149:23)
#loc300 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":154:5)
#loc301 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":170:5)
#loc302 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":154:13)
#loc303 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":154:9)
#loc304 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":154:16)
#loc305 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":154:20)
#loc306 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":154:18)
#loc307 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":155:5)
#loc308 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":156:9)
#loc309 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":169:9)
#loc310 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":157:13)
#loc311 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":157:17)
#loc312 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":157:20)
#loc313 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":157:23)
#loc314 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":158:13)
#loc315 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":168:13)
#loc316 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":158:17)
#loc317 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":158:24)
#loc318 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":158:30)
#loc319 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":158:43)
#loc320 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":159:13)
#loc321 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":161:31)
#loc322 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":161:17)
#loc323 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":162:17)
#loc324 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":166:17)
#loc325 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":162:26)
#loc326 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":162:22)
#loc327 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":162:29)
#loc328 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":162:33)
#loc329 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":162:31)
#loc330 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":163:17)
#loc331 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":165:32)
#loc332 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":165:21)
#loc333 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":162:37)
#loc334 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":162:36)
#loc335 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":167:30)
#loc336 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":167:17)
#loc337 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":154:24)
#loc338 = loc("CWE606_Unchecked_Loop_Condition__char_console_17.c":154:23)
#loc339 = loc(fused[#loc1, #loc2])
#loc340 = loc(fused[#loc3, #loc4])
#loc341 = loc(fused[#loc5, #loc6])
#loc342 = loc(fused[#loc7, #loc8])
#loc343 = loc(fused[#loc10, #loc11])
#loc344 = loc(fused[#loc13, #loc14])
#loc345 = loc(fused[#loc15, #loc16])
#loc346 = loc(fused[#loc17, #loc18])
#loc347 = loc(fused[#loc17, #loc19])
#loc348 = loc(fused[#loc20, #loc21])
#loc349 = loc(fused[#loc22, #loc23])
#loc350 = loc(fused[#loc25, #loc24])
#loc351 = loc(fused[#loc26, #loc27])
#loc352 = loc(fused[#loc29, #loc28])
#loc353 = loc(fused[#loc30, #loc31])
#loc354 = loc(fused[#loc33, #loc27])
#loc355 = loc(fused[#loc34, #loc35])
#loc356 = loc(fused[#loc36, #loc37])
#loc357 = loc(fused[#loc40, #loc41])
#loc358 = loc(fused[#loc42, #loc43])
#loc359 = loc(fused[#loc42, #loc44])
#loc360 = loc(fused[#loc45, #loc41])
#loc361 = loc(fused[#loc46, #loc47])
#loc362 = loc(fused[#loc51, #loc52])
#loc363 = loc(fused[#loc54, #loc55])
#loc364 = loc(fused[#loc56, #loc57, #loc58, #loc47])
#loc365 = loc(fused[#loc61, #loc62])
#loc366 = loc(fused[#loc63, #loc64])
#loc367 = loc(fused[#loc65, #loc66])
#loc368 = loc(fused[#loc69, #loc70])
#loc369 = loc(fused[#loc68, #loc72])
#loc370 = loc(fused[#loc73, #loc64])
#loc371 = loc(fused[#loc76, #loc77])
#loc372 = loc(fused[#loc75, #loc74])
#loc373 = loc(fused[#loc81, #loc80])
#loc374 = loc(fused[#loc85, #loc84])
#loc375 = loc(fused[#loc86, #loc87])
#loc376 = loc(fused[#loc89, #loc88])
#loc377 = loc(fused[#loc90, #loc91])
#loc378 = loc(fused[#loc93, #loc87])
#loc379 = loc(fused[#loc94, #loc95])
#loc380 = loc(fused[#loc96, #loc97])
#loc381 = loc(fused[#loc96, #loc98])
#loc382 = loc(fused[#loc96, #loc99])
#loc383 = loc(fused[#loc100, #loc101])
#loc384 = loc(fused[#loc102, #loc104])
#loc385 = loc(fused[#loc105, #loc101])
#loc386 = loc(fused[#loc107, #loc106])
#loc387 = loc(fused[#loc108, #loc109])
#loc388 = loc(fused[#loc111, #loc110])
#loc389 = loc(fused[#loc112, #loc113])
#loc390 = loc(fused[#loc115, #loc109])
#loc391 = loc(fused[#loc117, #loc116])
#loc392 = loc(fused[#loc119, #loc118])
#loc393 = loc(fused[#loc123, #loc122])
#loc394 = loc(fused[#loc124, #loc125])
#loc395 = loc(fused[#loc126, #loc127])
#loc396 = loc(fused[#loc128, #loc129])
#loc397 = loc(fused[#loc130, #loc131])
#loc398 = loc(fused[#loc132, #loc133])
#loc399 = loc(fused[#loc138, #loc139])
#loc402 = loc(fused[#loc149, #loc150])
#loc403 = loc(fused[#loc153, #loc154])
#loc404 = loc(fused[#loc157, #loc156])
#loc405 = loc(fused[#loc158, #loc159])
#loc406 = loc(fused[#loc160, #loc161])
#loc407 = loc(fused[#loc160, #loc162])
#loc408 = loc(fused[#loc163, #loc164])
#loc409 = loc(fused[#loc165, #loc166])
#loc410 = loc(fused[#loc168, #loc167])
#loc411 = loc(fused[#loc169, #loc170])
#loc412 = loc(fused[#loc172, #loc171])
#loc413 = loc(fused[#loc173, #loc174])
#loc414 = loc(fused[#loc176, #loc170])
#loc415 = loc(fused[#loc177, #loc178])
#loc416 = loc(fused[#loc179, #loc180])
#loc417 = loc(fused[#loc183, #loc184])
#loc418 = loc(fused[#loc185, #loc186])
#loc419 = loc(fused[#loc185, #loc187])
#loc420 = loc(fused[#loc188, #loc184])
#loc421 = loc(fused[#loc189, #loc190])
#loc422 = loc(fused[#loc194, #loc195])
#loc423 = loc(fused[#loc197, #loc198])
#loc424 = loc(fused[#loc199, #loc200, #loc201, #loc190])
#loc425 = loc(fused[#loc204, #loc205])
#loc426 = loc(fused[#loc206, #loc207])
#loc427 = loc(fused[#loc208, #loc209])
#loc428 = loc(fused[#loc212, #loc213])
#loc429 = loc(fused[#loc211, #loc215])
#loc430 = loc(fused[#loc216, #loc207])
#loc431 = loc(fused[#loc219, #loc220])
#loc432 = loc(fused[#loc218, #loc217])
#loc433 = loc(fused[#loc225, #loc224])
#loc434 = loc(fused[#loc229, #loc228])
#loc435 = loc(fused[#loc230, #loc231])
#loc436 = loc(fused[#loc233, #loc232])
#loc437 = loc(fused[#loc234, #loc235])
#loc438 = loc(fused[#loc237, #loc231])
#loc439 = loc(fused[#loc238, #loc239])
#loc440 = loc(fused[#loc240, #loc241])
#loc441 = loc(fused[#loc240, #loc242])
#loc442 = loc(fused[#loc240, #loc243])
#loc443 = loc(fused[#loc244, #loc245])
#loc444 = loc(fused[#loc246, #loc249])
#loc445 = loc(fused[#loc250, #loc245])
#loc446 = loc(fused[#loc251, #loc252])
#loc447 = loc(fused[#loc253, #loc254])
#loc448 = loc(fused[#loc255, #loc252])
#loc449 = loc(fused[#loc257, #loc256])
#loc450 = loc(fused[#loc258, #loc259])
#loc451 = loc(fused[#loc261, #loc260])
#loc452 = loc(fused[#loc262, #loc263])
#loc453 = loc(fused[#loc265, #loc259])
#loc454 = loc(fused[#loc267, #loc266])
#loc455 = loc(fused[#loc269, #loc268])
#loc456 = loc(fused[#loc273, #loc272])
#loc457 = loc(fused[#loc274, #loc275])
#loc458 = loc(fused[#loc277, #loc278])
#loc459 = loc(fused[#loc279, #loc280])
#loc460 = loc(fused[#loc279, #loc281])
#loc461 = loc(fused[#loc282, #loc283])
#loc462 = loc(fused[#loc284, #loc285])
#loc463 = loc(fused[#loc287, #loc286])
#loc464 = loc(fused[#loc288, #loc289])
#loc465 = loc(fused[#loc291, #loc290])
#loc466 = loc(fused[#loc292, #loc293])
#loc467 = loc(fused[#loc295, #loc289])
#loc468 = loc(fused[#loc299, #loc298])
#loc469 = loc(fused[#loc300, #loc301])
#loc470 = loc(fused[#loc303, #loc302])
#loc471 = loc(fused[#loc304, #loc305])
#loc472 = loc(fused[#loc307, #loc301])
#loc473 = loc(fused[#loc308, #loc309])
#loc474 = loc(fused[#loc310, #loc311])
#loc475 = loc(fused[#loc310, #loc312])
#loc476 = loc(fused[#loc310, #loc313])
#loc477 = loc(fused[#loc314, #loc315])
#loc478 = loc(fused[#loc316, #loc319])
#loc479 = loc(fused[#loc320, #loc315])
#loc480 = loc(fused[#loc322, #loc321])
#loc481 = loc(fused[#loc323, #loc324])
#loc482 = loc(fused[#loc326, #loc325])
#loc483 = loc(fused[#loc327, #loc328])
#loc484 = loc(fused[#loc330, #loc324])
#loc485 = loc(fused[#loc332, #loc331])
#loc486 = loc(fused[#loc334, #loc333])
#loc487 = loc(fused[#loc338, #loc337])
