!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":107:10)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":107:14)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":107:20)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":107:32)
#loc206 = loc(fused[#loc87, #loc88])
#loc207 = loc(fused[#loc89, #loc90])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc175)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc177)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc178)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc179)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc180)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc181)
    %5 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc182)
    %6 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc183)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc184)
    cir.store %4, %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc182)
    cir.store %4, %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc183)
    %8 = cir.const #cir.int<50> : !s32i loc(#loc20)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc20)
    %10 = cir.const #cir.int<1> : !u64i loc(#loc20)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc20)
    %12 = cir.alloca !u8i, !cir.ptr<!u8i>, %11 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc20)
    %13 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc185)
    %14 = cir.cast(bitcast, %12 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc20)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc20)
    cir.store %15, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc184)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc22)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc22)
    %18 = cir.const #cir.int<1> : !u64i loc(#loc22)
    %19 = cir.binop(mul, %17, %18) : !u64i loc(#loc22)
    %20 = cir.alloca !u8i, !cir.ptr<!u8i>, %19 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc22)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc22)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc22)
    cir.store %22, %13 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc185)
    cir.br ^bb1 loc(#loc186)
  ^bb1:  // pred: ^bb0
    %23 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc6)
    %24 = cir.load %23 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
    cir.store %24, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc177)
    %25 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
    cir.store %25, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc187)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc28)
    %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc28)
    %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc30)
    %30 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc31)
    cir.store %27, %30 : !s8i, !cir.ptr<!s8i> loc(#loc188)
    %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
    %32 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc33)
    cir.store %31, %32 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc189)
    cir.br ^bb2 loc(#loc24)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc190)
  ^bb3:  // pred: ^bb2
    %33 = cir.load deref %6 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc8)
    %34 = cir.load %33 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    cir.store %34, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc178)
    cir.br ^bb4 loc(#loc191)
  ^bb4:  // pred: ^bb3
    %35 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc40)
    %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc40)
    %37 = cir.const #cir.int<67> : !s32i loc(#loc41)
    %38 = cir.const #cir.int<100> : !s32i loc(#loc42)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc43)
    %40 = cir.binop(sub, %38, %39) nsw : !s32i loc(#loc42)
    %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc42)
    cir.libc.memset %41 bytes from %36 set to %37 : !cir.ptr<!void>, !s32i, !u64i loc(#loc192)
    %42 = cir.const #cir.int<0> : !s32i loc(#loc46)
    %43 = cir.cast(integral, %42 : !s32i), !s8i loc(#loc46)
    %44 = cir.const #cir.int<100> : !s32i loc(#loc47)
    %45 = cir.const #cir.int<1> : !s32i loc(#loc48)
    %46 = cir.binop(sub, %44, %45) nsw : !s32i loc(#loc47)
    %47 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc49)
    %48 = cir.ptr_stride(%47 : !cir.ptr<!s8i>, %46 : !s32i), !cir.ptr<!s8i> loc(#loc49)
    cir.store %43, %48 : !s8i, !cir.ptr<!s8i> loc(#loc193)
    cir.br ^bb5 loc(#loc194)
  ^bb5:  // pred: ^bb4
    %49 = cir.const #cir.int<0> : !s32i loc(#loc52)
    %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc52)
    cir.store %50, %2 : !u64i, !cir.ptr<!u64i> loc(#loc195)
    cir.br ^bb6 loc(#loc194)
  ^bb6:  // 2 preds: ^bb5, ^bb10
    %51 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc54)
    %52 = cir.const #cir.int<100> : !s32i loc(#loc55)
    %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc55)
    %54 = cir.cmp(lt, %51, %53) : !u64i, !cir.bool loc(#loc196)
    cir.brcond %54 ^bb7, ^bb11 loc(#loc56)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc197)
  ^bb8:  // pred: ^bb7
    %55 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc58)
    %56 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc59)
    %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !u64i), !cir.ptr<!s8i> loc(#loc59)
    %58 = cir.load %57 : !cir.ptr<!s8i>, !s8i loc(#loc59)
    %59 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
    %60 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc61)
    %61 = cir.ptr_stride(%59 : !cir.ptr<!s8i>, %60 : !u64i), !cir.ptr<!s8i> loc(#loc62)
    cir.store %58, %61 : !s8i, !cir.ptr<!s8i> loc(#loc198)
    cir.br ^bb9 loc(#loc51)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc51)
  ^bb10:  // pred: ^bb9
    %62 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc64)
    %63 = cir.unary(inc, %62) : !u64i, !u64i loc(#loc65)
    cir.store %63, %2 : !u64i, !cir.ptr<!u64i> loc(#loc199)
    cir.br ^bb6 loc(#loc194)
  ^bb11:  // pred: ^bb6
    cir.br ^bb12 loc(#loc51)
  ^bb12:  // pred: ^bb11
    %64 = cir.const #cir.int<0> : !s32i loc(#loc66)
    %65 = cir.cast(integral, %64 : !s32i), !s8i loc(#loc66)
    %66 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
    %67 = cir.const #cir.int<100> : !s32i loc(#loc68)
    %68 = cir.const #cir.int<1> : !s32i loc(#loc69)
    %69 = cir.binop(sub, %67, %68) nsw : !s32i loc(#loc68)
    %70 = cir.ptr_stride(%66 : !cir.ptr<!s8i>, %69 : !s32i), !cir.ptr<!s8i> loc(#loc70)
    cir.store %65, %70 : !s8i, !cir.ptr<!s8i> loc(#loc200)
    %71 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%71) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    cir.br ^bb13 loc(#loc39)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc36)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc4)
  } loc(#loc176)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc202)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc75)
    cir.return loc(#loc74)
  } loc(#loc201)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc203)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc204)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc81)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc82)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc83)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc84)
  cir.func @main(%arg0: !s32i loc(fused[#loc87, #loc88]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc89, #loc90])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc206)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc207)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc86)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc91)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc91)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc92)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc93)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc93)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc94)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc81)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc95)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32_good : !cir.ptr<!cir.func<!void ()>> loc(#loc208)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32_good() : () -> () loc(#loc96)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc82)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc82)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc83)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc83)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc99)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc209)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32_bad() : () -> () loc(#loc100)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc84)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc84)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc102)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc103)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc210)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc210)
    cir.return %17 : !s32i loc(#loc210)
  } loc(#loc205)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc212)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc213)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc214)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc215)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc216)
    %5 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc217)
    %6 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc218)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc219)
    cir.store %4, %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc217)
    cir.store %4, %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc218)
    %8 = cir.const #cir.int<50> : !s32i loc(#loc122)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc122)
    %10 = cir.const #cir.int<1> : !u64i loc(#loc122)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc122)
    %12 = cir.alloca !u8i, !cir.ptr<!u8i>, %11 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc122)
    %13 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc220)
    %14 = cir.cast(bitcast, %12 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc122)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc122)
    cir.store %15, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc219)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc124)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc124)
    %18 = cir.const #cir.int<1> : !u64i loc(#loc124)
    %19 = cir.binop(mul, %17, %18) : !u64i loc(#loc124)
    %20 = cir.alloca !u8i, !cir.ptr<!u8i>, %19 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc124)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc124)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc124)
    cir.store %22, %13 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc220)
    cir.br ^bb1 loc(#loc221)
  ^bb1:  // pred: ^bb0
    %23 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc108)
    %24 = cir.load %23 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
    cir.store %24, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc212)
    %25 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
    cir.store %25, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc222)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc130)
    %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc130)
    %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc132)
    %30 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc133)
    cir.store %27, %30 : !s8i, !cir.ptr<!s8i> loc(#loc223)
    %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc134)
    %32 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc135)
    cir.store %31, %32 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc224)
    cir.br ^bb2 loc(#loc126)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc225)
  ^bb3:  // pred: ^bb2
    %33 = cir.load deref %6 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc110)
    %34 = cir.load %33 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
    cir.store %34, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc213)
    cir.br ^bb4 loc(#loc226)
  ^bb4:  // pred: ^bb3
    %35 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc142)
    %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc142)
    %37 = cir.const #cir.int<67> : !s32i loc(#loc143)
    %38 = cir.const #cir.int<100> : !s32i loc(#loc144)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc145)
    %40 = cir.binop(sub, %38, %39) nsw : !s32i loc(#loc144)
    %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc144)
    cir.libc.memset %41 bytes from %36 set to %37 : !cir.ptr<!void>, !s32i, !u64i loc(#loc227)
    %42 = cir.const #cir.int<0> : !s32i loc(#loc148)
    %43 = cir.cast(integral, %42 : !s32i), !s8i loc(#loc148)
    %44 = cir.const #cir.int<100> : !s32i loc(#loc149)
    %45 = cir.const #cir.int<1> : !s32i loc(#loc150)
    %46 = cir.binop(sub, %44, %45) nsw : !s32i loc(#loc149)
    %47 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc151)
    %48 = cir.ptr_stride(%47 : !cir.ptr<!s8i>, %46 : !s32i), !cir.ptr<!s8i> loc(#loc151)
    cir.store %43, %48 : !s8i, !cir.ptr<!s8i> loc(#loc228)
    cir.br ^bb5 loc(#loc229)
  ^bb5:  // pred: ^bb4
    %49 = cir.const #cir.int<0> : !s32i loc(#loc154)
    %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc154)
    cir.store %50, %2 : !u64i, !cir.ptr<!u64i> loc(#loc230)
    cir.br ^bb6 loc(#loc229)
  ^bb6:  // 2 preds: ^bb5, ^bb10
    %51 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc156)
    %52 = cir.const #cir.int<100> : !s32i loc(#loc157)
    %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc157)
    %54 = cir.cmp(lt, %51, %53) : !u64i, !cir.bool loc(#loc231)
    cir.brcond %54 ^bb7, ^bb11 loc(#loc158)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc232)
  ^bb8:  // pred: ^bb7
    %55 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc160)
    %56 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc161)
    %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !u64i), !cir.ptr<!s8i> loc(#loc161)
    %58 = cir.load %57 : !cir.ptr<!s8i>, !s8i loc(#loc161)
    %59 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc162)
    %60 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc163)
    %61 = cir.ptr_stride(%59 : !cir.ptr<!s8i>, %60 : !u64i), !cir.ptr<!s8i> loc(#loc164)
    cir.store %58, %61 : !s8i, !cir.ptr<!s8i> loc(#loc233)
    cir.br ^bb9 loc(#loc153)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc153)
  ^bb10:  // pred: ^bb9
    %62 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc166)
    %63 = cir.unary(inc, %62) : !u64i, !u64i loc(#loc167)
    cir.store %63, %2 : !u64i, !cir.ptr<!u64i> loc(#loc234)
    cir.br ^bb6 loc(#loc229)
  ^bb11:  // pred: ^bb6
    cir.br ^bb12 loc(#loc153)
  ^bb12:  // pred: ^bb11
    %64 = cir.const #cir.int<0> : !s32i loc(#loc168)
    %65 = cir.cast(integral, %64 : !s32i), !s8i loc(#loc168)
    %66 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
    %67 = cir.const #cir.int<100> : !s32i loc(#loc170)
    %68 = cir.const #cir.int<1> : !s32i loc(#loc171)
    %69 = cir.binop(sub, %67, %68) nsw : !s32i loc(#loc170)
    %70 = cir.ptr_stride(%66 : !cir.ptr<!s8i>, %69 : !s32i), !cir.ptr<!s8i> loc(#loc172)
    cir.store %65, %70 : !s8i, !cir.ptr<!s8i> loc(#loc235)
    %71 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc173)
    cir.call @printLine(%71) : (!cir.ptr<!s8i>) -> () loc(#loc174)
    cir.br ^bb13 loc(#loc141)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc138)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc106)
  } loc(#loc211)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":23:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":54:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":31:9)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":31:24)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":39:9)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":39:24)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":41:13)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":41:20)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":42:13)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":42:28)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":25:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":25:12)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":26:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":26:25)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":27:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":27:25)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":28:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":28:36)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":29:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":29:37)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":30:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":37:5)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":31:23)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":34:16)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":34:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":35:19)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":35:9)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":35:14)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":35:15)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":36:21)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":36:10)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":36:9)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":38:5)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":53:5)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":39:23)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":40:9)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":52:9)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":43:20)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":43:28)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":43:33)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":43:37)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":43:13)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":43:38)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":44:29)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":44:20)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":44:24)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":44:13)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":46:13)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":49:13)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":46:22)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":46:18)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":46:25)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":46:29)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":46:27)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":47:13)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":48:34)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":48:27)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":48:17)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":48:22)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":48:23)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":48:35)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":46:35)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":46:34)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":50:27)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":50:13)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":50:18)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":50:22)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":50:23)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":51:23)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":51:13)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":93:1)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":96:1)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":95:5)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":95:13)
#loc77 = loc("/usr/include/stdlib.h":575:1)
#loc78 = loc("/usr/include/stdlib.h":575:41)
#loc79 = loc("/usr/include/time.h":76:1)
#loc80 = loc("/usr/include/time.h":76:38)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":112:15)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":114:15)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":117:15)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":119:15)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":107:1)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":122:1)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":108:1)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":110:27)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":110:22)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":110:5)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":112:5)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":113:5)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":113:73)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":114:5)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":117:5)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":118:5)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":118:72)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":119:5)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":121:12)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":121:5)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":61:1)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":91:1)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":69:9)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":69:24)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":76:9)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":76:24)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":78:13)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":78:20)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":79:13)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":79:28)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":63:5)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":63:12)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":64:5)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":64:25)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":65:5)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":65:25)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":66:5)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":66:36)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":67:5)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":67:37)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":68:5)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":74:5)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":69:23)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":71:16)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":71:9)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":72:19)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":72:9)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":72:14)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":72:15)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":73:21)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":73:10)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":73:9)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":75:5)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":90:5)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":76:23)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":77:9)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":89:9)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":80:20)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":80:28)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":80:33)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":80:37)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":80:13)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":80:38)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":81:29)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":81:20)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":81:24)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":81:13)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":83:13)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":86:13)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":83:22)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":83:18)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":83:25)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":83:29)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":83:27)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":84:13)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":85:34)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":85:27)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":85:17)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":85:22)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":85:23)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":85:35)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":83:35)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":83:34)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":87:27)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":87:13)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":87:18)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":87:22)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":87:23)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":88:23)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_32.c":88:13)
#loc175 = loc(fused[#loc1, #loc2])
#loc176 = loc(fused[#loc3, #loc4])
#loc177 = loc(fused[#loc5, #loc6])
#loc178 = loc(fused[#loc7, #loc8])
#loc179 = loc(fused[#loc9, #loc10])
#loc180 = loc(fused[#loc11, #loc12])
#loc181 = loc(fused[#loc13, #loc14])
#loc182 = loc(fused[#loc15, #loc16])
#loc183 = loc(fused[#loc17, #loc18])
#loc184 = loc(fused[#loc19, #loc20])
#loc185 = loc(fused[#loc21, #loc22])
#loc186 = loc(fused[#loc23, #loc24])
#loc187 = loc(fused[#loc27, #loc26])
#loc188 = loc(fused[#loc29, #loc28])
#loc189 = loc(fused[#loc34, #loc32])
#loc190 = loc(fused[#loc35, #loc36])
#loc191 = loc(fused[#loc38, #loc39])
#loc192 = loc(fused[#loc44, #loc45])
#loc193 = loc(fused[#loc49, #loc46])
#loc194 = loc(fused[#loc50, #loc51])
#loc195 = loc(fused[#loc53, #loc52])
#loc196 = loc(fused[#loc54, #loc55])
#loc197 = loc(fused[#loc57, #loc51])
#loc198 = loc(fused[#loc60, #loc63])
#loc199 = loc(fused[#loc65, #loc64])
#loc200 = loc(fused[#loc67, #loc66])
#loc201 = loc(fused[#loc73, #loc74])
#loc202 = loc(fused[#loc75, #loc76])
#loc203 = loc(fused[#loc77, #loc78])
#loc204 = loc(fused[#loc79, #loc80])
#loc205 = loc(fused[#loc85, #loc86])
#loc208 = loc(fused[#loc96, #loc97])
#loc209 = loc(fused[#loc100, #loc101])
#loc210 = loc(fused[#loc104, #loc103])
#loc211 = loc(fused[#loc105, #loc106])
#loc212 = loc(fused[#loc107, #loc108])
#loc213 = loc(fused[#loc109, #loc110])
#loc214 = loc(fused[#loc111, #loc112])
#loc215 = loc(fused[#loc113, #loc114])
#loc216 = loc(fused[#loc115, #loc116])
#loc217 = loc(fused[#loc117, #loc118])
#loc218 = loc(fused[#loc119, #loc120])
#loc219 = loc(fused[#loc121, #loc122])
#loc220 = loc(fused[#loc123, #loc124])
#loc221 = loc(fused[#loc125, #loc126])
#loc222 = loc(fused[#loc129, #loc128])
#loc223 = loc(fused[#loc131, #loc130])
#loc224 = loc(fused[#loc136, #loc134])
#loc225 = loc(fused[#loc137, #loc138])
#loc226 = loc(fused[#loc140, #loc141])
#loc227 = loc(fused[#loc146, #loc147])
#loc228 = loc(fused[#loc151, #loc148])
#loc229 = loc(fused[#loc152, #loc153])
#loc230 = loc(fused[#loc155, #loc154])
#loc231 = loc(fused[#loc156, #loc157])
#loc232 = loc(fused[#loc159, #loc153])
#loc233 = loc(fused[#loc162, #loc165])
#loc234 = loc(fused[#loc167, #loc166])
#loc235 = loc(fused[#loc169, #loc168])
