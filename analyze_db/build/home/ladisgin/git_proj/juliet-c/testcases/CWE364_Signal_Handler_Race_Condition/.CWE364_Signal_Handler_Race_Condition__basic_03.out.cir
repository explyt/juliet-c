!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc15 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":28:23)
#loc16 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":28:27)
#loc96 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":194:10)
#loc97 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":194:14)
#loc98 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":194:20)
#loc99 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":194:32)
#loc117 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":36:24)
#loc118 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":36:28)
!ty__structSigAtomic = !cir.struct<struct "_structSigAtomic" {!s32i} #cir.record.decl.ast>
#loc253 = loc(fused[#loc15, #loc16])
#loc287 = loc(fused[#loc96, #loc97])
#loc288 = loc(fused[#loc98, #loc99])
#loc293 = loc(fused[#loc117, #loc118])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE364_Signal_Handler_Race_Condition/CWE364_Signal_Handler_Race_Condition__basic_03.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global external dsolocal @CWE364_Signal_Handler_Race_Condition__basic_03StructSigAtomicBad = #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> {alignment = 8 : i64} loc(#loc246)
  cir.global external dsolocal @CWE364_Signal_Handler_Race_Condition__basic_03StructSigAtomicGood = #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> {alignment = 8 : i64} loc(#loc247)
  cir.func private @signal(!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc248)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc249)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc250)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc251)
  cir.func internal private @helperBad(%arg0: !s32i loc(fused[#loc15, #loc16])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["sig", init] {alignment = 4 : i64} loc(#loc253)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc17)
    cir.scope {
      %1 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_03StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc246)
      %2 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc20)
      %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc21)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc21)
      %5 = cir.cmp(ne, %2, %4) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc255)
      cir.if %5 {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc23)
        %7 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_03StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc246)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc24)
        %9 = cir.get_member %8[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
        cir.store %6, %9 : !s32i, !cir.ptr<!s32i> loc(#loc257)
      } loc(#loc256)
    } loc(#loc254)
    cir.return loc(#loc14)
  } loc(#loc252)
  cir.func no_proto @CWE364_Signal_Handler_Race_Condition__basic_03_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc30)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc31)
      %2 = cir.cmp(eq, %0, %1) : !s32i, !cir.bool loc(#loc260)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, ["gStructSigAtomic", init] {alignment = 8 : i64} loc(#loc263)
          %4 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc36)
          cir.store %4, %3 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc263)
          %5 = cir.const #cir.int<2> : !s32i loc(#loc37)
          %6 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc38)
          %7 = cir.call @signal(%5, %6) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc39)
          cir.scope {
            %21 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_03StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc246)
            %22 = cir.load %21 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc42)
            %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc43)
            %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc43)
            %25 = cir.cmp(ne, %22, %24) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc265)
            cir.if %25 {
              %26 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc45)
              %27 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_03StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc246)
              %28 = cir.load %27 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc46)
              %29 = cir.cast(bitcast, %28 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc46)
              cir.call @free(%29) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc45)
              %30 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc47)
              %31 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_03StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc246)
              cir.store %30, %31 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc267)
            } loc(#loc266)
          } loc(#loc264)
          %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc49)
          %9 = cir.const #cir.int<4> : !u64i loc(#loc268)
          %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc49)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc269)
          cir.store %11, %3 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc270)
          cir.scope {
            %21 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc56)
            %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc57)
            %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc57)
            %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc272)
            cir.if %24 {
              %25 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc59)
              %26 = cir.const #cir.int<1> : !s32i loc(#loc60)
              %27 = cir.unary(minus, %26) : !s32i, !s32i loc(#loc61)
              cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr) loc(#loc59)
            } loc(#loc273)
          } loc(#loc271)
          %12 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc62)
          %13 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_03StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc246)
          cir.store %12, %13 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc274)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc64)
          %15 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_03StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc246)
          %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc65)
          %17 = cir.get_member %16[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
          cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc275)
          %18 = cir.const #cir.int<2> : !s32i loc(#loc66)
          %19 = cir.get_global @helperBad : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc67)
          %20 = cir.call @signal(%18, %19) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc68)
          cir.scope {
            %21 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_03StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc246)
            %22 = cir.load %21 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc71)
            %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc72)
            %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc72)
            %25 = cir.cmp(ne, %22, %24) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc277)
            cir.if %25 {
              %26 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc74)
              %27 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_03StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc246)
              %28 = cir.load %27 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc75)
              %29 = cir.cast(bitcast, %28 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc75)
              cir.call @free(%29) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc74)
              %30 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc76)
              %31 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_03StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc246)
              cir.store %30, %31 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc279)
            } loc(#loc278)
          } loc(#loc276)
        } loc(#loc262)
      } loc(#loc261)
    } loc(#loc259)
    cir.return loc(#loc27)
  } loc(#loc258)
  cir.func no_proto @CWE364_Signal_Handler_Race_Condition__basic_03_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc281)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc80)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc282)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc82)
    cir.return loc(#loc79)
  } loc(#loc280)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc283)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc284)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc285)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc90)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc91)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc92)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc93)
  cir.func @main(%arg0: !s32i loc(fused[#loc96, #loc97]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc98, #loc99])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc287)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc288)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc95)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc100)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc100)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc101)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc102)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc102)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc103)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc90)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc90)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc104)
    %8 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_03_good : !cir.ptr<!cir.func<!void ()>> loc(#loc289)
    cir.call @CWE364_Signal_Handler_Race_Condition__basic_03_good() : () -> () loc(#loc105)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc91)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc91)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc107)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc92)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc92)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc108)
    %13 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_03_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc290)
    cir.call @CWE364_Signal_Handler_Race_Condition__basic_03_bad() : () -> () loc(#loc109)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc93)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc93)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc111)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc112)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc291)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc291)
    cir.return %17 : !s32i loc(#loc291)
  } loc(#loc286)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc114)
  cir.func internal private @helperGood(%arg0: !s32i loc(fused[#loc117, #loc118])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["sig", init] {alignment = 4 : i64} loc(#loc293)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc119)
    cir.scope {
      %1 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_03StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc247)
      %2 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc122)
      %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc123)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc123)
      %5 = cir.cmp(ne, %2, %4) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc295)
      cir.if %5 {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc125)
        %7 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_03StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc247)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc126)
        %9 = cir.get_member %8[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
        cir.store %6, %9 : !s32i, !cir.ptr<!s32i> loc(#loc297)
      } loc(#loc296)
    } loc(#loc294)
    cir.return loc(#loc116)
  } loc(#loc292)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc131)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc132)
      %2 = cir.cmp(ne, %0, %1) : !s32i, !cir.bool loc(#loc300)
      cir.if %2 {
        %3 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc114)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc114)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc136)
      } else {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, ["gStructSigAtomic", init] {alignment = 8 : i64} loc(#loc303)
          %4 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc140)
          cir.store %4, %3 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc303)
          %5 = cir.const #cir.int<2> : !s32i loc(#loc141)
          %6 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc142)
          %7 = cir.call @signal(%5, %6) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc143)
          cir.scope {
            %27 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_03StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc247)
            %28 = cir.load %27 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc146)
            %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc147)
            %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc147)
            %31 = cir.cmp(ne, %28, %30) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc305)
            cir.if %31 {
              %32 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc149)
              %33 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_03StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc247)
              %34 = cir.load %33 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc150)
              %35 = cir.cast(bitcast, %34 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc150)
              cir.call @free(%35) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc149)
              %36 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc151)
              %37 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_03StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc247)
              cir.store %36, %37 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc307)
            } loc(#loc306)
          } loc(#loc304)
          %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc153)
          %9 = cir.const #cir.int<4> : !u64i loc(#loc308)
          %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc153)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc309)
          cir.store %11, %3 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc310)
          cir.scope {
            %27 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc160)
            %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc161)
            %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc161)
            %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc312)
            cir.if %30 {
              %31 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc163)
              %32 = cir.const #cir.int<1> : !s32i loc(#loc164)
              %33 = cir.unary(minus, %32) : !s32i, !s32i loc(#loc165)
              cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc163)
            } loc(#loc313)
          } loc(#loc311)
          %12 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc166)
          %13 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_03StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc247)
          cir.store %12, %13 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc314)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc168)
          %15 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_03StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc247)
          %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc169)
          %17 = cir.get_member %16[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
          cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc315)
          %18 = cir.const #cir.int<2> : !s32i loc(#loc170)
          %19 = cir.get_global @helperGood : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc171)
          %20 = cir.call @signal(%18, %19) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc172)
          %21 = cir.const #cir.int<2> : !s32i loc(#loc173)
          %22 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc174)
          %23 = cir.call @signal(%21, %22) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc175)
          cir.scope {
            %27 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_03StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc247)
            %28 = cir.load %27 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc178)
            %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc179)
            %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc179)
            %31 = cir.cmp(ne, %28, %30) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc317)
            cir.if %31 {
              %32 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc181)
              %33 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_03StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc247)
              %34 = cir.load %33 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc182)
              %35 = cir.cast(bitcast, %34 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc182)
              cir.call @free(%35) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc181)
              %36 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc183)
              %37 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_03StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc247)
              cir.store %36, %37 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc319)
            } loc(#loc318)
          } loc(#loc316)
          %24 = cir.const #cir.int<2> : !s32i loc(#loc185)
          %25 = cir.get_global @helperGood : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc186)
          %26 = cir.call @signal(%24, %25) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc187)
        } loc(#loc302)
      } loc(#loc301)
    } loc(#loc299)
    cir.return loc(#loc128)
  } loc(#loc298)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc192)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc193)
      %2 = cir.cmp(eq, %0, %1) : !s32i, !cir.bool loc(#loc322)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, ["gStructSigAtomic", init] {alignment = 8 : i64} loc(#loc325)
          %4 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc198)
          cir.store %4, %3 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc325)
          %5 = cir.const #cir.int<2> : !s32i loc(#loc199)
          %6 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc200)
          %7 = cir.call @signal(%5, %6) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc201)
          cir.scope {
            %27 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_03StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc247)
            %28 = cir.load %27 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc204)
            %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc205)
            %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc205)
            %31 = cir.cmp(ne, %28, %30) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc327)
            cir.if %31 {
              %32 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc207)
              %33 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_03StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc247)
              %34 = cir.load %33 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc208)
              %35 = cir.cast(bitcast, %34 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc208)
              cir.call @free(%35) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc207)
              %36 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc209)
              %37 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_03StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc247)
              cir.store %36, %37 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc329)
            } loc(#loc328)
          } loc(#loc326)
          %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc211)
          %9 = cir.const #cir.int<4> : !u64i loc(#loc330)
          %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc211)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc331)
          cir.store %11, %3 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc332)
          cir.scope {
            %27 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc218)
            %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc219)
            %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc219)
            %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc334)
            cir.if %30 {
              %31 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc221)
              %32 = cir.const #cir.int<1> : !s32i loc(#loc222)
              %33 = cir.unary(minus, %32) : !s32i, !s32i loc(#loc223)
              cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc221)
            } loc(#loc335)
          } loc(#loc333)
          %12 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc224)
          %13 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_03StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc247)
          cir.store %12, %13 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc336)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc226)
          %15 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_03StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc247)
          %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc227)
          %17 = cir.get_member %16[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
          cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc337)
          %18 = cir.const #cir.int<2> : !s32i loc(#loc228)
          %19 = cir.get_global @helperGood : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc229)
          %20 = cir.call @signal(%18, %19) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc230)
          %21 = cir.const #cir.int<2> : !s32i loc(#loc231)
          %22 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc232)
          %23 = cir.call @signal(%21, %22) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc233)
          cir.scope {
            %27 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_03StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc247)
            %28 = cir.load %27 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc236)
            %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc237)
            %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc237)
            %31 = cir.cmp(ne, %28, %30) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc339)
            cir.if %31 {
              %32 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc239)
              %33 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_03StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc247)
              %34 = cir.load %33 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc240)
              %35 = cir.cast(bitcast, %34 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc240)
              cir.call @free(%35) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc239)
              %36 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc241)
              %37 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_03StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc247)
              cir.store %36, %37 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc341)
            } loc(#loc340)
          } loc(#loc338)
          %24 = cir.const #cir.int<2> : !s32i loc(#loc243)
          %25 = cir.get_global @helperGood : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc244)
          %26 = cir.call @signal(%24, %25) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc245)
        } loc(#loc324)
      } loc(#loc323)
    } loc(#loc321)
    cir.return loc(#loc189)
  } loc(#loc320)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE364_Signal_Handler_Race_Condition/CWE364_Signal_Handler_Race_Condition__basic_03.c":0:0)
#loc1 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":25:1)
#loc2 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":25:85)
#loc3 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":26:1)
#loc4 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":26:86)
#loc5 = loc("/usr/include/signal.h":88:1)
#loc6 = loc("/usr/include/signal.h":89:6)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("/usr/include/stdlib.h":672:1)
#loc10 = loc("/usr/include/stdlib.h":672:45)
#loc11 = loc("/usr/include/stdlib.h":756:1)
#loc12 = loc("/usr/include/stdlib.h":756:70)
#loc13 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":28:1)
#loc14 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":34:1)
#loc17 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":29:1)
#loc18 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":30:5)
#loc19 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":33:5)
#loc20 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":30:9)
#loc21 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":30:77)
#loc22 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":31:5)
#loc23 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":32:81)
#loc24 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":32:9)
#loc25 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":22:18)
#loc26 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":46:1)
#loc27 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":86:1)
#loc28 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":48:5)
#loc29 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":85:5)
#loc30 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":48:8)
#loc31 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":48:11)
#loc32 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":49:5)
#loc33 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":50:9)
#loc34 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":84:9)
#loc35 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":51:13)
#loc36 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":51:49)
#loc37 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":52:20)
#loc38 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":52:28)
#loc39 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":52:13)
#loc40 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":53:13)
#loc41 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":57:13)
#loc42 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":53:17)
#loc43 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":53:85)
#loc44 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":54:13)
#loc45 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":55:17)
#loc46 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":55:22)
#loc47 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":56:84)
#loc48 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":56:17)
#loc49 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":58:50)
#loc50 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":58:57)
#loc51 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":58:79)
#loc52 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":58:80)
#loc53 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":58:13)
#loc54 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":59:13)
#loc55 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":59:53)
#loc56 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":59:17)
#loc57 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":59:37)
#loc58 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":59:43)
#loc59 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":59:44)
#loc60 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":59:50)
#loc61 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":59:49)
#loc62 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":60:80)
#loc63 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":60:13)
#loc64 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":61:85)
#loc65 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":61:13)
#loc66 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":69:20)
#loc67 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":69:28)
#loc68 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":69:13)
#loc69 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":79:13)
#loc70 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":83:13)
#loc71 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":79:17)
#loc72 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":79:85)
#loc73 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":80:13)
#loc74 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":81:17)
#loc75 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":81:22)
#loc76 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":82:84)
#loc77 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":82:17)
#loc78 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":179:1)
#loc79 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":183:1)
#loc80 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":181:5)
#loc81 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":181:11)
#loc82 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":182:5)
#loc83 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":182:11)
#loc84 = loc("/usr/include/stdlib.h":575:1)
#loc85 = loc("/usr/include/stdlib.h":575:41)
#loc86 = loc("/usr/include/time.h":76:1)
#loc87 = loc("/usr/include/time.h":76:38)
#loc88 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc89 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc90 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":199:15)
#loc91 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":201:15)
#loc92 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":204:15)
#loc93 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":206:15)
#loc94 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":194:1)
#loc95 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":209:1)
#loc100 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":195:1)
#loc101 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":197:27)
#loc102 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":197:22)
#loc103 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":197:5)
#loc104 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":199:5)
#loc105 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":200:5)
#loc106 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":200:57)
#loc107 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":201:5)
#loc108 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":204:5)
#loc109 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":205:5)
#loc110 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":205:56)
#loc111 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":206:5)
#loc112 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":208:12)
#loc113 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":208:5)
#loc114 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":98:19)
#loc115 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":36:1)
#loc116 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":42:1)
#loc119 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":37:1)
#loc120 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":38:5)
#loc121 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":41:5)
#loc122 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":38:9)
#loc123 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":38:78)
#loc124 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":39:5)
#loc125 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":40:82)
#loc126 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":40:9)
#loc127 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":93:1)
#loc128 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":136:1)
#loc129 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":95:5)
#loc130 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":135:5)
#loc131 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":95:8)
#loc132 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":95:11)
#loc133 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":96:5)
#loc134 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":99:5)
#loc135 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":101:5)
#loc136 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":98:9)
#loc137 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":102:9)
#loc138 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":134:9)
#loc139 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":103:13)
#loc140 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":103:49)
#loc141 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":104:20)
#loc142 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":104:28)
#loc143 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":104:13)
#loc144 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":105:13)
#loc145 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":109:13)
#loc146 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":105:17)
#loc147 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":105:86)
#loc148 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":106:13)
#loc149 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":107:17)
#loc150 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":107:22)
#loc151 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":108:85)
#loc152 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":108:17)
#loc153 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":110:50)
#loc154 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":110:57)
#loc155 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":110:79)
#loc156 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":110:80)
#loc157 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":110:13)
#loc158 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":111:13)
#loc159 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":111:53)
#loc160 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":111:17)
#loc161 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":111:37)
#loc162 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":111:43)
#loc163 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":111:44)
#loc164 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":111:50)
#loc165 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":111:49)
#loc166 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":112:81)
#loc167 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":112:13)
#loc168 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":113:86)
#loc169 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":113:13)
#loc170 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":121:20)
#loc171 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":121:28)
#loc172 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":121:13)
#loc173 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":127:20)
#loc174 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":127:28)
#loc175 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":127:13)
#loc176 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":128:13)
#loc177 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":132:13)
#loc178 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":128:17)
#loc179 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":128:86)
#loc180 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":129:13)
#loc181 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":130:17)
#loc182 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":130:22)
#loc183 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":131:85)
#loc184 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":131:17)
#loc185 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":133:20)
#loc186 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":133:28)
#loc187 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":133:13)
#loc188 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":139:1)
#loc189 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":177:1)
#loc190 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":141:5)
#loc191 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":176:5)
#loc192 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":141:8)
#loc193 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":141:11)
#loc194 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":142:5)
#loc195 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":143:9)
#loc196 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":175:9)
#loc197 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":144:13)
#loc198 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":144:49)
#loc199 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":145:20)
#loc200 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":145:28)
#loc201 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":145:13)
#loc202 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":146:13)
#loc203 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":150:13)
#loc204 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":146:17)
#loc205 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":146:86)
#loc206 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":147:13)
#loc207 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":148:17)
#loc208 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":148:22)
#loc209 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":149:85)
#loc210 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":149:17)
#loc211 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":151:50)
#loc212 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":151:57)
#loc213 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":151:79)
#loc214 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":151:80)
#loc215 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":151:13)
#loc216 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":152:13)
#loc217 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":152:53)
#loc218 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":152:17)
#loc219 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":152:37)
#loc220 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":152:43)
#loc221 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":152:44)
#loc222 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":152:50)
#loc223 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":152:49)
#loc224 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":153:81)
#loc225 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":153:13)
#loc226 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":154:86)
#loc227 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":154:13)
#loc228 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":162:20)
#loc229 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":162:28)
#loc230 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":162:13)
#loc231 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":168:20)
#loc232 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":168:28)
#loc233 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":168:13)
#loc234 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":169:13)
#loc235 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":173:13)
#loc236 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":169:17)
#loc237 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":169:86)
#loc238 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":170:13)
#loc239 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":171:17)
#loc240 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":171:22)
#loc241 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":172:85)
#loc242 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":172:17)
#loc243 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":174:20)
#loc244 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":174:28)
#loc245 = loc("CWE364_Signal_Handler_Race_Condition__basic_03.c":174:13)
#loc246 = loc(fused[#loc1, #loc2])
#loc247 = loc(fused[#loc3, #loc4])
#loc248 = loc(fused[#loc5, #loc6])
#loc249 = loc(fused[#loc7, #loc8])
#loc250 = loc(fused[#loc9, #loc10])
#loc251 = loc(fused[#loc11, #loc12])
#loc252 = loc(fused[#loc13, #loc14])
#loc254 = loc(fused[#loc18, #loc19])
#loc255 = loc(fused[#loc20, #loc21])
#loc256 = loc(fused[#loc22, #loc19])
#loc257 = loc(fused[#loc24, #loc23])
#loc258 = loc(fused[#loc26, #loc27])
#loc259 = loc(fused[#loc28, #loc29])
#loc260 = loc(fused[#loc30, #loc31])
#loc261 = loc(fused[#loc32, #loc29])
#loc262 = loc(fused[#loc33, #loc34])
#loc263 = loc(fused[#loc35, #loc36])
#loc264 = loc(fused[#loc40, #loc41])
#loc265 = loc(fused[#loc42, #loc43])
#loc266 = loc(fused[#loc44, #loc41])
#loc267 = loc(fused[#loc48, #loc47])
#loc268 = loc(fused[#loc50, #loc51])
#loc269 = loc(fused[#loc49, #loc52])
#loc270 = loc(fused[#loc53, #loc52])
#loc271 = loc(fused[#loc54, #loc55])
#loc272 = loc(fused[#loc56, #loc57])
#loc273 = loc(fused[#loc58, #loc55])
#loc274 = loc(fused[#loc63, #loc62])
#loc275 = loc(fused[#loc65, #loc64])
#loc276 = loc(fused[#loc69, #loc70])
#loc277 = loc(fused[#loc71, #loc72])
#loc278 = loc(fused[#loc73, #loc70])
#loc279 = loc(fused[#loc77, #loc76])
#loc280 = loc(fused[#loc78, #loc79])
#loc281 = loc(fused[#loc80, #loc81])
#loc282 = loc(fused[#loc82, #loc83])
#loc283 = loc(fused[#loc84, #loc85])
#loc284 = loc(fused[#loc86, #loc87])
#loc285 = loc(fused[#loc88, #loc89])
#loc286 = loc(fused[#loc94, #loc95])
#loc289 = loc(fused[#loc105, #loc106])
#loc290 = loc(fused[#loc109, #loc110])
#loc291 = loc(fused[#loc113, #loc112])
#loc292 = loc(fused[#loc115, #loc116])
#loc294 = loc(fused[#loc120, #loc121])
#loc295 = loc(fused[#loc122, #loc123])
#loc296 = loc(fused[#loc124, #loc121])
#loc297 = loc(fused[#loc126, #loc125])
#loc298 = loc(fused[#loc127, #loc128])
#loc299 = loc(fused[#loc129, #loc130])
#loc300 = loc(fused[#loc131, #loc132])
#loc301 = loc(fused[#loc133, #loc134, #loc135, #loc130])
#loc302 = loc(fused[#loc137, #loc138])
#loc303 = loc(fused[#loc139, #loc140])
#loc304 = loc(fused[#loc144, #loc145])
#loc305 = loc(fused[#loc146, #loc147])
#loc306 = loc(fused[#loc148, #loc145])
#loc307 = loc(fused[#loc152, #loc151])
#loc308 = loc(fused[#loc154, #loc155])
#loc309 = loc(fused[#loc153, #loc156])
#loc310 = loc(fused[#loc157, #loc156])
#loc311 = loc(fused[#loc158, #loc159])
#loc312 = loc(fused[#loc160, #loc161])
#loc313 = loc(fused[#loc162, #loc159])
#loc314 = loc(fused[#loc167, #loc166])
#loc315 = loc(fused[#loc169, #loc168])
#loc316 = loc(fused[#loc176, #loc177])
#loc317 = loc(fused[#loc178, #loc179])
#loc318 = loc(fused[#loc180, #loc177])
#loc319 = loc(fused[#loc184, #loc183])
#loc320 = loc(fused[#loc188, #loc189])
#loc321 = loc(fused[#loc190, #loc191])
#loc322 = loc(fused[#loc192, #loc193])
#loc323 = loc(fused[#loc194, #loc191])
#loc324 = loc(fused[#loc195, #loc196])
#loc325 = loc(fused[#loc197, #loc198])
#loc326 = loc(fused[#loc202, #loc203])
#loc327 = loc(fused[#loc204, #loc205])
#loc328 = loc(fused[#loc206, #loc203])
#loc329 = loc(fused[#loc210, #loc209])
#loc330 = loc(fused[#loc212, #loc213])
#loc331 = loc(fused[#loc211, #loc214])
#loc332 = loc(fused[#loc215, #loc214])
#loc333 = loc(fused[#loc216, #loc217])
#loc334 = loc(fused[#loc218, #loc219])
#loc335 = loc(fused[#loc220, #loc217])
#loc336 = loc(fused[#loc225, #loc224])
#loc337 = loc(fused[#loc227, #loc226])
#loc338 = loc(fused[#loc234, #loc235])
#loc339 = loc(fused[#loc236, #loc237])
#loc340 = loc(fused[#loc238, #loc235])
#loc341 = loc(fused[#loc242, #loc241])
