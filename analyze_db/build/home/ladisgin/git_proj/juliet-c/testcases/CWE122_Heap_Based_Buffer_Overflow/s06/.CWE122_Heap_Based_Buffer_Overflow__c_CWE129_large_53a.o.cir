!s32i = !cir.int<s, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53b_badSink(!s32i) loc(#loc46)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc48)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc7)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc8)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc49)
    %3 = cir.const #cir.int<10> : !s32i loc(#loc10)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc50)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc12)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53b_badSink(%4) : (!s32i) -> () loc(#loc13)
    cir.return loc(#loc4)
  } loc(#loc47)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc52)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc16)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc53)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc18)
    cir.return loc(#loc15)
  } loc(#loc51)
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53b_goodG2BSink(!s32i) loc(#loc54)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc56)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc27)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc57)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc29)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc58)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc31)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53b_goodG2BSink(%4) : (!s32i) -> () loc(#loc32)
    cir.return loc(#loc23)
  } loc(#loc55)
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53b_goodB2GSink(!s32i) loc(#loc59)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc61)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc39)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc40)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc62)
    %3 = cir.const #cir.int<10> : !s32i loc(#loc42)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc63)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc44)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53b_goodB2GSink(%4) : (!s32i) -> () loc(#loc45)
    cir.return loc(#loc36)
  } loc(#loc60)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53a.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53a.c":23:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53a.c":23:76)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53a.c":25:1)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53a.c":33:1)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53a.c":27:5)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53a.c":27:9)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53a.c":29:13)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53a.c":29:12)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53a.c":29:5)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53a.c":31:12)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53a.c":31:5)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53a.c":32:67)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53a.c":32:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53a.c":66:1)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53a.c":70:1)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53a.c":68:5)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53a.c":68:13)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53a.c":69:5)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53a.c":69:13)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53a.c":40:1)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53a.c":40:80)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53a.c":42:1)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53a.c":51:1)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53a.c":44:5)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53a.c":44:9)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53a.c":46:13)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53a.c":46:12)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53a.c":46:5)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53a.c":49:12)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53a.c":49:5)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53a.c":50:71)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53a.c":50:5)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53a.c":54:1)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53a.c":54:80)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53a.c":56:1)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53a.c":64:1)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53a.c":58:5)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53a.c":58:9)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53a.c":60:13)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53a.c":60:12)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53a.c":60:5)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53a.c":62:12)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53a.c":62:5)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53a.c":63:71)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_53a.c":63:5)
#loc46 = loc(fused[#loc1, #loc2])
#loc47 = loc(fused[#loc3, #loc4])
#loc48 = loc(fused[#loc5, #loc6])
#loc49 = loc(fused[#loc9, #loc7])
#loc50 = loc(fused[#loc11, #loc10])
#loc51 = loc(fused[#loc14, #loc15])
#loc52 = loc(fused[#loc16, #loc17])
#loc53 = loc(fused[#loc18, #loc19])
#loc54 = loc(fused[#loc20, #loc21])
#loc55 = loc(fused[#loc22, #loc23])
#loc56 = loc(fused[#loc24, #loc25])
#loc57 = loc(fused[#loc28, #loc26])
#loc58 = loc(fused[#loc30, #loc29])
#loc59 = loc(fused[#loc33, #loc34])
#loc60 = loc(fused[#loc35, #loc36])
#loc61 = loc(fused[#loc37, #loc38])
#loc62 = loc(fused[#loc41, #loc39])
#loc63 = loc(fused[#loc43, #loc42])
