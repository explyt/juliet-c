!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc58 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":98:10)
#loc59 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":98:14)
#loc60 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":98:20)
#loc61 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":98:32)
#loc182 = loc(fused[#loc58, #loc59])
#loc183 = loc(fused[#loc60, #loc61])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__int_malloc_use_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrue(...) -> !s32i loc(#loc158)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc159)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc160)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc161)
  cir.func private @printIntLine(!s32i) loc(#loc162)
  cir.func no_proto @CWE758_Undefined_Behavior__int_malloc_use_11_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["pointer", init] {alignment = 8 : i64} loc(#loc164)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc165)
    cir.br ^bb1 loc(#loc166)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc167)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc167)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc19)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc19)
    cir.brcond %5 ^bb2, ^bb9 loc(#loc168)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc169)
  ^bb3:  // pred: ^bb2
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc24)
    %7 = cir.const #cir.int<4> : !u64i loc(#loc170)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc24)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc171)
    cir.store %9, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc164)
    cir.br ^bb4 loc(#loc172)
  ^bb4:  // pred: ^bb3
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc29)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc30)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc30)
    %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!s32i>, !cir.bool loc(#loc173)
    cir.brcond %13 ^bb5, ^bb6 loc(#loc174)
  ^bb5:  // pred: ^bb4
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc32)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc34)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc32)
    cir.br ^bb6 loc(#loc28)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc28)
  ^bb7:  // pred: ^bb6
    %17 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc16)
    %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc35)
    cir.store %18, %1 : !s32i, !cir.ptr<!s32i> loc(#loc165)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc36)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc36)
    cir.call @free(%20) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc37)
    %21 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc38)
    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc39)
    cir.br ^bb8 loc(#loc23)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc18)
  ^bb9:  // 2 preds: ^bb1, ^bb8
    cir.br ^bb10 loc(#loc18)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc12)
  } loc(#loc163)
  cir.func no_proto @CWE758_Undefined_Behavior__int_malloc_use_11_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc176)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc42)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc177)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc44)
    cir.return loc(#loc41)
  } loc(#loc175)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc178)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc179)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc180)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc52)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc53)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc54)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc55)
  cir.func @main(%arg0: !s32i loc(fused[#loc58, #loc59]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc60, #loc61])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc182)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc183)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc57)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc62)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc62)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc63)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc64)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc64)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc65)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc52)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %8 = cir.get_global @CWE758_Undefined_Behavior__int_malloc_use_11_good : !cir.ptr<!cir.func<!void ()>> loc(#loc184)
    cir.call @CWE758_Undefined_Behavior__int_malloc_use_11_good() : () -> () loc(#loc67)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc53)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc54)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %13 = cir.get_global @CWE758_Undefined_Behavior__int_malloc_use_11_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc185)
    cir.call @CWE758_Undefined_Behavior__int_malloc_use_11_bad() : () -> () loc(#loc71)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc55)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc74)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc186)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc186)
    cir.return %17 : !s32i loc(#loc186)
  } loc(#loc181)
  cir.func no_proto private @globalReturnsFalse(...) -> !s32i loc(#loc187)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc78)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc189)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["pointer", init] {alignment = 8 : i64} loc(#loc190)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc191)
    cir.br ^bb1 loc(#loc192)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc193)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc193)
    %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc89)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc89)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc194)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc78)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc78)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    cir.br ^bb12 loc(#loc92)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc195)
  ^bb4:  // pred: ^bb3
    %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc97)
    %10 = cir.const #cir.int<4> : !u64i loc(#loc196)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc97)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc197)
    cir.store %12, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc190)
    cir.br ^bb5 loc(#loc198)
  ^bb5:  // pred: ^bb4
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc102)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc103)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc103)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s32i>, !cir.bool loc(#loc199)
    cir.brcond %16 ^bb6, ^bb7 loc(#loc200)
  ^bb6:  // pred: ^bb5
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc105)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc106)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc107)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc105)
    cir.br ^bb7 loc(#loc101)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc101)
  ^bb8:  // pred: ^bb7
    %20 = cir.const #cir.int<5> : !s32i loc(#loc108)
    cir.store %20, %0 : !s32i, !cir.ptr<!s32i> loc(#loc201)
    %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc110)
    %22 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc111)
    cir.store %21, %22 : !s32i, !cir.ptr<!s32i> loc(#loc202)
    cir.br ^bb9 loc(#loc203)
  ^bb9:  // pred: ^bb8
    %23 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc86)
    %24 = cir.load %23 : !cir.ptr<!s32i>, !s32i loc(#loc115)
    cir.store %24, %2 : !s32i, !cir.ptr<!s32i> loc(#loc191)
    %25 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc116)
    cir.call @printIntLine(%25) : (!s32i) -> () loc(#loc117)
    cir.br ^bb10 loc(#loc114)
  ^bb10:  // pred: ^bb9
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc118)
    %27 = cir.cast(bitcast, %26 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc118)
    cir.call @free(%27) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc119)
    cir.br ^bb11 loc(#loc96)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc88)
  ^bb12:  // 2 preds: ^bb2, ^bb11
    cir.br ^bb13 loc(#loc88)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc80)
  } loc(#loc188)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc205)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["pointer", init] {alignment = 8 : i64} loc(#loc206)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc207)
    cir.br ^bb1 loc(#loc208)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc209)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc209)
    %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc130)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc130)
    cir.brcond %6 ^bb2, ^bb11 loc(#loc210)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc211)
  ^bb3:  // pred: ^bb2
    %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc135)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc212)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc135)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc213)
    cir.store %10, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc206)
    cir.br ^bb4 loc(#loc214)
  ^bb4:  // pred: ^bb3
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc140)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc141)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc141)
    %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s32i>, !cir.bool loc(#loc215)
    cir.brcond %14 ^bb5, ^bb6 loc(#loc216)
  ^bb5:  // pred: ^bb4
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc143)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc144)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc145)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc143)
    cir.br ^bb6 loc(#loc139)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc139)
  ^bb7:  // pred: ^bb6
    %18 = cir.const #cir.int<5> : !s32i loc(#loc146)
    cir.store %18, %0 : !s32i, !cir.ptr<!s32i> loc(#loc217)
    %19 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc148)
    %20 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc149)
    cir.store %19, %20 : !s32i, !cir.ptr<!s32i> loc(#loc218)
    cir.br ^bb8 loc(#loc219)
  ^bb8:  // pred: ^bb7
    %21 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc127)
    %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc153)
    cir.store %22, %2 : !s32i, !cir.ptr<!s32i> loc(#loc207)
    %23 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc154)
    cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc155)
    cir.br ^bb9 loc(#loc152)
  ^bb9:  // pred: ^bb8
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc156)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc156)
    cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc157)
    cir.br ^bb10 loc(#loc134)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc129)
  ^bb11:  // 2 preds: ^bb1, ^bb10
    cir.br ^bb12 loc(#loc129)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc121)
  } loc(#loc204)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__int_malloc_use_11.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc11 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":20:1)
#loc12 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":32:1)
#loc13 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":25:13)
#loc14 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":25:54)
#loc15 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":27:13)
#loc16 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":27:25)
#loc17 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":22:5)
#loc18 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":31:5)
#loc19 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":22:8)
#loc20 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":22:26)
#loc21 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":23:5)
#loc22 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":24:9)
#loc23 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":30:9)
#loc24 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":25:36)
#loc25 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":25:43)
#loc26 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":25:53)
#loc27 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":26:13)
#loc28 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":26:44)
#loc29 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":26:17)
#loc30 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":26:28)
#loc31 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":26:34)
#loc32 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":26:35)
#loc33 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":26:41)
#loc34 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":26:40)
#loc35 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":27:24)
#loc36 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":28:18)
#loc37 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":28:13)
#loc38 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":29:26)
#loc39 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":29:13)
#loc40 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":83:1)
#loc41 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":87:1)
#loc42 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":85:5)
#loc43 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":85:11)
#loc44 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":86:5)
#loc45 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":86:11)
#loc46 = loc("/usr/include/stdlib.h":575:1)
#loc47 = loc("/usr/include/stdlib.h":575:41)
#loc48 = loc("/usr/include/time.h":76:1)
#loc49 = loc("/usr/include/time.h":76:38)
#loc50 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc51 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc52 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":103:15)
#loc53 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":105:15)
#loc54 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":108:15)
#loc55 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":110:15)
#loc56 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":98:1)
#loc57 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":113:1)
#loc62 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":99:1)
#loc63 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":101:27)
#loc64 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":101:22)
#loc65 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":101:5)
#loc66 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":103:5)
#loc67 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":104:5)
#loc68 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":104:55)
#loc69 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":105:5)
#loc70 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":108:5)
#loc71 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":109:5)
#loc72 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":109:54)
#loc73 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":110:5)
#loc74 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":112:12)
#loc75 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":112:5)
#loc76 = loc("../../testcasesupport/std_testcase_io.h":50:1)
#loc77 = loc("../../testcasesupport/std_testcase_io.h":50:24)
#loc78 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":44:19)
#loc79 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":39:1)
#loc80 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":61:1)
#loc81 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":49:13)
#loc82 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":49:17)
#loc83 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":50:13)
#loc84 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":50:54)
#loc85 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":55:17)
#loc86 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":55:29)
#loc87 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":41:5)
#loc88 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":60:5)
#loc89 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":41:8)
#loc90 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":41:27)
#loc91 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":42:5)
#loc92 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":45:5)
#loc93 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":47:5)
#loc94 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":44:9)
#loc95 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":48:9)
#loc96 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":59:9)
#loc97 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":50:36)
#loc98 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":50:43)
#loc99 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":50:53)
#loc100 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":51:13)
#loc101 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":51:44)
#loc102 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":51:17)
#loc103 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":51:28)
#loc104 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":51:34)
#loc105 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":51:35)
#loc106 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":51:41)
#loc107 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":51:40)
#loc108 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":52:20)
#loc109 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":52:13)
#loc110 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":53:24)
#loc111 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":53:14)
#loc112 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":53:13)
#loc113 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":54:13)
#loc114 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":57:13)
#loc115 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":55:28)
#loc116 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":56:30)
#loc117 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":56:17)
#loc118 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":58:18)
#loc119 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":58:13)
#loc120 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":64:1)
#loc121 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":81:1)
#loc122 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":69:13)
#loc123 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":69:17)
#loc124 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":70:13)
#loc125 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":70:54)
#loc126 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":75:17)
#loc127 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":75:29)
#loc128 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":66:5)
#loc129 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":80:5)
#loc130 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":66:8)
#loc131 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":66:26)
#loc132 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":67:5)
#loc133 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":68:9)
#loc134 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":79:9)
#loc135 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":70:36)
#loc136 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":70:43)
#loc137 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":70:53)
#loc138 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":71:13)
#loc139 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":71:44)
#loc140 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":71:17)
#loc141 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":71:28)
#loc142 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":71:34)
#loc143 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":71:35)
#loc144 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":71:41)
#loc145 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":71:40)
#loc146 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":72:20)
#loc147 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":72:13)
#loc148 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":73:24)
#loc149 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":73:14)
#loc150 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":73:13)
#loc151 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":74:13)
#loc152 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":77:13)
#loc153 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":75:28)
#loc154 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":76:30)
#loc155 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":76:17)
#loc156 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":78:18)
#loc157 = loc("CWE758_Undefined_Behavior__int_malloc_use_11.c":78:13)
#loc158 = loc(fused[#loc1, #loc2])
#loc159 = loc(fused[#loc3, #loc4])
#loc160 = loc(fused[#loc5, #loc6])
#loc161 = loc(fused[#loc7, #loc8])
#loc162 = loc(fused[#loc9, #loc10])
#loc163 = loc(fused[#loc11, #loc12])
#loc164 = loc(fused[#loc13, #loc14])
#loc165 = loc(fused[#loc15, #loc16])
#loc166 = loc(fused[#loc17, #loc18])
#loc167 = loc(fused[#loc19, #loc20])
#loc168 = loc(fused[#loc21, #loc18])
#loc169 = loc(fused[#loc22, #loc23])
#loc170 = loc(fused[#loc25, #loc26])
#loc171 = loc(fused[#loc24, #loc14])
#loc172 = loc(fused[#loc27, #loc28])
#loc173 = loc(fused[#loc29, #loc30])
#loc174 = loc(fused[#loc31, #loc28])
#loc175 = loc(fused[#loc40, #loc41])
#loc176 = loc(fused[#loc42, #loc43])
#loc177 = loc(fused[#loc44, #loc45])
#loc178 = loc(fused[#loc46, #loc47])
#loc179 = loc(fused[#loc48, #loc49])
#loc180 = loc(fused[#loc50, #loc51])
#loc181 = loc(fused[#loc56, #loc57])
#loc184 = loc(fused[#loc67, #loc68])
#loc185 = loc(fused[#loc71, #loc72])
#loc186 = loc(fused[#loc75, #loc74])
#loc187 = loc(fused[#loc76, #loc77])
#loc188 = loc(fused[#loc79, #loc80])
#loc189 = loc(fused[#loc81, #loc82])
#loc190 = loc(fused[#loc83, #loc84])
#loc191 = loc(fused[#loc85, #loc86])
#loc192 = loc(fused[#loc87, #loc88])
#loc193 = loc(fused[#loc89, #loc90])
#loc194 = loc(fused[#loc91, #loc92, #loc93, #loc88])
#loc195 = loc(fused[#loc95, #loc96])
#loc196 = loc(fused[#loc98, #loc99])
#loc197 = loc(fused[#loc97, #loc84])
#loc198 = loc(fused[#loc100, #loc101])
#loc199 = loc(fused[#loc102, #loc103])
#loc200 = loc(fused[#loc104, #loc101])
#loc201 = loc(fused[#loc109, #loc108])
#loc202 = loc(fused[#loc112, #loc110])
#loc203 = loc(fused[#loc113, #loc114])
#loc204 = loc(fused[#loc120, #loc121])
#loc205 = loc(fused[#loc122, #loc123])
#loc206 = loc(fused[#loc124, #loc125])
#loc207 = loc(fused[#loc126, #loc127])
#loc208 = loc(fused[#loc128, #loc129])
#loc209 = loc(fused[#loc130, #loc131])
#loc210 = loc(fused[#loc132, #loc129])
#loc211 = loc(fused[#loc133, #loc134])
#loc212 = loc(fused[#loc136, #loc137])
#loc213 = loc(fused[#loc135, #loc125])
#loc214 = loc(fused[#loc138, #loc139])
#loc215 = loc(fused[#loc140, #loc141])
#loc216 = loc(fused[#loc142, #loc139])
#loc217 = loc(fused[#loc147, #loc146])
#loc218 = loc(fused[#loc150, #loc148])
#loc219 = loc(fused[#loc151, #loc152])
