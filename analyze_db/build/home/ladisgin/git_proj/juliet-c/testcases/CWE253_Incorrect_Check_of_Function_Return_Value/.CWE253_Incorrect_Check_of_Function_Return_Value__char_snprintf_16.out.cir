!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc45 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":90:10)
#loc46 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":90:14)
#loc47 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":90:20)
#loc48 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":90:32)
#loc107 = loc(fused[#loc45, #loc46])
#loc108 = loc(fused[#loc47, #loc48])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @snprintf(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc89)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\0A\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"string\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc4)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc90)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"snprintf failed!\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc7)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc92)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc93)
    cir.br ^bb1 loc(#loc94)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc94)
  ^bb2:  // pred: ^bb1
    %2 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc16)
    cir.brcond %3 ^bb3, ^bb10 loc(#loc16)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc95)
  ^bb4:  // pred: ^bb3
    %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc92)
    cir.store %4, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc92)
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc13)
    cir.store %5, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc93)
    cir.br ^bb5 loc(#loc96)
  ^bb5:  // pred: ^bb4
    %6 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc21)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc23)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc23)
    %10 = cir.const #cir.int<6> : !u64i loc(#loc97)
    %11 = cir.binop(sub, %9, %10) : !u64i loc(#loc98)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc26)
    %14 = cir.binop(sub, %11, %13) : !u64i loc(#loc99)
    %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc3)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc3)
    %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc4)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc4)
    %19 = cir.call @snprintf(%7, %14, %16, %18) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc21)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc27)
    %21 = cir.cmp(eq, %19, %20) : !s32i, !cir.bool loc(#loc100)
    cir.brcond %21 ^bb6, ^bb7 loc(#loc101)
  ^bb6:  // pred: ^bb5
    %22 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc7)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc7)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc29)
    cir.br ^bb7 loc(#loc20)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc20)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc18)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc30)
  ^bb10:  // 2 preds: ^bb2, ^bb9
    cir.br ^bb11 loc(#loc15)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc9)
  } loc(#loc91)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc103)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc33)
    cir.return loc(#loc32)
  } loc(#loc102)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc104)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc105)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc39)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc40)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc41)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc42)
  cir.func @main(%arg0: !s32i loc(fused[#loc45, #loc46]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc47, #loc48])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc107)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc108)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc44)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc49)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc49)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc50)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc51)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc51)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc52)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc39)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc39)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc53)
    %8 = cir.get_global @CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc109)
    cir.call @CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16_good() : () -> () loc(#loc54)
    %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc40)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc40)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc56)
    %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc41)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc41)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc57)
    %13 = cir.get_global @CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc110)
    cir.call @CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16_bad() : () -> () loc(#loc58)
    %14 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc42)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc61)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc111)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc111)
    cir.return %17 : !s32i loc(#loc111)
  } loc(#loc106)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc113)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc114)
    cir.br ^bb1 loc(#loc115)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc115)
  ^bb2:  // pred: ^bb1
    %2 = cir.const #cir.int<1> : !s32i loc(#loc71)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc71)
    cir.brcond %3 ^bb3, ^bb10 loc(#loc71)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc116)
  ^bb4:  // pred: ^bb3
    %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc113)
    cir.store %4, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc113)
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc68)
    cir.store %5, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc114)
    cir.br ^bb5 loc(#loc117)
  ^bb5:  // pred: ^bb4
    %6 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc76)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc78)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc78)
    %10 = cir.const #cir.int<6> : !u64i loc(#loc118)
    %11 = cir.binop(sub, %9, %10) : !u64i loc(#loc119)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc81)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc81)
    %14 = cir.binop(sub, %11, %13) : !u64i loc(#loc120)
    %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc82)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc82)
    %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc83)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc83)
    %19 = cir.call @snprintf(%7, %14, %16, %18) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc76)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc84)
    %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc121)
    cir.brcond %21 ^bb6, ^bb7 loc(#loc122)
  ^bb6:  // pred: ^bb5
    %22 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc86)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc86)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    cir.br ^bb7 loc(#loc75)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc75)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc73)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc88)
  ^bb10:  // 2 preds: ^bb2, ^bb9
    cir.br ^bb11 loc(#loc70)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc64)
  } loc(#loc112)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":0:0)
#loc1 = loc("/usr/include/stdio.h":385:1)
#loc2 = loc("/usr/include/stdio.h":387:62)
#loc3 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":43:57)
#loc4 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":43:65)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":45:27)
#loc8 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":32:1)
#loc9 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":50:1)
#loc10 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":39:13)
#loc11 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":39:36)
#loc12 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":40:13)
#loc13 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":40:27)
#loc14 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":34:5)
#loc15 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":49:5)
#loc16 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":34:11)
#loc17 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":36:9)
#loc18 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":47:9)
#loc19 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":43:13)
#loc20 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":46:13)
#loc21 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":43:17)
#loc22 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":43:26)
#loc23 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":43:31)
#loc24 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":43:35)
#loc25 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":43:52)
#loc26 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":43:54)
#loc27 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":43:80)
#loc28 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":44:13)
#loc29 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":45:17)
#loc30 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":48:9)
#loc31 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":76:1)
#loc32 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":79:1)
#loc33 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":78:5)
#loc34 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":78:11)
#loc35 = loc("/usr/include/stdlib.h":575:1)
#loc36 = loc("/usr/include/stdlib.h":575:41)
#loc37 = loc("/usr/include/time.h":76:1)
#loc38 = loc("/usr/include/time.h":76:38)
#loc39 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":95:15)
#loc40 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":97:15)
#loc41 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":100:15)
#loc42 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":102:15)
#loc43 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":90:1)
#loc44 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":105:1)
#loc49 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":91:1)
#loc50 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":93:27)
#loc51 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":93:22)
#loc52 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":93:5)
#loc53 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":95:5)
#loc54 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":96:5)
#loc55 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":96:76)
#loc56 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":97:5)
#loc57 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":100:5)
#loc58 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":101:5)
#loc59 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":101:75)
#loc60 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":102:5)
#loc61 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":104:12)
#loc62 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":104:5)
#loc63 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":57:1)
#loc64 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":74:1)
#loc65 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":64:13)
#loc66 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":64:36)
#loc67 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":65:13)
#loc68 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":65:27)
#loc69 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":59:5)
#loc70 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":73:5)
#loc71 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":59:11)
#loc72 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":61:9)
#loc73 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":71:9)
#loc74 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":67:13)
#loc75 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":70:13)
#loc76 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":67:17)
#loc77 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":67:26)
#loc78 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":67:31)
#loc79 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":67:35)
#loc80 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":67:52)
#loc81 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":67:54)
#loc82 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":67:57)
#loc83 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":67:65)
#loc84 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":67:79)
#loc85 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":68:13)
#loc86 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":69:27)
#loc87 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":69:17)
#loc88 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_snprintf_16.c":72:9)
#loc89 = loc(fused[#loc1, #loc2])
#loc90 = loc(fused[#loc5, #loc6])
#loc91 = loc(fused[#loc8, #loc9])
#loc92 = loc(fused[#loc10, #loc11])
#loc93 = loc(fused[#loc12, #loc13])
#loc94 = loc(fused[#loc14, #loc15])
#loc95 = loc(fused[#loc17, #loc18])
#loc96 = loc(fused[#loc19, #loc20])
#loc97 = loc(fused[#loc24, #loc25])
#loc98 = loc(fused[#loc23, #loc25])
#loc99 = loc(fused[#loc23, #loc26])
#loc100 = loc(fused[#loc21, #loc27])
#loc101 = loc(fused[#loc28, #loc20])
#loc102 = loc(fused[#loc31, #loc32])
#loc103 = loc(fused[#loc33, #loc34])
#loc104 = loc(fused[#loc35, #loc36])
#loc105 = loc(fused[#loc37, #loc38])
#loc106 = loc(fused[#loc43, #loc44])
#loc109 = loc(fused[#loc54, #loc55])
#loc110 = loc(fused[#loc58, #loc59])
#loc111 = loc(fused[#loc62, #loc61])
#loc112 = loc(fused[#loc63, #loc64])
#loc113 = loc(fused[#loc65, #loc66])
#loc114 = loc(fused[#loc67, #loc68])
#loc115 = loc(fused[#loc69, #loc70])
#loc116 = loc(fused[#loc72, #loc73])
#loc117 = loc(fused[#loc74, #loc75])
#loc118 = loc(fused[#loc79, #loc80])
#loc119 = loc(fused[#loc78, #loc80])
#loc120 = loc(fused[#loc78, #loc81])
#loc121 = loc(fused[#loc76, #loc84])
#loc122 = loc(fused[#loc85, #loc75])
