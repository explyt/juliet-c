!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE665_Improper_Initialization/CWE665_Improper_Initialization__char_ncat_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc117)
  cir.func private @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc118)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc119)
  cir.func no_proto @CWE665_Improper_Initialization__char_ncat_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc121)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc122)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc123)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc124)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc122)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc123)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc17)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc125)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc127)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc22)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
      cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc127)
      %8 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
      %9 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc25)
      cir.store %8, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc128)
    } loc(#loc126)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc130)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc30)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
      cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc130)
      cir.scope {
        %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc132)
        %9 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc133)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc38)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc38)
        %12 = cir.const #cir.int<67> : !s32i loc(#loc39)
        %13 = cir.const #cir.int<100> : !s32i loc(#loc40)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc41)
        %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc40)
        %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc40)
        cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc134)
        %17 = cir.const #cir.int<0> : !s32i loc(#loc44)
        %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc44)
        %19 = cir.const #cir.int<100> : !s32i loc(#loc45)
        %20 = cir.const #cir.int<1> : !s32i loc(#loc46)
        %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc45)
        %22 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc47)
        %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc47)
        cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc135)
        %24 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc48)
        %25 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc49)
        %26 = cir.call @strlen(%25) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc48)
        cir.store %26, %8 : !u64i, !cir.ptr<!u64i> loc(#loc136)
        %27 = cir.get_global @strncat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc52)
        %28 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
        %29 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc54)
        %30 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc55)
        %31 = cir.call @strncat(%28, %29, %30) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc52)
        %32 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
        cir.call @printLine(%32) : (!cir.ptr<!s8i>) -> () loc(#loc57)
      } loc(#loc131)
    } loc(#loc129)
    cir.return loc(#loc8)
  } loc(#loc120)
  cir.func no_proto @CWE665_Improper_Initialization__char_ncat_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc138)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc60)
    cir.return loc(#loc59)
  } loc(#loc137)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc140)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc141)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc142)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc143)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc141)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc142)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc72)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc144)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc146)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc77)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
      cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc146)
      %8 = cir.const #cir.int<0> : !s32i loc(#loc79)
      %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc79)
      %10 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc81)
      %12 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc82)
      cir.store %9, %12 : !s8i, !cir.ptr<!s8i> loc(#loc147)
      %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
      %14 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc84)
      cir.store %13, %14 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc148)
    } loc(#loc145)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc150)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc89)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
      cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc150)
      cir.scope {
        %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc152)
        %9 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc153)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc97)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc97)
        %12 = cir.const #cir.int<67> : !s32i loc(#loc98)
        %13 = cir.const #cir.int<100> : !s32i loc(#loc99)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc100)
        %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc99)
        %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc99)
        cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc154)
        %17 = cir.const #cir.int<0> : !s32i loc(#loc103)
        %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc103)
        %19 = cir.const #cir.int<100> : !s32i loc(#loc104)
        %20 = cir.const #cir.int<1> : !s32i loc(#loc105)
        %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc104)
        %22 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc106)
        %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc106)
        cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc155)
        %24 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc107)
        %25 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc108)
        %26 = cir.call @strlen(%25) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc107)
        cir.store %26, %8 : !u64i, !cir.ptr<!u64i> loc(#loc156)
        %27 = cir.get_global @strncat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc111)
        %28 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc112)
        %29 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc113)
        %30 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc114)
        %31 = cir.call @strncat(%28, %29, %30) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc111)
        %32 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc115)
        cir.call @printLine(%32) : (!cir.ptr<!s8i>) -> () loc(#loc116)
      } loc(#loc151)
    } loc(#loc149)
    cir.return loc(#loc63)
  } loc(#loc139)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE665_Improper_Initialization/CWE665_Improper_Initialization__char_ncat_32.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/string.h":152:1)
#loc4 = loc("/usr/include/string.h":153:29)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE665_Improper_Initialization__char_ncat_32.c":23:1)
#loc8 = loc("CWE665_Improper_Initialization__char_ncat_32.c":49:1)
#loc9 = loc("CWE665_Improper_Initialization__char_ncat_32.c":25:5)
#loc10 = loc("CWE665_Improper_Initialization__char_ncat_32.c":25:12)
#loc11 = loc("CWE665_Improper_Initialization__char_ncat_32.c":26:5)
#loc12 = loc("CWE665_Improper_Initialization__char_ncat_32.c":26:25)
#loc13 = loc("CWE665_Improper_Initialization__char_ncat_32.c":27:5)
#loc14 = loc("CWE665_Improper_Initialization__char_ncat_32.c":27:25)
#loc15 = loc("CWE665_Improper_Initialization__char_ncat_32.c":28:5)
#loc16 = loc("CWE665_Improper_Initialization__char_ncat_32.c":28:24)
#loc17 = loc("CWE665_Improper_Initialization__char_ncat_32.c":29:12)
#loc18 = loc("CWE665_Improper_Initialization__char_ncat_32.c":29:5)
#loc19 = loc("CWE665_Improper_Initialization__char_ncat_32.c":30:5)
#loc20 = loc("CWE665_Improper_Initialization__char_ncat_32.c":35:5)
#loc21 = loc("CWE665_Improper_Initialization__char_ncat_32.c":31:9)
#loc22 = loc("CWE665_Improper_Initialization__char_ncat_32.c":31:24)
#loc23 = loc("CWE665_Improper_Initialization__char_ncat_32.c":31:23)
#loc24 = loc("CWE665_Improper_Initialization__char_ncat_32.c":34:21)
#loc25 = loc("CWE665_Improper_Initialization__char_ncat_32.c":34:10)
#loc26 = loc("CWE665_Improper_Initialization__char_ncat_32.c":34:9)
#loc27 = loc("CWE665_Improper_Initialization__char_ncat_32.c":36:5)
#loc28 = loc("CWE665_Improper_Initialization__char_ncat_32.c":48:5)
#loc29 = loc("CWE665_Improper_Initialization__char_ncat_32.c":37:9)
#loc30 = loc("CWE665_Improper_Initialization__char_ncat_32.c":37:24)
#loc31 = loc("CWE665_Improper_Initialization__char_ncat_32.c":37:23)
#loc32 = loc("CWE665_Improper_Initialization__char_ncat_32.c":38:9)
#loc33 = loc("CWE665_Improper_Initialization__char_ncat_32.c":47:9)
#loc34 = loc("CWE665_Improper_Initialization__char_ncat_32.c":39:13)
#loc35 = loc("CWE665_Improper_Initialization__char_ncat_32.c":39:20)
#loc36 = loc("CWE665_Improper_Initialization__char_ncat_32.c":40:13)
#loc37 = loc("CWE665_Improper_Initialization__char_ncat_32.c":40:28)
#loc38 = loc("CWE665_Improper_Initialization__char_ncat_32.c":41:20)
#loc39 = loc("CWE665_Improper_Initialization__char_ncat_32.c":41:28)
#loc40 = loc("CWE665_Improper_Initialization__char_ncat_32.c":41:33)
#loc41 = loc("CWE665_Improper_Initialization__char_ncat_32.c":41:37)
#loc42 = loc("CWE665_Improper_Initialization__char_ncat_32.c":41:13)
#loc43 = loc("CWE665_Improper_Initialization__char_ncat_32.c":41:38)
#loc44 = loc("CWE665_Improper_Initialization__char_ncat_32.c":42:29)
#loc45 = loc("CWE665_Improper_Initialization__char_ncat_32.c":42:20)
#loc46 = loc("CWE665_Improper_Initialization__char_ncat_32.c":42:24)
#loc47 = loc("CWE665_Improper_Initialization__char_ncat_32.c":42:13)
#loc48 = loc("CWE665_Improper_Initialization__char_ncat_32.c":43:25)
#loc49 = loc("CWE665_Improper_Initialization__char_ncat_32.c":43:32)
#loc50 = loc("CWE665_Improper_Initialization__char_ncat_32.c":43:13)
#loc51 = loc("CWE665_Improper_Initialization__char_ncat_32.c":43:38)
#loc52 = loc("CWE665_Improper_Initialization__char_ncat_32.c":45:13)
#loc53 = loc("CWE665_Improper_Initialization__char_ncat_32.c":45:21)
#loc54 = loc("CWE665_Improper_Initialization__char_ncat_32.c":45:27)
#loc55 = loc("CWE665_Improper_Initialization__char_ncat_32.c":45:35)
#loc56 = loc("CWE665_Improper_Initialization__char_ncat_32.c":46:23)
#loc57 = loc("CWE665_Improper_Initialization__char_ncat_32.c":46:13)
#loc58 = loc("CWE665_Improper_Initialization__char_ncat_32.c":84:1)
#loc59 = loc("CWE665_Improper_Initialization__char_ncat_32.c":87:1)
#loc60 = loc("CWE665_Improper_Initialization__char_ncat_32.c":86:5)
#loc61 = loc("CWE665_Improper_Initialization__char_ncat_32.c":86:13)
#loc62 = loc("CWE665_Improper_Initialization__char_ncat_32.c":56:1)
#loc63 = loc("CWE665_Improper_Initialization__char_ncat_32.c":82:1)
#loc64 = loc("CWE665_Improper_Initialization__char_ncat_32.c":58:5)
#loc65 = loc("CWE665_Improper_Initialization__char_ncat_32.c":58:12)
#loc66 = loc("CWE665_Improper_Initialization__char_ncat_32.c":59:5)
#loc67 = loc("CWE665_Improper_Initialization__char_ncat_32.c":59:25)
#loc68 = loc("CWE665_Improper_Initialization__char_ncat_32.c":60:5)
#loc69 = loc("CWE665_Improper_Initialization__char_ncat_32.c":60:25)
#loc70 = loc("CWE665_Improper_Initialization__char_ncat_32.c":61:5)
#loc71 = loc("CWE665_Improper_Initialization__char_ncat_32.c":61:24)
#loc72 = loc("CWE665_Improper_Initialization__char_ncat_32.c":62:12)
#loc73 = loc("CWE665_Improper_Initialization__char_ncat_32.c":62:5)
#loc74 = loc("CWE665_Improper_Initialization__char_ncat_32.c":63:5)
#loc75 = loc("CWE665_Improper_Initialization__char_ncat_32.c":68:5)
#loc76 = loc("CWE665_Improper_Initialization__char_ncat_32.c":64:9)
#loc77 = loc("CWE665_Improper_Initialization__char_ncat_32.c":64:24)
#loc78 = loc("CWE665_Improper_Initialization__char_ncat_32.c":64:23)
#loc79 = loc("CWE665_Improper_Initialization__char_ncat_32.c":66:19)
#loc80 = loc("CWE665_Improper_Initialization__char_ncat_32.c":66:9)
#loc81 = loc("CWE665_Improper_Initialization__char_ncat_32.c":66:14)
#loc82 = loc("CWE665_Improper_Initialization__char_ncat_32.c":66:15)
#loc83 = loc("CWE665_Improper_Initialization__char_ncat_32.c":67:21)
#loc84 = loc("CWE665_Improper_Initialization__char_ncat_32.c":67:10)
#loc85 = loc("CWE665_Improper_Initialization__char_ncat_32.c":67:9)
#loc86 = loc("CWE665_Improper_Initialization__char_ncat_32.c":69:5)
#loc87 = loc("CWE665_Improper_Initialization__char_ncat_32.c":81:5)
#loc88 = loc("CWE665_Improper_Initialization__char_ncat_32.c":70:9)
#loc89 = loc("CWE665_Improper_Initialization__char_ncat_32.c":70:24)
#loc90 = loc("CWE665_Improper_Initialization__char_ncat_32.c":70:23)
#loc91 = loc("CWE665_Improper_Initialization__char_ncat_32.c":71:9)
#loc92 = loc("CWE665_Improper_Initialization__char_ncat_32.c":80:9)
#loc93 = loc("CWE665_Improper_Initialization__char_ncat_32.c":72:13)
#loc94 = loc("CWE665_Improper_Initialization__char_ncat_32.c":72:20)
#loc95 = loc("CWE665_Improper_Initialization__char_ncat_32.c":73:13)
#loc96 = loc("CWE665_Improper_Initialization__char_ncat_32.c":73:28)
#loc97 = loc("CWE665_Improper_Initialization__char_ncat_32.c":74:20)
#loc98 = loc("CWE665_Improper_Initialization__char_ncat_32.c":74:28)
#loc99 = loc("CWE665_Improper_Initialization__char_ncat_32.c":74:33)
#loc100 = loc("CWE665_Improper_Initialization__char_ncat_32.c":74:37)
#loc101 = loc("CWE665_Improper_Initialization__char_ncat_32.c":74:13)
#loc102 = loc("CWE665_Improper_Initialization__char_ncat_32.c":74:38)
#loc103 = loc("CWE665_Improper_Initialization__char_ncat_32.c":75:29)
#loc104 = loc("CWE665_Improper_Initialization__char_ncat_32.c":75:20)
#loc105 = loc("CWE665_Improper_Initialization__char_ncat_32.c":75:24)
#loc106 = loc("CWE665_Improper_Initialization__char_ncat_32.c":75:13)
#loc107 = loc("CWE665_Improper_Initialization__char_ncat_32.c":76:25)
#loc108 = loc("CWE665_Improper_Initialization__char_ncat_32.c":76:32)
#loc109 = loc("CWE665_Improper_Initialization__char_ncat_32.c":76:13)
#loc110 = loc("CWE665_Improper_Initialization__char_ncat_32.c":76:38)
#loc111 = loc("CWE665_Improper_Initialization__char_ncat_32.c":78:13)
#loc112 = loc("CWE665_Improper_Initialization__char_ncat_32.c":78:21)
#loc113 = loc("CWE665_Improper_Initialization__char_ncat_32.c":78:27)
#loc114 = loc("CWE665_Improper_Initialization__char_ncat_32.c":78:35)
#loc115 = loc("CWE665_Improper_Initialization__char_ncat_32.c":79:23)
#loc116 = loc("CWE665_Improper_Initialization__char_ncat_32.c":79:13)
#loc117 = loc(fused[#loc1, #loc2])
#loc118 = loc(fused[#loc3, #loc4])
#loc119 = loc(fused[#loc5, #loc6])
#loc120 = loc(fused[#loc7, #loc8])
#loc121 = loc(fused[#loc9, #loc10])
#loc122 = loc(fused[#loc11, #loc12])
#loc123 = loc(fused[#loc13, #loc14])
#loc124 = loc(fused[#loc15, #loc16])
#loc125 = loc(fused[#loc18, #loc17])
#loc126 = loc(fused[#loc19, #loc20])
#loc127 = loc(fused[#loc21, #loc22])
#loc128 = loc(fused[#loc26, #loc24])
#loc129 = loc(fused[#loc27, #loc28])
#loc130 = loc(fused[#loc29, #loc30])
#loc131 = loc(fused[#loc32, #loc33])
#loc132 = loc(fused[#loc34, #loc35])
#loc133 = loc(fused[#loc36, #loc37])
#loc134 = loc(fused[#loc42, #loc43])
#loc135 = loc(fused[#loc47, #loc44])
#loc136 = loc(fused[#loc50, #loc51])
#loc137 = loc(fused[#loc58, #loc59])
#loc138 = loc(fused[#loc60, #loc61])
#loc139 = loc(fused[#loc62, #loc63])
#loc140 = loc(fused[#loc64, #loc65])
#loc141 = loc(fused[#loc66, #loc67])
#loc142 = loc(fused[#loc68, #loc69])
#loc143 = loc(fused[#loc70, #loc71])
#loc144 = loc(fused[#loc73, #loc72])
#loc145 = loc(fused[#loc74, #loc75])
#loc146 = loc(fused[#loc76, #loc77])
#loc147 = loc(fused[#loc80, #loc79])
#loc148 = loc(fused[#loc85, #loc83])
#loc149 = loc(fused[#loc86, #loc87])
#loc150 = loc(fused[#loc88, #loc89])
#loc151 = loc(fused[#loc91, #loc92])
#loc152 = loc(fused[#loc93, #loc94])
#loc153 = loc(fused[#loc95, #loc96])
#loc154 = loc(fused[#loc101, #loc102])
#loc155 = loc(fused[#loc106, #loc103])
#loc156 = loc(fused[#loc109, #loc110])
