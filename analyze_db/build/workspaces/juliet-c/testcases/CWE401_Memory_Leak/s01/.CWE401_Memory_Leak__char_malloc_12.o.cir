!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc163)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc164)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc165)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc166)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"A String\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc167)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc168)
  cir.func no_proto @CWE401_Memory_Leak__char_malloc_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc170)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc18)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc171)
    cir.br ^bb1 loc(#loc172)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc173)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc173)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc22)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc22)
    cir.brcond %5 ^bb2, ^bb7 loc(#loc174)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc27)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc28)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc28)
    %9 = cir.const #cir.int<1> : !u64i loc(#loc175)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc176)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc27)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc177)
    cir.store %12, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc178)
    cir.br ^bb3 loc(#loc179)
  ^bb3:  // pred: ^bb2
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc36)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc36)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc180)
    cir.brcond %16 ^bb4, ^bb5 loc(#loc181)
  ^bb4:  // pred: ^bb3
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc38)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc39)
    %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc40)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc38)
    cir.br ^bb5 loc(#loc34)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc34)
  ^bb6:  // pred: ^bb5
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
    %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc9)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc9)
    %23 = cir.call @strcpy(%20, %22) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc42)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc44)
    cir.br ^bb8 loc(#loc25)
  ^bb7:  // pred: ^bb1
    %25 = cir.const #cir.int<100> : !s32i loc(#loc45)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc45)
    %27 = cir.const #cir.int<1> : !u64i loc(#loc45)
    %28 = cir.binop(mul, %26, %27) : !u64i loc(#loc45)
    %29 = cir.alloca !u8i, !cir.ptr<!u8i>, %28 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc45)
    %30 = cir.cast(bitcast, %29 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc45)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc45)
    cir.store %31, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc182)
    %32 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc47)
    %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
    %34 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc49)
    %35 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc49)
    %36 = cir.call @strcpy(%33, %35) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc47)
    %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc51)
    cir.br ^bb8 loc(#loc21)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc21)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc183)
  ^bb10:  // pred: ^bb9
    %38 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc184)
    %39 = cir.cast(bitcast, %38 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc184)
    %40 = cir.call %39() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc54)
    %41 = cir.cast(int_to_bool, %40 : !s32i), !cir.bool loc(#loc54)
    cir.brcond %41 ^bb11, ^bb12 loc(#loc185)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13 loc(#loc57)
  ^bb12:  // pred: ^bb10
    %42 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc59)
    %43 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc60)
    cir.call @free(%44) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc59)
    cir.br ^bb13 loc(#loc53)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc53)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc15)
  } loc(#loc169)
  cir.func no_proto @CWE401_Memory_Leak__char_malloc_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc187)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc63)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc188)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc65)
    cir.return loc(#loc62)
  } loc(#loc186)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc190)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc71)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc191)
    cir.br ^bb1 loc(#loc192)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc193)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc193)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc75)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc75)
    cir.brcond %5 ^bb2, ^bb7 loc(#loc194)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc80)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc81)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc81)
    %9 = cir.const #cir.int<1> : !u64i loc(#loc195)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc196)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc80)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc197)
    cir.store %12, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc198)
    cir.br ^bb3 loc(#loc199)
  ^bb3:  // pred: ^bb2
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc89)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc89)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc200)
    cir.brcond %16 ^bb4, ^bb5 loc(#loc201)
  ^bb4:  // pred: ^bb3
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc91)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc92)
    %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc93)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc91)
    cir.br ^bb5 loc(#loc87)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc87)
  ^bb6:  // pred: ^bb5
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
    %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc95)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc95)
    %23 = cir.call @strcpy(%20, %22) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc96)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    cir.br ^bb12 loc(#loc78)
  ^bb7:  // pred: ^bb1
    %25 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc99)
    %26 = cir.const #cir.int<100> : !s32i loc(#loc100)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc100)
    %28 = cir.const #cir.int<1> : !u64i loc(#loc202)
    %29 = cir.binop(mul, %27, %28) : !u64i loc(#loc203)
    %30 = cir.call @malloc(%29) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc99)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc204)
    cir.store %31, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc205)
    cir.br ^bb8 loc(#loc206)
  ^bb8:  // pred: ^bb7
    %32 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
    %33 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc108)
    %34 = cir.cast(bitcast, %33 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc108)
    %35 = cir.cmp(eq, %32, %34) : !cir.ptr<!s8i>, !cir.bool loc(#loc207)
    cir.brcond %35 ^bb9, ^bb10 loc(#loc208)
  ^bb9:  // pred: ^bb8
    %36 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc110)
    %37 = cir.const #cir.int<1> : !s32i loc(#loc111)
    %38 = cir.unary(minus, %37) nsw : !s32i, !s32i loc(#loc112)
    cir.call @exit(%38) : (!s32i) -> () extra(#fn_attr) loc(#loc110)
    cir.br ^bb10 loc(#loc106)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc106)
  ^bb11:  // pred: ^bb10
    %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
    %40 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc114)
    %41 = cir.cast(array_to_ptrdecay, %40 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc114)
    %42 = cir.call @strcpy(%39, %41) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc115)
    %43 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
    cir.call @printLine(%43) : (!cir.ptr<!s8i>) -> () loc(#loc117)
    cir.br ^bb12 loc(#loc74)
  ^bb12:  // 2 preds: ^bb6, ^bb11
    cir.br ^bb13 loc(#loc74)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc209)
  ^bb14:  // pred: ^bb13
    %44 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc210)
    %45 = cir.cast(bitcast, %44 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc210)
    %46 = cir.call %45() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc120)
    %47 = cir.cast(int_to_bool, %46 : !s32i), !cir.bool loc(#loc120)
    cir.brcond %47 ^bb15, ^bb16 loc(#loc211)
  ^bb15:  // pred: ^bb14
    %48 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc125)
    %49 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
    %50 = cir.cast(bitcast, %49 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc126)
    cir.call @free(%50) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc125)
    cir.br ^bb17 loc(#loc123)
  ^bb16:  // pred: ^bb14
    %51 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc127)
    %52 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
    %53 = cir.cast(bitcast, %52 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc128)
    cir.call @free(%53) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc127)
    cir.br ^bb17 loc(#loc119)
  ^bb17:  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc119)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc68)
  } loc(#loc189)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc213)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc133)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc214)
    cir.br ^bb1 loc(#loc215)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc216)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc216)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc137)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc137)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc217)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<100> : !s32i loc(#loc142)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc142)
    %8 = cir.const #cir.int<1> : !u64i loc(#loc142)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc142)
    %10 = cir.alloca !u8i, !cir.ptr<!u8i>, %9 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc142)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc142)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc142)
    cir.store %12, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc218)
    %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc144)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc145)
    %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc146)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc146)
    %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc144)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc148)
    cir.br ^bb4 loc(#loc140)
  ^bb3:  // pred: ^bb1
    %19 = cir.const #cir.int<100> : !s32i loc(#loc149)
    %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc149)
    %21 = cir.const #cir.int<1> : !u64i loc(#loc149)
    %22 = cir.binop(mul, %20, %21) : !u64i loc(#loc149)
    %23 = cir.alloca !u8i, !cir.ptr<!u8i>, %22 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc149)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc149)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc149)
    cir.store %25, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc219)
    %26 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc151)
    %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
    %28 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc153)
    %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc153)
    %30 = cir.call @strcpy(%27, %29) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc151)
    %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc155)
    cir.br ^bb4 loc(#loc136)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc136)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc220)
  ^bb6:  // pred: ^bb5
    %32 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc221)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc221)
    %34 = cir.call %33() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc158)
    %35 = cir.cast(int_to_bool, %34 : !s32i), !cir.bool loc(#loc158)
    cir.brcond %35 ^bb7, ^bb8 loc(#loc222)
  ^bb7:  // pred: ^bb6
    cir.br ^bb9 loc(#loc161)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc157)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc157)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc130)
  } loc(#loc212)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("/usr/include/string.h":141:1)
#loc8 = loc("/usr/include/string.h":142:14)
#loc9 = loc("CWE401_Memory_Leak__char_malloc_12.c":34:22)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc12 = loc("/usr/include/stdlib.h":687:1)
#loc13 = loc("/usr/include/stdlib.h":687:32)
#loc14 = loc("CWE401_Memory_Leak__char_malloc_12.c":24:1)
#loc15 = loc("CWE401_Memory_Leak__char_malloc_12.c":55:1)
#loc16 = loc("CWE401_Memory_Leak__char_malloc_12.c":26:5)
#loc17 = loc("CWE401_Memory_Leak__char_malloc_12.c":26:12)
#loc18 = loc("CWE401_Memory_Leak__char_malloc_12.c":27:12)
#loc19 = loc("CWE401_Memory_Leak__char_malloc_12.c":27:5)
#loc20 = loc("CWE401_Memory_Leak__char_malloc_12.c":28:5)
#loc21 = loc("CWE401_Memory_Leak__char_malloc_12.c":44:5)
#loc22 = loc("CWE401_Memory_Leak__char_malloc_12.c":28:8)
#loc23 = loc("CWE401_Memory_Leak__char_malloc_12.c":28:33)
#loc24 = loc("CWE401_Memory_Leak__char_malloc_12.c":29:5)
#loc25 = loc("CWE401_Memory_Leak__char_malloc_12.c":36:5)
#loc26 = loc("CWE401_Memory_Leak__char_malloc_12.c":38:5)
#loc27 = loc("CWE401_Memory_Leak__char_malloc_12.c":31:24)
#loc28 = loc("CWE401_Memory_Leak__char_malloc_12.c":31:31)
#loc29 = loc("CWE401_Memory_Leak__char_malloc_12.c":31:35)
#loc30 = loc("CWE401_Memory_Leak__char_malloc_12.c":31:46)
#loc31 = loc("CWE401_Memory_Leak__char_malloc_12.c":31:47)
#loc32 = loc("CWE401_Memory_Leak__char_malloc_12.c":31:9)
#loc33 = loc("CWE401_Memory_Leak__char_malloc_12.c":32:9)
#loc34 = loc("CWE401_Memory_Leak__char_malloc_12.c":32:37)
#loc35 = loc("CWE401_Memory_Leak__char_malloc_12.c":32:13)
#loc36 = loc("CWE401_Memory_Leak__char_malloc_12.c":32:21)
#loc37 = loc("CWE401_Memory_Leak__char_malloc_12.c":32:27)
#loc38 = loc("CWE401_Memory_Leak__char_malloc_12.c":32:28)
#loc39 = loc("CWE401_Memory_Leak__char_malloc_12.c":32:34)
#loc40 = loc("CWE401_Memory_Leak__char_malloc_12.c":32:33)
#loc41 = loc("CWE401_Memory_Leak__char_malloc_12.c":34:16)
#loc42 = loc("CWE401_Memory_Leak__char_malloc_12.c":34:9)
#loc43 = loc("CWE401_Memory_Leak__char_malloc_12.c":35:19)
#loc44 = loc("CWE401_Memory_Leak__char_malloc_12.c":35:9)
#loc45 = loc("CWE401_Memory_Leak__char_malloc_12.c":40:24)
#loc46 = loc("CWE401_Memory_Leak__char_malloc_12.c":40:9)
#loc47 = loc("CWE401_Memory_Leak__char_malloc_12.c":42:9)
#loc48 = loc("CWE401_Memory_Leak__char_malloc_12.c":42:16)
#loc49 = loc("CWE401_Memory_Leak__char_malloc_12.c":42:22)
#loc50 = loc("CWE401_Memory_Leak__char_malloc_12.c":43:19)
#loc51 = loc("CWE401_Memory_Leak__char_malloc_12.c":43:9)
#loc52 = loc("CWE401_Memory_Leak__char_malloc_12.c":45:5)
#loc53 = loc("CWE401_Memory_Leak__char_malloc_12.c":54:5)
#loc54 = loc("CWE401_Memory_Leak__char_malloc_12.c":45:8)
#loc55 = loc("CWE401_Memory_Leak__char_malloc_12.c":45:33)
#loc56 = loc("CWE401_Memory_Leak__char_malloc_12.c":46:5)
#loc57 = loc("CWE401_Memory_Leak__char_malloc_12.c":49:5)
#loc58 = loc("CWE401_Memory_Leak__char_malloc_12.c":51:5)
#loc59 = loc("CWE401_Memory_Leak__char_malloc_12.c":53:9)
#loc60 = loc("CWE401_Memory_Leak__char_malloc_12.c":53:14)
#loc61 = loc("CWE401_Memory_Leak__char_malloc_12.c":133:1)
#loc62 = loc("CWE401_Memory_Leak__char_malloc_12.c":137:1)
#loc63 = loc("CWE401_Memory_Leak__char_malloc_12.c":135:5)
#loc64 = loc("CWE401_Memory_Leak__char_malloc_12.c":135:13)
#loc65 = loc("CWE401_Memory_Leak__char_malloc_12.c":136:5)
#loc66 = loc("CWE401_Memory_Leak__char_malloc_12.c":136:13)
#loc67 = loc("CWE401_Memory_Leak__char_malloc_12.c":64:1)
#loc68 = loc("CWE401_Memory_Leak__char_malloc_12.c":96:1)
#loc69 = loc("CWE401_Memory_Leak__char_malloc_12.c":66:5)
#loc70 = loc("CWE401_Memory_Leak__char_malloc_12.c":66:12)
#loc71 = loc("CWE401_Memory_Leak__char_malloc_12.c":67:12)
#loc72 = loc("CWE401_Memory_Leak__char_malloc_12.c":67:5)
#loc73 = loc("CWE401_Memory_Leak__char_malloc_12.c":68:5)
#loc74 = loc("CWE401_Memory_Leak__char_malloc_12.c":85:5)
#loc75 = loc("CWE401_Memory_Leak__char_malloc_12.c":68:8)
#loc76 = loc("CWE401_Memory_Leak__char_malloc_12.c":68:33)
#loc77 = loc("CWE401_Memory_Leak__char_malloc_12.c":69:5)
#loc78 = loc("CWE401_Memory_Leak__char_malloc_12.c":76:5)
#loc79 = loc("CWE401_Memory_Leak__char_malloc_12.c":78:5)
#loc80 = loc("CWE401_Memory_Leak__char_malloc_12.c":71:24)
#loc81 = loc("CWE401_Memory_Leak__char_malloc_12.c":71:31)
#loc82 = loc("CWE401_Memory_Leak__char_malloc_12.c":71:35)
#loc83 = loc("CWE401_Memory_Leak__char_malloc_12.c":71:46)
#loc84 = loc("CWE401_Memory_Leak__char_malloc_12.c":71:47)
#loc85 = loc("CWE401_Memory_Leak__char_malloc_12.c":71:9)
#loc86 = loc("CWE401_Memory_Leak__char_malloc_12.c":72:9)
#loc87 = loc("CWE401_Memory_Leak__char_malloc_12.c":72:37)
#loc88 = loc("CWE401_Memory_Leak__char_malloc_12.c":72:13)
#loc89 = loc("CWE401_Memory_Leak__char_malloc_12.c":72:21)
#loc90 = loc("CWE401_Memory_Leak__char_malloc_12.c":72:27)
#loc91 = loc("CWE401_Memory_Leak__char_malloc_12.c":72:28)
#loc92 = loc("CWE401_Memory_Leak__char_malloc_12.c":72:34)
#loc93 = loc("CWE401_Memory_Leak__char_malloc_12.c":72:33)
#loc94 = loc("CWE401_Memory_Leak__char_malloc_12.c":74:16)
#loc95 = loc("CWE401_Memory_Leak__char_malloc_12.c":74:22)
#loc96 = loc("CWE401_Memory_Leak__char_malloc_12.c":74:9)
#loc97 = loc("CWE401_Memory_Leak__char_malloc_12.c":75:19)
#loc98 = loc("CWE401_Memory_Leak__char_malloc_12.c":75:9)
#loc99 = loc("CWE401_Memory_Leak__char_malloc_12.c":80:24)
#loc100 = loc("CWE401_Memory_Leak__char_malloc_12.c":80:31)
#loc101 = loc("CWE401_Memory_Leak__char_malloc_12.c":80:35)
#loc102 = loc("CWE401_Memory_Leak__char_malloc_12.c":80:46)
#loc103 = loc("CWE401_Memory_Leak__char_malloc_12.c":80:47)
#loc104 = loc("CWE401_Memory_Leak__char_malloc_12.c":80:9)
#loc105 = loc("CWE401_Memory_Leak__char_malloc_12.c":81:9)
#loc106 = loc("CWE401_Memory_Leak__char_malloc_12.c":81:37)
#loc107 = loc("CWE401_Memory_Leak__char_malloc_12.c":81:13)
#loc108 = loc("CWE401_Memory_Leak__char_malloc_12.c":81:21)
#loc109 = loc("CWE401_Memory_Leak__char_malloc_12.c":81:27)
#loc110 = loc("CWE401_Memory_Leak__char_malloc_12.c":81:28)
#loc111 = loc("CWE401_Memory_Leak__char_malloc_12.c":81:34)
#loc112 = loc("CWE401_Memory_Leak__char_malloc_12.c":81:33)
#loc113 = loc("CWE401_Memory_Leak__char_malloc_12.c":83:16)
#loc114 = loc("CWE401_Memory_Leak__char_malloc_12.c":83:22)
#loc115 = loc("CWE401_Memory_Leak__char_malloc_12.c":83:9)
#loc116 = loc("CWE401_Memory_Leak__char_malloc_12.c":84:19)
#loc117 = loc("CWE401_Memory_Leak__char_malloc_12.c":84:9)
#loc118 = loc("CWE401_Memory_Leak__char_malloc_12.c":86:5)
#loc119 = loc("CWE401_Memory_Leak__char_malloc_12.c":95:5)
#loc120 = loc("CWE401_Memory_Leak__char_malloc_12.c":86:8)
#loc121 = loc("CWE401_Memory_Leak__char_malloc_12.c":86:33)
#loc122 = loc("CWE401_Memory_Leak__char_malloc_12.c":87:5)
#loc123 = loc("CWE401_Memory_Leak__char_malloc_12.c":90:5)
#loc124 = loc("CWE401_Memory_Leak__char_malloc_12.c":92:5)
#loc125 = loc("CWE401_Memory_Leak__char_malloc_12.c":89:9)
#loc126 = loc("CWE401_Memory_Leak__char_malloc_12.c":89:14)
#loc127 = loc("CWE401_Memory_Leak__char_malloc_12.c":94:9)
#loc128 = loc("CWE401_Memory_Leak__char_malloc_12.c":94:14)
#loc129 = loc("CWE401_Memory_Leak__char_malloc_12.c":101:1)
#loc130 = loc("CWE401_Memory_Leak__char_malloc_12.c":131:1)
#loc131 = loc("CWE401_Memory_Leak__char_malloc_12.c":103:5)
#loc132 = loc("CWE401_Memory_Leak__char_malloc_12.c":103:12)
#loc133 = loc("CWE401_Memory_Leak__char_malloc_12.c":104:12)
#loc134 = loc("CWE401_Memory_Leak__char_malloc_12.c":104:5)
#loc135 = loc("CWE401_Memory_Leak__char_malloc_12.c":105:5)
#loc136 = loc("CWE401_Memory_Leak__char_malloc_12.c":120:5)
#loc137 = loc("CWE401_Memory_Leak__char_malloc_12.c":105:8)
#loc138 = loc("CWE401_Memory_Leak__char_malloc_12.c":105:33)
#loc139 = loc("CWE401_Memory_Leak__char_malloc_12.c":106:5)
#loc140 = loc("CWE401_Memory_Leak__char_malloc_12.c":112:5)
#loc141 = loc("CWE401_Memory_Leak__char_malloc_12.c":114:5)
#loc142 = loc("CWE401_Memory_Leak__char_malloc_12.c":108:24)
#loc143 = loc("CWE401_Memory_Leak__char_malloc_12.c":108:9)
#loc144 = loc("CWE401_Memory_Leak__char_malloc_12.c":110:9)
#loc145 = loc("CWE401_Memory_Leak__char_malloc_12.c":110:16)
#loc146 = loc("CWE401_Memory_Leak__char_malloc_12.c":110:22)
#loc147 = loc("CWE401_Memory_Leak__char_malloc_12.c":111:19)
#loc148 = loc("CWE401_Memory_Leak__char_malloc_12.c":111:9)
#loc149 = loc("CWE401_Memory_Leak__char_malloc_12.c":116:24)
#loc150 = loc("CWE401_Memory_Leak__char_malloc_12.c":116:9)
#loc151 = loc("CWE401_Memory_Leak__char_malloc_12.c":118:9)
#loc152 = loc("CWE401_Memory_Leak__char_malloc_12.c":118:16)
#loc153 = loc("CWE401_Memory_Leak__char_malloc_12.c":118:22)
#loc154 = loc("CWE401_Memory_Leak__char_malloc_12.c":119:19)
#loc155 = loc("CWE401_Memory_Leak__char_malloc_12.c":119:9)
#loc156 = loc("CWE401_Memory_Leak__char_malloc_12.c":121:5)
#loc157 = loc("CWE401_Memory_Leak__char_malloc_12.c":130:5)
#loc158 = loc("CWE401_Memory_Leak__char_malloc_12.c":121:8)
#loc159 = loc("CWE401_Memory_Leak__char_malloc_12.c":121:33)
#loc160 = loc("CWE401_Memory_Leak__char_malloc_12.c":122:5)
#loc161 = loc("CWE401_Memory_Leak__char_malloc_12.c":125:5)
#loc162 = loc("CWE401_Memory_Leak__char_malloc_12.c":127:5)
#loc163 = loc(fused[#loc1, #loc2])
#loc164 = loc(fused[#loc3, #loc4])
#loc165 = loc(fused[#loc5, #loc6])
#loc166 = loc(fused[#loc7, #loc8])
#loc167 = loc(fused[#loc10, #loc11])
#loc168 = loc(fused[#loc12, #loc13])
#loc169 = loc(fused[#loc14, #loc15])
#loc170 = loc(fused[#loc16, #loc17])
#loc171 = loc(fused[#loc19, #loc18])
#loc172 = loc(fused[#loc20, #loc21])
#loc173 = loc(fused[#loc22, #loc23])
#loc174 = loc(fused[#loc24, #loc25, #loc26, #loc21])
#loc175 = loc(fused[#loc29, #loc30])
#loc176 = loc(fused[#loc28, #loc30])
#loc177 = loc(fused[#loc27, #loc31])
#loc178 = loc(fused[#loc32, #loc31])
#loc179 = loc(fused[#loc33, #loc34])
#loc180 = loc(fused[#loc35, #loc36])
#loc181 = loc(fused[#loc37, #loc34])
#loc182 = loc(fused[#loc46, #loc45])
#loc183 = loc(fused[#loc52, #loc53])
#loc184 = loc(fused[#loc54, #loc55])
#loc185 = loc(fused[#loc56, #loc57, #loc58, #loc53])
#loc186 = loc(fused[#loc61, #loc62])
#loc187 = loc(fused[#loc63, #loc64])
#loc188 = loc(fused[#loc65, #loc66])
#loc189 = loc(fused[#loc67, #loc68])
#loc190 = loc(fused[#loc69, #loc70])
#loc191 = loc(fused[#loc72, #loc71])
#loc192 = loc(fused[#loc73, #loc74])
#loc193 = loc(fused[#loc75, #loc76])
#loc194 = loc(fused[#loc77, #loc78, #loc79, #loc74])
#loc195 = loc(fused[#loc82, #loc83])
#loc196 = loc(fused[#loc81, #loc83])
#loc197 = loc(fused[#loc80, #loc84])
#loc198 = loc(fused[#loc85, #loc84])
#loc199 = loc(fused[#loc86, #loc87])
#loc200 = loc(fused[#loc88, #loc89])
#loc201 = loc(fused[#loc90, #loc87])
#loc202 = loc(fused[#loc101, #loc102])
#loc203 = loc(fused[#loc100, #loc102])
#loc204 = loc(fused[#loc99, #loc103])
#loc205 = loc(fused[#loc104, #loc103])
#loc206 = loc(fused[#loc105, #loc106])
#loc207 = loc(fused[#loc107, #loc108])
#loc208 = loc(fused[#loc109, #loc106])
#loc209 = loc(fused[#loc118, #loc119])
#loc210 = loc(fused[#loc120, #loc121])
#loc211 = loc(fused[#loc122, #loc123, #loc124, #loc119])
#loc212 = loc(fused[#loc129, #loc130])
#loc213 = loc(fused[#loc131, #loc132])
#loc214 = loc(fused[#loc134, #loc133])
#loc215 = loc(fused[#loc135, #loc136])
#loc216 = loc(fused[#loc137, #loc138])
#loc217 = loc(fused[#loc139, #loc140, #loc141, #loc136])
#loc218 = loc(fused[#loc143, #loc142])
#loc219 = loc(fused[#loc150, #loc149])
#loc220 = loc(fused[#loc156, #loc157])
#loc221 = loc(fused[#loc158, #loc159])
#loc222 = loc(fused[#loc160, #loc161, #loc162, #loc157])
