!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printDoubleLine(!cir.double) loc(#loc273)
  cir.func no_proto @CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc275)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc7)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc7)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc7)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc7)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc7)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc7)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc7)
    cir.store %7, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc276)
    cir.scope {
      %8 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc278)
      %9 = cir.call %8() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc11)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc11)
      cir.if %10 {
      } loc(#loc279)
    } loc(#loc277)
    cir.scope {
      %8 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc281)
      %9 = cir.call %8() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc16)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc16)
      cir.if %10 {
        cir.scope {
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc284)
          cir.scope {
            %12 = cir.const #cir.int<0> : !s32i loc(#loc25)
            cir.store %12, %11 : !s32i, !cir.ptr<!s32i> loc(#loc286)
            cir.for : cond {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc27)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc28)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc287)
              cir.condition(%15) loc(#loc29)
            } body {
              cir.scope {
                %13 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc31)
                %14 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc32)
                %15 = cir.ptr_stride(%13 : !cir.ptr<!cir.double>, %14 : !s32i), !cir.ptr<!cir.double> loc(#loc33)
                %16 = cir.load %15 : !cir.ptr<!cir.double>, !cir.double loc(#loc31)
                cir.call @printDoubleLine(%16) : (!cir.double) -> () loc(#loc34)
              } loc(#loc288)
              cir.yield loc(#loc24)
            } step {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc35)
              %14 = cir.unary(inc, %13) nsw : !s32i, !s32i loc(#loc36)
              cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc289)
              cir.yield loc(#loc285)
            } loc(#loc285)
          } loc(#loc285)
        } loc(#loc283)
      } loc(#loc282)
    } loc(#loc280)
    cir.return loc(#loc4)
  } loc(#loc274)
  cir.func no_proto @CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc291)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc39)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc292)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc41)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc293)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc43)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc294)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc45)
    cir.return loc(#loc38)
  } loc(#loc290)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc48)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc49)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc296)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc296)
    cir.return %2 : !s32i loc(#loc296)
  } loc(#loc295)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc297)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc53)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc299)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc58)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc58)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc58)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc58)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc58)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc58)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc58)
    cir.store %7, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc300)
    cir.scope {
      %8 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc302)
      %9 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc62)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc62)
      cir.if %10 {
      } loc(#loc303)
    } loc(#loc301)
    cir.scope {
      %8 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc305)
      %9 = cir.call %8() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc67)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc67)
      cir.if %10 {
        %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc53)
        %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc53)
        cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc72)
      } else {
        cir.scope {
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc308)
          cir.scope {
            %12 = cir.const #cir.int<0> : !s32i loc(#loc79)
            cir.store %12, %11 : !s32i, !cir.ptr<!s32i> loc(#loc310)
            cir.for : cond {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc81)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc82)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc311)
              cir.condition(%15) loc(#loc83)
            } body {
              cir.scope {
                %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc85)
                %14 = cir.cast(int_to_float, %13 : !s32i), !cir.double loc(#loc85)
                %15 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc86)
                %16 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc87)
                %17 = cir.ptr_stride(%15 : !cir.ptr<!cir.double>, %16 : !s32i), !cir.ptr<!cir.double> loc(#loc88)
                cir.store %14, %17 : !cir.double, !cir.ptr<!cir.double> loc(#loc313)
              } loc(#loc312)
              cir.yield loc(#loc78)
            } step {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc89)
              %14 = cir.unary(inc, %13) nsw : !s32i, !s32i loc(#loc90)
              cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc314)
              cir.yield loc(#loc309)
            } loc(#loc309)
          } loc(#loc309)
        } loc(#loc307)
        cir.scope {
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc316)
          cir.scope {
            %12 = cir.const #cir.int<0> : !s32i loc(#loc97)
            cir.store %12, %11 : !s32i, !cir.ptr<!s32i> loc(#loc318)
            cir.for : cond {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc99)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc100)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc319)
              cir.condition(%15) loc(#loc101)
            } body {
              cir.scope {
                %13 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc103)
                %14 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc104)
                %15 = cir.ptr_stride(%13 : !cir.ptr<!cir.double>, %14 : !s32i), !cir.ptr<!cir.double> loc(#loc105)
                %16 = cir.load %15 : !cir.ptr<!cir.double>, !cir.double loc(#loc103)
                cir.call @printDoubleLine(%16) : (!cir.double) -> () loc(#loc106)
              } loc(#loc320)
              cir.yield loc(#loc96)
            } step {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc107)
              %14 = cir.unary(inc, %13) nsw : !s32i, !s32i loc(#loc108)
              cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc321)
              cir.yield loc(#loc317)
            } loc(#loc317)
          } loc(#loc317)
        } loc(#loc315)
      } loc(#loc306)
    } loc(#loc304)
    cir.return loc(#loc55)
  } loc(#loc298)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc110)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc111)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc323)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc323)
    cir.return %2 : !s32i loc(#loc323)
  } loc(#loc322)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc325)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc117)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc117)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc117)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc117)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc117)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc117)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc117)
    cir.store %7, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc326)
    cir.scope {
      %8 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc328)
      %9 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc121)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc121)
      cir.if %10 {
      } loc(#loc329)
    } loc(#loc327)
    cir.scope {
      %8 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc331)
      %9 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc126)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc126)
      cir.if %10 {
        cir.scope {
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc334)
          cir.scope {
            %12 = cir.const #cir.int<0> : !s32i loc(#loc135)
            cir.store %12, %11 : !s32i, !cir.ptr<!s32i> loc(#loc336)
            cir.for : cond {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc137)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc138)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc337)
              cir.condition(%15) loc(#loc139)
            } body {
              cir.scope {
                %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc141)
                %14 = cir.cast(int_to_float, %13 : !s32i), !cir.double loc(#loc141)
                %15 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc142)
                %16 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc143)
                %17 = cir.ptr_stride(%15 : !cir.ptr<!cir.double>, %16 : !s32i), !cir.ptr<!cir.double> loc(#loc144)
                cir.store %14, %17 : !cir.double, !cir.ptr<!cir.double> loc(#loc339)
              } loc(#loc338)
              cir.yield loc(#loc134)
            } step {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc145)
              %14 = cir.unary(inc, %13) nsw : !s32i, !s32i loc(#loc146)
              cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc340)
              cir.yield loc(#loc335)
            } loc(#loc335)
          } loc(#loc335)
        } loc(#loc333)
        cir.scope {
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc342)
          cir.scope {
            %12 = cir.const #cir.int<0> : !s32i loc(#loc153)
            cir.store %12, %11 : !s32i, !cir.ptr<!s32i> loc(#loc344)
            cir.for : cond {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc155)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc156)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc345)
              cir.condition(%15) loc(#loc157)
            } body {
              cir.scope {
                %13 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc159)
                %14 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc160)
                %15 = cir.ptr_stride(%13 : !cir.ptr<!cir.double>, %14 : !s32i), !cir.ptr<!cir.double> loc(#loc161)
                %16 = cir.load %15 : !cir.ptr<!cir.double>, !cir.double loc(#loc159)
                cir.call @printDoubleLine(%16) : (!cir.double) -> () loc(#loc162)
              } loc(#loc346)
              cir.yield loc(#loc152)
            } step {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc163)
              %14 = cir.unary(inc, %13) nsw : !s32i, !s32i loc(#loc164)
              cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc347)
              cir.yield loc(#loc343)
            } loc(#loc343)
          } loc(#loc343)
        } loc(#loc341)
      } loc(#loc332)
    } loc(#loc330)
    cir.return loc(#loc114)
  } loc(#loc324)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc349)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc169)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc169)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc169)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc169)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc169)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc169)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc169)
    cir.store %7, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc350)
    cir.scope {
      %8 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc352)
      %9 = cir.call @staticReturnsFalse() : () -> !s32i loc(#loc173)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc173)
      cir.if %10 {
        %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc178)
        %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc178)
        cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc179)
      } else {
        cir.scope {
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc355)
          cir.scope {
            %12 = cir.const #cir.int<0> : !s32i loc(#loc186)
            cir.store %12, %11 : !s32i, !cir.ptr<!s32i> loc(#loc357)
            cir.for : cond {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc188)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc189)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc358)
              cir.condition(%15) loc(#loc190)
            } body {
              cir.scope {
                %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc192)
                %14 = cir.cast(int_to_float, %13 : !s32i), !cir.double loc(#loc192)
                %15 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc193)
                %16 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc194)
                %17 = cir.ptr_stride(%15 : !cir.ptr<!cir.double>, %16 : !s32i), !cir.ptr<!cir.double> loc(#loc195)
                cir.store %14, %17 : !cir.double, !cir.ptr<!cir.double> loc(#loc360)
              } loc(#loc359)
              cir.yield loc(#loc185)
            } step {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc196)
              %14 = cir.unary(inc, %13) nsw : !s32i, !s32i loc(#loc197)
              cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc361)
              cir.yield loc(#loc356)
            } loc(#loc356)
          } loc(#loc356)
        } loc(#loc354)
      } loc(#loc353)
    } loc(#loc351)
    cir.scope {
      %8 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc363)
      %9 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc200)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc200)
      cir.if %10 {
        cir.scope {
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc366)
          cir.scope {
            %12 = cir.const #cir.int<0> : !s32i loc(#loc209)
            cir.store %12, %11 : !s32i, !cir.ptr<!s32i> loc(#loc368)
            cir.for : cond {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc211)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc212)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc369)
              cir.condition(%15) loc(#loc213)
            } body {
              cir.scope {
                %13 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc215)
                %14 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc216)
                %15 = cir.ptr_stride(%13 : !cir.ptr<!cir.double>, %14 : !s32i), !cir.ptr<!cir.double> loc(#loc217)
                %16 = cir.load %15 : !cir.ptr<!cir.double>, !cir.double loc(#loc215)
                cir.call @printDoubleLine(%16) : (!cir.double) -> () loc(#loc218)
              } loc(#loc370)
              cir.yield loc(#loc208)
            } step {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc219)
              %14 = cir.unary(inc, %13) nsw : !s32i, !s32i loc(#loc220)
              cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc371)
              cir.yield loc(#loc367)
            } loc(#loc367)
          } loc(#loc367)
        } loc(#loc365)
      } loc(#loc364)
    } loc(#loc362)
    cir.return loc(#loc166)
  } loc(#loc348)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc373)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc225)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc225)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc225)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc225)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc225)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc225)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc225)
    cir.store %7, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc374)
    cir.scope {
      %8 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc376)
      %9 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc229)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc229)
      cir.if %10 {
        cir.scope {
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc379)
          cir.scope {
            %12 = cir.const #cir.int<0> : !s32i loc(#loc238)
            cir.store %12, %11 : !s32i, !cir.ptr<!s32i> loc(#loc381)
            cir.for : cond {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc240)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc241)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc382)
              cir.condition(%15) loc(#loc242)
            } body {
              cir.scope {
                %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc244)
                %14 = cir.cast(int_to_float, %13 : !s32i), !cir.double loc(#loc244)
                %15 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc245)
                %16 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc246)
                %17 = cir.ptr_stride(%15 : !cir.ptr<!cir.double>, %16 : !s32i), !cir.ptr<!cir.double> loc(#loc247)
                cir.store %14, %17 : !cir.double, !cir.ptr<!cir.double> loc(#loc384)
              } loc(#loc383)
              cir.yield loc(#loc237)
            } step {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc248)
              %14 = cir.unary(inc, %13) nsw : !s32i, !s32i loc(#loc249)
              cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc385)
              cir.yield loc(#loc380)
            } loc(#loc380)
          } loc(#loc380)
        } loc(#loc378)
      } loc(#loc377)
    } loc(#loc375)
    cir.scope {
      %8 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc387)
      %9 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc252)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc252)
      cir.if %10 {
        cir.scope {
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc390)
          cir.scope {
            %12 = cir.const #cir.int<0> : !s32i loc(#loc261)
            cir.store %12, %11 : !s32i, !cir.ptr<!s32i> loc(#loc392)
            cir.for : cond {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc263)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc264)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc393)
              cir.condition(%15) loc(#loc265)
            } body {
              cir.scope {
                %13 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc267)
                %14 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc268)
                %15 = cir.ptr_stride(%13 : !cir.ptr<!cir.double>, %14 : !s32i), !cir.ptr<!cir.double> loc(#loc269)
                %16 = cir.load %15 : !cir.ptr<!cir.double>, !cir.double loc(#loc267)
                cir.call @printDoubleLine(%16) : (!cir.double) -> () loc(#loc270)
              } loc(#loc394)
              cir.yield loc(#loc260)
            } step {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc271)
              %14 = cir.unary(inc, %13) nsw : !s32i, !s32i loc(#loc272)
              cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc395)
              cir.yield loc(#loc391)
            } loc(#loc391)
          } loc(#loc391)
        } loc(#loc389)
      } loc(#loc388)
    } loc(#loc386)
    cir.return loc(#loc222)
  } loc(#loc372)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":38:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":38:41)
#loc3 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":35:1)
#loc4 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":55:1)
#loc5 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":37:5)
#loc6 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":37:14)
#loc7 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":38:22)
#loc8 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":38:5)
#loc9 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":39:5)
#loc10 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":43:5)
#loc11 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":39:8)
#loc12 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":39:26)
#loc13 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":40:5)
#loc14 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":44:5)
#loc15 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":54:5)
#loc16 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":44:8)
#loc17 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":44:26)
#loc18 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":45:5)
#loc19 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":47:9)
#loc20 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":53:9)
#loc21 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":48:13)
#loc22 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":48:17)
#loc23 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":49:13)
#loc24 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":52:13)
#loc25 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":49:19)
#loc26 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":49:17)
#loc27 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":49:22)
#loc28 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":49:24)
#loc29 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":49:23)
#loc30 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":50:13)
#loc31 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":51:33)
#loc32 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":51:38)
#loc33 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":51:39)
#loc34 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":51:17)
#loc35 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":49:29)
#loc36 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":49:28)
#loc37 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":189:1)
#loc38 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":195:1)
#loc39 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":191:5)
#loc40 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":191:14)
#loc41 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":192:5)
#loc42 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":192:14)
#loc43 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":193:5)
#loc44 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":193:14)
#loc45 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":194:5)
#loc46 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":194:14)
#loc47 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":23:1)
#loc48 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":26:1)
#loc49 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":25:12)
#loc50 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":25:5)
#loc51 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc52 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc53 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":74:19)
#loc54 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":62:1)
#loc55 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":94:1)
#loc56 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":64:5)
#loc57 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":64:14)
#loc58 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":65:22)
#loc59 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":65:5)
#loc60 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":66:5)
#loc61 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":70:5)
#loc62 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":66:8)
#loc63 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":66:26)
#loc64 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":67:5)
#loc65 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":71:5)
#loc66 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":93:5)
#loc67 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":71:8)
#loc68 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":71:27)
#loc69 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":72:5)
#loc70 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":75:5)
#loc71 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":77:5)
#loc72 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":74:9)
#loc73 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":79:9)
#loc74 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":85:9)
#loc75 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":80:13)
#loc76 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":80:17)
#loc77 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":81:13)
#loc78 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":84:13)
#loc79 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":81:19)
#loc80 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":81:17)
#loc81 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":81:22)
#loc82 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":81:24)
#loc83 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":81:23)
#loc84 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":82:13)
#loc85 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":83:35)
#loc86 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":83:17)
#loc87 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":83:22)
#loc88 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":83:23)
#loc89 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":81:29)
#loc90 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":81:28)
#loc91 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":86:9)
#loc92 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":92:9)
#loc93 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":87:13)
#loc94 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":87:17)
#loc95 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":88:13)
#loc96 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":91:13)
#loc97 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":88:19)
#loc98 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":88:17)
#loc99 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":88:22)
#loc100 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":88:24)
#loc101 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":88:23)
#loc102 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":89:13)
#loc103 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":90:33)
#loc104 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":90:38)
#loc105 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":90:39)
#loc106 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":90:17)
#loc107 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":88:29)
#loc108 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":88:28)
#loc109 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":28:1)
#loc110 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":31:1)
#loc111 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":30:12)
#loc112 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":30:5)
#loc113 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":97:1)
#loc114 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":124:1)
#loc115 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":99:5)
#loc116 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":99:14)
#loc117 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":100:22)
#loc118 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":100:5)
#loc119 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":101:5)
#loc120 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":105:5)
#loc121 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":101:8)
#loc122 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":101:26)
#loc123 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":102:5)
#loc124 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":106:5)
#loc125 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":123:5)
#loc126 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":106:8)
#loc127 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":106:26)
#loc128 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":107:5)
#loc129 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":109:9)
#loc130 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":115:9)
#loc131 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":110:13)
#loc132 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":110:17)
#loc133 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":111:13)
#loc134 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":114:13)
#loc135 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":111:19)
#loc136 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":111:17)
#loc137 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":111:22)
#loc138 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":111:24)
#loc139 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":111:23)
#loc140 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":112:13)
#loc141 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":113:35)
#loc142 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":113:17)
#loc143 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":113:22)
#loc144 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":113:23)
#loc145 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":111:29)
#loc146 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":111:28)
#loc147 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":116:9)
#loc148 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":122:9)
#loc149 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":117:13)
#loc150 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":117:17)
#loc151 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":118:13)
#loc152 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":121:13)
#loc153 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":118:19)
#loc154 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":118:17)
#loc155 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":118:22)
#loc156 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":118:24)
#loc157 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":118:23)
#loc158 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":119:13)
#loc159 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":120:33)
#loc160 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":120:38)
#loc161 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":120:39)
#loc162 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":120:17)
#loc163 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":118:29)
#loc164 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":118:28)
#loc165 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":127:1)
#loc166 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":158:1)
#loc167 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":129:5)
#loc168 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":129:14)
#loc169 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":130:22)
#loc170 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":130:5)
#loc171 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":131:5)
#loc172 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":146:5)
#loc173 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":131:8)
#loc174 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":131:27)
#loc175 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":132:5)
#loc176 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":135:5)
#loc177 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":137:5)
#loc178 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":134:19)
#loc179 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":134:9)
#loc180 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":139:9)
#loc181 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":145:9)
#loc182 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":140:13)
#loc183 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":140:17)
#loc184 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":141:13)
#loc185 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":144:13)
#loc186 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":141:19)
#loc187 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":141:17)
#loc188 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":141:22)
#loc189 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":141:24)
#loc190 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":141:23)
#loc191 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":142:13)
#loc192 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":143:35)
#loc193 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":143:17)
#loc194 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":143:22)
#loc195 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":143:23)
#loc196 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":141:29)
#loc197 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":141:28)
#loc198 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":147:5)
#loc199 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":157:5)
#loc200 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":147:8)
#loc201 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":147:26)
#loc202 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":148:5)
#loc203 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":150:9)
#loc204 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":156:9)
#loc205 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":151:13)
#loc206 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":151:17)
#loc207 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":152:13)
#loc208 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":155:13)
#loc209 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":152:19)
#loc210 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":152:17)
#loc211 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":152:22)
#loc212 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":152:24)
#loc213 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":152:23)
#loc214 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":153:13)
#loc215 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":154:33)
#loc216 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":154:38)
#loc217 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":154:39)
#loc218 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":154:17)
#loc219 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":152:29)
#loc220 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":152:28)
#loc221 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":161:1)
#loc222 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":187:1)
#loc223 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":163:5)
#loc224 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":163:14)
#loc225 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":164:22)
#loc226 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":164:5)
#loc227 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":165:5)
#loc228 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":175:5)
#loc229 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":165:8)
#loc230 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":165:26)
#loc231 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":166:5)
#loc232 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":168:9)
#loc233 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":174:9)
#loc234 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":169:13)
#loc235 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":169:17)
#loc236 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":170:13)
#loc237 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":173:13)
#loc238 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":170:19)
#loc239 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":170:17)
#loc240 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":170:22)
#loc241 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":170:24)
#loc242 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":170:23)
#loc243 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":171:13)
#loc244 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":172:35)
#loc245 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":172:17)
#loc246 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":172:22)
#loc247 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":172:23)
#loc248 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":170:29)
#loc249 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":170:28)
#loc250 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":176:5)
#loc251 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":186:5)
#loc252 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":176:8)
#loc253 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":176:26)
#loc254 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":177:5)
#loc255 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":179:9)
#loc256 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":185:9)
#loc257 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":180:13)
#loc258 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":180:17)
#loc259 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":181:13)
#loc260 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":184:13)
#loc261 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":181:19)
#loc262 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":181:17)
#loc263 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":181:22)
#loc264 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":181:24)
#loc265 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":181:23)
#loc266 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":182:13)
#loc267 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":183:33)
#loc268 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":183:38)
#loc269 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":183:39)
#loc270 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":183:17)
#loc271 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":181:29)
#loc272 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_08.c":181:28)
#loc273 = loc(fused[#loc1, #loc2])
#loc274 = loc(fused[#loc3, #loc4])
#loc275 = loc(fused[#loc5, #loc6])
#loc276 = loc(fused[#loc8, #loc7])
#loc277 = loc(fused[#loc9, #loc10])
#loc278 = loc(fused[#loc11, #loc12])
#loc279 = loc(fused[#loc13, #loc10])
#loc280 = loc(fused[#loc14, #loc15])
#loc281 = loc(fused[#loc16, #loc17])
#loc282 = loc(fused[#loc18, #loc15])
#loc283 = loc(fused[#loc19, #loc20])
#loc284 = loc(fused[#loc21, #loc22])
#loc285 = loc(fused[#loc23, #loc24])
#loc286 = loc(fused[#loc26, #loc25])
#loc287 = loc(fused[#loc27, #loc28])
#loc288 = loc(fused[#loc30, #loc24])
#loc289 = loc(fused[#loc36, #loc35])
#loc290 = loc(fused[#loc37, #loc38])
#loc291 = loc(fused[#loc39, #loc40])
#loc292 = loc(fused[#loc41, #loc42])
#loc293 = loc(fused[#loc43, #loc44])
#loc294 = loc(fused[#loc45, #loc46])
#loc295 = loc(fused[#loc47, #loc48])
#loc296 = loc(fused[#loc50, #loc49])
#loc297 = loc(fused[#loc51, #loc52])
#loc298 = loc(fused[#loc54, #loc55])
#loc299 = loc(fused[#loc56, #loc57])
#loc300 = loc(fused[#loc59, #loc58])
#loc301 = loc(fused[#loc60, #loc61])
#loc302 = loc(fused[#loc62, #loc63])
#loc303 = loc(fused[#loc64, #loc61])
#loc304 = loc(fused[#loc65, #loc66])
#loc305 = loc(fused[#loc67, #loc68])
#loc306 = loc(fused[#loc69, #loc70, #loc71, #loc66])
#loc307 = loc(fused[#loc73, #loc74])
#loc308 = loc(fused[#loc75, #loc76])
#loc309 = loc(fused[#loc77, #loc78])
#loc310 = loc(fused[#loc80, #loc79])
#loc311 = loc(fused[#loc81, #loc82])
#loc312 = loc(fused[#loc84, #loc78])
#loc313 = loc(fused[#loc86, #loc85])
#loc314 = loc(fused[#loc90, #loc89])
#loc315 = loc(fused[#loc91, #loc92])
#loc316 = loc(fused[#loc93, #loc94])
#loc317 = loc(fused[#loc95, #loc96])
#loc318 = loc(fused[#loc98, #loc97])
#loc319 = loc(fused[#loc99, #loc100])
#loc320 = loc(fused[#loc102, #loc96])
#loc321 = loc(fused[#loc108, #loc107])
#loc322 = loc(fused[#loc109, #loc110])
#loc323 = loc(fused[#loc112, #loc111])
#loc324 = loc(fused[#loc113, #loc114])
#loc325 = loc(fused[#loc115, #loc116])
#loc326 = loc(fused[#loc118, #loc117])
#loc327 = loc(fused[#loc119, #loc120])
#loc328 = loc(fused[#loc121, #loc122])
#loc329 = loc(fused[#loc123, #loc120])
#loc330 = loc(fused[#loc124, #loc125])
#loc331 = loc(fused[#loc126, #loc127])
#loc332 = loc(fused[#loc128, #loc125])
#loc333 = loc(fused[#loc129, #loc130])
#loc334 = loc(fused[#loc131, #loc132])
#loc335 = loc(fused[#loc133, #loc134])
#loc336 = loc(fused[#loc136, #loc135])
#loc337 = loc(fused[#loc137, #loc138])
#loc338 = loc(fused[#loc140, #loc134])
#loc339 = loc(fused[#loc142, #loc141])
#loc340 = loc(fused[#loc146, #loc145])
#loc341 = loc(fused[#loc147, #loc148])
#loc342 = loc(fused[#loc149, #loc150])
#loc343 = loc(fused[#loc151, #loc152])
#loc344 = loc(fused[#loc154, #loc153])
#loc345 = loc(fused[#loc155, #loc156])
#loc346 = loc(fused[#loc158, #loc152])
#loc347 = loc(fused[#loc164, #loc163])
#loc348 = loc(fused[#loc165, #loc166])
#loc349 = loc(fused[#loc167, #loc168])
#loc350 = loc(fused[#loc170, #loc169])
#loc351 = loc(fused[#loc171, #loc172])
#loc352 = loc(fused[#loc173, #loc174])
#loc353 = loc(fused[#loc175, #loc176, #loc177, #loc172])
#loc354 = loc(fused[#loc180, #loc181])
#loc355 = loc(fused[#loc182, #loc183])
#loc356 = loc(fused[#loc184, #loc185])
#loc357 = loc(fused[#loc187, #loc186])
#loc358 = loc(fused[#loc188, #loc189])
#loc359 = loc(fused[#loc191, #loc185])
#loc360 = loc(fused[#loc193, #loc192])
#loc361 = loc(fused[#loc197, #loc196])
#loc362 = loc(fused[#loc198, #loc199])
#loc363 = loc(fused[#loc200, #loc201])
#loc364 = loc(fused[#loc202, #loc199])
#loc365 = loc(fused[#loc203, #loc204])
#loc366 = loc(fused[#loc205, #loc206])
#loc367 = loc(fused[#loc207, #loc208])
#loc368 = loc(fused[#loc210, #loc209])
#loc369 = loc(fused[#loc211, #loc212])
#loc370 = loc(fused[#loc214, #loc208])
#loc371 = loc(fused[#loc220, #loc219])
#loc372 = loc(fused[#loc221, #loc222])
#loc373 = loc(fused[#loc223, #loc224])
#loc374 = loc(fused[#loc226, #loc225])
#loc375 = loc(fused[#loc227, #loc228])
#loc376 = loc(fused[#loc229, #loc230])
#loc377 = loc(fused[#loc231, #loc228])
#loc378 = loc(fused[#loc232, #loc233])
#loc379 = loc(fused[#loc234, #loc235])
#loc380 = loc(fused[#loc236, #loc237])
#loc381 = loc(fused[#loc239, #loc238])
#loc382 = loc(fused[#loc240, #loc241])
#loc383 = loc(fused[#loc243, #loc237])
#loc384 = loc(fused[#loc245, #loc244])
#loc385 = loc(fused[#loc249, #loc248])
#loc386 = loc(fused[#loc250, #loc251])
#loc387 = loc(fused[#loc252, #loc253])
#loc388 = loc(fused[#loc254, #loc251])
#loc389 = loc(fused[#loc255, #loc256])
#loc390 = loc(fused[#loc257, #loc258])
#loc391 = loc(fused[#loc259, #loc260])
#loc392 = loc(fused[#loc262, #loc261])
#loc393 = loc(fused[#loc263, #loc264])
#loc394 = loc(fused[#loc266, #loc260])
#loc395 = loc(fused[#loc272, #loc271])
