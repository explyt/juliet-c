!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc7 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":24:28)
#loc8 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":24:38)
#loc51 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":67:32)
#loc52 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":67:42)
#loc85 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":48:32)
#loc86 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":48:42)
#loc120 = loc(fused[#loc7, #loc8])
#loc138 = loc(fused[#loc51, #loc52])
#loc152 = loc(fused[#loc85, #loc86])
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE415_Double_Free/s01/CWE415_Double_Free__malloc_free_int64_t_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc117)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc118)
  cir.func internal private  @badSource(%arg0: !cir.ptr<!s64i> loc(fused[#loc7, #loc8])) -> !cir.ptr<!s64i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc120)
    %1 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["__retval"] {alignment = 8 : i64} loc(#loc6)
    cir.store %arg0, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc9)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc10)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc11)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc11)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc121)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc122)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc10)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc123)
    cir.store %8, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc124)
    cir.scope {
      %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc18)
      %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc19)
      %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc19)
      %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s64i>, !s32i loc(#loc126)
      %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc20)
      cir.if %18 {
        %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc22)
        %20 = cir.const #cir.int<1> : !s32i loc(#loc23)
        %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc24)
        cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc22)
      } loc(#loc127)
    } loc(#loc125)
    %9 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc25)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc26)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc26)
    cir.call @free(%11) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc25)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc27)
    cir.store %12, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc128)
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc128)
    cir.return %13 : !cir.ptr<!s64i> loc(#loc128)
  } loc(#loc119)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc129)
  cir.func no_proto  @CWE415_Double_Free__malloc_free_int64_t_42_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc131)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc35)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc132)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc37)
    %3 = cir.call @badSource(%2) : (!cir.ptr<!s64i>) -> !cir.ptr<!s64i> loc(#loc38)
    cir.store %3, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc133)
    %4 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc41)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc42)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc42)
    cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc41)
    cir.return loc(#loc32)
  } loc(#loc130)
  cir.func no_proto  @CWE415_Double_Free__malloc_free_int64_t_42_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc135)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc45)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc136)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc47)
    cir.return loc(#loc44)
  } loc(#loc134)
  cir.func internal private  @goodB2GSource(%arg0: !cir.ptr<!s64i> loc(fused[#loc51, #loc52])) -> !cir.ptr<!s64i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc138)
    %1 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["__retval"] {alignment = 8 : i64} loc(#loc50)
    cir.store %arg0, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc53)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc54)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc55)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc55)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc139)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc140)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc54)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc141)
    cir.store %8, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc142)
    cir.scope {
      %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc62)
      %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc63)
      %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc63)
      %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s64i>, !s32i loc(#loc144)
      %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc64)
      cir.if %18 {
        %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc66)
        %20 = cir.const #cir.int<1> : !s32i loc(#loc67)
        %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc68)
        cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc66)
      } loc(#loc145)
    } loc(#loc143)
    %9 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc69)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc70)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc70)
    cir.call @free(%11) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc69)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc71)
    cir.store %12, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc146)
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc146)
    cir.return %13 : !cir.ptr<!s64i> loc(#loc146)
  } loc(#loc137)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc148)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc77)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc149)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc79)
    %3 = cir.call @goodB2GSource(%2) : (!cir.ptr<!s64i>) -> !cir.ptr<!s64i> loc(#loc80)
    cir.store %3, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc150)
    cir.return loc(#loc74)
  } loc(#loc147)
  cir.func internal private  @goodG2BSource(%arg0: !cir.ptr<!s64i> loc(fused[#loc85, #loc86])) -> !cir.ptr<!s64i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc152)
    %1 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["__retval"] {alignment = 8 : i64} loc(#loc84)
    cir.store %arg0, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc87)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc88)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc89)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc89)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc153)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc154)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc88)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc155)
    cir.store %8, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc156)
    cir.scope {
      %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc96)
      %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc97)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc97)
      %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s64i>, !s32i loc(#loc158)
      %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc98)
      cir.if %15 {
        %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc100)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc101)
        %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc102)
        cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc100)
      } loc(#loc159)
    } loc(#loc157)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc103)
    cir.store %9, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc160)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc160)
    cir.return %10 : !cir.ptr<!s64i> loc(#loc160)
  } loc(#loc151)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc162)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc109)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc163)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc111)
    %3 = cir.call @goodG2BSource(%2) : (!cir.ptr<!s64i>) -> !cir.ptr<!s64i> loc(#loc112)
    cir.store %3, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc164)
    %4 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc115)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc116)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc116)
    cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc115)
    cir.return loc(#loc106)
  } loc(#loc161)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE415_Double_Free/s01/CWE415_Double_Free__malloc_free_int64_t_42.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":24:1)
#loc6 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":31:1)
#loc9 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":25:1)
#loc10 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":26:23)
#loc11 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":26:30)
#loc12 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":26:34)
#loc13 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":26:48)
#loc14 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":26:49)
#loc15 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":26:5)
#loc16 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":27:5)
#loc17 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":27:33)
#loc18 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":27:9)
#loc19 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":27:17)
#loc20 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":27:14)
#loc21 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":27:23)
#loc22 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":27:24)
#loc23 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":27:30)
#loc24 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":27:29)
#loc25 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":29:5)
#loc26 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":29:10)
#loc27 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":30:12)
#loc28 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":30:5)
#loc29 = loc("/usr/include/stdlib.h":687:1)
#loc30 = loc("/usr/include/stdlib.h":687:32)
#loc31 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":33:1)
#loc32 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":41:1)
#loc33 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":35:5)
#loc34 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":35:15)
#loc35 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":37:12)
#loc36 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":37:5)
#loc37 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":38:22)
#loc38 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":38:12)
#loc39 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":38:5)
#loc40 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":38:26)
#loc41 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":40:5)
#loc42 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":40:10)
#loc43 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":87:1)
#loc44 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":91:1)
#loc45 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":89:5)
#loc46 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":89:13)
#loc47 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":90:5)
#loc48 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":90:13)
#loc49 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":67:1)
#loc50 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":74:1)
#loc53 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":68:1)
#loc54 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":69:23)
#loc55 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":69:30)
#loc56 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":69:34)
#loc57 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":69:48)
#loc58 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":69:49)
#loc59 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":69:5)
#loc60 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":70:5)
#loc61 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":70:33)
#loc62 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":70:9)
#loc63 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":70:17)
#loc64 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":70:14)
#loc65 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":70:23)
#loc66 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":70:24)
#loc67 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":70:30)
#loc68 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":70:29)
#loc69 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":72:5)
#loc70 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":72:10)
#loc71 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":73:12)
#loc72 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":73:5)
#loc73 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":76:1)
#loc74 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":85:1)
#loc75 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":78:5)
#loc76 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":78:15)
#loc77 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":80:12)
#loc78 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":80:5)
#loc79 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":81:26)
#loc80 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":81:12)
#loc81 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":81:5)
#loc82 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":81:30)
#loc83 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":48:1)
#loc84 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":54:1)
#loc87 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":49:1)
#loc88 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":50:23)
#loc89 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":50:30)
#loc90 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":50:34)
#loc91 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":50:48)
#loc92 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":50:49)
#loc93 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":50:5)
#loc94 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":51:5)
#loc95 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":51:33)
#loc96 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":51:9)
#loc97 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":51:17)
#loc98 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":51:14)
#loc99 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":51:23)
#loc100 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":51:24)
#loc101 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":51:30)
#loc102 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":51:29)
#loc103 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":53:12)
#loc104 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":53:5)
#loc105 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":56:1)
#loc106 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":64:1)
#loc107 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":58:5)
#loc108 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":58:15)
#loc109 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":60:12)
#loc110 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":60:5)
#loc111 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":61:26)
#loc112 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":61:12)
#loc113 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":61:5)
#loc114 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":61:30)
#loc115 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":63:5)
#loc116 = loc("CWE415_Double_Free__malloc_free_int64_t_42.c":63:10)
#loc117 = loc(fused[#loc1, #loc2])
#loc118 = loc(fused[#loc3, #loc4])
#loc119 = loc(fused[#loc5, #loc6])
#loc121 = loc(fused[#loc12, #loc13])
#loc122 = loc(fused[#loc11, #loc13])
#loc123 = loc(fused[#loc10, #loc14])
#loc124 = loc(fused[#loc15, #loc14])
#loc125 = loc(fused[#loc16, #loc17])
#loc126 = loc(fused[#loc18, #loc19])
#loc127 = loc(fused[#loc21, #loc17])
#loc128 = loc(fused[#loc28, #loc27])
#loc129 = loc(fused[#loc29, #loc30])
#loc130 = loc(fused[#loc31, #loc32])
#loc131 = loc(fused[#loc33, #loc34])
#loc132 = loc(fused[#loc36, #loc35])
#loc133 = loc(fused[#loc39, #loc40])
#loc134 = loc(fused[#loc43, #loc44])
#loc135 = loc(fused[#loc45, #loc46])
#loc136 = loc(fused[#loc47, #loc48])
#loc137 = loc(fused[#loc49, #loc50])
#loc139 = loc(fused[#loc56, #loc57])
#loc140 = loc(fused[#loc55, #loc57])
#loc141 = loc(fused[#loc54, #loc58])
#loc142 = loc(fused[#loc59, #loc58])
#loc143 = loc(fused[#loc60, #loc61])
#loc144 = loc(fused[#loc62, #loc63])
#loc145 = loc(fused[#loc65, #loc61])
#loc146 = loc(fused[#loc72, #loc71])
#loc147 = loc(fused[#loc73, #loc74])
#loc148 = loc(fused[#loc75, #loc76])
#loc149 = loc(fused[#loc78, #loc77])
#loc150 = loc(fused[#loc81, #loc82])
#loc151 = loc(fused[#loc83, #loc84])
#loc153 = loc(fused[#loc90, #loc91])
#loc154 = loc(fused[#loc89, #loc91])
#loc155 = loc(fused[#loc88, #loc92])
#loc156 = loc(fused[#loc93, #loc92])
#loc157 = loc(fused[#loc94, #loc95])
#loc158 = loc(fused[#loc96, #loc97])
#loc159 = loc(fused[#loc99, #loc95])
#loc160 = loc(fused[#loc104, #loc103])
#loc161 = loc(fused[#loc105, #loc106])
#loc162 = loc(fused[#loc107, #loc108])
#loc163 = loc(fused[#loc110, #loc109])
#loc164 = loc(fused[#loc113, #loc114])
