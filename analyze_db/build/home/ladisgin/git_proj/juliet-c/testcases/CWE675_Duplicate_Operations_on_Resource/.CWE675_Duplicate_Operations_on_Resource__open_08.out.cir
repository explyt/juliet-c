!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc56 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":164:10)
#loc57 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":164:14)
#loc58 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":164:20)
#loc59 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":164:32)
#loc221 = loc(fused[#loc56, #loc57])
#loc222 = loc(fused[#loc58, #loc59])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE675_Duplicate_Operations_on_Resource/CWE675_Duplicate_Operations_on_Resource__open_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc198)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"BadSource_open.txt\00" : !cir.array<!s8i x 19>> : !cir.array<!s8i x 19> {alignment = 1 : i64} loc(#loc3)
  cir.func private @close(!s32i) -> !s32i loc(#loc199)
  cir.func no_proto @CWE675_Duplicate_Operations_on_Resource__open_08_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc201)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc10)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc11)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc202)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc204)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc15)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc15)
      cir.if %5 {
        %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc3)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc3)
        %8 = cir.const #cir.int<2> : !s32i loc(#loc18)
        %9 = cir.const #cir.int<64> : !s32i loc(#loc19)
        %10 = cir.binop(or, %8, %9) : !s32i loc(#loc206)
        %11 = cir.const #cir.int<256> : !s32i loc(#loc20)
        %12 = cir.const #cir.int<128> : !s32i loc(#loc21)
        %13 = cir.binop(or, %11, %12) : !s32i loc(#loc207)
        %14 = cir.call @open(%7, %10, %13) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc22)
        cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc208)
        %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc25)
        %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc26)
      } loc(#loc205)
    } loc(#loc203)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc210)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc29)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc29)
      cir.if %5 {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc32)
        %7 = cir.call @close(%6) : (!s32i) -> !s32i loc(#loc33)
      } loc(#loc211)
    } loc(#loc209)
    cir.return loc(#loc7)
  } loc(#loc200)
  cir.func no_proto @CWE675_Duplicate_Operations_on_Resource__open_08_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc213)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc36)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc214)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc215)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc216)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc42)
    cir.return loc(#loc35)
  } loc(#loc212)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc217)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc218)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc219)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc50)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc51)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc52)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc53)
  cir.func @main(%arg0: !s32i loc(fused[#loc56, #loc57]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc58, #loc59])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc221)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc222)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc55)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc60)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc60)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc61)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc62)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc62)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc63)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc50)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    %8 = cir.get_global @CWE675_Duplicate_Operations_on_Resource__open_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc223)
    cir.call @CWE675_Duplicate_Operations_on_Resource__open_08_good() : () -> () loc(#loc65)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc51)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc52)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    %13 = cir.get_global @CWE675_Duplicate_Operations_on_Resource__open_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc224)
    cir.call @CWE675_Duplicate_Operations_on_Resource__open_08_bad() : () -> () loc(#loc69)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc53)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc72)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc225)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc225)
    cir.return %17 : !s32i loc(#loc225)
  } loc(#loc220)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc75)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc76)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc227)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc227)
    cir.return %2 : !s32i loc(#loc227)
  } loc(#loc226)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc78)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc229)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc83)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc84)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc230)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc232)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc88)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc88)
      cir.if %5 {
        %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc91)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc91)
        %8 = cir.const #cir.int<2> : !s32i loc(#loc92)
        %9 = cir.const #cir.int<64> : !s32i loc(#loc93)
        %10 = cir.binop(or, %8, %9) : !s32i loc(#loc234)
        %11 = cir.const #cir.int<256> : !s32i loc(#loc94)
        %12 = cir.const #cir.int<128> : !s32i loc(#loc95)
        %13 = cir.binop(or, %11, %12) : !s32i loc(#loc235)
        %14 = cir.call @open(%7, %10, %13) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc96)
        cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc236)
        %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc99)
        %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc100)
      } loc(#loc233)
    } loc(#loc231)
    cir.scope {
      %3 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc238)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc103)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc103)
      cir.if %5 {
        %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc78)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc78)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc108)
      } else {
      } loc(#loc239)
    } loc(#loc237)
    cir.return loc(#loc80)
  } loc(#loc228)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc110)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc111)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc241)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc241)
    cir.return %2 : !s32i loc(#loc241)
  } loc(#loc240)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc243)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc117)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc118)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc244)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc246)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc122)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc122)
      cir.if %5 {
        %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc125)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc125)
        %8 = cir.const #cir.int<2> : !s32i loc(#loc126)
        %9 = cir.const #cir.int<64> : !s32i loc(#loc127)
        %10 = cir.binop(or, %8, %9) : !s32i loc(#loc248)
        %11 = cir.const #cir.int<256> : !s32i loc(#loc128)
        %12 = cir.const #cir.int<128> : !s32i loc(#loc129)
        %13 = cir.binop(or, %11, %12) : !s32i loc(#loc249)
        %14 = cir.call @open(%7, %10, %13) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc130)
        cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc250)
        %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc133)
        %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc134)
      } loc(#loc247)
    } loc(#loc245)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc252)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc137)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc137)
      cir.if %5 {
      } loc(#loc253)
    } loc(#loc251)
    cir.return loc(#loc114)
  } loc(#loc242)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"GoodSource_open.txt\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc140)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc255)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc145)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc146)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc256)
    cir.scope {
      %3 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc258)
      %4 = cir.call @staticReturnsFalse() : () -> !s32i loc(#loc150)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc150)
      cir.if %5 {
        %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc155)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc155)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc156)
      } else {
        %6 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc140)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc140)
        %8 = cir.const #cir.int<2> : !s32i loc(#loc157)
        %9 = cir.const #cir.int<64> : !s32i loc(#loc158)
        %10 = cir.binop(or, %8, %9) : !s32i loc(#loc260)
        %11 = cir.const #cir.int<256> : !s32i loc(#loc159)
        %12 = cir.const #cir.int<128> : !s32i loc(#loc160)
        %13 = cir.binop(or, %11, %12) : !s32i loc(#loc261)
        %14 = cir.call @open(%7, %10, %13) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc161)
        cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc262)
      } loc(#loc259)
    } loc(#loc257)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc264)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc166)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc166)
      cir.if %5 {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc169)
        %7 = cir.call @close(%6) : (!s32i) -> !s32i loc(#loc170)
      } loc(#loc265)
    } loc(#loc263)
    cir.return loc(#loc142)
  } loc(#loc254)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc267)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc175)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc176)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc268)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc270)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc180)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc180)
      cir.if %5 {
        %6 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc183)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc183)
        %8 = cir.const #cir.int<2> : !s32i loc(#loc184)
        %9 = cir.const #cir.int<64> : !s32i loc(#loc185)
        %10 = cir.binop(or, %8, %9) : !s32i loc(#loc272)
        %11 = cir.const #cir.int<256> : !s32i loc(#loc186)
        %12 = cir.const #cir.int<128> : !s32i loc(#loc187)
        %13 = cir.binop(or, %11, %12) : !s32i loc(#loc273)
        %14 = cir.call @open(%7, %10, %13) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc188)
        cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc274)
      } loc(#loc271)
    } loc(#loc269)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc276)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc193)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc193)
      cir.if %5 {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc196)
        %7 = cir.call @close(%6) : (!s32i) -> !s32i loc(#loc197)
      } loc(#loc277)
    } loc(#loc275)
    cir.return loc(#loc172)
  } loc(#loc266)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE675_Duplicate_Operations_on_Resource/CWE675_Duplicate_Operations_on_Resource__open_08.c":0:0)
#loc1 = loc("/usr/include/fcntl.h":209:1)
#loc2 = loc("/usr/include/fcntl.h":209:56)
#loc3 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":50:21)
#loc4 = loc("/usr/include/unistd.h":358:1)
#loc5 = loc("/usr/include/unistd.h":358:27)
#loc6 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":44:1)
#loc7 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":59:1)
#loc8 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":46:5)
#loc9 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":46:9)
#loc10 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":47:13)
#loc11 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":47:12)
#loc12 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":47:5)
#loc13 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":48:5)
#loc14 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":53:5)
#loc15 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":48:8)
#loc16 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":48:26)
#loc17 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":49:5)
#loc18 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":50:43)
#loc19 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":50:50)
#loc20 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":50:59)
#loc21 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":50:67)
#loc22 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":50:16)
#loc23 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":50:9)
#loc24 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":50:75)
#loc25 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":52:15)
#loc26 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":52:9)
#loc27 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":54:5)
#loc28 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":58:5)
#loc29 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":54:8)
#loc30 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":54:26)
#loc31 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":55:5)
#loc32 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":57:15)
#loc33 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":57:9)
#loc34 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":147:1)
#loc35 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":153:1)
#loc36 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":149:5)
#loc37 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":149:14)
#loc38 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":150:5)
#loc39 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":150:14)
#loc40 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":151:5)
#loc41 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":151:14)
#loc42 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":152:5)
#loc43 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":152:14)
#loc44 = loc("/usr/include/stdlib.h":575:1)
#loc45 = loc("/usr/include/stdlib.h":575:41)
#loc46 = loc("/usr/include/time.h":76:1)
#loc47 = loc("/usr/include/time.h":76:38)
#loc48 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc49 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc50 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":169:15)
#loc51 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":171:15)
#loc52 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":174:15)
#loc53 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":176:15)
#loc54 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":164:1)
#loc55 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":179:1)
#loc60 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":165:1)
#loc61 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":167:27)
#loc62 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":167:22)
#loc63 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":167:5)
#loc64 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":169:5)
#loc65 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":170:5)
#loc66 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":170:59)
#loc67 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":171:5)
#loc68 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":174:5)
#loc69 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":175:5)
#loc70 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":175:58)
#loc71 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":176:5)
#loc72 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":178:12)
#loc73 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":178:5)
#loc74 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":32:1)
#loc75 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":35:1)
#loc76 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":34:12)
#loc77 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":34:5)
#loc78 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":79:19)
#loc79 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":66:1)
#loc80 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":87:1)
#loc81 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":68:5)
#loc82 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":68:9)
#loc83 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":69:13)
#loc84 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":69:12)
#loc85 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":69:5)
#loc86 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":70:5)
#loc87 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":75:5)
#loc88 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":70:8)
#loc89 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":70:26)
#loc90 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":71:5)
#loc91 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":72:21)
#loc92 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":72:43)
#loc93 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":72:50)
#loc94 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":72:59)
#loc95 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":72:67)
#loc96 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":72:16)
#loc97 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":72:9)
#loc98 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":72:75)
#loc99 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":74:15)
#loc100 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":74:9)
#loc101 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":76:5)
#loc102 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":86:5)
#loc103 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":76:8)
#loc104 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":76:27)
#loc105 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":77:5)
#loc106 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":80:5)
#loc107 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":82:5)
#loc108 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":79:9)
#loc109 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":37:1)
#loc110 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":40:1)
#loc111 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":39:12)
#loc112 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":39:5)
#loc113 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":90:1)
#loc114 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":106:1)
#loc115 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":92:5)
#loc116 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":92:9)
#loc117 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":93:13)
#loc118 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":93:12)
#loc119 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":93:5)
#loc120 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":94:5)
#loc121 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":99:5)
#loc122 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":94:8)
#loc123 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":94:26)
#loc124 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":95:5)
#loc125 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":96:21)
#loc126 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":96:43)
#loc127 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":96:50)
#loc128 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":96:59)
#loc129 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":96:67)
#loc130 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":96:16)
#loc131 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":96:9)
#loc132 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":96:75)
#loc133 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":98:15)
#loc134 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":98:9)
#loc135 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":100:5)
#loc136 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":105:5)
#loc137 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":100:8)
#loc138 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":100:26)
#loc139 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":101:5)
#loc140 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":121:21)
#loc141 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":109:1)
#loc142 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":128:1)
#loc143 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":111:5)
#loc144 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":111:9)
#loc145 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":112:13)
#loc146 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":112:12)
#loc147 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":112:5)
#loc148 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":113:5)
#loc149 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":122:5)
#loc150 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":113:8)
#loc151 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":113:27)
#loc152 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":114:5)
#loc153 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":117:5)
#loc154 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":119:5)
#loc155 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":116:19)
#loc156 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":116:9)
#loc157 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":121:44)
#loc158 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":121:51)
#loc159 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":121:60)
#loc160 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":121:68)
#loc161 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":121:16)
#loc162 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":121:9)
#loc163 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":121:76)
#loc164 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":123:5)
#loc165 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":127:5)
#loc166 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":123:8)
#loc167 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":123:26)
#loc168 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":124:5)
#loc169 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":126:15)
#loc170 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":126:9)
#loc171 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":131:1)
#loc172 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":145:1)
#loc173 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":133:5)
#loc174 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":133:9)
#loc175 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":134:13)
#loc176 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":134:12)
#loc177 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":134:5)
#loc178 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":135:5)
#loc179 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":139:5)
#loc180 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":135:8)
#loc181 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":135:26)
#loc182 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":136:5)
#loc183 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":138:21)
#loc184 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":138:44)
#loc185 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":138:51)
#loc186 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":138:60)
#loc187 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":138:68)
#loc188 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":138:16)
#loc189 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":138:9)
#loc190 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":138:76)
#loc191 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":140:5)
#loc192 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":144:5)
#loc193 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":140:8)
#loc194 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":140:26)
#loc195 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":141:5)
#loc196 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":143:15)
#loc197 = loc("CWE675_Duplicate_Operations_on_Resource__open_08.c":143:9)
#loc198 = loc(fused[#loc1, #loc2])
#loc199 = loc(fused[#loc4, #loc5])
#loc200 = loc(fused[#loc6, #loc7])
#loc201 = loc(fused[#loc8, #loc9])
#loc202 = loc(fused[#loc12, #loc10])
#loc203 = loc(fused[#loc13, #loc14])
#loc204 = loc(fused[#loc15, #loc16])
#loc205 = loc(fused[#loc17, #loc14])
#loc206 = loc(fused[#loc18, #loc19])
#loc207 = loc(fused[#loc20, #loc21])
#loc208 = loc(fused[#loc23, #loc24])
#loc209 = loc(fused[#loc27, #loc28])
#loc210 = loc(fused[#loc29, #loc30])
#loc211 = loc(fused[#loc31, #loc28])
#loc212 = loc(fused[#loc34, #loc35])
#loc213 = loc(fused[#loc36, #loc37])
#loc214 = loc(fused[#loc38, #loc39])
#loc215 = loc(fused[#loc40, #loc41])
#loc216 = loc(fused[#loc42, #loc43])
#loc217 = loc(fused[#loc44, #loc45])
#loc218 = loc(fused[#loc46, #loc47])
#loc219 = loc(fused[#loc48, #loc49])
#loc220 = loc(fused[#loc54, #loc55])
#loc223 = loc(fused[#loc65, #loc66])
#loc224 = loc(fused[#loc69, #loc70])
#loc225 = loc(fused[#loc73, #loc72])
#loc226 = loc(fused[#loc74, #loc75])
#loc227 = loc(fused[#loc77, #loc76])
#loc228 = loc(fused[#loc79, #loc80])
#loc229 = loc(fused[#loc81, #loc82])
#loc230 = loc(fused[#loc85, #loc83])
#loc231 = loc(fused[#loc86, #loc87])
#loc232 = loc(fused[#loc88, #loc89])
#loc233 = loc(fused[#loc90, #loc87])
#loc234 = loc(fused[#loc92, #loc93])
#loc235 = loc(fused[#loc94, #loc95])
#loc236 = loc(fused[#loc97, #loc98])
#loc237 = loc(fused[#loc101, #loc102])
#loc238 = loc(fused[#loc103, #loc104])
#loc239 = loc(fused[#loc105, #loc106, #loc107, #loc102])
#loc240 = loc(fused[#loc109, #loc110])
#loc241 = loc(fused[#loc112, #loc111])
#loc242 = loc(fused[#loc113, #loc114])
#loc243 = loc(fused[#loc115, #loc116])
#loc244 = loc(fused[#loc119, #loc117])
#loc245 = loc(fused[#loc120, #loc121])
#loc246 = loc(fused[#loc122, #loc123])
#loc247 = loc(fused[#loc124, #loc121])
#loc248 = loc(fused[#loc126, #loc127])
#loc249 = loc(fused[#loc128, #loc129])
#loc250 = loc(fused[#loc131, #loc132])
#loc251 = loc(fused[#loc135, #loc136])
#loc252 = loc(fused[#loc137, #loc138])
#loc253 = loc(fused[#loc139, #loc136])
#loc254 = loc(fused[#loc141, #loc142])
#loc255 = loc(fused[#loc143, #loc144])
#loc256 = loc(fused[#loc147, #loc145])
#loc257 = loc(fused[#loc148, #loc149])
#loc258 = loc(fused[#loc150, #loc151])
#loc259 = loc(fused[#loc152, #loc153, #loc154, #loc149])
#loc260 = loc(fused[#loc157, #loc158])
#loc261 = loc(fused[#loc159, #loc160])
#loc262 = loc(fused[#loc162, #loc163])
#loc263 = loc(fused[#loc164, #loc165])
#loc264 = loc(fused[#loc166, #loc167])
#loc265 = loc(fused[#loc168, #loc165])
#loc266 = loc(fused[#loc171, #loc172])
#loc267 = loc(fused[#loc173, #loc174])
#loc268 = loc(fused[#loc177, #loc175])
#loc269 = loc(fused[#loc178, #loc179])
#loc270 = loc(fused[#loc180, #loc181])
#loc271 = loc(fused[#loc182, #loc179])
#loc272 = loc(fused[#loc184, #loc185])
#loc273 = loc(fused[#loc186, #loc187])
#loc274 = loc(fused[#loc189, #loc190])
#loc275 = loc(fused[#loc191, #loc192])
#loc276 = loc(fused[#loc193, #loc194])
#loc277 = loc(fused[#loc195, #loc192])
