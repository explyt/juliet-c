!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc217)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc218)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc219)
  cir.func private @atof(!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc220)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc221)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc11)
  cir.func private @printIntLine(!s32i) loc(#loc222)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc14)
  cir.func no_proto @CWE369_Divide_by_Zero__float_fgets_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc224)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc225)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc226)
    %3 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc227)
    %4 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc25)
    cir.store %4, %3 : !cir.float, !cir.ptr<!cir.float> loc(#loc228)
    cir.br ^bb1 loc(#loc229)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc230)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc230)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc29)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc29)
    cir.brcond %8 ^bb2, ^bb10 loc(#loc231)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc232)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc233)
  ^bb4:  // pred: ^bb3
    %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc38)
    %10 = cir.const #cir.int<20> : !s32i loc(#loc39)
    %11 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc219)
    %12 = cir.load %11 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc40)
    %13 = cir.call @fgets(%9, %10, %12) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc41)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc42)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc42)
    %16 = cir.cmp(ne, %13, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc234)
    cir.brcond %16 ^bb5, ^bb6 loc(#loc235)
  ^bb5:  // pred: ^bb4
    %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc46)
    %18 = cir.call @atof(%17) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc47)
    %19 = cir.cast(floating, %18 : !cir.double), !cir.float loc(#loc47)
    cir.store %19, %3 : !cir.float, !cir.ptr<!cir.float> loc(#loc236)
    cir.br ^bb7 loc(#loc44)
  ^bb6:  // pred: ^bb4
    %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc11)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc11)
    cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc50)
    cir.br ^bb7 loc(#loc37)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc37)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc35)
  ^bb9:  // pred: ^bb8
    cir.br ^bb11 loc(#loc32)
  ^bb10:  // pred: ^bb1
    %22 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc51)
    cir.store %22, %3 : !cir.float, !cir.ptr<!cir.float> loc(#loc237)
    cir.br ^bb11 loc(#loc28)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc28)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc238)
  ^bb13:  // pred: ^bb12
    %23 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc239)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc239)
    %25 = cir.call %24() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc55)
    %26 = cir.cast(int_to_bool, %25 : !s32i), !cir.bool loc(#loc55)
    cir.brcond %26 ^bb14, ^bb17 loc(#loc240)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc241)
  ^bb15:  // pred: ^bb14
    %27 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc62)
    %28 = cir.load %3 : !cir.ptr<!cir.float>, !cir.float loc(#loc63)
    %29 = cir.cast(floating, %28 : !cir.float), !cir.double loc(#loc63)
    %30 = cir.binop(div, %27, %29) : !cir.double loc(#loc242)
    %31 = cir.cast(float_to_int, %30 : !cir.double), !s32i loc(#loc242)
    cir.store %31, %1 : !s32i, !cir.ptr<!s32i> loc(#loc225)
    %32 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc64)
    cir.call @printIntLine(%32) : (!s32i) -> () loc(#loc65)
    cir.br ^bb16 loc(#loc61)
  ^bb16:  // pred: ^bb15
    cir.br ^bb23 loc(#loc58)
  ^bb17:  // pred: ^bb13
    cir.br ^bb18 loc(#loc243)
  ^bb18:  // pred: ^bb17
    %33 = cir.load %3 : !cir.ptr<!cir.float>, !cir.float loc(#loc68)
    %34 = cir.cast(floating, %33 : !cir.float), !cir.double loc(#loc68)
    %35 = cir.fabs %34 : !cir.double loc(#loc68)
    %36 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc69)
    %37 = cir.cmp(gt, %35, %36) : !cir.double, !cir.bool loc(#loc244)
    cir.brcond %37 ^bb19, ^bb20 loc(#loc245)
  ^bb19:  // pred: ^bb18
    %38 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc74)
    %39 = cir.load %3 : !cir.ptr<!cir.float>, !cir.float loc(#loc75)
    %40 = cir.cast(floating, %39 : !cir.float), !cir.double loc(#loc75)
    %41 = cir.binop(div, %38, %40) : !cir.double loc(#loc246)
    %42 = cir.cast(float_to_int, %41 : !cir.double), !s32i loc(#loc246)
    cir.store %42, %2 : !s32i, !cir.ptr<!s32i> loc(#loc226)
    %43 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc76)
    cir.call @printIntLine(%43) : (!s32i) -> () loc(#loc77)
    cir.br ^bb21 loc(#loc72)
  ^bb20:  // pred: ^bb18
    %44 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc14)
    %45 = cir.cast(array_to_ptrdecay, %44 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc14)
    cir.call @printLine(%45) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    cir.br ^bb21 loc(#loc67)
  ^bb21:  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc67)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc54)
  ^bb23:  // 2 preds: ^bb16, ^bb22
    cir.br ^bb24 loc(#loc54)
  ^bb24:  // pred: ^bb23
    cir.return loc(#loc16)
  } loc(#loc223)
  cir.func no_proto @CWE369_Divide_by_Zero__float_fgets_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc248)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc81)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc249)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc83)
    cir.return loc(#loc80)
  } loc(#loc247)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc251)
    %1 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc252)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc253)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc254)
    %4 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc255)
    %5 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc97)
    cir.store %5, %4 : !cir.float, !cir.ptr<!cir.float> loc(#loc256)
    cir.br ^bb1 loc(#loc257)
  ^bb1:  // pred: ^bb0
    %6 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc258)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc258)
    %8 = cir.call %7() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc101)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc101)
    cir.brcond %9 ^bb2, ^bb10 loc(#loc259)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc260)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc261)
  ^bb4:  // pred: ^bb3
    %10 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc110)
    %11 = cir.const #cir.int<20> : !s32i loc(#loc111)
    %12 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc219)
    %13 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc112)
    %14 = cir.call @fgets(%10, %11, %13) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc113)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc114)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc114)
    %17 = cir.cmp(ne, %14, %16) : !cir.ptr<!s8i>, !cir.bool loc(#loc262)
    cir.brcond %17 ^bb5, ^bb6 loc(#loc263)
  ^bb5:  // pred: ^bb4
    %18 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc118)
    %19 = cir.call @atof(%18) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc119)
    %20 = cir.cast(floating, %19 : !cir.double), !cir.float loc(#loc119)
    cir.store %20, %4 : !cir.float, !cir.ptr<!cir.float> loc(#loc264)
    cir.br ^bb7 loc(#loc116)
  ^bb6:  // pred: ^bb4
    %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc122)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc122)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc123)
    cir.br ^bb7 loc(#loc109)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc109)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc107)
  ^bb9:  // pred: ^bb8
    cir.br ^bb18 loc(#loc104)
  ^bb10:  // pred: ^bb1
    cir.br ^bb11 loc(#loc265)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc266)
  ^bb12:  // pred: ^bb11
    %23 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc128)
    %24 = cir.const #cir.int<20> : !s32i loc(#loc129)
    %25 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc219)
    %26 = cir.load %25 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc130)
    %27 = cir.call @fgets(%23, %24, %26) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc131)
    %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc132)
    %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc132)
    %30 = cir.cmp(ne, %27, %29) : !cir.ptr<!s8i>, !cir.bool loc(#loc267)
    cir.brcond %30 ^bb13, ^bb14 loc(#loc268)
  ^bb13:  // pred: ^bb12
    %31 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc136)
    %32 = cir.call @atof(%31) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc137)
    %33 = cir.cast(floating, %32 : !cir.double), !cir.float loc(#loc137)
    cir.store %33, %4 : !cir.float, !cir.ptr<!cir.float> loc(#loc269)
    cir.br ^bb15 loc(#loc134)
  ^bb14:  // pred: ^bb12
    %34 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc140)
    %35 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc140)
    cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc141)
    cir.br ^bb15 loc(#loc127)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc127)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc125)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc100)
  ^bb18:  // 2 preds: ^bb9, ^bb17
    cir.br ^bb19 loc(#loc100)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc270)
  ^bb20:  // pred: ^bb19
    %36 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc271)
    %37 = cir.cast(bitcast, %36 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc271)
    %38 = cir.call %37() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc144)
    %39 = cir.cast(int_to_bool, %38 : !s32i), !cir.bool loc(#loc144)
    cir.brcond %39 ^bb21, ^bb27 loc(#loc272)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc273)
  ^bb22:  // pred: ^bb21
    %40 = cir.load %4 : !cir.ptr<!cir.float>, !cir.float loc(#loc151)
    %41 = cir.cast(floating, %40 : !cir.float), !cir.double loc(#loc151)
    %42 = cir.fabs %41 : !cir.double loc(#loc151)
    %43 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc152)
    %44 = cir.cmp(gt, %42, %43) : !cir.double, !cir.bool loc(#loc274)
    cir.brcond %44 ^bb23, ^bb24 loc(#loc275)
  ^bb23:  // pred: ^bb22
    %45 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc157)
    %46 = cir.load %4 : !cir.ptr<!cir.float>, !cir.float loc(#loc158)
    %47 = cir.cast(floating, %46 : !cir.float), !cir.double loc(#loc158)
    %48 = cir.binop(div, %45, %47) : !cir.double loc(#loc276)
    %49 = cir.cast(float_to_int, %48 : !cir.double), !s32i loc(#loc276)
    cir.store %49, %2 : !s32i, !cir.ptr<!s32i> loc(#loc253)
    %50 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc159)
    cir.call @printIntLine(%50) : (!s32i) -> () loc(#loc160)
    cir.br ^bb25 loc(#loc155)
  ^bb24:  // pred: ^bb22
    %51 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc161)
    %52 = cir.cast(array_to_ptrdecay, %51 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc161)
    cir.call @printLine(%52) : (!cir.ptr<!s8i>) -> () loc(#loc162)
    cir.br ^bb25 loc(#loc150)
  ^bb25:  // 2 preds: ^bb23, ^bb24
    cir.br ^bb26 loc(#loc150)
  ^bb26:  // pred: ^bb25
    cir.br ^bb33 loc(#loc147)
  ^bb27:  // pred: ^bb20
    cir.br ^bb28 loc(#loc277)
  ^bb28:  // pred: ^bb27
    %53 = cir.load %4 : !cir.ptr<!cir.float>, !cir.float loc(#loc165)
    %54 = cir.cast(floating, %53 : !cir.float), !cir.double loc(#loc165)
    %55 = cir.fabs %54 : !cir.double loc(#loc165)
    %56 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc166)
    %57 = cir.cmp(gt, %55, %56) : !cir.double, !cir.bool loc(#loc278)
    cir.brcond %57 ^bb29, ^bb30 loc(#loc279)
  ^bb29:  // pred: ^bb28
    %58 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc171)
    %59 = cir.load %4 : !cir.ptr<!cir.float>, !cir.float loc(#loc172)
    %60 = cir.cast(floating, %59 : !cir.float), !cir.double loc(#loc172)
    %61 = cir.binop(div, %58, %60) : !cir.double loc(#loc280)
    %62 = cir.cast(float_to_int, %61 : !cir.double), !s32i loc(#loc280)
    cir.store %62, %3 : !s32i, !cir.ptr<!s32i> loc(#loc254)
    %63 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc173)
    cir.call @printIntLine(%63) : (!s32i) -> () loc(#loc174)
    cir.br ^bb31 loc(#loc169)
  ^bb30:  // pred: ^bb28
    %64 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc175)
    %65 = cir.cast(array_to_ptrdecay, %64 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc175)
    cir.call @printLine(%65) : (!cir.ptr<!s8i>) -> () loc(#loc176)
    cir.br ^bb31 loc(#loc164)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc164)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc143)
  ^bb33:  // 2 preds: ^bb26, ^bb32
    cir.br ^bb34 loc(#loc143)
  ^bb34:  // pred: ^bb33
    cir.return loc(#loc86)
  } loc(#loc250)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc282)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc283)
    %2 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc284)
    %3 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc185)
    cir.store %3, %2 : !cir.float, !cir.ptr<!cir.float> loc(#loc285)
    cir.br ^bb1 loc(#loc286)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc287)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc287)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc189)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc189)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc288)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc194)
    cir.store %8, %2 : !cir.float, !cir.ptr<!cir.float> loc(#loc289)
    cir.br ^bb4 loc(#loc192)
  ^bb3:  // pred: ^bb1
    %9 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc196)
    cir.store %9, %2 : !cir.float, !cir.ptr<!cir.float> loc(#loc290)
    cir.br ^bb4 loc(#loc188)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc188)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc291)
  ^bb6:  // pred: ^bb5
    %10 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc292)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc292)
    %12 = cir.call %11() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc200)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc200)
    cir.brcond %13 ^bb7, ^bb10 loc(#loc293)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc294)
  ^bb8:  // pred: ^bb7
    %14 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc207)
    %15 = cir.load %2 : !cir.ptr<!cir.float>, !cir.float loc(#loc208)
    %16 = cir.cast(floating, %15 : !cir.float), !cir.double loc(#loc208)
    %17 = cir.binop(div, %14, %16) : !cir.double loc(#loc295)
    %18 = cir.cast(float_to_int, %17 : !cir.double), !s32i loc(#loc295)
    cir.store %18, %0 : !s32i, !cir.ptr<!s32i> loc(#loc282)
    %19 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc209)
    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc210)
    cir.br ^bb9 loc(#loc206)
  ^bb9:  // pred: ^bb8
    cir.br ^bb13 loc(#loc203)
  ^bb10:  // pred: ^bb6
    cir.br ^bb11 loc(#loc296)
  ^bb11:  // pred: ^bb10
    %20 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc213)
    %21 = cir.load %2 : !cir.ptr<!cir.float>, !cir.float loc(#loc214)
    %22 = cir.cast(floating, %21 : !cir.float), !cir.double loc(#loc214)
    %23 = cir.binop(div, %20, %22) : !cir.double loc(#loc297)
    %24 = cir.cast(float_to_int, %23 : !cir.double), !s32i loc(#loc297)
    cir.store %24, %1 : !s32i, !cir.ptr<!s32i> loc(#loc283)
    %25 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc215)
    cir.call @printIntLine(%25) : (!s32i) -> () loc(#loc216)
    cir.br ^bb12 loc(#loc212)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc199)
  ^bb13:  // 2 preds: ^bb9, ^bb12
    cir.br ^bb14 loc(#loc199)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc178)
  } loc(#loc281)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("/usr/include/stdlib.h":102:1)
#loc8 = loc("/usr/include/stdlib.h":103:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":43:27)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc14 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":70:23)
#loc15 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":26:1)
#loc16 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":73:1)
#loc17 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":34:13)
#loc18 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":34:45)
#loc19 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":56:13)
#loc20 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":56:44)
#loc21 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":65:13)
#loc22 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":65:44)
#loc23 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":28:5)
#loc24 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":28:11)
#loc25 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":30:12)
#loc26 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":30:5)
#loc27 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":31:5)
#loc28 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":51:5)
#loc29 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":31:8)
#loc30 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":31:33)
#loc31 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":32:5)
#loc32 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":46:5)
#loc33 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":48:5)
#loc34 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":33:9)
#loc35 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":45:9)
#loc36 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":36:13)
#loc37 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":44:13)
#loc38 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":36:23)
#loc39 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":36:36)
#loc40 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":36:53)
#loc41 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":36:17)
#loc42 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":36:63)
#loc43 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":37:13)
#loc44 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":40:13)
#loc45 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":42:13)
#loc46 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":39:36)
#loc47 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":39:31)
#loc48 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":39:17)
#loc49 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":39:47)
#loc50 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":43:17)
#loc51 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":50:16)
#loc52 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":50:9)
#loc53 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":52:5)
#loc54 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":72:5)
#loc55 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":52:8)
#loc56 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":52:33)
#loc57 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":53:5)
#loc58 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":59:5)
#loc59 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":61:5)
#loc60 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":54:9)
#loc61 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":58:9)
#loc62 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":56:32)
#loc63 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":56:40)
#loc64 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":57:26)
#loc65 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":57:13)
#loc66 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":63:9)
#loc67 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":71:9)
#loc68 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":63:17)
#loc69 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":63:25)
#loc70 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":63:12)
#loc71 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":64:9)
#loc72 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":67:9)
#loc73 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":69:9)
#loc74 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":65:32)
#loc75 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":65:40)
#loc76 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":66:26)
#loc77 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":66:13)
#loc78 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":70:13)
#loc79 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":183:1)
#loc80 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":187:1)
#loc81 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":185:5)
#loc82 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":185:13)
#loc83 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":186:5)
#loc84 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":186:13)
#loc85 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":82:1)
#loc86 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":145:1)
#loc87 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":90:13)
#loc88 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":90:45)
#loc89 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":106:13)
#loc90 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":106:45)
#loc91 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":124:13)
#loc92 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":124:44)
#loc93 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":137:13)
#loc94 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":137:44)
#loc95 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":84:5)
#loc96 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":84:11)
#loc97 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":86:12)
#loc98 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":86:5)
#loc99 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":87:5)
#loc100 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":118:5)
#loc101 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":87:8)
#loc102 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":87:33)
#loc103 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":88:5)
#loc104 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":102:5)
#loc105 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":104:5)
#loc106 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":89:9)
#loc107 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":101:9)
#loc108 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":92:13)
#loc109 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":100:13)
#loc110 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":92:23)
#loc111 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":92:36)
#loc112 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":92:53)
#loc113 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":92:17)
#loc114 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":92:63)
#loc115 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":93:13)
#loc116 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":96:13)
#loc117 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":98:13)
#loc118 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":95:36)
#loc119 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":95:31)
#loc120 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":95:17)
#loc121 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":95:47)
#loc122 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":99:27)
#loc123 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":99:17)
#loc124 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":105:9)
#loc125 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":117:9)
#loc126 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":108:13)
#loc127 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":116:13)
#loc128 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":108:23)
#loc129 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":108:36)
#loc130 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":108:53)
#loc131 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":108:17)
#loc132 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":108:63)
#loc133 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":109:13)
#loc134 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":112:13)
#loc135 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":114:13)
#loc136 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":111:36)
#loc137 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":111:31)
#loc138 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":111:17)
#loc139 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":111:47)
#loc140 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":115:27)
#loc141 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":115:17)
#loc142 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":119:5)
#loc143 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":144:5)
#loc144 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":119:8)
#loc145 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":119:33)
#loc146 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":120:5)
#loc147 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":131:5)
#loc148 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":133:5)
#loc149 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":122:9)
#loc150 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":130:9)
#loc151 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":122:17)
#loc152 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":122:25)
#loc153 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":122:12)
#loc154 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":123:9)
#loc155 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":126:9)
#loc156 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":128:9)
#loc157 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":124:32)
#loc158 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":124:40)
#loc159 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":125:26)
#loc160 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":125:13)
#loc161 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":129:23)
#loc162 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":129:13)
#loc163 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":135:9)
#loc164 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":143:9)
#loc165 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":135:17)
#loc166 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":135:25)
#loc167 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":135:12)
#loc168 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":136:9)
#loc169 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":139:9)
#loc170 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":141:9)
#loc171 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":137:32)
#loc172 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":137:40)
#loc173 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":138:26)
#loc174 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":138:13)
#loc175 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":142:23)
#loc176 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":142:13)
#loc177 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":150:1)
#loc178 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":181:1)
#loc179 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":169:13)
#loc180 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":169:44)
#loc181 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":177:13)
#loc182 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":177:44)
#loc183 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":152:5)
#loc184 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":152:11)
#loc185 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":154:12)
#loc186 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":154:5)
#loc187 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":155:5)
#loc188 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":164:5)
#loc189 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":155:8)
#loc190 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":155:33)
#loc191 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":156:5)
#loc192 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":159:5)
#loc193 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":161:5)
#loc194 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":158:16)
#loc195 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":158:9)
#loc196 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":163:16)
#loc197 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":163:9)
#loc198 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":165:5)
#loc199 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":180:5)
#loc200 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":165:8)
#loc201 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":165:33)
#loc202 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":166:5)
#loc203 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":172:5)
#loc204 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":174:5)
#loc205 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":167:9)
#loc206 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":171:9)
#loc207 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":169:32)
#loc208 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":169:40)
#loc209 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":170:26)
#loc210 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":170:13)
#loc211 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":175:9)
#loc212 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":179:9)
#loc213 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":177:32)
#loc214 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":177:40)
#loc215 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":178:26)
#loc216 = loc("CWE369_Divide_by_Zero__float_fgets_12.c":178:13)
#loc217 = loc(fused[#loc1, #loc2])
#loc218 = loc(fused[#loc3, #loc4])
#loc219 = loc(fused[#loc5, #loc6])
#loc220 = loc(fused[#loc7, #loc8])
#loc221 = loc(fused[#loc9, #loc10])
#loc222 = loc(fused[#loc12, #loc13])
#loc223 = loc(fused[#loc15, #loc16])
#loc224 = loc(fused[#loc17, #loc18])
#loc225 = loc(fused[#loc19, #loc20])
#loc226 = loc(fused[#loc21, #loc22])
#loc227 = loc(fused[#loc23, #loc24])
#loc228 = loc(fused[#loc26, #loc25])
#loc229 = loc(fused[#loc27, #loc28])
#loc230 = loc(fused[#loc29, #loc30])
#loc231 = loc(fused[#loc31, #loc32, #loc33, #loc28])
#loc232 = loc(fused[#loc34, #loc35])
#loc233 = loc(fused[#loc36, #loc37])
#loc234 = loc(fused[#loc41, #loc42])
#loc235 = loc(fused[#loc43, #loc44, #loc45, #loc37])
#loc236 = loc(fused[#loc48, #loc49])
#loc237 = loc(fused[#loc52, #loc51])
#loc238 = loc(fused[#loc53, #loc54])
#loc239 = loc(fused[#loc55, #loc56])
#loc240 = loc(fused[#loc57, #loc58, #loc59, #loc54])
#loc241 = loc(fused[#loc60, #loc61])
#loc242 = loc(fused[#loc62, #loc63])
#loc243 = loc(fused[#loc66, #loc67])
#loc244 = loc(fused[#loc70, #loc69])
#loc245 = loc(fused[#loc71, #loc72, #loc73, #loc67])
#loc246 = loc(fused[#loc74, #loc75])
#loc247 = loc(fused[#loc79, #loc80])
#loc248 = loc(fused[#loc81, #loc82])
#loc249 = loc(fused[#loc83, #loc84])
#loc250 = loc(fused[#loc85, #loc86])
#loc251 = loc(fused[#loc87, #loc88])
#loc252 = loc(fused[#loc89, #loc90])
#loc253 = loc(fused[#loc91, #loc92])
#loc254 = loc(fused[#loc93, #loc94])
#loc255 = loc(fused[#loc95, #loc96])
#loc256 = loc(fused[#loc98, #loc97])
#loc257 = loc(fused[#loc99, #loc100])
#loc258 = loc(fused[#loc101, #loc102])
#loc259 = loc(fused[#loc103, #loc104, #loc105, #loc100])
#loc260 = loc(fused[#loc106, #loc107])
#loc261 = loc(fused[#loc108, #loc109])
#loc262 = loc(fused[#loc113, #loc114])
#loc263 = loc(fused[#loc115, #loc116, #loc117, #loc109])
#loc264 = loc(fused[#loc120, #loc121])
#loc265 = loc(fused[#loc124, #loc125])
#loc266 = loc(fused[#loc126, #loc127])
#loc267 = loc(fused[#loc131, #loc132])
#loc268 = loc(fused[#loc133, #loc134, #loc135, #loc127])
#loc269 = loc(fused[#loc138, #loc139])
#loc270 = loc(fused[#loc142, #loc143])
#loc271 = loc(fused[#loc144, #loc145])
#loc272 = loc(fused[#loc146, #loc147, #loc148, #loc143])
#loc273 = loc(fused[#loc149, #loc150])
#loc274 = loc(fused[#loc153, #loc152])
#loc275 = loc(fused[#loc154, #loc155, #loc156, #loc150])
#loc276 = loc(fused[#loc157, #loc158])
#loc277 = loc(fused[#loc163, #loc164])
#loc278 = loc(fused[#loc167, #loc166])
#loc279 = loc(fused[#loc168, #loc169, #loc170, #loc164])
#loc280 = loc(fused[#loc171, #loc172])
#loc281 = loc(fused[#loc177, #loc178])
#loc282 = loc(fused[#loc179, #loc180])
#loc283 = loc(fused[#loc181, #loc182])
#loc284 = loc(fused[#loc183, #loc184])
#loc285 = loc(fused[#loc186, #loc185])
#loc286 = loc(fused[#loc187, #loc188])
#loc287 = loc(fused[#loc189, #loc190])
#loc288 = loc(fused[#loc191, #loc192, #loc193, #loc188])
#loc289 = loc(fused[#loc195, #loc194])
#loc290 = loc(fused[#loc197, #loc196])
#loc291 = loc(fused[#loc198, #loc199])
#loc292 = loc(fused[#loc200, #loc201])
#loc293 = loc(fused[#loc202, #loc203, #loc204, #loc199])
#loc294 = loc(fused[#loc205, #loc206])
#loc295 = loc(fused[#loc207, #loc208])
#loc296 = loc(fused[#loc211, #loc212])
#loc297 = loc(fused[#loc213, #loc214])
