!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_63b.c":21:80)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_63b.c":21:88)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_63b.c":37:84)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_63b.c":37:92)
#loc51 = loc(fused[#loc5, #loc6])
#loc59 = loc(fused[#loc28, #loc29])
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_63b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @printIntLine(!s32i) loc(#loc49)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_63b_badSink(%arg0: !cir.ptr<!cir.ptr<!s32i>> loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc51)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc52)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc9)
    %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc8)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc10)
    cir.store %3, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc52)
    cir.scope {
      %4 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc54)
      %5 = cir.const #cir.zero : !cir.array<!s32i x 100> loc(#loc54)
      cir.store %5, %4 : !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>> loc(#loc54)
      %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc15)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc15)
      %8 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc16)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc16)
      %10 = cir.const #cir.int<100> : !s32i loc(#loc17)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc17)
      %12 = cir.const #cir.int<4> : !u64i loc(#loc55)
      %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc56)
      cir.libc.memcpy %13 bytes from %9 to %7 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc57)
      %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc22)
      %15 = cir.const #cir.int<0> : !s32i loc(#loc23)
      %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc24)
      %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc22)
      cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc25)
    } loc(#loc53)
    cir.return loc(#loc4)
  } loc(#loc50)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_63b_goodG2BSink(%arg0: !cir.ptr<!cir.ptr<!s32i>> loc(fused[#loc28, #loc29])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc59)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc60)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc32)
    %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc31)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc33)
    cir.store %3, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc60)
    cir.scope {
      %4 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc62)
      %5 = cir.const #cir.zero : !cir.array<!s32i x 100> loc(#loc62)
      cir.store %5, %4 : !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>> loc(#loc62)
      %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc38)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc38)
      %8 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc39)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc39)
      %10 = cir.const #cir.int<100> : !s32i loc(#loc40)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc40)
      %12 = cir.const #cir.int<4> : !u64i loc(#loc63)
      %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc64)
      cir.libc.memcpy %13 bytes from %9 to %7 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc65)
      %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc45)
      %15 = cir.const #cir.int<0> : !s32i loc(#loc46)
      %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc47)
      %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc45)
      cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc48)
    } loc(#loc61)
    cir.return loc(#loc27)
  } loc(#loc58)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_63b.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_63b.c":21:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_63b.c":30:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_63b.c":23:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_63b.c":23:19)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_63b.c":22:1)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_63b.c":23:18)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_63b.c":24:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_63b.c":29:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_63b.c":25:9)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_63b.c":25:29)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_63b.c":27:16)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_63b.c":27:22)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_63b.c":27:30)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_63b.c":27:34)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_63b.c":27:44)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_63b.c":27:9)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_63b.c":27:45)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_63b.c":28:22)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_63b.c":28:27)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_63b.c":28:28)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_63b.c":28:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_63b.c":37:1)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_63b.c":46:1)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_63b.c":39:5)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_63b.c":39:19)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_63b.c":38:1)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_63b.c":39:18)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_63b.c":40:5)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_63b.c":45:5)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_63b.c":41:9)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_63b.c":41:29)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_63b.c":43:16)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_63b.c":43:22)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_63b.c":43:30)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_63b.c":43:34)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_63b.c":43:44)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_63b.c":43:9)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_63b.c":43:45)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_63b.c":44:22)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_63b.c":44:27)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_63b.c":44:28)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_63b.c":44:9)
#loc49 = loc(fused[#loc1, #loc2])
#loc50 = loc(fused[#loc3, #loc4])
#loc52 = loc(fused[#loc7, #loc8])
#loc53 = loc(fused[#loc11, #loc12])
#loc54 = loc(fused[#loc13, #loc14])
#loc55 = loc(fused[#loc18, #loc19])
#loc56 = loc(fused[#loc17, #loc19])
#loc57 = loc(fused[#loc20, #loc21])
#loc58 = loc(fused[#loc26, #loc27])
#loc60 = loc(fused[#loc30, #loc31])
#loc61 = loc(fused[#loc34, #loc35])
#loc62 = loc(fused[#loc36, #loc37])
#loc63 = loc(fused[#loc41, #loc42])
#loc64 = loc(fused[#loc40, #loc42])
#loc65 = loc(fused[#loc43, #loc44])
