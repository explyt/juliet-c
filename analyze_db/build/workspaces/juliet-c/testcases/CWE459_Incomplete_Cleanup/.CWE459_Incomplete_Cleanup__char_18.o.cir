!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE459_Incomplete_Cleanup/CWE459_Incomplete_Cleanup__char_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.good1.filename = #cir.const_array<"goodXXXXXX\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc85)
  cir.global "private" constant cir_private @__const.CWE459_Incomplete_Cleanup__char_18_bad.filename = #cir.const_array<"badXXXXXX\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> loc(#loc86)
  cir.func private @mkstemp(!cir.ptr<!s8i>) -> !s32i loc(#loc87)
  cir.func private @fdopen(!s32i, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> extra(#fn_attr) loc(#loc88)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc9)
  cir.func private @fprintf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc89)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Temporary file\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc12)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc90)
  cir.func no_proto @CWE459_Incomplete_Cleanup__char_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["filename"] {alignment = 1 : i64} loc(#loc86)
    %1 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile"] {alignment = 8 : i64} loc(#loc92)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc93)
    cir.goto "sink" loc(#loc94)
  ^bb1:  // no predecessors
    cir.label "sink" loc(#loc23)
    %3 = cir.get_global @__const.CWE459_Incomplete_Cleanup__char_18_bad.filename : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc86)
    cir.copy %3 to %0 : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc86)
    %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc24)
    %5 = cir.call @mkstemp(%4) : (!cir.ptr<!s8i>) -> !s32i loc(#loc25)
    cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc93)
    cir.scope {
      %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc28)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc29)
      %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc30)
      %9 = cir.cmp(ne, %6, %8) : !s32i, !cir.bool loc(#loc96)
      cir.if %9 {
        %10 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc32)
        %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc9)
        %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc9)
        %13 = cir.call @fdopen(%10, %12) : (!s32i, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> extra(#fn_attr) loc(#loc33)
        cir.store %13, %1 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc98)
        cir.scope {
          %14 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc38)
          %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc39)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc39)
          %17 = cir.cmp(ne, %14, %16) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc100)
          cir.if %17 {
            %18 = cir.get_global @fprintf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc41)
            %19 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc42)
            %20 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc12)
            %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc12)
            %22 = cir.call @fprintf(%19, %21) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc41)
            %23 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc43)
            %24 = cir.call @fclose(%23) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc44)
          } loc(#loc101)
        } loc(#loc99)
      } loc(#loc97)
    } loc(#loc95)
    cir.return loc(#loc16)
  } loc(#loc91)
  cir.func no_proto @CWE459_Incomplete_Cleanup__char_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc103)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc47)
    cir.return loc(#loc46)
  } loc(#loc102)
  cir.func private @unlink(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc104)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["filename"] {alignment = 1 : i64} loc(#loc85)
    %1 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile"] {alignment = 8 : i64} loc(#loc106)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc107)
    cir.goto "sink" loc(#loc108)
  ^bb1:  // no predecessors
    cir.label "sink" loc(#loc59)
    %3 = cir.get_global @__const.good1.filename : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc85)
    cir.copy %3 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc85)
    %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc60)
    %5 = cir.call @mkstemp(%4) : (!cir.ptr<!s8i>) -> !s32i loc(#loc61)
    cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc107)
    cir.scope {
      %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc64)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc65)
      %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc66)
      %9 = cir.cmp(ne, %6, %8) : !s32i, !cir.bool loc(#loc110)
      cir.if %9 {
        %10 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc68)
        %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc69)
        %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc69)
        %13 = cir.call @fdopen(%10, %12) : (!s32i, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> extra(#fn_attr) loc(#loc70)
        cir.store %13, %1 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc112)
        cir.scope {
          %14 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc75)
          %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc76)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc76)
          %17 = cir.cmp(ne, %14, %16) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc114)
          cir.if %17 {
            %18 = cir.get_global @fprintf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc78)
            %19 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc79)
            %20 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc80)
            %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc80)
            %22 = cir.call @fprintf(%19, %21) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc78)
            %23 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc81)
            %24 = cir.call @fclose(%23) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc82)
            %25 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc83)
            %26 = cir.call @unlink(%25) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc84)
          } loc(#loc115)
        } loc(#loc113)
      } loc(#loc111)
    } loc(#loc109)
    cir.return loc(#loc52)
  } loc(#loc105)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE459_Incomplete_Cleanup/CWE459_Incomplete_Cleanup__char_18.c":0:0)
#loc1 = loc("CWE459_Incomplete_Cleanup__char_18.c":71:9)
#loc2 = loc("CWE459_Incomplete_Cleanup__char_18.c":71:27)
#loc3 = loc("CWE459_Incomplete_Cleanup__char_18.c":44:9)
#loc4 = loc("CWE459_Incomplete_Cleanup__char_18.c":44:27)
#loc5 = loc("/usr/include/stdlib.h":827:1)
#loc6 = loc("/usr/include/stdlib.h":827:39)
#loc7 = loc("/usr/include/stdio.h":299:1)
#loc8 = loc("/usr/include/stdio.h":300:3)
#loc9 = loc("CWE459_Incomplete_Cleanup__char_18.c":50:38)
#loc10 = loc("/usr/include/stdio.h":357:1)
#loc11 = loc("/usr/include/stdio.h":358:45)
#loc12 = loc("CWE459_Incomplete_Cleanup__char_18.c":53:32)
#loc13 = loc("/usr/include/stdio.h":184:1)
#loc14 = loc("/usr/include/stdio.h":184:36)
#loc15 = loc("CWE459_Incomplete_Cleanup__char_18.c":39:1)
#loc16 = loc("CWE459_Incomplete_Cleanup__char_18.c":59:1)
#loc17 = loc("CWE459_Incomplete_Cleanup__char_18.c":45:9)
#loc18 = loc("CWE459_Incomplete_Cleanup__char_18.c":45:15)
#loc19 = loc("CWE459_Incomplete_Cleanup__char_18.c":47:9)
#loc20 = loc("CWE459_Incomplete_Cleanup__char_18.c":47:40)
#loc21 = loc("CWE459_Incomplete_Cleanup__char_18.c":41:5)
#loc22 = loc("CWE459_Incomplete_Cleanup__char_18.c":41:10)
#loc23 = loc("CWE459_Incomplete_Cleanup__char_18.c":42:1)
#loc24 = loc("CWE459_Incomplete_Cleanup__char_18.c":47:32)
#loc25 = loc("CWE459_Incomplete_Cleanup__char_18.c":47:24)
#loc26 = loc("CWE459_Incomplete_Cleanup__char_18.c":48:9)
#loc27 = loc("CWE459_Incomplete_Cleanup__char_18.c":57:9)
#loc28 = loc("CWE459_Incomplete_Cleanup__char_18.c":48:13)
#loc29 = loc("CWE459_Incomplete_Cleanup__char_18.c":48:26)
#loc30 = loc("CWE459_Incomplete_Cleanup__char_18.c":48:25)
#loc31 = loc("CWE459_Incomplete_Cleanup__char_18.c":49:9)
#loc32 = loc("CWE459_Incomplete_Cleanup__char_18.c":50:28)
#loc33 = loc("CWE459_Incomplete_Cleanup__char_18.c":50:21)
#loc34 = loc("CWE459_Incomplete_Cleanup__char_18.c":50:13)
#loc35 = loc("CWE459_Incomplete_Cleanup__char_18.c":50:41)
#loc36 = loc("CWE459_Incomplete_Cleanup__char_18.c":51:13)
#loc37 = loc("CWE459_Incomplete_Cleanup__char_18.c":56:13)
#loc38 = loc("CWE459_Incomplete_Cleanup__char_18.c":51:17)
#loc39 = loc("CWE459_Incomplete_Cleanup__char_18.c":51:26)
#loc40 = loc("CWE459_Incomplete_Cleanup__char_18.c":52:13)
#loc41 = loc("CWE459_Incomplete_Cleanup__char_18.c":53:17)
#loc42 = loc("CWE459_Incomplete_Cleanup__char_18.c":53:25)
#loc43 = loc("CWE459_Incomplete_Cleanup__char_18.c":54:24)
#loc44 = loc("CWE459_Incomplete_Cleanup__char_18.c":54:17)
#loc45 = loc("CWE459_Incomplete_Cleanup__char_18.c":89:1)
#loc46 = loc("CWE459_Incomplete_Cleanup__char_18.c":92:1)
#loc47 = loc("CWE459_Incomplete_Cleanup__char_18.c":91:5)
#loc48 = loc("CWE459_Incomplete_Cleanup__char_18.c":91:11)
#loc49 = loc("/usr/include/unistd.h":858:1)
#loc50 = loc("/usr/include/unistd.h":858:48)
#loc51 = loc("CWE459_Incomplete_Cleanup__char_18.c":66:1)
#loc52 = loc("CWE459_Incomplete_Cleanup__char_18.c":87:1)
#loc53 = loc("CWE459_Incomplete_Cleanup__char_18.c":72:9)
#loc54 = loc("CWE459_Incomplete_Cleanup__char_18.c":72:15)
#loc55 = loc("CWE459_Incomplete_Cleanup__char_18.c":74:9)
#loc56 = loc("CWE459_Incomplete_Cleanup__char_18.c":74:40)
#loc57 = loc("CWE459_Incomplete_Cleanup__char_18.c":68:5)
#loc58 = loc("CWE459_Incomplete_Cleanup__char_18.c":68:10)
#loc59 = loc("CWE459_Incomplete_Cleanup__char_18.c":69:1)
#loc60 = loc("CWE459_Incomplete_Cleanup__char_18.c":74:32)
#loc61 = loc("CWE459_Incomplete_Cleanup__char_18.c":74:24)
#loc62 = loc("CWE459_Incomplete_Cleanup__char_18.c":75:9)
#loc63 = loc("CWE459_Incomplete_Cleanup__char_18.c":85:9)
#loc64 = loc("CWE459_Incomplete_Cleanup__char_18.c":75:13)
#loc65 = loc("CWE459_Incomplete_Cleanup__char_18.c":75:26)
#loc66 = loc("CWE459_Incomplete_Cleanup__char_18.c":75:25)
#loc67 = loc("CWE459_Incomplete_Cleanup__char_18.c":76:9)
#loc68 = loc("CWE459_Incomplete_Cleanup__char_18.c":77:28)
#loc69 = loc("CWE459_Incomplete_Cleanup__char_18.c":77:38)
#loc70 = loc("CWE459_Incomplete_Cleanup__char_18.c":77:21)
#loc71 = loc("CWE459_Incomplete_Cleanup__char_18.c":77:13)
#loc72 = loc("CWE459_Incomplete_Cleanup__char_18.c":77:41)
#loc73 = loc("CWE459_Incomplete_Cleanup__char_18.c":78:13)
#loc74 = loc("CWE459_Incomplete_Cleanup__char_18.c":84:13)
#loc75 = loc("CWE459_Incomplete_Cleanup__char_18.c":78:17)
#loc76 = loc("CWE459_Incomplete_Cleanup__char_18.c":78:26)
#loc77 = loc("CWE459_Incomplete_Cleanup__char_18.c":79:13)
#loc78 = loc("CWE459_Incomplete_Cleanup__char_18.c":80:17)
#loc79 = loc("CWE459_Incomplete_Cleanup__char_18.c":80:25)
#loc80 = loc("CWE459_Incomplete_Cleanup__char_18.c":80:32)
#loc81 = loc("CWE459_Incomplete_Cleanup__char_18.c":81:24)
#loc82 = loc("CWE459_Incomplete_Cleanup__char_18.c":81:17)
#loc83 = loc("CWE459_Incomplete_Cleanup__char_18.c":83:24)
#loc84 = loc("CWE459_Incomplete_Cleanup__char_18.c":83:17)
#loc85 = loc(fused[#loc1, #loc2])
#loc86 = loc(fused[#loc3, #loc4])
#loc87 = loc(fused[#loc5, #loc6])
#loc88 = loc(fused[#loc7, #loc8])
#loc89 = loc(fused[#loc10, #loc11])
#loc90 = loc(fused[#loc13, #loc14])
#loc91 = loc(fused[#loc15, #loc16])
#loc92 = loc(fused[#loc17, #loc18])
#loc93 = loc(fused[#loc19, #loc20])
#loc94 = loc(fused[#loc21, #loc22])
#loc95 = loc(fused[#loc26, #loc27])
#loc96 = loc(fused[#loc28, #loc29])
#loc97 = loc(fused[#loc31, #loc27])
#loc98 = loc(fused[#loc34, #loc35])
#loc99 = loc(fused[#loc36, #loc37])
#loc100 = loc(fused[#loc38, #loc39])
#loc101 = loc(fused[#loc40, #loc37])
#loc102 = loc(fused[#loc45, #loc46])
#loc103 = loc(fused[#loc47, #loc48])
#loc104 = loc(fused[#loc49, #loc50])
#loc105 = loc(fused[#loc51, #loc52])
#loc106 = loc(fused[#loc53, #loc54])
#loc107 = loc(fused[#loc55, #loc56])
#loc108 = loc(fused[#loc57, #loc58])
#loc109 = loc(fused[#loc62, #loc63])
#loc110 = loc(fused[#loc64, #loc65])
#loc111 = loc(fused[#loc67, #loc63])
#loc112 = loc(fused[#loc71, #loc72])
#loc113 = loc(fused[#loc73, #loc74])
#loc114 = loc(fused[#loc75, #loc76])
#loc115 = loc(fused[#loc77, #loc74])
