!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @__isoc23_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc101)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc102)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%ld\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc103)
  cir.func private @printLongLongLine(!s64i) loc(#loc104)
  cir.func @_ZN52CWE191_Integer_Underflow__int64_t_fscanf_multiply_333badEv() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc106)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc107)
    %2 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc108)
    %3 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc109)
    cir.store %2, %3 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc18)
    %4 = cir.const #cir.int<0> : !s64i loc(#loc19)
    cir.store %4, %2 : !s64i, !cir.ptr<!s64i> loc(#loc110)
    %5 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc21)
    %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc102)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc22)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc103)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc103)
    %10 = cir.call @__isoc23_fscanf(%7, %9, %2) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc21)
    cir.br ^bb1 loc(#loc111)
  ^bb1:  // pred: ^bb0
    %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc12)
    %12 = cir.load %11 : !cir.ptr<!s64i>, !s64i loc(#loc12)
    cir.store %12, %0 : !s64i, !cir.ptr<!s64i> loc(#loc106)
    cir.br ^bb2 loc(#loc112)
  ^bb2:  // pred: ^bb1
    %13 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc27)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc28)
    %15 = cir.cast(integral, %14 : !s32i), !s64i loc(#loc28)
    %16 = cir.cmp(lt, %13, %15) : !s64i, !cir.bool loc(#loc113)
    cir.brcond %16 ^bb3, ^bb4 loc(#loc114)
  ^bb3:  // pred: ^bb2
    %17 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc30)
    %18 = cir.const #cir.int<2> : !s32i loc(#loc14)
    %19 = cir.cast(integral, %18 : !s32i), !s64i loc(#loc14)
    %20 = cir.binop(mul, %17, %19) nsw : !s64i loc(#loc30)
    cir.store %20, %1 : !s64i, !cir.ptr<!s64i> loc(#loc107)
    %21 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc31)
    cir.call @printLongLongLine(%21) : (!s64i) -> () loc(#loc32)
    cir.br ^bb4 loc(#loc26)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc26)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc24)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc10)
  } loc(#loc105)
  cir.func internal private @_ZN52CWE191_Integer_Underflow__int64_t_fscanf_multiply_33L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc116)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc117)
    %2 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc118)
    %3 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc119)
    cir.store %2, %3 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc42)
    %4 = cir.const #cir.int<0> : !s64i loc(#loc43)
    cir.store %4, %2 : !s64i, !cir.ptr<!s64i> loc(#loc120)
    %5 = cir.const #cir.int<2> : !s32i loc(#loc45)
    %6 = cir.unary(minus, %5) nsw : !s32i, !s32i loc(#loc46)
    %7 = cir.cast(integral, %6 : !s32i), !s64i loc(#loc46)
    cir.store %7, %2 : !s64i, !cir.ptr<!s64i> loc(#loc121)
    cir.br ^bb1 loc(#loc122)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %3 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc36)
    %9 = cir.load %8 : !cir.ptr<!s64i>, !s64i loc(#loc36)
    cir.store %9, %0 : !s64i, !cir.ptr<!s64i> loc(#loc116)
    cir.br ^bb2 loc(#loc123)
  ^bb2:  // pred: ^bb1
    %10 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc52)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc53)
    %12 = cir.cast(integral, %11 : !s32i), !s64i loc(#loc53)
    %13 = cir.cmp(lt, %10, %12) : !s64i, !cir.bool loc(#loc124)
    cir.brcond %13 ^bb3, ^bb4 loc(#loc125)
  ^bb3:  // pred: ^bb2
    %14 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc55)
    %15 = cir.const #cir.int<2> : !s32i loc(#loc38)
    %16 = cir.cast(integral, %15 : !s32i), !s64i loc(#loc38)
    %17 = cir.binop(mul, %14, %16) nsw : !s64i loc(#loc55)
    cir.store %17, %1 : !s64i, !cir.ptr<!s64i> loc(#loc117)
    %18 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc56)
    cir.call @printLongLongLine(%18) : (!s64i) -> () loc(#loc57)
    cir.br ^bb4 loc(#loc51)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc51)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc49)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc34)
  } loc(#loc115)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc126)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc60)
  cir.func internal private @_ZN52CWE191_Integer_Underflow__int64_t_fscanf_multiply_33L7goodB2GEv() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc128)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc129)
    %2 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc130)
    %3 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc131)
    cir.store %2, %3 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc70)
    %4 = cir.const #cir.int<0> : !s64i loc(#loc71)
    cir.store %4, %2 : !s64i, !cir.ptr<!s64i> loc(#loc132)
    %5 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc73)
    %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc102)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc74)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc133)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc133)
    %10 = cir.call @__isoc23_fscanf(%7, %9, %2) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc73)
    cir.br ^bb1 loc(#loc134)
  ^bb1:  // pred: ^bb0
    %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc64)
    %12 = cir.load %11 : !cir.ptr<!s64i>, !s64i loc(#loc64)
    cir.store %12, %0 : !s64i, !cir.ptr<!s64i> loc(#loc128)
    cir.br ^bb2 loc(#loc135)
  ^bb2:  // pred: ^bb1
    %13 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc81)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc82)
    %15 = cir.cast(integral, %14 : !s32i), !s64i loc(#loc82)
    %16 = cir.cmp(lt, %13, %15) : !s64i, !cir.bool loc(#loc136)
    cir.brcond %16 ^bb3, ^bb9 loc(#loc137)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc138)
  ^bb4:  // pred: ^bb3
    %17 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc86)
    %18 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc87)
    %19 = cir.unary(minus, %18) nsw : !s64i, !s64i loc(#loc87)
    %20 = cir.const #cir.int<1> : !s64i loc(#loc87)
    %21 = cir.binop(sub, %19, %20) nsw : !s64i loc(#loc87)
    %22 = cir.const #cir.int<2> : !s32i loc(#loc88)
    %23 = cir.cast(integral, %22 : !s32i), !s64i loc(#loc88)
    %24 = cir.binop(div, %21, %23) : !s64i loc(#loc139)
    %25 = cir.cmp(gt, %17, %24) : !s64i, !cir.bool loc(#loc140)
    cir.brcond %25 ^bb5, ^bb6 loc(#loc141)
  ^bb5:  // pred: ^bb4
    %26 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc93)
    %27 = cir.const #cir.int<2> : !s32i loc(#loc66)
    %28 = cir.cast(integral, %27 : !s32i), !s64i loc(#loc66)
    %29 = cir.binop(mul, %26, %28) nsw : !s64i loc(#loc93)
    cir.store %29, %1 : !s64i, !cir.ptr<!s64i> loc(#loc129)
    %30 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc94)
    cir.call @printLongLongLine(%30) : (!s64i) -> () loc(#loc95)
    cir.br ^bb7 loc(#loc91)
  ^bb6:  // pred: ^bb4
    %31 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc60)
    %32 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%32) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    cir.br ^bb7 loc(#loc85)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc85)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc80)
  ^bb9:  // 2 preds: ^bb2, ^bb8
    cir.br ^bb10 loc(#loc80)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc78)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc62)
  } loc(#loc127)
  cir.func @_ZN52CWE191_Integer_Underflow__int64_t_fscanf_multiply_334goodEv() extra(#fn_attr) {
    cir.call @_ZN52CWE191_Integer_Underflow__int64_t_fscanf_multiply_33L7goodG2BEv() : () -> () loc(#loc99)
    cir.call @_ZN52CWE191_Integer_Underflow__int64_t_fscanf_multiply_33L7goodB2GEv() : () -> () loc(#loc100)
    cir.return loc(#loc98)
  } loc(#loc142)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":442:1)
#loc2 = loc("/usr/include/stdio.h":444:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":32:20)
#loc6 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":32:24)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc9 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":26:1)
#loc10 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":42:1)
#loc11 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":34:9)
#loc12 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":34:24)
#loc13 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":38:13)
#loc14 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":38:37)
#loc15 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":28:5)
#loc16 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":28:13)
#loc17 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":29:5)
#loc18 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":29:24)
#loc19 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":30:12)
#loc20 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":30:5)
#loc21 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":32:5)
#loc22 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":32:13)
#loc23 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":33:5)
#loc24 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":41:5)
#loc25 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":35:9)
#loc26 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":40:9)
#loc27 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":35:12)
#loc28 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":35:19)
#loc29 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":36:9)
#loc30 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":38:30)
#loc31 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":39:31)
#loc32 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":39:13)
#loc33 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":49:1)
#loc34 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":65:1)
#loc35 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":57:9)
#loc36 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":57:24)
#loc37 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":61:13)
#loc38 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":61:37)
#loc39 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":51:5)
#loc40 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":51:13)
#loc41 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":52:5)
#loc42 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":52:24)
#loc43 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":53:12)
#loc44 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":53:5)
#loc45 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":55:13)
#loc46 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":55:12)
#loc47 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":55:5)
#loc48 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":56:5)
#loc49 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":64:5)
#loc50 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":58:9)
#loc51 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":63:9)
#loc52 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":58:12)
#loc53 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":58:19)
#loc54 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":59:9)
#loc55 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":61:30)
#loc56 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":62:31)
#loc57 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":62:13)
#loc58 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc59 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc60 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":87:27)
#loc61 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":68:1)
#loc62 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":91:1)
#loc63 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":76:9)
#loc64 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":76:24)
#loc65 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":82:17)
#loc66 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":82:41)
#loc67 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":70:5)
#loc68 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":70:13)
#loc69 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":71:5)
#loc70 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":71:24)
#loc71 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":72:12)
#loc72 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":72:5)
#loc73 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":74:5)
#loc74 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":74:13)
#loc75 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":74:20)
#loc76 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":74:24)
#loc77 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":75:5)
#loc78 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":90:5)
#loc79 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":77:9)
#loc80 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":89:9)
#loc81 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":77:12)
#loc82 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":77:19)
#loc83 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":78:9)
#loc84 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":80:13)
#loc85 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":88:13)
#loc86 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":80:17)
#loc87 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":80:25)
#loc88 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":80:35)
#loc89 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":80:36)
#loc90 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":81:13)
#loc91 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":84:13)
#loc92 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":86:13)
#loc93 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":82:34)
#loc94 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":83:35)
#loc95 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":83:17)
#loc96 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":87:17)
#loc97 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":93:1)
#loc98 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":97:1)
#loc99 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":95:5)
#loc100 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_33.cpp":96:5)
#loc101 = loc(fused[#loc1, #loc2])
#loc102 = loc(fused[#loc3, #loc4])
#loc103 = loc(fused[#loc5, #loc6])
#loc104 = loc(fused[#loc7, #loc8])
#loc105 = loc(fused[#loc9, #loc10])
#loc106 = loc(fused[#loc11, #loc12])
#loc107 = loc(fused[#loc13, #loc14])
#loc108 = loc(fused[#loc15, #loc16])
#loc109 = loc(fused[#loc17, #loc18])
#loc110 = loc(fused[#loc20, #loc19])
#loc111 = loc(fused[#loc23, #loc24])
#loc112 = loc(fused[#loc25, #loc26])
#loc113 = loc(fused[#loc27, #loc28])
#loc114 = loc(fused[#loc29, #loc26])
#loc115 = loc(fused[#loc33, #loc34])
#loc116 = loc(fused[#loc35, #loc36])
#loc117 = loc(fused[#loc37, #loc38])
#loc118 = loc(fused[#loc39, #loc40])
#loc119 = loc(fused[#loc41, #loc42])
#loc120 = loc(fused[#loc44, #loc43])
#loc121 = loc(fused[#loc47, #loc45])
#loc122 = loc(fused[#loc48, #loc49])
#loc123 = loc(fused[#loc50, #loc51])
#loc124 = loc(fused[#loc52, #loc53])
#loc125 = loc(fused[#loc54, #loc51])
#loc126 = loc(fused[#loc58, #loc59])
#loc127 = loc(fused[#loc61, #loc62])
#loc128 = loc(fused[#loc63, #loc64])
#loc129 = loc(fused[#loc65, #loc66])
#loc130 = loc(fused[#loc67, #loc68])
#loc131 = loc(fused[#loc69, #loc70])
#loc132 = loc(fused[#loc72, #loc71])
#loc133 = loc(fused[#loc75, #loc76])
#loc134 = loc(fused[#loc77, #loc78])
#loc135 = loc(fused[#loc79, #loc80])
#loc136 = loc(fused[#loc81, #loc82])
#loc137 = loc(fused[#loc83, #loc80])
#loc138 = loc(fused[#loc84, #loc85])
#loc139 = loc(fused[#loc87, #loc88])
#loc140 = loc(fused[#loc86, #loc89])
#loc141 = loc(fused[#loc90, #loc91, #loc92, #loc85])
#loc142 = loc(fused[#loc97, #loc98])
