!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_char_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc238)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc239)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc240)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc241)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc242)
  cir.func no_proto @CWE416_Use_After_Free__malloc_free_char_05_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc244)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc15)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc245)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc238)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc19)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc19)
      cir.if %4 {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc21)
        %6 = cir.const #cir.int<100> : !s32i loc(#loc22)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc22)
        %8 = cir.const #cir.int<1> : !u64i loc(#loc248)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc249)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc21)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc250)
        cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc251)
        cir.scope {
          %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
          %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc30)
          %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc30)
          %32 = cir.cmp(eq, %29, %31) : !cir.ptr<!s8i>, !cir.bool loc(#loc253)
          cir.if %32 {
            %33 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc32)
            %34 = cir.const #cir.int<1> : !s32i loc(#loc33)
            %35 = cir.unary(minus, %34) nsw : !s32i, !s32i loc(#loc34)
            cir.call @exit(%35) : (!s32i) -> () extra(#fn_attr) loc(#loc32)
          } loc(#loc254)
        } loc(#loc252)
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc35)
        %14 = cir.const #cir.int<65> : !s32i loc(#loc36)
        %15 = cir.const #cir.int<100> : !s32i loc(#loc37)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc38)
        %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc37)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc37)
        cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc255)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc41)
        %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc41)
        %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
        %22 = cir.const #cir.int<100> : !s32i loc(#loc43)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc44)
        %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc43)
        %25 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc45)
        cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc256)
        %26 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc46)
        %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
        %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc47)
        cir.call @free(%28) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc46)
      } loc(#loc247)
    } loc(#loc246)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc238)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc50)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc50)
      cir.if %4 {
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc53)
      } loc(#loc258)
    } loc(#loc257)
    cir.return loc(#loc12)
  } loc(#loc243)
  cir.func no_proto @CWE416_Use_After_Free__malloc_free_char_05_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc260)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc56)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc261)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc58)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc262)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc60)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc263)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc62)
    cir.return loc(#loc55)
  } loc(#loc259)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc264)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc66)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc266)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc71)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc267)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc238)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc75)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc75)
      cir.if %4 {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc77)
        %6 = cir.const #cir.int<100> : !s32i loc(#loc78)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc78)
        %8 = cir.const #cir.int<1> : !u64i loc(#loc270)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc271)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc77)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc272)
        cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc273)
        cir.scope {
          %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
          %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc86)
          %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc86)
          %32 = cir.cmp(eq, %29, %31) : !cir.ptr<!s8i>, !cir.bool loc(#loc275)
          cir.if %32 {
            %33 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc88)
            %34 = cir.const #cir.int<1> : !s32i loc(#loc89)
            %35 = cir.unary(minus, %34) nsw : !s32i, !s32i loc(#loc90)
            cir.call @exit(%35) : (!s32i) -> () extra(#fn_attr) loc(#loc88)
          } loc(#loc276)
        } loc(#loc274)
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc91)
        %14 = cir.const #cir.int<65> : !s32i loc(#loc92)
        %15 = cir.const #cir.int<100> : !s32i loc(#loc93)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc94)
        %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc93)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc93)
        cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc277)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc97)
        %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc97)
        %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
        %22 = cir.const #cir.int<100> : !s32i loc(#loc99)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc100)
        %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc99)
        %25 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc101)
        cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc278)
        %26 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc102)
        %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
        %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc103)
        cir.call @free(%28) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc102)
      } loc(#loc269)
    } loc(#loc268)
    cir.scope {
      %2 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc264)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc106)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc106)
      cir.if %4 {
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc66)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc66)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc110)
      } else {
      } loc(#loc280)
    } loc(#loc279)
    cir.return loc(#loc68)
  } loc(#loc265)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc282)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc115)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc283)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc238)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc119)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc119)
      cir.if %4 {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc121)
        %6 = cir.const #cir.int<100> : !s32i loc(#loc122)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc122)
        %8 = cir.const #cir.int<1> : !u64i loc(#loc286)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc287)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc121)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc288)
        cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc289)
        cir.scope {
          %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
          %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc130)
          %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc130)
          %32 = cir.cmp(eq, %29, %31) : !cir.ptr<!s8i>, !cir.bool loc(#loc291)
          cir.if %32 {
            %33 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc132)
            %34 = cir.const #cir.int<1> : !s32i loc(#loc133)
            %35 = cir.unary(minus, %34) nsw : !s32i, !s32i loc(#loc134)
            cir.call @exit(%35) : (!s32i) -> () extra(#fn_attr) loc(#loc132)
          } loc(#loc292)
        } loc(#loc290)
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc135)
        %14 = cir.const #cir.int<65> : !s32i loc(#loc136)
        %15 = cir.const #cir.int<100> : !s32i loc(#loc137)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc138)
        %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc137)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc137)
        cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc293)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc141)
        %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc141)
        %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
        %22 = cir.const #cir.int<100> : !s32i loc(#loc143)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc144)
        %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc143)
        %25 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc145)
        cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc294)
        %26 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc146)
        %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
        %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc147)
        cir.call @free(%28) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc146)
      } loc(#loc285)
    } loc(#loc284)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc238)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc150)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc150)
      cir.if %4 {
      } loc(#loc296)
    } loc(#loc295)
    cir.return loc(#loc112)
  } loc(#loc281)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc298)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc156)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc299)
    cir.scope {
      %2 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc264)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc160)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc160)
      cir.if %4 {
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc164)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc164)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc165)
      } else {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc166)
        %6 = cir.const #cir.int<100> : !s32i loc(#loc167)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc167)
        %8 = cir.const #cir.int<1> : !u64i loc(#loc302)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc303)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc166)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc304)
        cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc305)
        cir.scope {
          %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc174)
          %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc175)
          %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc175)
          %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc307)
          cir.if %29 {
            %30 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc177)
            %31 = cir.const #cir.int<1> : !s32i loc(#loc178)
            %32 = cir.unary(minus, %31) nsw : !s32i, !s32i loc(#loc179)
            cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc177)
          } loc(#loc308)
        } loc(#loc306)
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc180)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc180)
        %14 = cir.const #cir.int<65> : !s32i loc(#loc181)
        %15 = cir.const #cir.int<100> : !s32i loc(#loc182)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc183)
        %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc182)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc182)
        cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc309)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc186)
        %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc186)
        %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc187)
        %22 = cir.const #cir.int<100> : !s32i loc(#loc188)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc189)
        %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc188)
        %25 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc190)
        cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc310)
      } loc(#loc301)
    } loc(#loc300)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc238)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc193)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc193)
      cir.if %4 {
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc195)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc196)
      } loc(#loc312)
    } loc(#loc311)
    cir.return loc(#loc153)
  } loc(#loc297)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc314)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc201)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc315)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc238)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc205)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc205)
      cir.if %4 {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc207)
        %6 = cir.const #cir.int<100> : !s32i loc(#loc208)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc208)
        %8 = cir.const #cir.int<1> : !u64i loc(#loc318)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc319)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc207)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc320)
        cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc321)
        cir.scope {
          %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc215)
          %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc216)
          %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc216)
          %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc323)
          cir.if %29 {
            %30 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc218)
            %31 = cir.const #cir.int<1> : !s32i loc(#loc219)
            %32 = cir.unary(minus, %31) nsw : !s32i, !s32i loc(#loc220)
            cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc218)
          } loc(#loc324)
        } loc(#loc322)
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc221)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc221)
        %14 = cir.const #cir.int<65> : !s32i loc(#loc222)
        %15 = cir.const #cir.int<100> : !s32i loc(#loc223)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc224)
        %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc223)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc223)
        cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc325)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc227)
        %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc227)
        %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc228)
        %22 = cir.const #cir.int<100> : !s32i loc(#loc229)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc230)
        %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc229)
        %25 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc231)
        cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc326)
      } loc(#loc317)
    } loc(#loc316)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc238)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc234)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc234)
      cir.if %4 {
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc236)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc237)
      } loc(#loc328)
    } loc(#loc327)
    cir.return loc(#loc198)
  } loc(#loc313)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_char_05.c":0:0)
#loc1 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":25:1)
#loc2 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":25:25)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":30:1)
#loc12 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":50:1)
#loc13 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":32:5)
#loc14 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":32:12)
#loc15 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":34:12)
#loc16 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":34:5)
#loc17 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":35:5)
#loc18 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":43:5)
#loc19 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":35:8)
#loc20 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":36:5)
#loc21 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":37:24)
#loc22 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":37:31)
#loc23 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":37:35)
#loc24 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":37:46)
#loc25 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":37:47)
#loc26 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":37:9)
#loc27 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":38:9)
#loc28 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":38:37)
#loc29 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":38:13)
#loc30 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":38:21)
#loc31 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":38:27)
#loc32 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":38:28)
#loc33 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":38:34)
#loc34 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":38:33)
#loc35 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":39:16)
#loc36 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":39:22)
#loc37 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":39:27)
#loc38 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":39:31)
#loc39 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":39:9)
#loc40 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":39:32)
#loc41 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":40:23)
#loc42 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":40:9)
#loc43 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":40:14)
#loc44 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":40:18)
#loc45 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":40:19)
#loc46 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":42:9)
#loc47 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":42:14)
#loc48 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":44:5)
#loc49 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":49:5)
#loc50 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":44:8)
#loc51 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":45:5)
#loc52 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":47:19)
#loc53 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":47:9)
#loc54 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":158:1)
#loc55 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":164:1)
#loc56 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":160:5)
#loc57 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":160:14)
#loc58 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":161:5)
#loc59 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":161:14)
#loc60 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":162:5)
#loc61 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":162:14)
#loc62 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":163:5)
#loc63 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":163:14)
#loc64 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":26:1)
#loc65 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":26:26)
#loc66 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":74:19)
#loc67 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":57:1)
#loc68 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":83:1)
#loc69 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":59:5)
#loc70 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":59:12)
#loc71 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":61:12)
#loc72 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":61:5)
#loc73 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":62:5)
#loc74 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":70:5)
#loc75 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":62:8)
#loc76 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":63:5)
#loc77 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":64:24)
#loc78 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":64:31)
#loc79 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":64:35)
#loc80 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":64:46)
#loc81 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":64:47)
#loc82 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":64:9)
#loc83 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":65:9)
#loc84 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":65:37)
#loc85 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":65:13)
#loc86 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":65:21)
#loc87 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":65:27)
#loc88 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":65:28)
#loc89 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":65:34)
#loc90 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":65:33)
#loc91 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":66:16)
#loc92 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":66:22)
#loc93 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":66:27)
#loc94 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":66:31)
#loc95 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":66:9)
#loc96 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":66:32)
#loc97 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":67:23)
#loc98 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":67:9)
#loc99 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":67:14)
#loc100 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":67:18)
#loc101 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":67:19)
#loc102 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":69:9)
#loc103 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":69:14)
#loc104 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":71:5)
#loc105 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":82:5)
#loc106 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":71:8)
#loc107 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":72:5)
#loc108 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":75:5)
#loc109 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":77:5)
#loc110 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":74:9)
#loc111 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":86:1)
#loc112 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":107:1)
#loc113 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":88:5)
#loc114 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":88:12)
#loc115 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":90:12)
#loc116 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":90:5)
#loc117 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":91:5)
#loc118 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":99:5)
#loc119 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":91:8)
#loc120 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":92:5)
#loc121 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":93:24)
#loc122 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":93:31)
#loc123 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":93:35)
#loc124 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":93:46)
#loc125 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":93:47)
#loc126 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":93:9)
#loc127 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":94:9)
#loc128 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":94:37)
#loc129 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":94:13)
#loc130 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":94:21)
#loc131 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":94:27)
#loc132 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":94:28)
#loc133 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":94:34)
#loc134 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":94:33)
#loc135 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":95:16)
#loc136 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":95:22)
#loc137 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":95:27)
#loc138 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":95:31)
#loc139 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":95:9)
#loc140 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":95:32)
#loc141 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":96:23)
#loc142 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":96:9)
#loc143 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":96:14)
#loc144 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":96:18)
#loc145 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":96:19)
#loc146 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":98:9)
#loc147 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":98:14)
#loc148 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":100:5)
#loc149 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":106:5)
#loc150 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":100:8)
#loc151 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":101:5)
#loc152 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":110:1)
#loc153 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":134:1)
#loc154 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":112:5)
#loc155 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":112:12)
#loc156 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":114:12)
#loc157 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":114:5)
#loc158 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":115:5)
#loc159 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":127:5)
#loc160 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":115:8)
#loc161 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":116:5)
#loc162 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":119:5)
#loc163 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":121:5)
#loc164 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":118:19)
#loc165 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":118:9)
#loc166 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":122:24)
#loc167 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":122:31)
#loc168 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":122:35)
#loc169 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":122:46)
#loc170 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":122:47)
#loc171 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":122:9)
#loc172 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":123:9)
#loc173 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":123:37)
#loc174 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":123:13)
#loc175 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":123:21)
#loc176 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":123:27)
#loc177 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":123:28)
#loc178 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":123:34)
#loc179 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":123:33)
#loc180 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":124:16)
#loc181 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":124:22)
#loc182 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":124:27)
#loc183 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":124:31)
#loc184 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":124:9)
#loc185 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":124:32)
#loc186 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":125:23)
#loc187 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":125:9)
#loc188 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":125:14)
#loc189 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":125:18)
#loc190 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":125:19)
#loc191 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":128:5)
#loc192 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":133:5)
#loc193 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":128:8)
#loc194 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":129:5)
#loc195 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":131:19)
#loc196 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":131:9)
#loc197 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":137:1)
#loc198 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":156:1)
#loc199 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":139:5)
#loc200 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":139:12)
#loc201 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":141:12)
#loc202 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":141:5)
#loc203 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":142:5)
#loc204 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":149:5)
#loc205 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":142:8)
#loc206 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":143:5)
#loc207 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":144:24)
#loc208 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":144:31)
#loc209 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":144:35)
#loc210 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":144:46)
#loc211 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":144:47)
#loc212 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":144:9)
#loc213 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":145:9)
#loc214 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":145:37)
#loc215 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":145:13)
#loc216 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":145:21)
#loc217 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":145:27)
#loc218 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":145:28)
#loc219 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":145:34)
#loc220 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":145:33)
#loc221 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":146:16)
#loc222 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":146:22)
#loc223 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":146:27)
#loc224 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":146:31)
#loc225 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":146:9)
#loc226 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":146:32)
#loc227 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":147:23)
#loc228 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":147:9)
#loc229 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":147:14)
#loc230 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":147:18)
#loc231 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":147:19)
#loc232 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":150:5)
#loc233 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":155:5)
#loc234 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":150:8)
#loc235 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":151:5)
#loc236 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":153:19)
#loc237 = loc("CWE416_Use_After_Free__malloc_free_char_05.c":153:9)
#loc238 = loc(fused[#loc1, #loc2])
#loc239 = loc(fused[#loc3, #loc4])
#loc240 = loc(fused[#loc5, #loc6])
#loc241 = loc(fused[#loc7, #loc8])
#loc242 = loc(fused[#loc9, #loc10])
#loc243 = loc(fused[#loc11, #loc12])
#loc244 = loc(fused[#loc13, #loc14])
#loc245 = loc(fused[#loc16, #loc15])
#loc246 = loc(fused[#loc17, #loc18])
#loc247 = loc(fused[#loc20, #loc18])
#loc248 = loc(fused[#loc23, #loc24])
#loc249 = loc(fused[#loc22, #loc24])
#loc250 = loc(fused[#loc21, #loc25])
#loc251 = loc(fused[#loc26, #loc25])
#loc252 = loc(fused[#loc27, #loc28])
#loc253 = loc(fused[#loc29, #loc30])
#loc254 = loc(fused[#loc31, #loc28])
#loc255 = loc(fused[#loc39, #loc40])
#loc256 = loc(fused[#loc42, #loc41])
#loc257 = loc(fused[#loc48, #loc49])
#loc258 = loc(fused[#loc51, #loc49])
#loc259 = loc(fused[#loc54, #loc55])
#loc260 = loc(fused[#loc56, #loc57])
#loc261 = loc(fused[#loc58, #loc59])
#loc262 = loc(fused[#loc60, #loc61])
#loc263 = loc(fused[#loc62, #loc63])
#loc264 = loc(fused[#loc64, #loc65])
#loc265 = loc(fused[#loc67, #loc68])
#loc266 = loc(fused[#loc69, #loc70])
#loc267 = loc(fused[#loc72, #loc71])
#loc268 = loc(fused[#loc73, #loc74])
#loc269 = loc(fused[#loc76, #loc74])
#loc270 = loc(fused[#loc79, #loc80])
#loc271 = loc(fused[#loc78, #loc80])
#loc272 = loc(fused[#loc77, #loc81])
#loc273 = loc(fused[#loc82, #loc81])
#loc274 = loc(fused[#loc83, #loc84])
#loc275 = loc(fused[#loc85, #loc86])
#loc276 = loc(fused[#loc87, #loc84])
#loc277 = loc(fused[#loc95, #loc96])
#loc278 = loc(fused[#loc98, #loc97])
#loc279 = loc(fused[#loc104, #loc105])
#loc280 = loc(fused[#loc107, #loc108, #loc109, #loc105])
#loc281 = loc(fused[#loc111, #loc112])
#loc282 = loc(fused[#loc113, #loc114])
#loc283 = loc(fused[#loc116, #loc115])
#loc284 = loc(fused[#loc117, #loc118])
#loc285 = loc(fused[#loc120, #loc118])
#loc286 = loc(fused[#loc123, #loc124])
#loc287 = loc(fused[#loc122, #loc124])
#loc288 = loc(fused[#loc121, #loc125])
#loc289 = loc(fused[#loc126, #loc125])
#loc290 = loc(fused[#loc127, #loc128])
#loc291 = loc(fused[#loc129, #loc130])
#loc292 = loc(fused[#loc131, #loc128])
#loc293 = loc(fused[#loc139, #loc140])
#loc294 = loc(fused[#loc142, #loc141])
#loc295 = loc(fused[#loc148, #loc149])
#loc296 = loc(fused[#loc151, #loc149])
#loc297 = loc(fused[#loc152, #loc153])
#loc298 = loc(fused[#loc154, #loc155])
#loc299 = loc(fused[#loc157, #loc156])
#loc300 = loc(fused[#loc158, #loc159])
#loc301 = loc(fused[#loc161, #loc162, #loc163, #loc159])
#loc302 = loc(fused[#loc168, #loc169])
#loc303 = loc(fused[#loc167, #loc169])
#loc304 = loc(fused[#loc166, #loc170])
#loc305 = loc(fused[#loc171, #loc170])
#loc306 = loc(fused[#loc172, #loc173])
#loc307 = loc(fused[#loc174, #loc175])
#loc308 = loc(fused[#loc176, #loc173])
#loc309 = loc(fused[#loc184, #loc185])
#loc310 = loc(fused[#loc187, #loc186])
#loc311 = loc(fused[#loc191, #loc192])
#loc312 = loc(fused[#loc194, #loc192])
#loc313 = loc(fused[#loc197, #loc198])
#loc314 = loc(fused[#loc199, #loc200])
#loc315 = loc(fused[#loc202, #loc201])
#loc316 = loc(fused[#loc203, #loc204])
#loc317 = loc(fused[#loc206, #loc204])
#loc318 = loc(fused[#loc209, #loc210])
#loc319 = loc(fused[#loc208, #loc210])
#loc320 = loc(fused[#loc207, #loc211])
#loc321 = loc(fused[#loc212, #loc211])
#loc322 = loc(fused[#loc213, #loc214])
#loc323 = loc(fused[#loc215, #loc216])
#loc324 = loc(fused[#loc217, #loc214])
#loc325 = loc(fused[#loc225, #loc226])
#loc326 = loc(fused[#loc228, #loc227])
#loc327 = loc(fused[#loc232, #loc233])
#loc328 = loc(fused[#loc235, #loc233])
