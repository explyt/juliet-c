!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc10 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":31:23)
#loc11 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":31:31)
#loc108 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":87:27)
#loc109 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":87:35)
#loc151 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":116:27)
#loc152 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":116:35)
#loc262 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":189:10)
#loc263 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":189:14)
#loc264 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":189:20)
#loc265 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":189:32)
#true = #cir.bool<true> : !cir.bool
#loc282 = loc(fused[#loc10, #loc11])
#loc323 = loc(fused[#loc108, #loc109])
#loc342 = loc(fused[#loc151, #loc152])
#loc387 = loc(fused[#loc262, #loc263])
#loc388 = loc(fused[#loc264, #loc265])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_console_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc278)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc279)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc280)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc7)
  cir.func internal private @_ZN48CWE606_Unchecked_Loop_Condition__char_console_43L9badSourceERPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc10, #loc11])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc282)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc12)
    cir.scope {
      %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc284)
      %2 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc17)
      %3 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc18)
      %4 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
      %5 = cir.call @strlen(%4) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc17)
      cir.store %5, %1 : !u64i, !cir.ptr<!u64i> loc(#loc284)
      cir.scope {
        %6 = cir.const #cir.int<100> : !s32i loc(#loc21)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc21)
        %8 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc22)
        %9 = cir.binop(sub, %7, %8) : !u64i loc(#loc286)
        %10 = cir.const #cir.int<1> : !s32i loc(#loc23)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc23)
        %12 = cir.cmp(gt, %9, %11) : !u64i, !cir.bool loc(#loc287)
        cir.if %12 {
          cir.scope {
            %13 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc27)
            %14 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
            %15 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc28)
            %16 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %15 : !u64i), !cir.ptr<!s8i> loc(#loc29)
            %17 = cir.const #cir.int<100> : !s32i loc(#loc30)
            %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc30)
            %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc31)
            %20 = cir.binop(sub, %18, %19) : !u64i loc(#loc290)
            %21 = cir.cast(integral, %20 : !u64i), !s32i loc(#loc290)
            %22 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc280)
            %23 = cir.load %22 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc32)
            %24 = cir.call @fgets(%16, %21, %23) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc33)
            %25 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc34)
            %26 = cir.cmp(ne, %24, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc291)
            cir.if %26 {
              %27 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc38)
              %28 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc39)
              %29 = cir.load %28 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
              %30 = cir.call @strlen(%29) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc38)
              cir.store %30, %1 : !u64i, !cir.ptr<!u64i> loc(#loc293)
              cir.scope {
                %31 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc44)
                %32 = cir.const #cir.int<0> : !s32i loc(#loc45)
                %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc45)
                %34 = cir.cmp(gt, %31, %33) : !u64i, !cir.bool loc(#loc295)
                %35 = cir.ternary(%34, true {
                  %36 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc47)
                  %37 = cir.load %36 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
                  %38 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc48)
                  %39 = cir.const #cir.int<1> : !s32i loc(#loc49)
                  %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc49)
                  %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc296)
                  %42 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc50)
                  %43 = cir.load %42 : !cir.ptr<!s8i>, !s8i loc(#loc47)
                  %44 = cir.cast(integral, %43 : !s8i), !s32i loc(#loc47)
                  %45 = cir.const #cir.int<10> : !s8i loc(#loc51)
                  %46 = cir.cast(integral, %45 : !s8i), !s32i loc(#loc51)
                  %47 = cir.cmp(eq, %44, %46) : !s32i, !cir.bool loc(#loc297)
                  %48 = cir.ternary(%47, true {
                    %49 = cir.const #true loc(#loc46)
                    cir.yield %49 : !cir.bool loc(#loc46)
                  }, false {
                    %49 = cir.const #false loc(#loc46)
                    cir.yield %49 : !cir.bool loc(#loc46)
                  }) : (!cir.bool) -> !cir.bool loc(#loc46)
                  cir.yield %48 : !cir.bool loc(#loc46)
                }, false {
                  %36 = cir.const #false loc(#loc46)
                  cir.yield %36 : !cir.bool loc(#loc46)
                }) : (!cir.bool) -> !cir.bool loc(#loc46)
                cir.if %35 {
                  %36 = cir.const #cir.int<0> : !s8i loc(#loc53)
                  %37 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc54)
                  %38 = cir.load %37 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
                  %39 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc55)
                  %40 = cir.const #cir.int<1> : !s32i loc(#loc56)
                  %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc56)
                  %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc299)
                  %43 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc57)
                  cir.store %36, %43 : !s8i, !cir.ptr<!s8i> loc(#loc300)
                } loc(#loc298)
              } loc(#loc294)
            } else {
              %27 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc7)
              %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc7)
              cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc58)
              %29 = cir.const #cir.int<0> : !s8i loc(#loc59)
              %30 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc60)
              %31 = cir.load %30 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
              %32 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc61)
              %33 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %32 : !u64i), !cir.ptr<!s8i> loc(#loc62)
              cir.store %29, %33 : !s8i, !cir.ptr<!s8i> loc(#loc301)
            } loc(#loc292)
          } loc(#loc289)
        } loc(#loc288)
      } loc(#loc285)
    } loc(#loc283)
    cir.return loc(#loc9)
  } loc(#loc281)
  cir.func private @__isoc23_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc302)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc65)
  cir.func private @printIntLine(!s32i) loc(#loc303)
  cir.func @_ZN48CWE606_Unchecked_Loop_Condition__char_console_433badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc305)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc306)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc306)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc306)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc74)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc307)
    cir.call @_ZN48CWE606_Unchecked_Loop_Condition__char_console_43L9badSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc76)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc309)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc310)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc311)
      cir.scope {
        %7 = cir.get_global @__isoc23_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc85)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc65)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc65)
        %11 = cir.call @__isoc23_sscanf(%8, %10, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc85)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc87)
        %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc313)
        cir.if %13 {
          %14 = cir.const #cir.int<0> : !s32i loc(#loc89)
          cir.store %14, %6 : !s32i, !cir.ptr<!s32i> loc(#loc315)
          cir.scope {
            %16 = cir.const #cir.int<0> : !s32i loc(#loc93)
            cir.store %16, %4 : !s32i, !cir.ptr<!s32i> loc(#loc317)
            cir.for : cond {
              %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc95)
              %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc96)
              %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc318)
              cir.condition(%19) loc(#loc318)
            } body {
              %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc97)
              %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc98)
              cir.store %18, %6 : !s32i, !cir.ptr<!s32i> loc(#loc319)
              cir.yield loc(#loc92)
            } step {
              %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc99)
              %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc100)
              cir.store %18, %4 : !s32i, !cir.ptr<!s32i> loc(#loc320)
              cir.yield loc(#loc316)
            } loc(#loc316)
          } loc(#loc316)
          %15 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc101)
          cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc102)
        } loc(#loc314)
      } loc(#loc312)
    } loc(#loc308)
    cir.return loc(#loc69)
  } loc(#loc304)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc321)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"15\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc105)
  cir.func internal private @_ZN48CWE606_Unchecked_Loop_Condition__char_console_43L13goodG2BSourceERPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc108, #loc109])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc323)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc110)
    %1 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc111)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc112)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc112)
    %4 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc105)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc105)
    %6 = cir.call @strcpy(%3, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc111)
    cir.return loc(#loc107)
  } loc(#loc322)
  cir.func internal private @_ZN48CWE606_Unchecked_Loop_Condition__char_console_43L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc325)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc326)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc326)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc326)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc119)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc327)
    cir.call @_ZN48CWE606_Unchecked_Loop_Condition__char_console_43L13goodG2BSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc121)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc329)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc330)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc331)
      cir.scope {
        %7 = cir.get_global @__isoc23_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc130)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc132)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc132)
        %11 = cir.call @__isoc23_sscanf(%8, %10, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc130)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc133)
        %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc333)
        cir.if %13 {
          %14 = cir.const #cir.int<0> : !s32i loc(#loc135)
          cir.store %14, %6 : !s32i, !cir.ptr<!s32i> loc(#loc335)
          cir.scope {
            %16 = cir.const #cir.int<0> : !s32i loc(#loc139)
            cir.store %16, %4 : !s32i, !cir.ptr<!s32i> loc(#loc337)
            cir.for : cond {
              %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc141)
              %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc142)
              %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc338)
              cir.condition(%19) loc(#loc338)
            } body {
              %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc143)
              %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc144)
              cir.store %18, %6 : !s32i, !cir.ptr<!s32i> loc(#loc339)
              cir.yield loc(#loc138)
            } step {
              %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc145)
              %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc146)
              cir.store %18, %4 : !s32i, !cir.ptr<!s32i> loc(#loc340)
              cir.yield loc(#loc336)
            } loc(#loc336)
          } loc(#loc336)
          %15 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc147)
          cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc148)
        } loc(#loc334)
      } loc(#loc332)
    } loc(#loc328)
    cir.return loc(#loc114)
  } loc(#loc324)
  cir.func internal private @_ZN48CWE606_Unchecked_Loop_Condition__char_console_43L13goodB2GSourceERPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc151, #loc152])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc342)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc153)
    cir.scope {
      %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc344)
      %2 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc158)
      %3 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc159)
      %4 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc159)
      %5 = cir.call @strlen(%4) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc158)
      cir.store %5, %1 : !u64i, !cir.ptr<!u64i> loc(#loc344)
      cir.scope {
        %6 = cir.const #cir.int<100> : !s32i loc(#loc162)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc162)
        %8 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc163)
        %9 = cir.binop(sub, %7, %8) : !u64i loc(#loc346)
        %10 = cir.const #cir.int<1> : !s32i loc(#loc164)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc164)
        %12 = cir.cmp(gt, %9, %11) : !u64i, !cir.bool loc(#loc347)
        cir.if %12 {
          cir.scope {
            %13 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc168)
            %14 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc168)
            %15 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc169)
            %16 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %15 : !u64i), !cir.ptr<!s8i> loc(#loc170)
            %17 = cir.const #cir.int<100> : !s32i loc(#loc171)
            %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc171)
            %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc172)
            %20 = cir.binop(sub, %18, %19) : !u64i loc(#loc350)
            %21 = cir.cast(integral, %20 : !u64i), !s32i loc(#loc350)
            %22 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc280)
            %23 = cir.load %22 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc173)
            %24 = cir.call @fgets(%16, %21, %23) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc174)
            %25 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc175)
            %26 = cir.cmp(ne, %24, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc351)
            cir.if %26 {
              %27 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc179)
              %28 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc180)
              %29 = cir.load %28 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc180)
              %30 = cir.call @strlen(%29) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc179)
              cir.store %30, %1 : !u64i, !cir.ptr<!u64i> loc(#loc353)
              cir.scope {
                %31 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc185)
                %32 = cir.const #cir.int<0> : !s32i loc(#loc186)
                %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc186)
                %34 = cir.cmp(gt, %31, %33) : !u64i, !cir.bool loc(#loc355)
                %35 = cir.ternary(%34, true {
                  %36 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc188)
                  %37 = cir.load %36 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc188)
                  %38 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc189)
                  %39 = cir.const #cir.int<1> : !s32i loc(#loc190)
                  %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc190)
                  %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc356)
                  %42 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc191)
                  %43 = cir.load %42 : !cir.ptr<!s8i>, !s8i loc(#loc188)
                  %44 = cir.cast(integral, %43 : !s8i), !s32i loc(#loc188)
                  %45 = cir.const #cir.int<10> : !s8i loc(#loc192)
                  %46 = cir.cast(integral, %45 : !s8i), !s32i loc(#loc192)
                  %47 = cir.cmp(eq, %44, %46) : !s32i, !cir.bool loc(#loc357)
                  %48 = cir.ternary(%47, true {
                    %49 = cir.const #true loc(#loc187)
                    cir.yield %49 : !cir.bool loc(#loc187)
                  }, false {
                    %49 = cir.const #false loc(#loc187)
                    cir.yield %49 : !cir.bool loc(#loc187)
                  }) : (!cir.bool) -> !cir.bool loc(#loc187)
                  cir.yield %48 : !cir.bool loc(#loc187)
                }, false {
                  %36 = cir.const #false loc(#loc187)
                  cir.yield %36 : !cir.bool loc(#loc187)
                }) : (!cir.bool) -> !cir.bool loc(#loc187)
                cir.if %35 {
                  %36 = cir.const #cir.int<0> : !s8i loc(#loc194)
                  %37 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc195)
                  %38 = cir.load %37 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc195)
                  %39 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc196)
                  %40 = cir.const #cir.int<1> : !s32i loc(#loc197)
                  %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc197)
                  %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc359)
                  %43 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc198)
                  cir.store %36, %43 : !s8i, !cir.ptr<!s8i> loc(#loc360)
                } loc(#loc358)
              } loc(#loc354)
            } else {
              %27 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc199)
              %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc199)
              cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc200)
              %29 = cir.const #cir.int<0> : !s8i loc(#loc201)
              %30 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc202)
              %31 = cir.load %30 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc202)
              %32 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc203)
              %33 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %32 : !u64i), !cir.ptr<!s8i> loc(#loc204)
              cir.store %29, %33 : !s8i, !cir.ptr<!s8i> loc(#loc361)
            } loc(#loc352)
          } loc(#loc349)
        } loc(#loc348)
      } loc(#loc345)
    } loc(#loc343)
    cir.return loc(#loc150)
  } loc(#loc341)
  cir.func internal private @_ZN48CWE606_Unchecked_Loop_Condition__char_console_43L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc363)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc364)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc364)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc364)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc211)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc365)
    cir.call @_ZN48CWE606_Unchecked_Loop_Condition__char_console_43L13goodB2GSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc213)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc367)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc368)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc369)
      cir.scope {
        %7 = cir.get_global @__isoc23_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc222)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc223)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc224)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc224)
        %11 = cir.call @__isoc23_sscanf(%8, %10, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc222)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc225)
        %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc371)
        cir.if %13 {
          cir.scope {
            %14 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc229)
            %15 = cir.const #cir.int<10000> : !s32i loc(#loc230)
            %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc374)
            cir.if %16 {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc232)
              cir.store %17, %6 : !s32i, !cir.ptr<!s32i> loc(#loc376)
              cir.scope {
                %19 = cir.const #cir.int<0> : !s32i loc(#loc236)
                cir.store %19, %4 : !s32i, !cir.ptr<!s32i> loc(#loc378)
                cir.for : cond {
                  %20 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc238)
                  %21 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc239)
                  %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc379)
                  cir.condition(%22) loc(#loc379)
                } body {
                  %20 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc240)
                  %21 = cir.unary(inc, %20) : !s32i, !s32i loc(#loc241)
                  cir.store %21, %6 : !s32i, !cir.ptr<!s32i> loc(#loc380)
                  cir.yield loc(#loc235)
                } step {
                  %20 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc242)
                  %21 = cir.unary(inc, %20) : !s32i, !s32i loc(#loc243)
                  cir.store %21, %4 : !s32i, !cir.ptr<!s32i> loc(#loc381)
                  cir.yield loc(#loc377)
                } loc(#loc377)
              } loc(#loc377)
              %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc244)
              cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc245)
            } loc(#loc375)
          } loc(#loc373)
        } loc(#loc372)
      } loc(#loc370)
    } loc(#loc366)
    cir.return loc(#loc206)
  } loc(#loc362)
  cir.func @_ZN48CWE606_Unchecked_Loop_Condition__char_console_434goodEv() extra(#fn_attr1) {
    cir.call @_ZN48CWE606_Unchecked_Loop_Condition__char_console_43L7goodG2BEv() : () -> () loc(#loc248)
    cir.call @_ZN48CWE606_Unchecked_Loop_Condition__char_console_43L7goodB2GEv() : () -> () loc(#loc249)
    cir.return loc(#loc247)
  } loc(#loc382)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc383)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc384)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc385)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc256)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc257)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc258)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc259)
  cir.func @main(%arg0: !s32i loc(fused[#loc262, #loc263]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc264, #loc265])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc387)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc388)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc261)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc266)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc266)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc267)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc268)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc268)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc269)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc256)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc256)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc270)
    cir.call @_ZN48CWE606_Unchecked_Loop_Condition__char_console_434goodEv() : () -> () loc(#loc271)
    %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc257)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc257)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc272)
    %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc258)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc258)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc273)
    cir.call @_ZN48CWE606_Unchecked_Loop_Condition__char_console_433badEv() : () -> () loc(#loc274)
    %12 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc259)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc259)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc275)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc276)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc389)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc389)
    cir.return %15 : !s32i loc(#loc389)
  } loc(#loc386)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_console_43.cpp":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":52:27)
#loc8 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":31:1)
#loc9 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":58:1)
#loc12 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":32:1)
#loc13 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":33:5)
#loc14 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":57:5)
#loc15 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":35:9)
#loc16 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":35:37)
#loc17 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":35:26)
#loc18 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":35:33)
#loc19 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":37:9)
#loc20 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":56:9)
#loc21 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":37:13)
#loc22 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":37:17)
#loc23 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":37:27)
#loc24 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":38:9)
#loc25 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":40:13)
#loc26 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":55:13)
#loc27 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":40:23)
#loc28 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":40:28)
#loc29 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":40:27)
#loc30 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":40:43)
#loc31 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":40:47)
#loc32 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":40:57)
#loc33 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":40:17)
#loc34 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":40:67)
#loc35 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":41:13)
#loc36 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":49:13)
#loc37 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":51:13)
#loc38 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":44:27)
#loc39 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":44:34)
#loc40 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":44:17)
#loc41 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":44:38)
#loc42 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":45:17)
#loc43 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":48:17)
#loc44 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":45:21)
#loc45 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":45:31)
#loc46 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":45:33)
#loc47 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":45:36)
#loc48 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":45:41)
#loc49 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":45:49)
#loc50 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":45:50)
#loc51 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":45:55)
#loc52 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":46:17)
#loc53 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":47:39)
#loc54 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":47:21)
#loc55 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":47:26)
#loc56 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":47:34)
#loc57 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":47:35)
#loc58 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":52:17)
#loc59 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":54:33)
#loc60 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":54:17)
#loc61 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":54:22)
#loc62 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":54:29)
#loc63 = loc("/usr/include/stdio.h":447:1)
#loc64 = loc("/usr/include/stdio.h":447:12)
#loc65 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":68:26)
#loc66 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc67 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc68 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":60:1)
#loc69 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":80:1)
#loc70 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":62:5)
#loc71 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":62:12)
#loc72 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":63:5)
#loc73 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":63:28)
#loc74 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":64:12)
#loc75 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":64:5)
#loc76 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":65:5)
#loc77 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":66:5)
#loc78 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":79:5)
#loc79 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":67:9)
#loc80 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":67:13)
#loc81 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":67:16)
#loc82 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":67:19)
#loc83 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":68:9)
#loc84 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":78:9)
#loc85 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":68:13)
#loc86 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":68:20)
#loc87 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":68:39)
#loc88 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":69:9)
#loc89 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":71:27)
#loc90 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":71:13)
#loc91 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":72:13)
#loc92 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":76:13)
#loc93 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":72:22)
#loc94 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":72:18)
#loc95 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":72:25)
#loc96 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":72:29)
#loc97 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":75:28)
#loc98 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":75:17)
#loc99 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":72:33)
#loc100 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":72:32)
#loc101 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":77:26)
#loc102 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":77:13)
#loc103 = loc("/usr/include/string.h":141:1)
#loc104 = loc("/usr/include/string.h":142:14)
#loc105 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":90:18)
#loc106 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":87:1)
#loc107 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":91:1)
#loc110 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":88:1)
#loc111 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":90:5)
#loc112 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":90:12)
#loc113 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":93:1)
#loc114 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":113:1)
#loc115 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":95:5)
#loc116 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":95:12)
#loc117 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":96:5)
#loc118 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":96:28)
#loc119 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":97:12)
#loc120 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":97:5)
#loc121 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":98:5)
#loc122 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":99:5)
#loc123 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":112:5)
#loc124 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":100:9)
#loc125 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":100:13)
#loc126 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":100:16)
#loc127 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":100:19)
#loc128 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":101:9)
#loc129 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":111:9)
#loc130 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":101:13)
#loc131 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":101:20)
#loc132 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":101:26)
#loc133 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":101:39)
#loc134 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":102:9)
#loc135 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":104:27)
#loc136 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":104:13)
#loc137 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":105:13)
#loc138 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":109:13)
#loc139 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":105:22)
#loc140 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":105:18)
#loc141 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":105:25)
#loc142 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":105:29)
#loc143 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":108:28)
#loc144 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":108:17)
#loc145 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":105:33)
#loc146 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":105:32)
#loc147 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":110:26)
#loc148 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":110:13)
#loc149 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":116:1)
#loc150 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":143:1)
#loc153 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":117:1)
#loc154 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":118:5)
#loc155 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":142:5)
#loc156 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":120:9)
#loc157 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":120:37)
#loc158 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":120:26)
#loc159 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":120:33)
#loc160 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":122:9)
#loc161 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":141:9)
#loc162 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":122:13)
#loc163 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":122:17)
#loc164 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":122:27)
#loc165 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":123:9)
#loc166 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":125:13)
#loc167 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":140:13)
#loc168 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":125:23)
#loc169 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":125:28)
#loc170 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":125:27)
#loc171 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":125:43)
#loc172 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":125:47)
#loc173 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":125:57)
#loc174 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":125:17)
#loc175 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":125:67)
#loc176 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":126:13)
#loc177 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":134:13)
#loc178 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":136:13)
#loc179 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":129:27)
#loc180 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":129:34)
#loc181 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":129:17)
#loc182 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":129:38)
#loc183 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":130:17)
#loc184 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":133:17)
#loc185 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":130:21)
#loc186 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":130:31)
#loc187 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":130:33)
#loc188 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":130:36)
#loc189 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":130:41)
#loc190 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":130:49)
#loc191 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":130:50)
#loc192 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":130:55)
#loc193 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":131:17)
#loc194 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":132:39)
#loc195 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":132:21)
#loc196 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":132:26)
#loc197 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":132:34)
#loc198 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":132:35)
#loc199 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":137:27)
#loc200 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":137:17)
#loc201 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":139:33)
#loc202 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":139:17)
#loc203 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":139:22)
#loc204 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":139:29)
#loc205 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":145:1)
#loc206 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":168:1)
#loc207 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":147:5)
#loc208 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":147:12)
#loc209 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":148:5)
#loc210 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":148:28)
#loc211 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":149:12)
#loc212 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":149:5)
#loc213 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":150:5)
#loc214 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":151:5)
#loc215 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":167:5)
#loc216 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":152:9)
#loc217 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":152:13)
#loc218 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":152:16)
#loc219 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":152:19)
#loc220 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":153:9)
#loc221 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":166:9)
#loc222 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":153:13)
#loc223 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":153:20)
#loc224 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":153:26)
#loc225 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":153:39)
#loc226 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":154:9)
#loc227 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":156:13)
#loc228 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":165:13)
#loc229 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":156:17)
#loc230 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":156:21)
#loc231 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":157:13)
#loc232 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":158:31)
#loc233 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":158:17)
#loc234 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":159:17)
#loc235 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":163:17)
#loc236 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":159:26)
#loc237 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":159:22)
#loc238 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":159:29)
#loc239 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":159:33)
#loc240 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":162:32)
#loc241 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":162:21)
#loc242 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":159:37)
#loc243 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":159:36)
#loc244 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":164:30)
#loc245 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":164:17)
#loc246 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":170:1)
#loc247 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":174:1)
#loc248 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":172:5)
#loc249 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":173:5)
#loc250 = loc("/usr/include/stdlib.h":575:1)
#loc251 = loc("/usr/include/stdlib.h":575:41)
#loc252 = loc("/usr/include/time.h":76:1)
#loc253 = loc("/usr/include/time.h":76:38)
#loc254 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc255 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc256 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":194:15)
#loc257 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":196:15)
#loc258 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":199:15)
#loc259 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":201:15)
#loc260 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":189:1)
#loc261 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":204:1)
#loc266 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":190:1)
#loc267 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":192:27)
#loc268 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":192:22)
#loc269 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":192:5)
#loc270 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":194:5)
#loc271 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":195:5)
#loc272 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":196:5)
#loc273 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":199:5)
#loc274 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":200:5)
#loc275 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":201:5)
#loc276 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":203:12)
#loc277 = loc("CWE606_Unchecked_Loop_Condition__char_console_43.cpp":203:5)
#loc278 = loc(fused[#loc1, #loc2])
#loc279 = loc(fused[#loc3, #loc4])
#loc280 = loc(fused[#loc5, #loc6])
#loc281 = loc(fused[#loc8, #loc9])
#loc283 = loc(fused[#loc13, #loc14])
#loc284 = loc(fused[#loc15, #loc16])
#loc285 = loc(fused[#loc19, #loc20])
#loc286 = loc(fused[#loc21, #loc22])
#loc287 = loc(fused[#loc21, #loc23])
#loc288 = loc(fused[#loc24, #loc20])
#loc289 = loc(fused[#loc25, #loc26])
#loc290 = loc(fused[#loc30, #loc31])
#loc291 = loc(fused[#loc33, #loc34])
#loc292 = loc(fused[#loc35, #loc36, #loc37, #loc26])
#loc293 = loc(fused[#loc40, #loc41])
#loc294 = loc(fused[#loc42, #loc43])
#loc295 = loc(fused[#loc44, #loc45])
#loc296 = loc(fused[#loc48, #loc49])
#loc297 = loc(fused[#loc47, #loc51])
#loc298 = loc(fused[#loc52, #loc43])
#loc299 = loc(fused[#loc55, #loc56])
#loc300 = loc(fused[#loc54, #loc53])
#loc301 = loc(fused[#loc60, #loc59])
#loc302 = loc(fused[#loc63, #loc64])
#loc303 = loc(fused[#loc66, #loc67])
#loc304 = loc(fused[#loc68, #loc69])
#loc305 = loc(fused[#loc70, #loc71])
#loc306 = loc(fused[#loc72, #loc73])
#loc307 = loc(fused[#loc75, #loc74])
#loc308 = loc(fused[#loc77, #loc78])
#loc309 = loc(fused[#loc79, #loc80])
#loc310 = loc(fused[#loc79, #loc81])
#loc311 = loc(fused[#loc79, #loc82])
#loc312 = loc(fused[#loc83, #loc84])
#loc313 = loc(fused[#loc85, #loc87])
#loc314 = loc(fused[#loc88, #loc84])
#loc315 = loc(fused[#loc90, #loc89])
#loc316 = loc(fused[#loc91, #loc92])
#loc317 = loc(fused[#loc94, #loc93])
#loc318 = loc(fused[#loc95, #loc96])
#loc319 = loc(fused[#loc98, #loc97])
#loc320 = loc(fused[#loc100, #loc99])
#loc321 = loc(fused[#loc103, #loc104])
#loc322 = loc(fused[#loc106, #loc107])
#loc324 = loc(fused[#loc113, #loc114])
#loc325 = loc(fused[#loc115, #loc116])
#loc326 = loc(fused[#loc117, #loc118])
#loc327 = loc(fused[#loc120, #loc119])
#loc328 = loc(fused[#loc122, #loc123])
#loc329 = loc(fused[#loc124, #loc125])
#loc330 = loc(fused[#loc124, #loc126])
#loc331 = loc(fused[#loc124, #loc127])
#loc332 = loc(fused[#loc128, #loc129])
#loc333 = loc(fused[#loc130, #loc133])
#loc334 = loc(fused[#loc134, #loc129])
#loc335 = loc(fused[#loc136, #loc135])
#loc336 = loc(fused[#loc137, #loc138])
#loc337 = loc(fused[#loc140, #loc139])
#loc338 = loc(fused[#loc141, #loc142])
#loc339 = loc(fused[#loc144, #loc143])
#loc340 = loc(fused[#loc146, #loc145])
#loc341 = loc(fused[#loc149, #loc150])
#loc343 = loc(fused[#loc154, #loc155])
#loc344 = loc(fused[#loc156, #loc157])
#loc345 = loc(fused[#loc160, #loc161])
#loc346 = loc(fused[#loc162, #loc163])
#loc347 = loc(fused[#loc162, #loc164])
#loc348 = loc(fused[#loc165, #loc161])
#loc349 = loc(fused[#loc166, #loc167])
#loc350 = loc(fused[#loc171, #loc172])
#loc351 = loc(fused[#loc174, #loc175])
#loc352 = loc(fused[#loc176, #loc177, #loc178, #loc167])
#loc353 = loc(fused[#loc181, #loc182])
#loc354 = loc(fused[#loc183, #loc184])
#loc355 = loc(fused[#loc185, #loc186])
#loc356 = loc(fused[#loc189, #loc190])
#loc357 = loc(fused[#loc188, #loc192])
#loc358 = loc(fused[#loc193, #loc184])
#loc359 = loc(fused[#loc196, #loc197])
#loc360 = loc(fused[#loc195, #loc194])
#loc361 = loc(fused[#loc202, #loc201])
#loc362 = loc(fused[#loc205, #loc206])
#loc363 = loc(fused[#loc207, #loc208])
#loc364 = loc(fused[#loc209, #loc210])
#loc365 = loc(fused[#loc212, #loc211])
#loc366 = loc(fused[#loc214, #loc215])
#loc367 = loc(fused[#loc216, #loc217])
#loc368 = loc(fused[#loc216, #loc218])
#loc369 = loc(fused[#loc216, #loc219])
#loc370 = loc(fused[#loc220, #loc221])
#loc371 = loc(fused[#loc222, #loc225])
#loc372 = loc(fused[#loc226, #loc221])
#loc373 = loc(fused[#loc227, #loc228])
#loc374 = loc(fused[#loc229, #loc230])
#loc375 = loc(fused[#loc231, #loc228])
#loc376 = loc(fused[#loc233, #loc232])
#loc377 = loc(fused[#loc234, #loc235])
#loc378 = loc(fused[#loc237, #loc236])
#loc379 = loc(fused[#loc238, #loc239])
#loc380 = loc(fused[#loc241, #loc240])
#loc381 = loc(fused[#loc243, #loc242])
#loc382 = loc(fused[#loc246, #loc247])
#loc383 = loc(fused[#loc250, #loc251])
#loc384 = loc(fused[#loc252, #loc253])
#loc385 = loc(fused[#loc254, #loc255])
#loc386 = loc(fused[#loc260, #loc261])
#loc389 = loc(fused[#loc277, #loc276])
