!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc3 = loc("../../../testcasesupport/std_testcase.h":61:7)
#loc130 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":106:10)
#loc131 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":106:14)
#loc132 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":106:20)
#loc133 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":106:32)
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
#loc206 = loc(fused[#loc130, #loc131])
#loc207 = loc(fused[#loc132, #loc133])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s06/CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc146)
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc3)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc3)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc3)
    cir.return loc(#loc3)
  } loc(#loc3)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc147)
  cir.func @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_173badEv() extra(#fn_attr2) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc149)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc150)
    %2 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc151)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc13)
    cir.store %3, %2 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc152)
    cir.br ^bb1 loc(#loc153)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<0> : !s32i loc(#loc17)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc154)
    cir.br ^bb2 loc(#loc153)
  ^bb2:  // 2 preds: ^bb1, ^bb4
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc19)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc155)
    cir.brcond %7 ^bb3, ^bb5 loc(#loc155)
  ^bb3:  // pred: ^bb2
    %8 = cir.const #cir.int<8> : !u64i loc(#loc156)
    %9 = cir.call @_Znwm(%8) : (!u64i) -> !cir.ptr<!void> loc(#loc23)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc156)
    cir.call @_ZN12TwoIntsClassC2Ev(%10) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc22)
    cir.store %10, %2 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc157)
    cir.br ^bb4 loc(#loc16)
  ^bb4:  // pred: ^bb3
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc25)
    %12 = cir.unary(inc, %11) : !s32i, !s32i loc(#loc26)
    cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc158)
    cir.br ^bb2 loc(#loc153)
  ^bb5:  // pred: ^bb2
    cir.br ^bb6 loc(#loc16)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc159)
  ^bb7:  // pred: ^bb6
    %13 = cir.const #cir.int<0> : !s32i loc(#loc29)
    cir.store %13, %1 : !s32i, !cir.ptr<!s32i> loc(#loc160)
    cir.br ^bb8 loc(#loc159)
  ^bb8:  // 2 preds: ^bb7, ^bb10
    %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc31)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc32)
    %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc161)
    cir.brcond %16 ^bb9, ^bb11 loc(#loc161)
  ^bb9:  // pred: ^bb8
    %17 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc33)
    %18 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc34)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc34)
    cir.call @free(%19) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc33)
    cir.br ^bb10 loc(#loc28)
  ^bb10:  // pred: ^bb9
    %20 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc35)
    %21 = cir.unary(inc, %20) : !s32i, !s32i loc(#loc36)
    cir.store %21, %1 : !s32i, !cir.ptr<!s32i> loc(#loc162)
    cir.br ^bb8 loc(#loc159)
  ^bb11:  // pred: ^bb8
    cir.br ^bb12 loc(#loc28)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc7)
  } loc(#loc148)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc163)
  cir.func internal private @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_17L7goodB2GEv() extra(#fn_attr2) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc165)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc166)
    %2 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc167)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc46)
    cir.store %3, %2 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc168)
    cir.br ^bb1 loc(#loc169)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<0> : !s32i loc(#loc50)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc170)
    cir.br ^bb2 loc(#loc169)
  ^bb2:  // 2 preds: ^bb1, ^bb4
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc52)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc53)
    %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc171)
    cir.brcond %7 ^bb3, ^bb5 loc(#loc171)
  ^bb3:  // pred: ^bb2
    %8 = cir.const #cir.int<8> : !u64i loc(#loc172)
    %9 = cir.call @_Znwm(%8) : (!u64i) -> !cir.ptr<!void> loc(#loc56)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc172)
    cir.call @_ZN12TwoIntsClassC2Ev(%10) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc55)
    cir.store %10, %2 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc173)
    cir.br ^bb4 loc(#loc49)
  ^bb4:  // pred: ^bb3
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc58)
    %12 = cir.unary(inc, %11) : !s32i, !s32i loc(#loc59)
    cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc174)
    cir.br ^bb2 loc(#loc169)
  ^bb5:  // pred: ^bb2
    cir.br ^bb6 loc(#loc49)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc175)
  ^bb7:  // pred: ^bb6
    %13 = cir.const #cir.int<0> : !s32i loc(#loc62)
    cir.store %13, %1 : !s32i, !cir.ptr<!s32i> loc(#loc176)
    cir.br ^bb8 loc(#loc175)
  ^bb8:  // 2 preds: ^bb7, ^bb10
    %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc64)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc65)
    %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc177)
    cir.brcond %16 ^bb9, ^bb11 loc(#loc177)
  ^bb9:  // pred: ^bb8
    %17 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc66)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc66)
    cir.call @_ZdlPv(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc56)
    cir.br ^bb10 loc(#loc61)
  ^bb10:  // pred: ^bb9
    %19 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc67)
    %20 = cir.unary(inc, %19) : !s32i, !s32i loc(#loc68)
    cir.store %20, %1 : !s32i, !cir.ptr<!s32i> loc(#loc178)
    cir.br ^bb8 loc(#loc175)
  ^bb11:  // pred: ^bb8
    cir.br ^bb12 loc(#loc61)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc40)
  } loc(#loc164)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc179)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc180)
  cir.func internal private @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_17L7goodG2BEv() extra(#fn_attr2) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc182)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc183)
    %2 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc184)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc80)
    cir.store %3, %2 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc185)
    cir.br ^bb1 loc(#loc186)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<0> : !s32i loc(#loc84)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc187)
    cir.br ^bb2 loc(#loc186)
  ^bb2:  // 2 preds: ^bb1, ^bb8
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc86)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc87)
    %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc188)
    cir.brcond %7 ^bb3, ^bb9 loc(#loc188)
  ^bb3:  // pred: ^bb2
    %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc88)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc89)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc89)
    %11 = cir.const #cir.int<8> : !u64i loc(#loc189)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc190)
    %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc88)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc191)
    cir.store %14, %2 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc192)
    cir.br ^bb4 loc(#loc193)
  ^bb4:  // pred: ^bb3
    %15 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc96)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc97)
    %17 = cir.cmp(eq, %15, %16) : !cir.ptr<!ty_TwoIntsClass>, !cir.bool loc(#loc194)
    cir.brcond %17 ^bb5, ^bb6 loc(#loc195)
  ^bb5:  // pred: ^bb4
    %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc99)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc100)
    %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc101)
    cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr1) loc(#loc99)
    cir.br ^bb6 loc(#loc95)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc95)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc83)
  ^bb8:  // pred: ^bb7
    %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc102)
    %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc103)
    cir.store %22, %0 : !s32i, !cir.ptr<!s32i> loc(#loc196)
    cir.br ^bb2 loc(#loc186)
  ^bb9:  // pred: ^bb2
    cir.br ^bb10 loc(#loc83)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc197)
  ^bb11:  // pred: ^bb10
    %23 = cir.const #cir.int<0> : !s32i loc(#loc106)
    cir.store %23, %1 : !s32i, !cir.ptr<!s32i> loc(#loc198)
    cir.br ^bb12 loc(#loc197)
  ^bb12:  // 2 preds: ^bb11, ^bb14
    %24 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc108)
    %25 = cir.const #cir.int<1> : !s32i loc(#loc109)
    %26 = cir.cmp(lt, %24, %25) : !s32i, !cir.bool loc(#loc199)
    cir.brcond %26 ^bb13, ^bb15 loc(#loc199)
  ^bb13:  // pred: ^bb12
    %27 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc110)
    %28 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc111)
    %29 = cir.cast(bitcast, %28 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc111)
    cir.call @free(%29) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc110)
    cir.br ^bb14 loc(#loc105)
  ^bb14:  // pred: ^bb13
    %30 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    %31 = cir.unary(inc, %30) : !s32i, !s32i loc(#loc113)
    cir.store %31, %1 : !s32i, !cir.ptr<!s32i> loc(#loc200)
    cir.br ^bb12 loc(#loc197)
  ^bb15:  // pred: ^bb12
    cir.br ^bb16 loc(#loc105)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc74)
  } loc(#loc181)
  cir.func @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_174goodEv() extra(#fn_attr2) {
    cir.call @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_17L7goodB2GEv() : () -> () loc(#loc116)
    cir.call @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_17L7goodG2BEv() : () -> () loc(#loc117)
    cir.return loc(#loc115)
  } loc(#loc201)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc202)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc203)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc204)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc124)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc125)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc126)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc127)
  cir.func @main(%arg0: !s32i loc(fused[#loc130, #loc131]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc132, #loc133])) -> !s32i extra(#fn_attr2) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc206)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc207)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc129)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc134)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc134)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc135)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc136)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc136)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc137)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc124)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc124)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc138)
    cir.call @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_174goodEv() : () -> () loc(#loc139)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc125)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc125)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc140)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc126)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc126)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc141)
    cir.call @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_173badEv() : () -> () loc(#loc142)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc127)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc127)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc143)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc144)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc208)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc208)
    cir.return %15 : !s32i loc(#loc208)
  } loc(#loc205)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s06/CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc2 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc4 = loc("/usr/include/stdlib.h":687:1)
#loc5 = loc("/usr/include/stdlib.h":687:32)
#loc6 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":24:1)
#loc7 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":41:1)
#loc8 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":26:5)
#loc9 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":26:9)
#loc10 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":26:11)
#loc11 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":27:5)
#loc12 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":27:20)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":29:12)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":29:5)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":30:5)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":34:5)
#loc17 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":30:13)
#loc18 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":30:9)
#loc19 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":30:16)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":30:20)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":33:16)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":33:20)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":24:6)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":33:9)
#loc25 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":30:24)
#loc26 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":30:23)
#loc27 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":35:5)
#loc28 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":40:5)
#loc29 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":35:13)
#loc30 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":35:9)
#loc31 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":35:16)
#loc32 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":35:20)
#loc33 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":39:9)
#loc34 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":39:14)
#loc35 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":35:24)
#loc36 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":35:23)
#loc37 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc38 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc39 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":48:1)
#loc40 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":64:1)
#loc41 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":50:5)
#loc42 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":50:9)
#loc43 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":50:11)
#loc44 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":51:5)
#loc45 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":51:20)
#loc46 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":53:12)
#loc47 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":53:5)
#loc48 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":54:5)
#loc49 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":58:5)
#loc50 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":54:13)
#loc51 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":54:9)
#loc52 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":54:16)
#loc53 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":54:20)
#loc54 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":57:16)
#loc55 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":57:20)
#loc56 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":48:13)
#loc57 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":57:9)
#loc58 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":54:24)
#loc59 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":54:23)
#loc60 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":59:5)
#loc61 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":63:5)
#loc62 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":59:13)
#loc63 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":59:9)
#loc64 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":59:16)
#loc65 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":59:20)
#loc66 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":62:16)
#loc67 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":59:24)
#loc68 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":59:23)
#loc69 = loc("/usr/include/stdlib.h":672:1)
#loc70 = loc("/usr/include/stdlib.h":672:45)
#loc71 = loc("/usr/include/stdlib.h":756:1)
#loc72 = loc("/usr/include/stdlib.h":756:70)
#loc73 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":67:1)
#loc74 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":85:1)
#loc75 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":69:5)
#loc76 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":69:9)
#loc77 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":69:11)
#loc78 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":70:5)
#loc79 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":70:20)
#loc80 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":72:12)
#loc81 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":72:5)
#loc82 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":73:5)
#loc83 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":78:5)
#loc84 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":73:13)
#loc85 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":73:9)
#loc86 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":73:16)
#loc87 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":73:20)
#loc88 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":76:32)
#loc89 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":76:39)
#loc90 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":76:43)
#loc91 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":76:62)
#loc92 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":76:63)
#loc93 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":76:9)
#loc94 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":77:9)
#loc95 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":77:37)
#loc96 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":77:13)
#loc97 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":77:21)
#loc98 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":77:27)
#loc99 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":77:28)
#loc100 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":77:34)
#loc101 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":77:33)
#loc102 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":73:24)
#loc103 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":73:23)
#loc104 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":79:5)
#loc105 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":84:5)
#loc106 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":79:13)
#loc107 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":79:9)
#loc108 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":79:16)
#loc109 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":79:20)
#loc110 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":83:9)
#loc111 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":83:14)
#loc112 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":79:24)
#loc113 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":79:23)
#loc114 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":87:1)
#loc115 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":91:1)
#loc116 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":89:5)
#loc117 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":90:5)
#loc118 = loc("/usr/include/stdlib.h":575:1)
#loc119 = loc("/usr/include/stdlib.h":575:41)
#loc120 = loc("/usr/include/time.h":76:1)
#loc121 = loc("/usr/include/time.h":76:38)
#loc122 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc123 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc124 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":111:15)
#loc125 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":113:15)
#loc126 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":116:15)
#loc127 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":118:15)
#loc128 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":106:1)
#loc129 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":121:1)
#loc134 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":107:1)
#loc135 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":109:27)
#loc136 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":109:22)
#loc137 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":109:5)
#loc138 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":111:5)
#loc139 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":112:5)
#loc140 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":113:5)
#loc141 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":116:5)
#loc142 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":117:5)
#loc143 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":118:5)
#loc144 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":120:12)
#loc145 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_17.cpp":120:5)
#loc146 = loc(fused[#loc1, #loc2])
#loc147 = loc(fused[#loc4, #loc5])
#loc148 = loc(fused[#loc6, #loc7])
#loc149 = loc(fused[#loc8, #loc9])
#loc150 = loc(fused[#loc8, #loc10])
#loc151 = loc(fused[#loc11, #loc12])
#loc152 = loc(fused[#loc14, #loc13])
#loc153 = loc(fused[#loc15, #loc16])
#loc154 = loc(fused[#loc18, #loc17])
#loc155 = loc(fused[#loc19, #loc20])
#loc156 = loc(fused[#loc21, #loc22])
#loc157 = loc(fused[#loc24, #loc22])
#loc158 = loc(fused[#loc26, #loc25])
#loc159 = loc(fused[#loc27, #loc28])
#loc160 = loc(fused[#loc30, #loc29])
#loc161 = loc(fused[#loc31, #loc32])
#loc162 = loc(fused[#loc36, #loc35])
#loc163 = loc(fused[#loc37, #loc38])
#loc164 = loc(fused[#loc39, #loc40])
#loc165 = loc(fused[#loc41, #loc42])
#loc166 = loc(fused[#loc41, #loc43])
#loc167 = loc(fused[#loc44, #loc45])
#loc168 = loc(fused[#loc47, #loc46])
#loc169 = loc(fused[#loc48, #loc49])
#loc170 = loc(fused[#loc51, #loc50])
#loc171 = loc(fused[#loc52, #loc53])
#loc172 = loc(fused[#loc54, #loc55])
#loc173 = loc(fused[#loc57, #loc55])
#loc174 = loc(fused[#loc59, #loc58])
#loc175 = loc(fused[#loc60, #loc61])
#loc176 = loc(fused[#loc63, #loc62])
#loc177 = loc(fused[#loc64, #loc65])
#loc178 = loc(fused[#loc68, #loc67])
#loc179 = loc(fused[#loc69, #loc70])
#loc180 = loc(fused[#loc71, #loc72])
#loc181 = loc(fused[#loc73, #loc74])
#loc182 = loc(fused[#loc75, #loc76])
#loc183 = loc(fused[#loc75, #loc77])
#loc184 = loc(fused[#loc78, #loc79])
#loc185 = loc(fused[#loc81, #loc80])
#loc186 = loc(fused[#loc82, #loc83])
#loc187 = loc(fused[#loc85, #loc84])
#loc188 = loc(fused[#loc86, #loc87])
#loc189 = loc(fused[#loc90, #loc91])
#loc190 = loc(fused[#loc89, #loc91])
#loc191 = loc(fused[#loc88, #loc92])
#loc192 = loc(fused[#loc93, #loc92])
#loc193 = loc(fused[#loc94, #loc95])
#loc194 = loc(fused[#loc96, #loc97])
#loc195 = loc(fused[#loc98, #loc95])
#loc196 = loc(fused[#loc103, #loc102])
#loc197 = loc(fused[#loc104, #loc105])
#loc198 = loc(fused[#loc107, #loc106])
#loc199 = loc(fused[#loc108, #loc109])
#loc200 = loc(fused[#loc113, #loc112])
#loc201 = loc(fused[#loc114, #loc115])
#loc202 = loc(fused[#loc118, #loc119])
#loc203 = loc(fused[#loc120, #loc121])
#loc204 = loc(fused[#loc122, #loc123])
#loc205 = loc(fused[#loc128, #loc129])
#loc208 = loc(fused[#loc145, #loc144])
