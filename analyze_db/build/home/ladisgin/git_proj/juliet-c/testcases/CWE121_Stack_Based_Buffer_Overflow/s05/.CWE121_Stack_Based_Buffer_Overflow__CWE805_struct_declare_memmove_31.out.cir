!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":97:10)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":97:14)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":97:20)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":97:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc170 = loc(fused[#loc72, #loc73])
#loc171 = loc(fused[#loc74, #loc75])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s05/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc141)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc143)
    %1 = cir.alloca !cir.array<!ty__twoIntsStruct x 50>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc144)
    %2 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc145)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 50>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc11)
    cir.store %3, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc146)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc148)
      %5 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc149)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc16)
      cir.store %6, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc148)
      %7 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc18)
      cir.store %7, %5 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc149)
      cir.scope {
        %8 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc151)
        cir.scope {
          %20 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc153)
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc29)
            %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc29)
            cir.store %22, %20 : !u64i, !cir.ptr<!u64i> loc(#loc155)
            cir.for : cond {
              %23 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc31)
              %24 = cir.const #cir.int<100> : !s32i loc(#loc32)
              %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc32)
              %26 = cir.cmp(lt, %23, %25) : !u64i, !cir.bool loc(#loc156)
              cir.condition(%26) loc(#loc33)
            } body {
              cir.scope {
                %23 = cir.const #cir.int<0> : !s32i loc(#loc35)
                %24 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc36)
                %25 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc37)
                %26 = cir.ptr_stride(%25 : !cir.ptr<!ty__twoIntsStruct>, %24 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc37)
                %27 = cir.get_member %26[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc38)
                cir.store %23, %27 : !s32i, !cir.ptr<!s32i> loc(#loc158)
                %28 = cir.const #cir.int<0> : !s32i loc(#loc39)
                %29 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc40)
                %30 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc41)
                %31 = cir.ptr_stride(%30 : !cir.ptr<!ty__twoIntsStruct>, %29 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc41)
                %32 = cir.get_member %31[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc42)
                cir.store %28, %32 : !s32i, !cir.ptr<!s32i> loc(#loc159)
              } loc(#loc157)
              cir.yield loc(#loc28)
            } step {
              %23 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc43)
              %24 = cir.unary(inc, %23) : !u64i, !u64i loc(#loc44)
              cir.store %24, %20 : !u64i, !cir.ptr<!u64i> loc(#loc160)
              cir.yield loc(#loc154)
            } loc(#loc154)
          } loc(#loc154)
        } loc(#loc152)
        %9 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc45)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc45)
        %11 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc46)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc46)
        %13 = cir.const #cir.int<100> : !s32i loc(#loc47)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc47)
        %15 = cir.const #cir.int<8> : !u64i loc(#loc161)
        %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc162)
        cir.libc.memmove %16 bytes from %12 to %10 : !cir.ptr<!void>, !u64i loc(#loc163)
        %17 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc52)
        %18 = cir.const #cir.int<0> : !s32i loc(#loc53)
        %19 = cir.ptr_stride(%17 : !cir.ptr<!ty__twoIntsStruct>, %18 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc54)
        cir.call @printStructLine(%19) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc55)
      } loc(#loc150)
    } loc(#loc147)
    cir.return loc(#loc4)
  } loc(#loc142)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc165)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc58)
    cir.return loc(#loc57)
  } loc(#loc164)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc166)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc167)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc168)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc66)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc67)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc68)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc69)
  cir.func @main(%arg0: !s32i loc(fused[#loc72, #loc73]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc74, #loc75])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc170)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc171)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc71)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc76)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc76)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc77)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc78)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc78)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc79)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc66)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31_good : !cir.ptr<!cir.func<!void ()>> loc(#loc172)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31_good() : () -> () loc(#loc81)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc67)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc68)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc173)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31_bad() : () -> () loc(#loc85)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc69)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc88)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc174)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc174)
    cir.return %17 : !s32i loc(#loc174)
  } loc(#loc169)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc176)
    %1 = cir.alloca !cir.array<!ty__twoIntsStruct x 50>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc177)
    %2 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc178)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc98)
    cir.store %3, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc179)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc181)
      %5 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc182)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc103)
      cir.store %6, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc181)
      %7 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc105)
      cir.store %7, %5 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc182)
      cir.scope {
        %8 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc184)
        cir.scope {
          %20 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc186)
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc116)
            %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc116)
            cir.store %22, %20 : !u64i, !cir.ptr<!u64i> loc(#loc188)
            cir.for : cond {
              %23 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc118)
              %24 = cir.const #cir.int<100> : !s32i loc(#loc119)
              %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc119)
              %26 = cir.cmp(lt, %23, %25) : !u64i, !cir.bool loc(#loc189)
              cir.condition(%26) loc(#loc120)
            } body {
              cir.scope {
                %23 = cir.const #cir.int<0> : !s32i loc(#loc122)
                %24 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc123)
                %25 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc124)
                %26 = cir.ptr_stride(%25 : !cir.ptr<!ty__twoIntsStruct>, %24 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc124)
                %27 = cir.get_member %26[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc38)
                cir.store %23, %27 : !s32i, !cir.ptr<!s32i> loc(#loc191)
                %28 = cir.const #cir.int<0> : !s32i loc(#loc125)
                %29 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc126)
                %30 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc127)
                %31 = cir.ptr_stride(%30 : !cir.ptr<!ty__twoIntsStruct>, %29 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc127)
                %32 = cir.get_member %31[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc42)
                cir.store %28, %32 : !s32i, !cir.ptr<!s32i> loc(#loc192)
              } loc(#loc190)
              cir.yield loc(#loc115)
            } step {
              %23 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc128)
              %24 = cir.unary(inc, %23) : !u64i, !u64i loc(#loc129)
              cir.store %24, %20 : !u64i, !cir.ptr<!u64i> loc(#loc193)
              cir.yield loc(#loc187)
            } loc(#loc187)
          } loc(#loc187)
        } loc(#loc185)
        %9 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc130)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc130)
        %11 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc131)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc131)
        %13 = cir.const #cir.int<100> : !s32i loc(#loc132)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc132)
        %15 = cir.const #cir.int<8> : !u64i loc(#loc194)
        %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc195)
        cir.libc.memmove %16 bytes from %12 to %10 : !cir.ptr<!void>, !u64i loc(#loc196)
        %17 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc137)
        %18 = cir.const #cir.int<0> : !s32i loc(#loc138)
        %19 = cir.ptr_stride(%17 : !cir.ptr<!ty__twoIntsStruct>, %18 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc139)
        cir.call @printStructLine(%19) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc140)
      } loc(#loc183)
    } loc(#loc180)
    cir.return loc(#loc91)
  } loc(#loc175)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s05/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":21:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":48:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":23:5)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":23:21)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":24:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":24:35)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":25:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":25:37)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":28:12)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":28:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":29:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":47:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":30:9)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":30:36)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":31:9)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":31:32)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":32:9)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":46:9)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":33:13)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":33:37)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":34:13)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":42:13)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":35:17)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":35:24)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":37:17)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":41:17)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":37:26)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":37:22)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":37:29)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":37:33)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":37:31)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":38:17)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":39:40)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":39:28)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":39:21)
#loc38 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":40:40)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":40:28)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":40:21)
#loc42 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":37:39)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":37:38)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":44:21)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":44:27)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":44:35)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":44:39)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":44:59)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":44:13)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":44:60)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":45:30)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":45:35)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":45:36)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":45:13)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":83:1)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":86:1)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":85:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":85:13)
#loc60 = loc("/usr/include/stdlib.h":575:1)
#loc61 = loc("/usr/include/stdlib.h":575:41)
#loc62 = loc("/usr/include/time.h":76:1)
#loc63 = loc("/usr/include/time.h":76:38)
#loc64 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc65 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":102:15)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":104:15)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":107:15)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":109:15)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":97:1)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":112:1)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":98:1)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":100:27)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":100:22)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":100:5)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":102:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":103:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":103:79)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":104:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":107:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":108:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":108:78)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":109:5)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":111:12)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":111:5)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":55:1)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":81:1)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":57:5)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":57:21)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":58:5)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":58:35)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":59:5)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":59:37)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":61:12)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":61:5)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":62:5)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":80:5)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":63:9)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":63:36)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":64:9)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":64:32)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":65:9)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":79:9)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":66:13)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":66:37)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":67:13)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":75:13)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":68:17)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":68:24)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":70:17)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":74:17)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":70:26)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":70:22)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":70:29)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":70:33)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":70:31)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":71:17)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":72:40)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":72:28)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":72:21)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":73:40)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":73:28)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":73:21)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":70:39)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":70:38)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":77:21)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":77:27)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":77:35)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":77:39)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":77:59)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":77:13)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":77:60)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":78:30)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":78:35)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":78:36)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memmove_31.c":78:13)
#loc141 = loc(fused[#loc1, #loc2])
#loc142 = loc(fused[#loc3, #loc4])
#loc143 = loc(fused[#loc5, #loc6])
#loc144 = loc(fused[#loc7, #loc8])
#loc145 = loc(fused[#loc9, #loc10])
#loc146 = loc(fused[#loc12, #loc11])
#loc147 = loc(fused[#loc13, #loc14])
#loc148 = loc(fused[#loc15, #loc16])
#loc149 = loc(fused[#loc17, #loc18])
#loc150 = loc(fused[#loc19, #loc20])
#loc151 = loc(fused[#loc21, #loc22])
#loc152 = loc(fused[#loc23, #loc24])
#loc153 = loc(fused[#loc25, #loc26])
#loc154 = loc(fused[#loc27, #loc28])
#loc155 = loc(fused[#loc30, #loc29])
#loc156 = loc(fused[#loc31, #loc32])
#loc157 = loc(fused[#loc34, #loc28])
#loc158 = loc(fused[#loc37, #loc35])
#loc159 = loc(fused[#loc41, #loc39])
#loc160 = loc(fused[#loc44, #loc43])
#loc161 = loc(fused[#loc48, #loc49])
#loc162 = loc(fused[#loc47, #loc49])
#loc163 = loc(fused[#loc50, #loc51])
#loc164 = loc(fused[#loc56, #loc57])
#loc165 = loc(fused[#loc58, #loc59])
#loc166 = loc(fused[#loc60, #loc61])
#loc167 = loc(fused[#loc62, #loc63])
#loc168 = loc(fused[#loc64, #loc65])
#loc169 = loc(fused[#loc70, #loc71])
#loc172 = loc(fused[#loc81, #loc82])
#loc173 = loc(fused[#loc85, #loc86])
#loc174 = loc(fused[#loc89, #loc88])
#loc175 = loc(fused[#loc90, #loc91])
#loc176 = loc(fused[#loc92, #loc93])
#loc177 = loc(fused[#loc94, #loc95])
#loc178 = loc(fused[#loc96, #loc97])
#loc179 = loc(fused[#loc99, #loc98])
#loc180 = loc(fused[#loc100, #loc101])
#loc181 = loc(fused[#loc102, #loc103])
#loc182 = loc(fused[#loc104, #loc105])
#loc183 = loc(fused[#loc106, #loc107])
#loc184 = loc(fused[#loc108, #loc109])
#loc185 = loc(fused[#loc110, #loc111])
#loc186 = loc(fused[#loc112, #loc113])
#loc187 = loc(fused[#loc114, #loc115])
#loc188 = loc(fused[#loc117, #loc116])
#loc189 = loc(fused[#loc118, #loc119])
#loc190 = loc(fused[#loc121, #loc115])
#loc191 = loc(fused[#loc124, #loc122])
#loc192 = loc(fused[#loc127, #loc125])
#loc193 = loc(fused[#loc129, #loc128])
#loc194 = loc(fused[#loc133, #loc134])
#loc195 = loc(fused[#loc132, #loc134])
#loc196 = loc(fused[#loc135, #loc136])
