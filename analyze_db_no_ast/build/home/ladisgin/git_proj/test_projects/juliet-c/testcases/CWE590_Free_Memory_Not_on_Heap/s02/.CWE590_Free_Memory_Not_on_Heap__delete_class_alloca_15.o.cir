!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc39 = loc("../../../testcasesupport/std_testcase.h":61:7)
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s02/CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc102)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc3)
  cir.func private  @printIntLine(!s32i) loc(#loc103)
  cir.func private  @_ZdlPvm(!cir.ptr<!void>, !u64i) extra(#fn_attr) loc(#loc104)
  cir.func  @_ZN54CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_153badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc106)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc12)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc107)
    cir.scope {
      %8 = cir.const #cir.int<6> : !s32i loc(#loc16)
      cir.switch (%8 : !s32i) [
      case (equal, 6) {
        cir.scope {
          %9 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc110)
          %10 = cir.const #cir.int<8> : !u64i loc(#loc20)
          %11 = cir.alloca !u8i, !cir.ptr<!u8i>, %10 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc20)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc20)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc20)
          cir.store %13, %9 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc110)
          %14 = cir.const #cir.int<2> : !s32i loc(#loc21)
          %15 = cir.load %9 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc22)
          %16 = cir.get_member %15[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc23)
          cir.store %14, %16 : !s32i, !cir.ptr<!s32i> loc(#loc111)
          %17 = cir.const #cir.int<2> : !s32i loc(#loc24)
          %18 = cir.load %9 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc25)
          %19 = cir.get_member %18[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc26)
          cir.store %17, %19 : !s32i, !cir.ptr<!s32i> loc(#loc112)
          %20 = cir.load %9 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc27)
          cir.store %20, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc113)
        } loc(#loc109)
        cir.break loc(#loc29)
      },
      case (default) {
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc3)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc3)
        cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc30)
        cir.break loc(#loc31)
      }
      ] loc(#loc14)
    } loc(#loc108)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc32)
    %3 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc23)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc33)
    cir.call @printIntLine(%4) : (!s32i) -> () loc(#loc34)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc35)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc35)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc36)
    cir.call @_ZdlPvm(%6, %7) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc36)
    cir.return loc(#loc9)
  } loc(#loc105)
  cir.func private  @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc114)
  cir.func linkonce_odr  @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc39)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc39)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc39)
    cir.return loc(#loc39)
  } loc(#loc39)
  cir.func internal private  @_ZN54CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc116)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc44)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc117)
    cir.scope {
      %8 = cir.const #cir.int<5> : !s32i loc(#loc48)
      cir.switch (%8 : !s32i) [
      case (equal, 6) {
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc49)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc49)
        cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc50)
        cir.break loc(#loc51)
      },
      case (default) {
        cir.scope {
          %9 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc120)
          %10 = cir.const #cir.int<8> : !u64i loc(#loc121)
          %11 = cir.call @_Znwm(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc120)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc121)
          cir.call @_ZN12TwoIntsClassC2Ev(%12) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr) loc(#loc55)
          cir.store %12, %9 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc120)
          %13 = cir.const #cir.int<2> : !s32i loc(#loc57)
          %14 = cir.load %9 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc58)
          %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc23)
          cir.store %13, %15 : !s32i, !cir.ptr<!s32i> loc(#loc122)
          %16 = cir.const #cir.int<2> : !s32i loc(#loc59)
          %17 = cir.load %9 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc60)
          %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc26)
          cir.store %16, %18 : !s32i, !cir.ptr<!s32i> loc(#loc123)
          %19 = cir.load %9 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc61)
          cir.store %19, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc124)
        } loc(#loc119)
        cir.break loc(#loc63)
      }
      ] loc(#loc46)
    } loc(#loc118)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc64)
    %3 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc23)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc65)
    cir.call @printIntLine(%4) : (!s32i) -> () loc(#loc66)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc67)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc67)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc68)
    cir.call @_ZdlPvm(%6, %7) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc68)
    cir.return loc(#loc41)
  } loc(#loc115)
  cir.func internal private  @_ZN54CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc126)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc73)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc127)
    cir.scope {
      %8 = cir.const #cir.int<6> : !s32i loc(#loc77)
      cir.switch (%8 : !s32i) [
      case (equal, 6) {
        cir.scope {
          %9 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc130)
          %10 = cir.const #cir.int<8> : !u64i loc(#loc131)
          %11 = cir.call @_Znwm(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc130)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc131)
          cir.call @_ZN12TwoIntsClassC2Ev(%12) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr) loc(#loc81)
          cir.store %12, %9 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc130)
          %13 = cir.const #cir.int<2> : !s32i loc(#loc83)
          %14 = cir.load %9 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc84)
          %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc23)
          cir.store %13, %15 : !s32i, !cir.ptr<!s32i> loc(#loc132)
          %16 = cir.const #cir.int<2> : !s32i loc(#loc85)
          %17 = cir.load %9 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc86)
          %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc26)
          cir.store %16, %18 : !s32i, !cir.ptr<!s32i> loc(#loc133)
          %19 = cir.load %9 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc87)
          cir.store %19, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc134)
        } loc(#loc129)
        cir.break loc(#loc89)
      },
      case (default) {
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc90)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc90)
        cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc91)
        cir.break loc(#loc92)
      }
      ] loc(#loc75)
    } loc(#loc128)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc93)
    %3 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc23)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc94)
    cir.call @printIntLine(%4) : (!s32i) -> () loc(#loc95)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc96)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc96)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc97)
    cir.call @_ZdlPvm(%6, %7) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc97)
    cir.return loc(#loc70)
  } loc(#loc125)
  cir.func  @_ZN54CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_154goodEv() extra(#fn_attr1) {
    cir.call @_ZN54CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15L8goodG2B1Ev() : () -> () loc(#loc100)
    cir.call @_ZN54CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15L8goodG2B2Ev() : () -> () loc(#loc101)
    cir.return loc(#loc99)
  } loc(#loc135)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s02/CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":43:19)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc6 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":140:1)
#loc7 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":141:41)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":26:1)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":49:1)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":28:5)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":28:20)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":29:12)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":29:5)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":30:5)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":45:5)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":30:12)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":33:5)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":39:5)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":35:9)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":35:53)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":36:30)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":36:9)
#loc23 = loc("../../../testcasesupport/std_testcase.h":64:13)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":37:30)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":37:9)
#loc26 = loc("../../../testcasesupport/std_testcase.h":65:13)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":38:16)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":38:9)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":40:5)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":43:9)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":44:9)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":46:18)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":46:24)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":46:5)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":48:12)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":26:6)
#loc37 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc38 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":56:1)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":79:1)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":58:5)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":58:20)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":59:12)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":59:5)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":60:5)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":75:5)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":60:12)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":64:19)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":64:9)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":65:9)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":67:5)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":73:5)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":69:9)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":69:41)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":69:37)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":70:30)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":70:9)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":71:30)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":71:9)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":72:16)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":72:9)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":74:5)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":76:18)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":76:24)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":76:5)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":78:12)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":56:13)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":82:1)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":105:1)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":84:5)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":84:20)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":85:12)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":85:5)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":86:5)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":101:5)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":86:12)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":89:5)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":95:5)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":91:9)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":91:41)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":91:37)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":92:30)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":92:9)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":93:30)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":93:9)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":94:16)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":94:9)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":96:5)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":99:19)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":99:9)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":100:9)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":102:18)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":102:24)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":102:5)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":104:12)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":82:13)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":107:1)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":111:1)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":109:5)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_alloca_15.cpp":110:5)
#loc102 = loc(fused[#loc1, #loc2])
#loc103 = loc(fused[#loc4, #loc5])
#loc104 = loc(fused[#loc6, #loc7])
#loc105 = loc(fused[#loc8, #loc9])
#loc106 = loc(fused[#loc10, #loc11])
#loc107 = loc(fused[#loc13, #loc12])
#loc108 = loc(fused[#loc14, #loc15])
#loc109 = loc(fused[#loc17, #loc18])
#loc110 = loc(fused[#loc19, #loc20])
#loc111 = loc(fused[#loc22, #loc21])
#loc112 = loc(fused[#loc25, #loc24])
#loc113 = loc(fused[#loc28, #loc27])
#loc114 = loc(fused[#loc37, #loc38])
#loc115 = loc(fused[#loc40, #loc41])
#loc116 = loc(fused[#loc42, #loc43])
#loc117 = loc(fused[#loc45, #loc44])
#loc118 = loc(fused[#loc46, #loc47])
#loc119 = loc(fused[#loc52, #loc53])
#loc120 = loc(fused[#loc54, #loc55])
#loc121 = loc(fused[#loc56, #loc55])
#loc122 = loc(fused[#loc58, #loc57])
#loc123 = loc(fused[#loc60, #loc59])
#loc124 = loc(fused[#loc62, #loc61])
#loc125 = loc(fused[#loc69, #loc70])
#loc126 = loc(fused[#loc71, #loc72])
#loc127 = loc(fused[#loc74, #loc73])
#loc128 = loc(fused[#loc75, #loc76])
#loc129 = loc(fused[#loc78, #loc79])
#loc130 = loc(fused[#loc80, #loc81])
#loc131 = loc(fused[#loc82, #loc81])
#loc132 = loc(fused[#loc84, #loc83])
#loc133 = loc(fused[#loc86, #loc85])
#loc134 = loc(fused[#loc88, #loc87])
#loc135 = loc(fused[#loc98, #loc99])
