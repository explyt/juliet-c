!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i}>
module @"/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__struct_malloc_use_09.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.global "private" constant external @GLOBAL_CONST_TRUE : !s32i {alignment = 4 : i64} loc(#loc132)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc133)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc134)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc135)
  cir.func private @printIntLine(!s32i) loc(#loc136)
  cir.func no_proto @CWE758_Undefined_Behavior__struct_malloc_use_09_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc132)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc15)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc15)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["pointer", init] {alignment = 8 : i64} loc(#loc141)
          %4 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data", init] {alignment = 4 : i64} loc(#loc142)
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc23)
          %6 = cir.const #cir.int<8> : !u64i loc(#loc143)
          %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc23)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc144)
          cir.store %8, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc141)
          cir.scope {
            %17 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc28)
            %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc29)
            %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc29)
            %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc146)
            cir.if %20 {
              %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc31)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc32)
              %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc33)
              cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc31)
            } loc(#loc147)
          } loc(#loc145)
          %9 = cir.load deref %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc22)
          cir.copy %9 to %4 : !cir.ptr<!ty__twoIntsStruct> loc(#loc142)
          %10 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc34)
          %11 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc35)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc35)
          cir.call @free(%12) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc34)
          %13 = cir.get_member %4[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc36)
          %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc37)
          cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc38)
          %15 = cir.get_member %4[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc39)
          %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc40)
          cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc41)
        } loc(#loc140)
      } loc(#loc139)
    } loc(#loc138)
    cir.return loc(#loc12)
  } loc(#loc137)
  cir.func no_proto @CWE758_Undefined_Behavior__struct_malloc_use_09_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc149)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc44)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc150)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc46)
    cir.return loc(#loc43)
  } loc(#loc148)
  cir.global "private" constant external @GLOBAL_CONST_FALSE : !s32i {alignment = 4 : i64} loc(#loc151)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc152)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc52)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @GLOBAL_CONST_FALSE : !cir.ptr<!s32i> loc(#loc151)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc57)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc57)
      cir.if %2 {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc52)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc52)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc61)
      } else {
        cir.scope {
          %3 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data"] {alignment = 4 : i64} loc(#loc157)
          %4 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["pointer", init] {alignment = 8 : i64} loc(#loc158)
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc68)
          %6 = cir.const #cir.int<8> : !u64i loc(#loc159)
          %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc68)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc160)
          cir.store %8, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc158)
          cir.scope {
            %17 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc73)
            %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc74)
            %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc74)
            %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc162)
            cir.if %20 {
              %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc76)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc77)
              %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc78)
              cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc76)
            } loc(#loc163)
          } loc(#loc161)
          %9 = cir.const #cir.int<1> : !s32i loc(#loc79)
          %10 = cir.get_member %3[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc36)
          cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc164)
          %11 = cir.const #cir.int<2> : !s32i loc(#loc81)
          %12 = cir.get_member %3[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc39)
          cir.store %11, %12 : !s32i, !cir.ptr<!s32i> loc(#loc165)
          %13 = cir.load deref %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc83)
          cir.copy %3 to %13 : !cir.ptr<!ty__twoIntsStruct> loc(#loc83)
          cir.scope {
            %17 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data", init] {alignment = 4 : i64} loc(#loc167)
            %18 = cir.load deref %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc87)
            cir.copy %18 to %17 : !cir.ptr<!ty__twoIntsStruct> loc(#loc167)
            %19 = cir.get_member %17[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc36)
            %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc88)
            cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc89)
            %21 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc39)
            %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc90)
            cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc91)
          } loc(#loc166)
          %14 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc92)
          %15 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc93)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc93)
          cir.call @free(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc92)
        } loc(#loc156)
      } loc(#loc155)
    } loc(#loc154)
    cir.return loc(#loc54)
  } loc(#loc153)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc132)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc98)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc98)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data"] {alignment = 4 : i64} loc(#loc172)
          %4 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["pointer", init] {alignment = 8 : i64} loc(#loc173)
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc106)
          %6 = cir.const #cir.int<8> : !u64i loc(#loc174)
          %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc106)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc175)
          cir.store %8, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc173)
          cir.scope {
            %17 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc111)
            %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc112)
            %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc112)
            %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc177)
            cir.if %20 {
              %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc114)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc115)
              %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc116)
              cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc114)
            } loc(#loc178)
          } loc(#loc176)
          %9 = cir.const #cir.int<1> : !s32i loc(#loc117)
          %10 = cir.get_member %3[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc36)
          cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc179)
          %11 = cir.const #cir.int<2> : !s32i loc(#loc119)
          %12 = cir.get_member %3[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc39)
          cir.store %11, %12 : !s32i, !cir.ptr<!s32i> loc(#loc180)
          %13 = cir.load deref %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc121)
          cir.copy %3 to %13 : !cir.ptr<!ty__twoIntsStruct> loc(#loc121)
          cir.scope {
            %17 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data", init] {alignment = 4 : i64} loc(#loc182)
            %18 = cir.load deref %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc125)
            cir.copy %18 to %17 : !cir.ptr<!ty__twoIntsStruct> loc(#loc182)
            %19 = cir.get_member %17[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc36)
            %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc126)
            cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc127)
            %21 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc39)
            %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc128)
            cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc129)
          } loc(#loc181)
          %14 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc130)
          %15 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc131)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc131)
          cir.call @free(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc130)
        } loc(#loc171)
      } loc(#loc170)
    } loc(#loc169)
    cir.return loc(#loc95)
  } loc(#loc168)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__struct_malloc_use_09.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase.h":109:1)
#loc2 = loc("../../testcasesupport/std_testcase.h":109:18)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc11 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":20:1)
#loc12 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":33:1)
#loc13 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":22:5)
#loc14 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":32:5)
#loc15 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":22:8)
#loc16 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":23:5)
#loc17 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":24:9)
#loc18 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":31:9)
#loc19 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":25:13)
#loc20 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":25:84)
#loc21 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":27:13)
#loc22 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":27:35)
#loc23 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":25:56)
#loc24 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":25:63)
#loc25 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":25:83)
#loc26 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":26:13)
#loc27 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":26:44)
#loc28 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":26:17)
#loc29 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":26:28)
#loc30 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":26:34)
#loc31 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":26:35)
#loc32 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":26:41)
#loc33 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":26:40)
#loc34 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":28:13)
#loc35 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":28:18)
#loc36 = loc("../../testcasesupport/std_testcase.h":98:9)
#loc37 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":29:31)
#loc38 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":29:13)
#loc39 = loc("../../testcasesupport/std_testcase.h":99:9)
#loc40 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":30:31)
#loc41 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":30:13)
#loc42 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":88:1)
#loc43 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":92:1)
#loc44 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":90:5)
#loc45 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":90:11)
#loc46 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":91:5)
#loc47 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":91:11)
#loc48 = loc("../../testcasesupport/std_testcase.h":110:1)
#loc49 = loc("../../testcasesupport/std_testcase.h":110:18)
#loc50 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc51 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc52 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":45:19)
#loc53 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":40:1)
#loc54 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":64:1)
#loc55 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":42:5)
#loc56 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":63:5)
#loc57 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":42:8)
#loc58 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":43:5)
#loc59 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":46:5)
#loc60 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":48:5)
#loc61 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":45:9)
#loc62 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":49:9)
#loc63 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":62:9)
#loc64 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":50:13)
#loc65 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":50:27)
#loc66 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":51:13)
#loc67 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":51:84)
#loc68 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":51:56)
#loc69 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":51:63)
#loc70 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":51:83)
#loc71 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":52:13)
#loc72 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":52:44)
#loc73 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":52:17)
#loc74 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":52:28)
#loc75 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":52:34)
#loc76 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":52:35)
#loc77 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":52:41)
#loc78 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":52:40)
#loc79 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":53:27)
#loc80 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":53:13)
#loc81 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":54:27)
#loc82 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":54:13)
#loc83 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":55:14)
#loc84 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":56:13)
#loc85 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":60:13)
#loc86 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":57:17)
#loc87 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":57:39)
#loc88 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":58:35)
#loc89 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":58:17)
#loc90 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":59:35)
#loc91 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":59:17)
#loc92 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":61:13)
#loc93 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":61:18)
#loc94 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":67:1)
#loc95 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":86:1)
#loc96 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":69:5)
#loc97 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":85:5)
#loc98 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":69:8)
#loc99 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":70:5)
#loc100 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":71:9)
#loc101 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":84:9)
#loc102 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":72:13)
#loc103 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":72:27)
#loc104 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":73:13)
#loc105 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":73:84)
#loc106 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":73:56)
#loc107 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":73:63)
#loc108 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":73:83)
#loc109 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":74:13)
#loc110 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":74:44)
#loc111 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":74:17)
#loc112 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":74:28)
#loc113 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":74:34)
#loc114 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":74:35)
#loc115 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":74:41)
#loc116 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":74:40)
#loc117 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":75:27)
#loc118 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":75:13)
#loc119 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":76:27)
#loc120 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":76:13)
#loc121 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":77:14)
#loc122 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":78:13)
#loc123 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":82:13)
#loc124 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":79:17)
#loc125 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":79:39)
#loc126 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":80:35)
#loc127 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":80:17)
#loc128 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":81:35)
#loc129 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":81:17)
#loc130 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":83:13)
#loc131 = loc("CWE758_Undefined_Behavior__struct_malloc_use_09.c":83:18)
#loc132 = loc(fused[#loc1, #loc2])
#loc133 = loc(fused[#loc3, #loc4])
#loc134 = loc(fused[#loc5, #loc6])
#loc135 = loc(fused[#loc7, #loc8])
#loc136 = loc(fused[#loc9, #loc10])
#loc137 = loc(fused[#loc11, #loc12])
#loc138 = loc(fused[#loc13, #loc14])
#loc139 = loc(fused[#loc16, #loc14])
#loc140 = loc(fused[#loc17, #loc18])
#loc141 = loc(fused[#loc19, #loc20])
#loc142 = loc(fused[#loc21, #loc22])
#loc143 = loc(fused[#loc24, #loc25])
#loc144 = loc(fused[#loc23, #loc20])
#loc145 = loc(fused[#loc26, #loc27])
#loc146 = loc(fused[#loc28, #loc29])
#loc147 = loc(fused[#loc30, #loc27])
#loc148 = loc(fused[#loc42, #loc43])
#loc149 = loc(fused[#loc44, #loc45])
#loc150 = loc(fused[#loc46, #loc47])
#loc151 = loc(fused[#loc48, #loc49])
#loc152 = loc(fused[#loc50, #loc51])
#loc153 = loc(fused[#loc53, #loc54])
#loc154 = loc(fused[#loc55, #loc56])
#loc155 = loc(fused[#loc58, #loc59, #loc60, #loc56])
#loc156 = loc(fused[#loc62, #loc63])
#loc157 = loc(fused[#loc64, #loc65])
#loc158 = loc(fused[#loc66, #loc67])
#loc159 = loc(fused[#loc69, #loc70])
#loc160 = loc(fused[#loc68, #loc67])
#loc161 = loc(fused[#loc71, #loc72])
#loc162 = loc(fused[#loc73, #loc74])
#loc163 = loc(fused[#loc75, #loc72])
#loc164 = loc(fused[#loc80, #loc79])
#loc165 = loc(fused[#loc82, #loc81])
#loc166 = loc(fused[#loc84, #loc85])
#loc167 = loc(fused[#loc86, #loc87])
#loc168 = loc(fused[#loc94, #loc95])
#loc169 = loc(fused[#loc96, #loc97])
#loc170 = loc(fused[#loc99, #loc97])
#loc171 = loc(fused[#loc100, #loc101])
#loc172 = loc(fused[#loc102, #loc103])
#loc173 = loc(fused[#loc104, #loc105])
#loc174 = loc(fused[#loc107, #loc108])
#loc175 = loc(fused[#loc106, #loc105])
#loc176 = loc(fused[#loc109, #loc110])
#loc177 = loc(fused[#loc111, #loc112])
#loc178 = loc(fused[#loc113, #loc110])
#loc179 = loc(fused[#loc118, #loc117])
#loc180 = loc(fused[#loc120, #loc119])
#loc181 = loc(fused[#loc122, #loc123])
#loc182 = loc(fused[#loc124, #loc125])
