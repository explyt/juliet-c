!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc116 = loc("CWE510_Trapdoor__network_listen_16.c":114:10)
#loc117 = loc("CWE510_Trapdoor__network_listen_16.c":114:14)
#loc118 = loc("CWE510_Trapdoor__network_listen_16.c":114:20)
#loc119 = loc("CWE510_Trapdoor__network_listen_16.c":114:32)
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc175 = loc(fused[#loc116, #loc117])
#loc176 = loc(fused[#loc118, #loc119])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE510_Trapdoor/CWE510_Trapdoor__network_listen_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc130)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc131)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc132)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc133)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc134)
  cir.func private @close(!s32i) -> !s32i loc(#loc135)
  cir.func no_proto @CWE510_Trapdoor__network_listen_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc137)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc138)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc139)
    cir.br ^bb1 loc(#loc140)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc140)
  ^bb2:  // pred: ^bb1
    %3 = cir.const #cir.int<1> : !s32i loc(#loc23)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc23)
    cir.brcond %4 ^bb3, ^bb35 loc(#loc23)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc141)
  ^bb4:  // pred: ^bb3
    %5 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc18)
    cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc138)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc20)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc139)
    cir.br ^bb5 loc(#loc142)
  ^bb5:  // pred: ^bb4
    cir.br ^bb7 loc(#loc142)
  ^bb6:  // pred: ^bb23
    %9 = cir.const #cir.int<0> : !s32i loc(#loc28)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc28)
    cir.brcond %10 ^bb7, ^bb24 loc(#loc28)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    %11 = cir.const #cir.int<2> : !s32i loc(#loc29)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %13 = cir.const #cir.int<6> : !s32i loc(#loc31)
    %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc32)
    cir.store %14, %1 : !s32i, !cir.ptr<!s32i> loc(#loc143)
    cir.br ^bb8 loc(#loc144)
  ^bb8:  // pred: ^bb7
    %15 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc37)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc38)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc38)
    %18 = cir.cmp(eq, %15, %17) : !s32i, !cir.bool loc(#loc145)
    cir.brcond %18 ^bb9, ^bb10 loc(#loc146)
  ^bb9:  // pred: ^bb8
    cir.br ^bb24 loc(#loc40)
  ^bb10:  // pred: ^bb8
    cir.br ^bb11 loc(#loc36)
  ^bb11:  // pred: ^bb10
    %19 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc147)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc43)
    %21 = cir.const #cir.int<16> : !u64i loc(#loc148)
    cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc149)
    %22 = cir.const #cir.int<2> : !s32i loc(#loc48)
    %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc48)
    %24 = cir.get_member %0[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc49)
    cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc150)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc51)
    %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc51)
    %27 = cir.get_member %0[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc52)
    %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc53)
    cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc151)
    %29 = cir.const #cir.int<30000> : !s32i loc(#loc55)
    %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc55)
    %31 = cir.call @htons(%30) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc56)
    %32 = cir.get_member %0[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc57)
    cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc152)
    cir.br ^bb12 loc(#loc153)
  ^bb12:  // pred: ^bb11
    %33 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc62)
    %34 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc154)
    %35 = cir.const #cir.int<16> : !u64i loc(#loc155)
    %36 = cir.cast(integral, %35 : !u64i), !u32i loc(#loc155)
    %37 = cir.call @bind(%33, %34, %36) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc67)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc68)
    %39 = cir.unary(minus, %38) : !s32i, !s32i loc(#loc68)
    %40 = cir.cmp(eq, %37, %39) : !s32i, !cir.bool loc(#loc156)
    cir.brcond %40 ^bb13, ^bb14 loc(#loc157)
  ^bb13:  // pred: ^bb12
    cir.br ^bb24 loc(#loc70)
  ^bb14:  // pred: ^bb12
    cir.br ^bb15 loc(#loc61)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc158)
  ^bb16:  // pred: ^bb15
    %41 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc73)
    %42 = cir.const #cir.int<5> : !s32i loc(#loc74)
    %43 = cir.call @listen(%41, %42) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc75)
    %44 = cir.const #cir.int<1> : !s32i loc(#loc76)
    %45 = cir.unary(minus, %44) : !s32i, !s32i loc(#loc76)
    %46 = cir.cmp(eq, %43, %45) : !s32i, !cir.bool loc(#loc159)
    cir.brcond %46 ^bb17, ^bb18 loc(#loc160)
  ^bb17:  // pred: ^bb16
    cir.br ^bb24 loc(#loc78)
  ^bb18:  // pred: ^bb16
    cir.br ^bb19 loc(#loc72)
  ^bb19:  // pred: ^bb18
    %47 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc79)
    %48 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc80)
    %49 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc81)
    %50 = cir.call @accept(%47, %48, %49) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc82)
    cir.store %50, %2 : !s32i, !cir.ptr<!s32i> loc(#loc161)
    cir.br ^bb20 loc(#loc162)
  ^bb20:  // pred: ^bb19
    %51 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc87)
    %52 = cir.const #cir.int<1> : !s32i loc(#loc88)
    %53 = cir.unary(minus, %52) : !s32i, !s32i loc(#loc88)
    %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc163)
    cir.brcond %54 ^bb21, ^bb22 loc(#loc164)
  ^bb21:  // pred: ^bb20
    cir.br ^bb24 loc(#loc90)
  ^bb22:  // pred: ^bb20
    cir.br ^bb23 loc(#loc86)
  ^bb23:  // pred: ^bb22
    cir.br ^bb6 loc(#loc27)
  ^bb24:  // 5 preds: ^bb6, ^bb9, ^bb13, ^bb17, ^bb21
    cir.br ^bb25 loc(#loc27)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc165)
  ^bb26:  // pred: ^bb25
    %55 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc93)
    %56 = cir.const #cir.int<1> : !s32i loc(#loc94)
    %57 = cir.unary(minus, %56) : !s32i, !s32i loc(#loc94)
    %58 = cir.cmp(ne, %55, %57) : !s32i, !cir.bool loc(#loc166)
    cir.brcond %58 ^bb27, ^bb28 loc(#loc167)
  ^bb27:  // pred: ^bb26
    %59 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc96)
    %60 = cir.call @close(%59) : (!s32i) -> !s32i loc(#loc97)
    cir.br ^bb28 loc(#loc92)
  ^bb28:  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc92)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30 loc(#loc168)
  ^bb30:  // pred: ^bb29
    %61 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc100)
    %62 = cir.const #cir.int<1> : !s32i loc(#loc101)
    %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc101)
    %64 = cir.cmp(ne, %61, %63) : !s32i, !cir.bool loc(#loc169)
    cir.brcond %64 ^bb31, ^bb32 loc(#loc170)
  ^bb31:  // pred: ^bb30
    %65 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    %66 = cir.call @close(%65) : (!s32i) -> !s32i loc(#loc104)
    cir.br ^bb32 loc(#loc99)
  ^bb32:  // 2 preds: ^bb30, ^bb31
    cir.br ^bb33 loc(#loc99)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc25)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc105)
  ^bb35:  // 2 preds: ^bb2, ^bb34
    cir.br ^bb36 loc(#loc22)
  ^bb36:  // pred: ^bb35
    cir.return loc(#loc14)
  } loc(#loc136)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc171)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc172)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc173)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc112)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc113)
  cir.func @main(%arg0: !s32i loc(fused[#loc116, #loc117]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc118, #loc119])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc175)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc176)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc115)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc120)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc120)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc121)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc122)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc122)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc123)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc112)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc112)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc124)
    %8 = cir.get_global @CWE510_Trapdoor__network_listen_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc177)
    cir.call @CWE510_Trapdoor__network_listen_16_bad() : () -> () loc(#loc125)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc113)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc113)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc127)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc128)
    cir.store %11, %2 : !s32i, !cir.ptr<!s32i> loc(#loc178)
    %12 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc178)
    cir.return %12 : !s32i loc(#loc178)
  } loc(#loc174)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE510_Trapdoor/CWE510_Trapdoor__network_listen_16.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/unistd.h":358:1)
#loc12 = loc("/usr/include/unistd.h":358:27)
#loc13 = loc("CWE510_Trapdoor__network_listen_16.c":39:1)
#loc14 = loc("CWE510_Trapdoor__network_listen_16.c":103:1)
#loc15 = loc("CWE510_Trapdoor__network_listen_16.c":48:13)
#loc16 = loc("CWE510_Trapdoor__network_listen_16.c":48:32)
#loc17 = loc("CWE510_Trapdoor__network_listen_16.c":49:13)
#loc18 = loc("CWE510_Trapdoor__network_listen_16.c":49:35)
#loc19 = loc("CWE510_Trapdoor__network_listen_16.c":50:13)
#loc20 = loc("CWE510_Trapdoor__network_listen_16.c":50:35)
#loc21 = loc("CWE510_Trapdoor__network_listen_16.c":41:5)
#loc22 = loc("CWE510_Trapdoor__network_listen_16.c":102:5)
#loc23 = loc("CWE510_Trapdoor__network_listen_16.c":41:11)
#loc24 = loc("CWE510_Trapdoor__network_listen_16.c":43:9)
#loc25 = loc("CWE510_Trapdoor__network_listen_16.c":100:9)
#loc26 = loc("CWE510_Trapdoor__network_listen_16.c":51:13)
#loc27 = loc("CWE510_Trapdoor__network_listen_16.c":85:21)
#loc28 = loc("CWE510_Trapdoor__network_listen_16.c":85:20)
#loc29 = loc("CWE510_Trapdoor__network_listen_16.c":60:39)
#loc30 = loc("CWE510_Trapdoor__network_listen_16.c":60:48)
#loc31 = loc("CWE510_Trapdoor__network_listen_16.c":60:61)
#loc32 = loc("CWE510_Trapdoor__network_listen_16.c":60:32)
#loc33 = loc("CWE510_Trapdoor__network_listen_16.c":60:17)
#loc34 = loc("CWE510_Trapdoor__network_listen_16.c":60:72)
#loc35 = loc("CWE510_Trapdoor__network_listen_16.c":61:17)
#loc36 = loc("CWE510_Trapdoor__network_listen_16.c":64:17)
#loc37 = loc("CWE510_Trapdoor__network_listen_16.c":61:21)
#loc38 = loc("CWE510_Trapdoor__network_listen_16.c":61:37)
#loc39 = loc("CWE510_Trapdoor__network_listen_16.c":62:17)
#loc40 = loc("CWE510_Trapdoor__network_listen_16.c":63:21)
#loc41 = loc("CWE510_Trapdoor__network_listen_16.c":65:24)
#loc42 = loc("CWE510_Trapdoor__network_listen_16.c":65:25)
#loc43 = loc("CWE510_Trapdoor__network_listen_16.c":65:34)
#loc44 = loc("CWE510_Trapdoor__network_listen_16.c":65:37)
#loc45 = loc("CWE510_Trapdoor__network_listen_16.c":65:51)
#loc46 = loc("CWE510_Trapdoor__network_listen_16.c":65:17)
#loc47 = loc("CWE510_Trapdoor__network_listen_16.c":65:52)
#loc48 = loc("CWE510_Trapdoor__network_listen_16.c":66:38)
#loc49 = loc("/usr/include/netinet/in.h":249:5)
#loc50 = loc("CWE510_Trapdoor__network_listen_16.c":66:17)
#loc51 = loc("CWE510_Trapdoor__network_listen_16.c":67:43)
#loc52 = loc("/usr/include/netinet/in.h":251:20)
#loc53 = loc("/usr/include/netinet/in.h":33:15)
#loc54 = loc("CWE510_Trapdoor__network_listen_16.c":67:17)
#loc55 = loc("CWE510_Trapdoor__network_listen_16.c":68:42)
#loc56 = loc("CWE510_Trapdoor__network_listen_16.c":68:36)
#loc57 = loc("/usr/include/netinet/in.h":250:15)
#loc58 = loc("CWE510_Trapdoor__network_listen_16.c":68:17)
#loc59 = loc("CWE510_Trapdoor__network_listen_16.c":68:47)
#loc60 = loc("CWE510_Trapdoor__network_listen_16.c":69:17)
#loc61 = loc("CWE510_Trapdoor__network_listen_16.c":72:17)
#loc62 = loc("CWE510_Trapdoor__network_listen_16.c":69:26)
#loc63 = loc("CWE510_Trapdoor__network_listen_16.c":69:58)
#loc64 = loc("CWE510_Trapdoor__network_listen_16.c":69:59)
#loc65 = loc("CWE510_Trapdoor__network_listen_16.c":69:68)
#loc66 = loc("CWE510_Trapdoor__network_listen_16.c":69:82)
#loc67 = loc("CWE510_Trapdoor__network_listen_16.c":69:21)
#loc68 = loc("CWE510_Trapdoor__network_listen_16.c":69:88)
#loc69 = loc("CWE510_Trapdoor__network_listen_16.c":70:17)
#loc70 = loc("CWE510_Trapdoor__network_listen_16.c":71:21)
#loc71 = loc("CWE510_Trapdoor__network_listen_16.c":73:17)
#loc72 = loc("CWE510_Trapdoor__network_listen_16.c":76:17)
#loc73 = loc("CWE510_Trapdoor__network_listen_16.c":73:28)
#loc74 = loc("CWE510_Trapdoor__network_listen_16.c":73:42)
#loc75 = loc("CWE510_Trapdoor__network_listen_16.c":73:21)
#loc76 = loc("CWE510_Trapdoor__network_listen_16.c":73:48)
#loc77 = loc("CWE510_Trapdoor__network_listen_16.c":74:17)
#loc78 = loc("CWE510_Trapdoor__network_listen_16.c":75:21)
#loc79 = loc("CWE510_Trapdoor__network_listen_16.c":78:39)
#loc80 = loc("CWE510_Trapdoor__network_listen_16.c":78:53)
#loc81 = loc("CWE510_Trapdoor__network_listen_16.c":78:59)
#loc82 = loc("CWE510_Trapdoor__network_listen_16.c":78:32)
#loc83 = loc("CWE510_Trapdoor__network_listen_16.c":78:17)
#loc84 = loc("CWE510_Trapdoor__network_listen_16.c":78:63)
#loc85 = loc("CWE510_Trapdoor__network_listen_16.c":79:17)
#loc86 = loc("CWE510_Trapdoor__network_listen_16.c":82:17)
#loc87 = loc("CWE510_Trapdoor__network_listen_16.c":79:21)
#loc88 = loc("CWE510_Trapdoor__network_listen_16.c":79:37)
#loc89 = loc("CWE510_Trapdoor__network_listen_16.c":80:17)
#loc90 = loc("CWE510_Trapdoor__network_listen_16.c":81:21)
#loc91 = loc("CWE510_Trapdoor__network_listen_16.c":86:13)
#loc92 = loc("CWE510_Trapdoor__network_listen_16.c":89:13)
#loc93 = loc("CWE510_Trapdoor__network_listen_16.c":86:17)
#loc94 = loc("CWE510_Trapdoor__network_listen_16.c":86:33)
#loc95 = loc("CWE510_Trapdoor__network_listen_16.c":87:13)
#loc96 = loc("CWE510_Trapdoor__network_listen_16.c":88:30)
#loc97 = loc("CWE510_Trapdoor__network_listen_16.c":88:17)
#loc98 = loc("CWE510_Trapdoor__network_listen_16.c":90:13)
#loc99 = loc("CWE510_Trapdoor__network_listen_16.c":93:13)
#loc100 = loc("CWE510_Trapdoor__network_listen_16.c":90:17)
#loc101 = loc("CWE510_Trapdoor__network_listen_16.c":90:33)
#loc102 = loc("CWE510_Trapdoor__network_listen_16.c":91:13)
#loc103 = loc("CWE510_Trapdoor__network_listen_16.c":92:30)
#loc104 = loc("CWE510_Trapdoor__network_listen_16.c":92:17)
#loc105 = loc("CWE510_Trapdoor__network_listen_16.c":101:9)
#loc106 = loc("/usr/include/stdlib.h":575:1)
#loc107 = loc("/usr/include/stdlib.h":575:41)
#loc108 = loc("/usr/include/time.h":76:1)
#loc109 = loc("/usr/include/time.h":76:38)
#loc110 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc111 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc112 = loc("CWE510_Trapdoor__network_listen_16.c":119:15)
#loc113 = loc("CWE510_Trapdoor__network_listen_16.c":121:15)
#loc114 = loc("CWE510_Trapdoor__network_listen_16.c":114:1)
#loc115 = loc("CWE510_Trapdoor__network_listen_16.c":124:1)
#loc120 = loc("CWE510_Trapdoor__network_listen_16.c":115:1)
#loc121 = loc("CWE510_Trapdoor__network_listen_16.c":117:27)
#loc122 = loc("CWE510_Trapdoor__network_listen_16.c":117:22)
#loc123 = loc("CWE510_Trapdoor__network_listen_16.c":117:5)
#loc124 = loc("CWE510_Trapdoor__network_listen_16.c":119:5)
#loc125 = loc("CWE510_Trapdoor__network_listen_16.c":120:5)
#loc126 = loc("CWE510_Trapdoor__network_listen_16.c":120:44)
#loc127 = loc("CWE510_Trapdoor__network_listen_16.c":121:5)
#loc128 = loc("CWE510_Trapdoor__network_listen_16.c":123:12)
#loc129 = loc("CWE510_Trapdoor__network_listen_16.c":123:5)
#loc130 = loc(fused[#loc1, #loc2])
#loc131 = loc(fused[#loc3, #loc4])
#loc132 = loc(fused[#loc5, #loc6])
#loc133 = loc(fused[#loc7, #loc8])
#loc134 = loc(fused[#loc9, #loc10])
#loc135 = loc(fused[#loc11, #loc12])
#loc136 = loc(fused[#loc13, #loc14])
#loc137 = loc(fused[#loc15, #loc16])
#loc138 = loc(fused[#loc17, #loc18])
#loc139 = loc(fused[#loc19, #loc20])
#loc140 = loc(fused[#loc21, #loc22])
#loc141 = loc(fused[#loc24, #loc25])
#loc142 = loc(fused[#loc26, #loc27])
#loc143 = loc(fused[#loc33, #loc34])
#loc144 = loc(fused[#loc35, #loc36])
#loc145 = loc(fused[#loc37, #loc38])
#loc146 = loc(fused[#loc39, #loc36])
#loc147 = loc(fused[#loc41, #loc42])
#loc148 = loc(fused[#loc44, #loc45])
#loc149 = loc(fused[#loc46, #loc47])
#loc150 = loc(fused[#loc50, #loc48])
#loc151 = loc(fused[#loc54, #loc51])
#loc152 = loc(fused[#loc58, #loc59])
#loc153 = loc(fused[#loc60, #loc61])
#loc154 = loc(fused[#loc63, #loc64])
#loc155 = loc(fused[#loc65, #loc66])
#loc156 = loc(fused[#loc67, #loc68])
#loc157 = loc(fused[#loc69, #loc61])
#loc158 = loc(fused[#loc71, #loc72])
#loc159 = loc(fused[#loc75, #loc76])
#loc160 = loc(fused[#loc77, #loc72])
#loc161 = loc(fused[#loc83, #loc84])
#loc162 = loc(fused[#loc85, #loc86])
#loc163 = loc(fused[#loc87, #loc88])
#loc164 = loc(fused[#loc89, #loc86])
#loc165 = loc(fused[#loc91, #loc92])
#loc166 = loc(fused[#loc93, #loc94])
#loc167 = loc(fused[#loc95, #loc92])
#loc168 = loc(fused[#loc98, #loc99])
#loc169 = loc(fused[#loc100, #loc101])
#loc170 = loc(fused[#loc102, #loc99])
#loc171 = loc(fused[#loc106, #loc107])
#loc172 = loc(fused[#loc108, #loc109])
#loc173 = loc(fused[#loc110, #loc111])
#loc174 = loc(fused[#loc114, #loc115])
#loc177 = loc(fused[#loc125, #loc126])
#loc178 = loc(fused[#loc129, #loc128])
