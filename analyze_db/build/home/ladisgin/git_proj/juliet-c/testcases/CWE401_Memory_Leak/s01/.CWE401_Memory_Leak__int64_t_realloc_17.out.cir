!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc76 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":107:10)
#loc77 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":107:14)
#loc78 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":107:20)
#loc79 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":107:32)
#loc220 = loc(fused[#loc76, #loc77])
#loc221 = loc(fused[#loc78, #loc79])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @realloc(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc188)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc189)
  cir.func private @printLongLongLine(!s64i) loc(#loc190)
  cir.func no_proto @CWE401_Memory_Leak__int64_t_realloc_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc192)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc193)
    %2 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc194)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc14)
    cir.store %3, %2 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc195)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc18)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc197)
      cir.for : cond {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc20)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc21)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc198)
        cir.condition(%7) loc(#loc22)
      } body {
        cir.scope {
          %5 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc24)
          %6 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc25)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc25)
          %8 = cir.const #cir.int<100> : !s32i loc(#loc26)
          %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc26)
          %10 = cir.const #cir.int<8> : !u64i loc(#loc200)
          %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc201)
          %12 = cir.call @realloc(%7, %11) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc24)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc202)
          cir.store %13, %2 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc203)
          cir.scope {
            %22 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc33)
            %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc34)
            %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc34)
            %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!s64i>, !cir.bool loc(#loc205)
            cir.if %25 {
              %26 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc36)
              %27 = cir.const #cir.int<1> : !s32i loc(#loc37)
              %28 = cir.unary(minus, %27) : !s32i, !s32i loc(#loc38)
              cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc36)
            } loc(#loc206)
          } loc(#loc204)
          %14 = cir.const #cir.int<5> : !s64i loc(#loc39)
          %15 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc40)
          %16 = cir.const #cir.int<0> : !s32i loc(#loc41)
          %17 = cir.ptr_stride(%15 : !cir.ptr<!s64i>, %16 : !s32i), !cir.ptr<!s64i> loc(#loc42)
          cir.store %14, %17 : !s64i, !cir.ptr<!s64i> loc(#loc207)
          %18 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc43)
          %19 = cir.const #cir.int<0> : !s32i loc(#loc44)
          %20 = cir.ptr_stride(%18 : !cir.ptr<!s64i>, %19 : !s32i), !cir.ptr<!s64i> loc(#loc45)
          %21 = cir.load %20 : !cir.ptr<!s64i>, !s64i loc(#loc43)
          cir.call @printLongLongLine(%21) : (!s64i) -> () loc(#loc46)
        } loc(#loc199)
        cir.yield loc(#loc17)
      } step {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc47)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc48)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc208)
        cir.yield loc(#loc196)
      } loc(#loc196)
    } loc(#loc196)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc51)
      cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc210)
      cir.for : cond {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc53)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc54)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc211)
        cir.condition(%7) loc(#loc55)
      } body {
        cir.yield loc(#loc50)
      } step {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc56)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc57)
        cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc212)
        cir.yield loc(#loc209)
      } loc(#loc209)
    } loc(#loc209)
    cir.return loc(#loc8)
  } loc(#loc191)
  cir.func no_proto @CWE401_Memory_Leak__int64_t_realloc_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc214)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc60)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc215)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc62)
    cir.return loc(#loc59)
  } loc(#loc213)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc216)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc217)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc218)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc70)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc71)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc72)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc73)
  cir.func @main(%arg0: !s32i loc(fused[#loc76, #loc77]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc78, #loc79])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc220)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc221)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc75)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc80)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc80)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc81)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc82)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc82)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc83)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc70)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    %8 = cir.get_global @CWE401_Memory_Leak__int64_t_realloc_17_good : !cir.ptr<!cir.func<!void ()>> loc(#loc222)
    cir.call @CWE401_Memory_Leak__int64_t_realloc_17_good() : () -> () loc(#loc85)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc71)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc72)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc72)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    %13 = cir.get_global @CWE401_Memory_Leak__int64_t_realloc_17_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc223)
    cir.call @CWE401_Memory_Leak__int64_t_realloc_17_bad() : () -> () loc(#loc89)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc73)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc92)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc224)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc224)
    cir.return %17 : !s32i loc(#loc224)
  } loc(#loc219)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc225)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc227)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc228)
    %2 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc229)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc103)
    cir.store %3, %2 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc230)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc107)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc232)
      cir.for : cond {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc109)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc110)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc233)
        cir.condition(%7) loc(#loc111)
      } body {
        cir.scope {
          %5 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc113)
          %6 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc114)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc114)
          %8 = cir.const #cir.int<100> : !s32i loc(#loc115)
          %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc115)
          %10 = cir.const #cir.int<8> : !u64i loc(#loc235)
          %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc236)
          %12 = cir.call @realloc(%7, %11) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc113)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc237)
          cir.store %13, %2 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc238)
          cir.scope {
            %22 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc122)
            %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc123)
            %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc123)
            %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!s64i>, !cir.bool loc(#loc240)
            cir.if %25 {
              %26 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc125)
              %27 = cir.const #cir.int<1> : !s32i loc(#loc126)
              %28 = cir.unary(minus, %27) : !s32i, !s32i loc(#loc127)
              cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc125)
            } loc(#loc241)
          } loc(#loc239)
          %14 = cir.const #cir.int<5> : !s64i loc(#loc128)
          %15 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc129)
          %16 = cir.const #cir.int<0> : !s32i loc(#loc130)
          %17 = cir.ptr_stride(%15 : !cir.ptr<!s64i>, %16 : !s32i), !cir.ptr<!s64i> loc(#loc131)
          cir.store %14, %17 : !s64i, !cir.ptr<!s64i> loc(#loc242)
          %18 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc132)
          %19 = cir.const #cir.int<0> : !s32i loc(#loc133)
          %20 = cir.ptr_stride(%18 : !cir.ptr<!s64i>, %19 : !s32i), !cir.ptr<!s64i> loc(#loc134)
          %21 = cir.load %20 : !cir.ptr<!s64i>, !s64i loc(#loc132)
          cir.call @printLongLongLine(%21) : (!s64i) -> () loc(#loc135)
        } loc(#loc234)
        cir.yield loc(#loc106)
      } step {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc136)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc137)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc243)
        cir.yield loc(#loc231)
      } loc(#loc231)
    } loc(#loc231)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc140)
      cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc245)
      cir.for : cond {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc142)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc143)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc246)
        cir.condition(%7) loc(#loc144)
      } body {
        cir.scope {
          %5 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc146)
          %6 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc147)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc147)
          cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc146)
        } loc(#loc247)
        cir.yield loc(#loc139)
      } step {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc148)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc149)
        cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc248)
        cir.yield loc(#loc244)
      } loc(#loc244)
    } loc(#loc244)
    cir.return loc(#loc97)
  } loc(#loc226)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc250)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc251)
    %2 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc252)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc157)
    cir.store %3, %2 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc253)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc161)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc255)
      cir.for : cond {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc163)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc164)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc256)
        cir.condition(%7) loc(#loc165)
      } body {
        cir.scope {
          %5 = cir.const #cir.int<100> : !s32i loc(#loc167)
          %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc167)
          %7 = cir.const #cir.int<8> : !u64i loc(#loc167)
          %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc167)
          %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc167)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc167)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc167)
          cir.store %11, %2 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc258)
          %12 = cir.const #cir.int<5> : !s64i loc(#loc169)
          %13 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc170)
          %14 = cir.const #cir.int<0> : !s32i loc(#loc171)
          %15 = cir.ptr_stride(%13 : !cir.ptr<!s64i>, %14 : !s32i), !cir.ptr<!s64i> loc(#loc172)
          cir.store %12, %15 : !s64i, !cir.ptr<!s64i> loc(#loc259)
          %16 = cir.load %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc173)
          %17 = cir.const #cir.int<0> : !s32i loc(#loc174)
          %18 = cir.ptr_stride(%16 : !cir.ptr<!s64i>, %17 : !s32i), !cir.ptr<!s64i> loc(#loc175)
          %19 = cir.load %18 : !cir.ptr<!s64i>, !s64i loc(#loc173)
          cir.call @printLongLongLine(%19) : (!s64i) -> () loc(#loc176)
        } loc(#loc257)
        cir.yield loc(#loc160)
      } step {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc177)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc178)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc260)
        cir.yield loc(#loc254)
      } loc(#loc254)
    } loc(#loc254)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc181)
      cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc262)
      cir.for : cond {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc183)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc184)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc263)
        cir.condition(%7) loc(#loc185)
      } body {
        cir.yield loc(#loc180)
      } step {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc186)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc187)
        cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc264)
        cir.yield loc(#loc261)
      } loc(#loc261)
    } loc(#loc261)
    cir.return loc(#loc151)
  } loc(#loc249)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_17.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":683:1)
#loc2 = loc("/usr/include/stdlib.h":684:14)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc7 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":24:1)
#loc8 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":43:1)
#loc9 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":26:5)
#loc10 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":26:9)
#loc11 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":26:11)
#loc12 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":27:5)
#loc13 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":27:15)
#loc14 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":28:12)
#loc15 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":28:5)
#loc16 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":29:5)
#loc17 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":37:5)
#loc18 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":29:13)
#loc19 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":29:9)
#loc20 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":29:16)
#loc21 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":29:20)
#loc22 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":29:18)
#loc23 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":30:5)
#loc24 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":32:27)
#loc25 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":32:35)
#loc26 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":32:41)
#loc27 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":32:45)
#loc28 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":32:59)
#loc29 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":32:60)
#loc30 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":32:9)
#loc31 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":33:9)
#loc32 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":33:37)
#loc33 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":33:13)
#loc34 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":33:21)
#loc35 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":33:27)
#loc36 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":33:28)
#loc37 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":33:34)
#loc38 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":33:33)
#loc39 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":35:19)
#loc40 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":35:9)
#loc41 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":35:14)
#loc42 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":35:15)
#loc43 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":36:27)
#loc44 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":36:32)
#loc45 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":36:33)
#loc46 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":36:9)
#loc47 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":29:24)
#loc48 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":29:23)
#loc49 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":38:5)
#loc50 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":42:5)
#loc51 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":38:13)
#loc52 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":38:9)
#loc53 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":38:16)
#loc54 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":38:20)
#loc55 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":38:18)
#loc56 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":38:24)
#loc57 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":38:23)
#loc58 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":92:1)
#loc59 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":96:1)
#loc60 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":94:5)
#loc61 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":94:13)
#loc62 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":95:5)
#loc63 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":95:13)
#loc64 = loc("/usr/include/stdlib.h":575:1)
#loc65 = loc("/usr/include/stdlib.h":575:41)
#loc66 = loc("/usr/include/time.h":76:1)
#loc67 = loc("/usr/include/time.h":76:38)
#loc68 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc69 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc70 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":112:15)
#loc71 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":114:15)
#loc72 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":117:15)
#loc73 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":119:15)
#loc74 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":107:1)
#loc75 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":122:1)
#loc80 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":108:1)
#loc81 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":110:27)
#loc82 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":110:22)
#loc83 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":110:5)
#loc84 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":112:5)
#loc85 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":113:5)
#loc86 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":113:49)
#loc87 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":114:5)
#loc88 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":117:5)
#loc89 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":118:5)
#loc90 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":118:48)
#loc91 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":119:5)
#loc92 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":121:12)
#loc93 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":121:5)
#loc94 = loc("/usr/include/stdlib.h":687:1)
#loc95 = loc("/usr/include/stdlib.h":687:32)
#loc96 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":50:1)
#loc97 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":69:1)
#loc98 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":52:5)
#loc99 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":52:9)
#loc100 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":52:11)
#loc101 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":53:5)
#loc102 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":53:15)
#loc103 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":54:12)
#loc104 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":54:5)
#loc105 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":55:5)
#loc106 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":63:5)
#loc107 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":55:13)
#loc108 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":55:9)
#loc109 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":55:16)
#loc110 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":55:20)
#loc111 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":55:18)
#loc112 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":56:5)
#loc113 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":58:27)
#loc114 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":58:35)
#loc115 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":58:41)
#loc116 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":58:45)
#loc117 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":58:59)
#loc118 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":58:60)
#loc119 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":58:9)
#loc120 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":59:9)
#loc121 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":59:37)
#loc122 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":59:13)
#loc123 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":59:21)
#loc124 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":59:27)
#loc125 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":59:28)
#loc126 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":59:34)
#loc127 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":59:33)
#loc128 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":61:19)
#loc129 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":61:9)
#loc130 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":61:14)
#loc131 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":61:15)
#loc132 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":62:27)
#loc133 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":62:32)
#loc134 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":62:33)
#loc135 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":62:9)
#loc136 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":55:24)
#loc137 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":55:23)
#loc138 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":64:5)
#loc139 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":68:5)
#loc140 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":64:13)
#loc141 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":64:9)
#loc142 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":64:16)
#loc143 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":64:20)
#loc144 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":64:18)
#loc145 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":65:5)
#loc146 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":67:9)
#loc147 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":67:14)
#loc148 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":64:24)
#loc149 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":64:23)
#loc150 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":72:1)
#loc151 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":90:1)
#loc152 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":74:5)
#loc153 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":74:9)
#loc154 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":74:11)
#loc155 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":75:5)
#loc156 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":75:15)
#loc157 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":76:12)
#loc158 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":76:5)
#loc159 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":77:5)
#loc160 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":84:5)
#loc161 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":77:13)
#loc162 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":77:9)
#loc163 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":77:16)
#loc164 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":77:20)
#loc165 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":77:18)
#loc166 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":78:5)
#loc167 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":80:27)
#loc168 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":80:9)
#loc169 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":82:19)
#loc170 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":82:9)
#loc171 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":82:14)
#loc172 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":82:15)
#loc173 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":83:27)
#loc174 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":83:32)
#loc175 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":83:33)
#loc176 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":83:9)
#loc177 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":77:24)
#loc178 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":77:23)
#loc179 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":85:5)
#loc180 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":89:5)
#loc181 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":85:13)
#loc182 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":85:9)
#loc183 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":85:16)
#loc184 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":85:20)
#loc185 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":85:18)
#loc186 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":85:24)
#loc187 = loc("CWE401_Memory_Leak__int64_t_realloc_17.c":85:23)
#loc188 = loc(fused[#loc1, #loc2])
#loc189 = loc(fused[#loc3, #loc4])
#loc190 = loc(fused[#loc5, #loc6])
#loc191 = loc(fused[#loc7, #loc8])
#loc192 = loc(fused[#loc9, #loc10])
#loc193 = loc(fused[#loc9, #loc11])
#loc194 = loc(fused[#loc12, #loc13])
#loc195 = loc(fused[#loc15, #loc14])
#loc196 = loc(fused[#loc16, #loc17])
#loc197 = loc(fused[#loc19, #loc18])
#loc198 = loc(fused[#loc20, #loc21])
#loc199 = loc(fused[#loc23, #loc17])
#loc200 = loc(fused[#loc27, #loc28])
#loc201 = loc(fused[#loc26, #loc28])
#loc202 = loc(fused[#loc24, #loc29])
#loc203 = loc(fused[#loc30, #loc29])
#loc204 = loc(fused[#loc31, #loc32])
#loc205 = loc(fused[#loc33, #loc34])
#loc206 = loc(fused[#loc35, #loc32])
#loc207 = loc(fused[#loc40, #loc39])
#loc208 = loc(fused[#loc48, #loc47])
#loc209 = loc(fused[#loc49, #loc50])
#loc210 = loc(fused[#loc52, #loc51])
#loc211 = loc(fused[#loc53, #loc54])
#loc212 = loc(fused[#loc57, #loc56])
#loc213 = loc(fused[#loc58, #loc59])
#loc214 = loc(fused[#loc60, #loc61])
#loc215 = loc(fused[#loc62, #loc63])
#loc216 = loc(fused[#loc64, #loc65])
#loc217 = loc(fused[#loc66, #loc67])
#loc218 = loc(fused[#loc68, #loc69])
#loc219 = loc(fused[#loc74, #loc75])
#loc222 = loc(fused[#loc85, #loc86])
#loc223 = loc(fused[#loc89, #loc90])
#loc224 = loc(fused[#loc93, #loc92])
#loc225 = loc(fused[#loc94, #loc95])
#loc226 = loc(fused[#loc96, #loc97])
#loc227 = loc(fused[#loc98, #loc99])
#loc228 = loc(fused[#loc98, #loc100])
#loc229 = loc(fused[#loc101, #loc102])
#loc230 = loc(fused[#loc104, #loc103])
#loc231 = loc(fused[#loc105, #loc106])
#loc232 = loc(fused[#loc108, #loc107])
#loc233 = loc(fused[#loc109, #loc110])
#loc234 = loc(fused[#loc112, #loc106])
#loc235 = loc(fused[#loc116, #loc117])
#loc236 = loc(fused[#loc115, #loc117])
#loc237 = loc(fused[#loc113, #loc118])
#loc238 = loc(fused[#loc119, #loc118])
#loc239 = loc(fused[#loc120, #loc121])
#loc240 = loc(fused[#loc122, #loc123])
#loc241 = loc(fused[#loc124, #loc121])
#loc242 = loc(fused[#loc129, #loc128])
#loc243 = loc(fused[#loc137, #loc136])
#loc244 = loc(fused[#loc138, #loc139])
#loc245 = loc(fused[#loc141, #loc140])
#loc246 = loc(fused[#loc142, #loc143])
#loc247 = loc(fused[#loc145, #loc139])
#loc248 = loc(fused[#loc149, #loc148])
#loc249 = loc(fused[#loc150, #loc151])
#loc250 = loc(fused[#loc152, #loc153])
#loc251 = loc(fused[#loc152, #loc154])
#loc252 = loc(fused[#loc155, #loc156])
#loc253 = loc(fused[#loc158, #loc157])
#loc254 = loc(fused[#loc159, #loc160])
#loc255 = loc(fused[#loc162, #loc161])
#loc256 = loc(fused[#loc163, #loc164])
#loc257 = loc(fused[#loc166, #loc160])
#loc258 = loc(fused[#loc168, #loc167])
#loc259 = loc(fused[#loc170, #loc169])
#loc260 = loc(fused[#loc178, #loc177])
#loc261 = loc(fused[#loc179, #loc180])
#loc262 = loc(fused[#loc182, #loc181])
#loc263 = loc(fused[#loc183, #loc184])
#loc264 = loc(fused[#loc187, #loc186])
