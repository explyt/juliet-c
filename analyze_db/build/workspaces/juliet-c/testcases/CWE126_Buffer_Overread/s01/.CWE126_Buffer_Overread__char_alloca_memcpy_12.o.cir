!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_alloca_memcpy_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc149)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc150)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc151)
  cir.func no_proto @CWE126_Buffer_Overread__char_alloca_memcpy_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc153)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc154)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc155)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc14)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc14)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc14)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc14)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc14)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc156)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc14)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc14)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc155)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc16)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc16)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc16)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc16)
    %15 = cir.alloca !u8i, !cir.ptr<!u8i>, %14 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc16)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc16)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc16)
    cir.store %17, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc156)
    %18 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc17)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc17)
    %20 = cir.const #cir.int<65> : !s32i loc(#loc18)
    %21 = cir.const #cir.int<50> : !s32i loc(#loc19)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc19)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc19)
    cir.libc.memset %24 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc157)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc23)
    %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc23)
    %27 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    %28 = cir.const #cir.int<50> : !s32i loc(#loc25)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc25)
    %31 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc27)
    cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc158)
    %32 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc28)
    %34 = cir.const #cir.int<65> : !s32i loc(#loc29)
    %35 = cir.const #cir.int<100> : !s32i loc(#loc30)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %37 = cir.binop(sub, %35, %36) nsw : !s32i loc(#loc30)
    %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc30)
    cir.libc.memset %38 bytes from %33 set to %34 : !cir.ptr<!void>, !s32i, !u64i loc(#loc159)
    %39 = cir.const #cir.int<0> : !s32i loc(#loc34)
    %40 = cir.cast(integral, %39 : !s32i), !s8i loc(#loc34)
    %41 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
    %42 = cir.const #cir.int<100> : !s32i loc(#loc36)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc37)
    %44 = cir.binop(sub, %42, %43) nsw : !s32i loc(#loc36)
    %45 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %44 : !s32i), !cir.ptr<!s8i> loc(#loc38)
    cir.store %40, %45 : !s8i, !cir.ptr<!s8i> loc(#loc160)
    cir.br ^bb1 loc(#loc161)
  ^bb1:  // pred: ^bb0
    %46 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc162)
    %47 = cir.cast(bitcast, %46 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc162)
    %48 = cir.call %47() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc41)
    %49 = cir.cast(int_to_bool, %48 : !s32i), !cir.bool loc(#loc41)
    cir.brcond %49 ^bb2, ^bb3 loc(#loc163)
  ^bb2:  // pred: ^bb1
    %50 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
    cir.store %50, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc164)
    cir.br ^bb4 loc(#loc44)
  ^bb3:  // pred: ^bb1
    %51 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
    cir.store %51, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc165)
    cir.br ^bb4 loc(#loc40)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc40)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc166)
  ^bb6:  // pred: ^bb5
    %52 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc52)
    %53 = cir.cast(bitcast, %52 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc52)
    %54 = cir.const #cir.int<67> : !s32i loc(#loc53)
    %55 = cir.const #cir.int<100> : !s32i loc(#loc54)
    %56 = cir.const #cir.int<1> : !s32i loc(#loc55)
    %57 = cir.binop(sub, %55, %56) nsw : !s32i loc(#loc54)
    %58 = cir.cast(integral, %57 : !s32i), !u64i loc(#loc54)
    cir.libc.memset %58 bytes from %53 set to %54 : !cir.ptr<!void>, !s32i, !u64i loc(#loc167)
    %59 = cir.const #cir.int<0> : !s32i loc(#loc58)
    %60 = cir.cast(integral, %59 : !s32i), !s8i loc(#loc58)
    %61 = cir.const #cir.int<100> : !s32i loc(#loc59)
    %62 = cir.const #cir.int<1> : !s32i loc(#loc60)
    %63 = cir.binop(sub, %61, %62) nsw : !s32i loc(#loc59)
    %64 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc61)
    %65 = cir.ptr_stride(%64 : !cir.ptr<!s8i>, %63 : !s32i), !cir.ptr<!s8i> loc(#loc61)
    cir.store %60, %65 : !s8i, !cir.ptr<!s8i> loc(#loc168)
    %66 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc62)
    %67 = cir.cast(bitcast, %66 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc62)
    %68 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
    %69 = cir.cast(bitcast, %68 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc63)
    %70 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc64)
    %71 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc65)
    %72 = cir.call @strlen(%71) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc64)
    %73 = cir.const #cir.int<1> : !u64i loc(#loc169)
    %74 = cir.binop(mul, %72, %73) : !u64i loc(#loc170)
    cir.libc.memcpy %74 bytes from %69 to %67 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc171)
    %75 = cir.const #cir.int<0> : !s32i loc(#loc70)
    %76 = cir.cast(integral, %75 : !s32i), !s8i loc(#loc70)
    %77 = cir.const #cir.int<100> : !s32i loc(#loc71)
    %78 = cir.const #cir.int<1> : !s32i loc(#loc72)
    %79 = cir.binop(sub, %77, %78) nsw : !s32i loc(#loc71)
    %80 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc73)
    %81 = cir.ptr_stride(%80 : !cir.ptr<!s8i>, %79 : !s32i), !cir.ptr<!s8i> loc(#loc73)
    cir.store %76, %81 : !s8i, !cir.ptr<!s8i> loc(#loc172)
    %82 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc74)
    cir.call @printLine(%82) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    cir.br ^bb7 loc(#loc51)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc8)
  } loc(#loc152)
  cir.func no_proto @CWE126_Buffer_Overread__char_alloca_memcpy_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc174)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc78)
    cir.return loc(#loc77)
  } loc(#loc173)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc176)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc177)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc178)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc87)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc87)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc87)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc87)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc87)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc179)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc87)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc87)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc178)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc89)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc89)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc89)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc89)
    %15 = cir.alloca !u8i, !cir.ptr<!u8i>, %14 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc89)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc89)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc89)
    cir.store %17, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc179)
    %18 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc90)
    %20 = cir.const #cir.int<65> : !s32i loc(#loc91)
    %21 = cir.const #cir.int<50> : !s32i loc(#loc92)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc93)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc92)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc92)
    cir.libc.memset %24 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc180)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc96)
    %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc96)
    %27 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
    %28 = cir.const #cir.int<50> : !s32i loc(#loc98)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc99)
    %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc98)
    %31 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc100)
    cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc181)
    %32 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc101)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc101)
    %34 = cir.const #cir.int<65> : !s32i loc(#loc102)
    %35 = cir.const #cir.int<100> : !s32i loc(#loc103)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc104)
    %37 = cir.binop(sub, %35, %36) nsw : !s32i loc(#loc103)
    %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc103)
    cir.libc.memset %38 bytes from %33 set to %34 : !cir.ptr<!void>, !s32i, !u64i loc(#loc182)
    %39 = cir.const #cir.int<0> : !s32i loc(#loc107)
    %40 = cir.cast(integral, %39 : !s32i), !s8i loc(#loc107)
    %41 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
    %42 = cir.const #cir.int<100> : !s32i loc(#loc109)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc110)
    %44 = cir.binop(sub, %42, %43) nsw : !s32i loc(#loc109)
    %45 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %44 : !s32i), !cir.ptr<!s8i> loc(#loc111)
    cir.store %40, %45 : !s8i, !cir.ptr<!s8i> loc(#loc183)
    cir.br ^bb1 loc(#loc184)
  ^bb1:  // pred: ^bb0
    %46 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc185)
    %47 = cir.cast(bitcast, %46 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc185)
    %48 = cir.call %47() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc114)
    %49 = cir.cast(int_to_bool, %48 : !s32i), !cir.bool loc(#loc114)
    cir.brcond %49 ^bb2, ^bb3 loc(#loc186)
  ^bb2:  // pred: ^bb1
    %50 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
    cir.store %50, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc187)
    cir.br ^bb4 loc(#loc117)
  ^bb3:  // pred: ^bb1
    %51 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
    cir.store %51, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc188)
    cir.br ^bb4 loc(#loc113)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc113)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc189)
  ^bb6:  // pred: ^bb5
    %52 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc125)
    %53 = cir.cast(bitcast, %52 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc125)
    %54 = cir.const #cir.int<67> : !s32i loc(#loc126)
    %55 = cir.const #cir.int<100> : !s32i loc(#loc127)
    %56 = cir.const #cir.int<1> : !s32i loc(#loc128)
    %57 = cir.binop(sub, %55, %56) nsw : !s32i loc(#loc127)
    %58 = cir.cast(integral, %57 : !s32i), !u64i loc(#loc127)
    cir.libc.memset %58 bytes from %53 set to %54 : !cir.ptr<!void>, !s32i, !u64i loc(#loc190)
    %59 = cir.const #cir.int<0> : !s32i loc(#loc131)
    %60 = cir.cast(integral, %59 : !s32i), !s8i loc(#loc131)
    %61 = cir.const #cir.int<100> : !s32i loc(#loc132)
    %62 = cir.const #cir.int<1> : !s32i loc(#loc133)
    %63 = cir.binop(sub, %61, %62) nsw : !s32i loc(#loc132)
    %64 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc134)
    %65 = cir.ptr_stride(%64 : !cir.ptr<!s8i>, %63 : !s32i), !cir.ptr<!s8i> loc(#loc134)
    cir.store %60, %65 : !s8i, !cir.ptr<!s8i> loc(#loc191)
    %66 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc135)
    %67 = cir.cast(bitcast, %66 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc135)
    %68 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
    %69 = cir.cast(bitcast, %68 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc136)
    %70 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc137)
    %71 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc138)
    %72 = cir.call @strlen(%71) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc137)
    %73 = cir.const #cir.int<1> : !u64i loc(#loc192)
    %74 = cir.binop(mul, %72, %73) : !u64i loc(#loc193)
    cir.libc.memcpy %74 bytes from %69 to %67 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc194)
    %75 = cir.const #cir.int<0> : !s32i loc(#loc143)
    %76 = cir.cast(integral, %75 : !s32i), !s8i loc(#loc143)
    %77 = cir.const #cir.int<100> : !s32i loc(#loc144)
    %78 = cir.const #cir.int<1> : !s32i loc(#loc145)
    %79 = cir.binop(sub, %77, %78) nsw : !s32i loc(#loc144)
    %80 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc146)
    %81 = cir.ptr_stride(%80 : !cir.ptr<!s8i>, %79 : !s32i), !cir.ptr<!s8i> loc(#loc146)
    cir.store %76, %81 : !s8i, !cir.ptr<!s8i> loc(#loc195)
    %82 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc147)
    cir.call @printLine(%82) : (!cir.ptr<!s8i>) -> () loc(#loc148)
    cir.br ^bb7 loc(#loc124)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc81)
  } loc(#loc175)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_alloca_memcpy_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":23:1)
#loc8 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":52:1)
#loc9 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":43:9)
#loc10 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":43:22)
#loc11 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":25:5)
#loc12 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":25:12)
#loc13 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":26:5)
#loc14 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":26:36)
#loc15 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":27:5)
#loc16 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":27:37)
#loc17 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":28:12)
#loc18 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":28:27)
#loc19 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":28:32)
#loc20 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":28:35)
#loc21 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":28:5)
#loc22 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":28:36)
#loc23 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":29:27)
#loc24 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":29:5)
#loc25 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":29:19)
#loc26 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":29:22)
#loc27 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":29:23)
#loc28 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":30:12)
#loc29 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":30:28)
#loc30 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":30:33)
#loc31 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":30:37)
#loc32 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":30:5)
#loc33 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":30:38)
#loc34 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":31:29)
#loc35 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":31:5)
#loc36 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":31:20)
#loc37 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":31:24)
#loc38 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":31:25)
#loc39 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":32:5)
#loc40 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":41:5)
#loc41 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":32:8)
#loc42 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":32:33)
#loc43 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":33:5)
#loc44 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":36:5)
#loc45 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":38:5)
#loc46 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":35:16)
#loc47 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":35:9)
#loc48 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":40:16)
#loc49 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":40:9)
#loc50 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":42:5)
#loc51 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":51:5)
#loc52 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":44:16)
#loc53 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":44:22)
#loc54 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":44:27)
#loc55 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":44:31)
#loc56 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":44:9)
#loc57 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":44:32)
#loc58 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":45:23)
#loc59 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":45:14)
#loc60 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":45:18)
#loc61 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":45:9)
#loc62 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":48:16)
#loc63 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":48:22)
#loc64 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":48:28)
#loc65 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":48:35)
#loc66 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":48:41)
#loc67 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":48:52)
#loc68 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":48:9)
#loc69 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":48:53)
#loc70 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":49:23)
#loc71 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":49:14)
#loc72 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":49:18)
#loc73 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":49:9)
#loc74 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":50:19)
#loc75 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":50:9)
#loc76 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":91:1)
#loc77 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":94:1)
#loc78 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":93:5)
#loc79 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":93:13)
#loc80 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":60:1)
#loc81 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":89:1)
#loc82 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":80:9)
#loc83 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":80:22)
#loc84 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":62:5)
#loc85 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":62:12)
#loc86 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":63:5)
#loc87 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":63:36)
#loc88 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":64:5)
#loc89 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":64:37)
#loc90 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":65:12)
#loc91 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":65:27)
#loc92 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":65:32)
#loc93 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":65:35)
#loc94 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":65:5)
#loc95 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":65:36)
#loc96 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":66:27)
#loc97 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":66:5)
#loc98 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":66:19)
#loc99 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":66:22)
#loc100 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":66:23)
#loc101 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":67:12)
#loc102 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":67:28)
#loc103 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":67:33)
#loc104 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":67:37)
#loc105 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":67:5)
#loc106 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":67:38)
#loc107 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":68:29)
#loc108 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":68:5)
#loc109 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":68:20)
#loc110 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":68:24)
#loc111 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":68:25)
#loc112 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":69:5)
#loc113 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":78:5)
#loc114 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":69:8)
#loc115 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":69:33)
#loc116 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":70:5)
#loc117 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":73:5)
#loc118 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":75:5)
#loc119 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":72:16)
#loc120 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":72:9)
#loc121 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":77:16)
#loc122 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":77:9)
#loc123 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":79:5)
#loc124 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":88:5)
#loc125 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":81:16)
#loc126 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":81:22)
#loc127 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":81:27)
#loc128 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":81:31)
#loc129 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":81:9)
#loc130 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":81:32)
#loc131 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":82:23)
#loc132 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":82:14)
#loc133 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":82:18)
#loc134 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":82:9)
#loc135 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":85:16)
#loc136 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":85:22)
#loc137 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":85:28)
#loc138 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":85:35)
#loc139 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":85:41)
#loc140 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":85:52)
#loc141 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":85:9)
#loc142 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":85:53)
#loc143 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":86:23)
#loc144 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":86:14)
#loc145 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":86:18)
#loc146 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":86:9)
#loc147 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":87:19)
#loc148 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_12.c":87:9)
#loc149 = loc(fused[#loc1, #loc2])
#loc150 = loc(fused[#loc3, #loc4])
#loc151 = loc(fused[#loc5, #loc6])
#loc152 = loc(fused[#loc7, #loc8])
#loc153 = loc(fused[#loc9, #loc10])
#loc154 = loc(fused[#loc11, #loc12])
#loc155 = loc(fused[#loc13, #loc14])
#loc156 = loc(fused[#loc15, #loc16])
#loc157 = loc(fused[#loc21, #loc22])
#loc158 = loc(fused[#loc24, #loc23])
#loc159 = loc(fused[#loc32, #loc33])
#loc160 = loc(fused[#loc35, #loc34])
#loc161 = loc(fused[#loc39, #loc40])
#loc162 = loc(fused[#loc41, #loc42])
#loc163 = loc(fused[#loc43, #loc44, #loc45, #loc40])
#loc164 = loc(fused[#loc47, #loc46])
#loc165 = loc(fused[#loc49, #loc48])
#loc166 = loc(fused[#loc50, #loc51])
#loc167 = loc(fused[#loc56, #loc57])
#loc168 = loc(fused[#loc61, #loc58])
#loc169 = loc(fused[#loc66, #loc67])
#loc170 = loc(fused[#loc64, #loc67])
#loc171 = loc(fused[#loc68, #loc69])
#loc172 = loc(fused[#loc73, #loc70])
#loc173 = loc(fused[#loc76, #loc77])
#loc174 = loc(fused[#loc78, #loc79])
#loc175 = loc(fused[#loc80, #loc81])
#loc176 = loc(fused[#loc82, #loc83])
#loc177 = loc(fused[#loc84, #loc85])
#loc178 = loc(fused[#loc86, #loc87])
#loc179 = loc(fused[#loc88, #loc89])
#loc180 = loc(fused[#loc94, #loc95])
#loc181 = loc(fused[#loc97, #loc96])
#loc182 = loc(fused[#loc105, #loc106])
#loc183 = loc(fused[#loc108, #loc107])
#loc184 = loc(fused[#loc112, #loc113])
#loc185 = loc(fused[#loc114, #loc115])
#loc186 = loc(fused[#loc116, #loc117, #loc118, #loc113])
#loc187 = loc(fused[#loc120, #loc119])
#loc188 = loc(fused[#loc122, #loc121])
#loc189 = loc(fused[#loc123, #loc124])
#loc190 = loc(fused[#loc129, #loc130])
#loc191 = loc(fused[#loc134, #loc131])
#loc192 = loc(fused[#loc139, #loc140])
#loc193 = loc(fused[#loc137, #loc140])
#loc194 = loc(fused[#loc141, #loc142])
#loc195 = loc(fused[#loc146, #loc143])
