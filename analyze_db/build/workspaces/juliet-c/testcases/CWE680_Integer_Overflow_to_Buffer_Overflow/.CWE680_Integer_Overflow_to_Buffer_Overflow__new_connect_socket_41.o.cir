!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc7 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":46:14)
#loc8 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":46:18)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":131:18)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":131:22)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc213 = loc(fused[#loc7, #loc8])
#loc273 = loc(fused[#loc159, #loc160])
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc210)
  cir.func private @printIntLine(!s32i) loc(#loc211)
  cir.func @_ZN65CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_417badSinkEi(%arg0: !s32i loc(fused[#loc7, #loc8])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc213)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc9)
    cir.scope {
      %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc215)
      %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc216)
      %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc217)
      %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc17)
      %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc17)
      %6 = cir.const #cir.int<4> : !u64i loc(#loc218)
      %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc219)
      cir.store %7, %1 : !u64i, !cir.ptr<!u64i> loc(#loc220)
      %8 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc21)
      %9 = cir.call @_Znam(%8) : (!u64i) -> !cir.ptr<!void> loc(#loc22)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc221)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc221)
      cir.store %11, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc222)
      cir.scope {
        %17 = cir.const #cir.int<0> : !s32i loc(#loc28)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc28)
        cir.store %18, %2 : !u64i, !cir.ptr<!u64i> loc(#loc224)
        cir.for : cond {
          %19 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc30)
          %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc31)
          %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc31)
          %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc225)
          cir.condition(%22) loc(#loc225)
        } body {
          cir.scope {
            %19 = cir.const #cir.int<0> : !s32i loc(#loc33)
            %20 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc34)
            %21 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc35)
            %22 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %21 : !u64i), !cir.ptr<!s32i> loc(#loc36)
            cir.store %19, %22 : !s32i, !cir.ptr<!s32i> loc(#loc227)
          } loc(#loc226)
          cir.yield loc(#loc27)
        } step {
          %19 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc37)
          %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc38)
          cir.store %20, %2 : !u64i, !cir.ptr<!u64i> loc(#loc228)
          cir.yield loc(#loc223)
        } loc(#loc223)
      } loc(#loc223)
      %12 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc39)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc40)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc41)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc39)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc42)
      %16 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc43)
      cir.delete.array %16 : <!s32i> loc(#loc43)
    } loc(#loc214)
    cir.return loc(#loc6)
  } loc(#loc212)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc229)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr1) loc(#loc230)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc48)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr1) loc(#loc231)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc232)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc233)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr1) loc(#loc234)
  cir.func private @close(!s32i) -> !s32i loc(#loc235)
  cir.func @_ZN65CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_413badEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc237)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc63)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc64)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc238)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc240)
      %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc241)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc242)
      %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc243)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc73)
      %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc73)
      cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc242)
      cir.scope {
        cir.do {
          cir.scope {
            %10 = cir.const #cir.int<2> : !s32i loc(#loc80)
            %11 = cir.const #cir.int<1> : !u32i loc(#loc81)
            %12 = cir.cast(integral, %11 : !u32i), !s32i loc(#loc81)
            %13 = cir.const #cir.int<6> : !u32i loc(#loc82)
            %14 = cir.cast(integral, %13 : !u32i), !s32i loc(#loc82)
            %15 = cir.call @socket(%10, %12, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc83)
            cir.store %15, %6 : !s32i, !cir.ptr<!s32i> loc(#loc246)
            cir.scope {
              %53 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc88)
              %54 = cir.const #cir.int<1> : !s32i loc(#loc89)
              %55 = cir.unary(minus, %54) nsw : !s32i, !s32i loc(#loc89)
              %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc248)
              cir.if %56 {
                cir.break loc(#loc91)
              } loc(#loc249)
            } loc(#loc247)
            %16 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc250)
            %17 = cir.const #cir.int<0> : !s32i loc(#loc94)
            %18 = cir.const #cir.int<16> : !u64i loc(#loc251)
            cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc252)
            %19 = cir.const #cir.int<2> : !s32i loc(#loc99)
            %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc99)
            %21 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc100)
            cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc253)
            %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc48)
            %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc48)
            %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr1) loc(#loc102)
            %25 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc103)
            %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc104)
            cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc254)
            %27 = cir.const #cir.int<27015> : !s32i loc(#loc107)
            %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc107)
            %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr1) loc(#loc108)
            %30 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc109)
            cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc255)
            cir.scope {
              %53 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc114)
              %54 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc257)
              %55 = cir.const #cir.int<16> : !u64i loc(#loc258)
              %56 = cir.cast(integral, %55 : !u64i), !u32i loc(#loc258)
              %57 = cir.call @connect(%53, %54, %56) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc119)
              %58 = cir.const #cir.int<1> : !s32i loc(#loc120)
              %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc120)
              %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc259)
              cir.if %60 {
                cir.break loc(#loc122)
              } loc(#loc260)
            } loc(#loc256)
            %31 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc123)
            %32 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc124)
            %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc124)
            %34 = cir.const #cir.int<3> : !s32i loc(#loc125)
            %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc125)
            %36 = cir.const #cir.int<4> : !u64i loc(#loc125)
            %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc125)
            %38 = cir.const #cir.int<2> : !s32i loc(#loc125)
            %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc125)
            %40 = cir.binop(add, %37, %39) : !u64i loc(#loc125)
            %41 = cir.const #cir.int<1> : !s32i loc(#loc126)
            %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc126)
            %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc261)
            %44 = cir.const #cir.int<0> : !s32i loc(#loc127)
            %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc128)
            %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc128)
            cir.store %46, %4 : !s32i, !cir.ptr<!s32i> loc(#loc262)
            cir.scope {
              %53 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc133)
              %54 = cir.const #cir.int<1> : !s32i loc(#loc134)
              %55 = cir.unary(minus, %54) nsw : !s32i, !s32i loc(#loc134)
              %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc264)
              %57 = cir.ternary(%56, true {
                %58 = cir.const #true loc(#loc135)
                cir.yield %58 : !cir.bool loc(#loc135)
              }, false {
                %58 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc136)
                %59 = cir.const #cir.int<0> : !s32i loc(#loc137)
                %60 = cir.cmp(eq, %58, %59) : !s32i, !cir.bool loc(#loc265)
                %61 = cir.ternary(%60, true {
                  %62 = cir.const #true loc(#loc135)
                  cir.yield %62 : !cir.bool loc(#loc135)
                }, false {
                  %62 = cir.const #false loc(#loc135)
                  cir.yield %62 : !cir.bool loc(#loc135)
                }) : (!cir.bool) -> !cir.bool loc(#loc135)
                cir.yield %61 : !cir.bool loc(#loc135)
              }) : (!cir.bool) -> !cir.bool loc(#loc135)
              cir.if %57 {
                cir.break loc(#loc139)
              } loc(#loc266)
            } loc(#loc263)
            %47 = cir.const #cir.int<0> : !s8i loc(#loc140)
            %48 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc141)
            %49 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc142)
            %50 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %48 : !s32i), !cir.ptr<!s8i> loc(#loc142)
            cir.store %47, %50 : !s8i, !cir.ptr<!s8i> loc(#loc267)
            %51 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc143)
            %52 = cir.call @atoi(%51) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr1) loc(#loc144)
            cir.store %52, %0 : !s32i, !cir.ptr<!s32i> loc(#loc268)
          } loc(#loc245)
          cir.yield loc(#loc77)
        } while {
          %10 = cir.const #cir.int<0> : !s32i loc(#loc147)
          %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc147)
          cir.condition(%11) loc(#loc147)
        } loc(#loc244)
      } loc(#loc244)
      cir.scope {
        %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc150)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc151)
        %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc151)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc270)
        cir.if %13 {
          %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc153)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc154)
        } loc(#loc271)
      } loc(#loc269)
    } loc(#loc239)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc155)
    cir.call @_ZN65CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_417badSinkEi(%3) : (!s32i) -> () loc(#loc156)
    cir.return loc(#loc60)
  } loc(#loc236)
  cir.func @_ZN65CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_4111goodG2BSinkEi(%arg0: !s32i loc(fused[#loc159, #loc160])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc273)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc161)
    cir.scope {
      %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc275)
      %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc276)
      %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc277)
      %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc169)
      %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc169)
      %6 = cir.const #cir.int<4> : !u64i loc(#loc278)
      %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc279)
      cir.store %7, %1 : !u64i, !cir.ptr<!u64i> loc(#loc280)
      %8 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc173)
      %9 = cir.call @_Znam(%8) : (!u64i) -> !cir.ptr<!void> loc(#loc174)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc281)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc281)
      cir.store %11, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc282)
      cir.scope {
        %17 = cir.const #cir.int<0> : !s32i loc(#loc180)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc180)
        cir.store %18, %2 : !u64i, !cir.ptr<!u64i> loc(#loc284)
        cir.for : cond {
          %19 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc182)
          %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc183)
          %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc183)
          %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc285)
          cir.condition(%22) loc(#loc285)
        } body {
          cir.scope {
            %19 = cir.const #cir.int<0> : !s32i loc(#loc185)
            %20 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc186)
            %21 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc187)
            %22 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %21 : !u64i), !cir.ptr<!s32i> loc(#loc188)
            cir.store %19, %22 : !s32i, !cir.ptr<!s32i> loc(#loc287)
          } loc(#loc286)
          cir.yield loc(#loc179)
        } step {
          %19 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc189)
          %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc190)
          cir.store %20, %2 : !u64i, !cir.ptr<!u64i> loc(#loc288)
          cir.yield loc(#loc283)
        } loc(#loc283)
      } loc(#loc283)
      %12 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc191)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc192)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc193)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc191)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc194)
      %16 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc195)
      cir.delete.array %16 : <!s32i> loc(#loc195)
    } loc(#loc274)
    cir.return loc(#loc158)
  } loc(#loc272)
  cir.func internal private @_ZN65CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc290)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc200)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc201)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc291)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc203)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc292)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc205)
    cir.call @_ZN65CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_4111goodG2BSinkEi(%4) : (!s32i) -> () loc(#loc206)
    cir.return loc(#loc197)
  } loc(#loc289)
  cir.func @_ZN65CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_414goodEv() extra(#fn_attr) {
    cir.call @_ZN65CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41L7goodG2BEv() : () -> () loc(#loc209)
    cir.return loc(#loc208)
  } loc(#loc293)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc2 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":46:1)
#loc6 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":61:1)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":47:1)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":48:5)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":60:5)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":49:9)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":49:16)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":49:26)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":50:9)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":50:14)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":52:21)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":52:28)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":52:38)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":52:9)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":53:37)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":46:6)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":53:28)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":53:46)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":53:9)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":54:9)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":57:9)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":54:18)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":54:14)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":54:21)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":54:33)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":55:9)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":56:29)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":56:13)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":56:24)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":56:25)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":54:40)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":54:39)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":58:22)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":58:33)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":58:34)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":58:9)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":59:19)
#loc44 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc45 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc46 = loc("/usr/include/arpa/inet.h":34:1)
#loc47 = loc("/usr/include/arpa/inet.h":34:47)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":94:49)
#loc49 = loc("/usr/include/netinet/in.h":402:1)
#loc50 = loc("/usr/include/netinet/in.h":403:40)
#loc51 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc52 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc53 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc54 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc55 = loc("/usr/include/stdlib.h":105:1)
#loc56 = loc("/usr/include/stdlib.h":106:33)
#loc57 = loc("/usr/include/unistd.h":358:1)
#loc58 = loc("/usr/include/unistd.h":358:27)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":63:1)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":125:1)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":65:5)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":65:9)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":67:13)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":67:12)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":67:5)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":68:5)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":123:5)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":73:9)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":73:13)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":74:9)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":74:28)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":75:9)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":75:32)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":76:9)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":76:41)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":77:9)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":112:17)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":78:9)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":111:9)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":87:36)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":87:45)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":87:58)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":87:29)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":87:13)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":87:69)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":88:13)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":91:13)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":88:17)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":88:34)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":89:13)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":90:17)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":92:20)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":92:21)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":92:30)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":92:33)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":92:47)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":92:13)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":92:48)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":93:34)
#loc100 = loc("/usr/include/netinet/in.h":249:5)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":93:13)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":94:39)
#loc103 = loc("/usr/include/netinet/in.h":251:20)
#loc104 = loc("/usr/include/netinet/in.h":33:15)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":94:13)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":94:59)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":95:38)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":95:32)
#loc109 = loc("/usr/include/netinet/in.h":250:15)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":95:13)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":95:46)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":96:13)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":99:13)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":96:25)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":96:58)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":96:59)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":96:68)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":96:82)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":96:17)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":96:88)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":97:13)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":98:17)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":102:31)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":102:46)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":102:59)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":102:77)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":102:80)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":102:26)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":102:13)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":102:81)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":103:13)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":106:13)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":103:17)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":103:31)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":103:44)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":103:47)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":103:61)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":104:13)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":105:17)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":108:39)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":108:25)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":108:13)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":110:25)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":110:20)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":110:13)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":110:36)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":112:16)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":113:9)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":116:9)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":113:13)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":113:30)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":114:9)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":115:26)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":115:13)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":124:13)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":124:5)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":131:1)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":146:1)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":132:1)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":133:5)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":145:5)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":134:9)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":134:16)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":134:26)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":135:9)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":135:14)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":137:21)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":137:28)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":137:38)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":137:9)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":138:37)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":131:6)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":138:28)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":138:46)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":138:9)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":139:9)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":142:9)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":139:18)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":139:14)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":139:21)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":139:33)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":140:9)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":141:29)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":141:13)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":141:24)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":141:25)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":139:40)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":139:39)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":143:22)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":143:33)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":143:34)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":143:9)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":144:19)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":149:1)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":157:1)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":151:5)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":151:9)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":153:13)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":153:12)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":153:5)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":155:12)
#loc204 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":155:5)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":156:17)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":156:5)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":159:1)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":162:1)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_41.cpp":161:5)
#loc210 = loc(fused[#loc1, #loc2])
#loc211 = loc(fused[#loc3, #loc4])
#loc212 = loc(fused[#loc5, #loc6])
#loc214 = loc(fused[#loc10, #loc11])
#loc215 = loc(fused[#loc12, #loc13])
#loc216 = loc(fused[#loc12, #loc14])
#loc217 = loc(fused[#loc15, #loc16])
#loc218 = loc(fused[#loc18, #loc19])
#loc219 = loc(fused[#loc17, #loc19])
#loc220 = loc(fused[#loc20, #loc19])
#loc221 = loc(fused[#loc23, #loc24])
#loc222 = loc(fused[#loc25, #loc24])
#loc223 = loc(fused[#loc26, #loc27])
#loc224 = loc(fused[#loc29, #loc28])
#loc225 = loc(fused[#loc30, #loc31])
#loc226 = loc(fused[#loc32, #loc27])
#loc227 = loc(fused[#loc34, #loc33])
#loc228 = loc(fused[#loc38, #loc37])
#loc229 = loc(fused[#loc44, #loc45])
#loc230 = loc(fused[#loc46, #loc47])
#loc231 = loc(fused[#loc49, #loc50])
#loc232 = loc(fused[#loc51, #loc52])
#loc233 = loc(fused[#loc53, #loc54])
#loc234 = loc(fused[#loc55, #loc56])
#loc235 = loc(fused[#loc57, #loc58])
#loc236 = loc(fused[#loc59, #loc60])
#loc237 = loc(fused[#loc61, #loc62])
#loc238 = loc(fused[#loc65, #loc63])
#loc239 = loc(fused[#loc66, #loc67])
#loc240 = loc(fused[#loc68, #loc69])
#loc241 = loc(fused[#loc70, #loc71])
#loc242 = loc(fused[#loc72, #loc73])
#loc243 = loc(fused[#loc74, #loc75])
#loc244 = loc(fused[#loc76, #loc77])
#loc245 = loc(fused[#loc78, #loc79])
#loc246 = loc(fused[#loc84, #loc85])
#loc247 = loc(fused[#loc86, #loc87])
#loc248 = loc(fused[#loc88, #loc89])
#loc249 = loc(fused[#loc90, #loc87])
#loc250 = loc(fused[#loc92, #loc93])
#loc251 = loc(fused[#loc95, #loc96])
#loc252 = loc(fused[#loc97, #loc98])
#loc253 = loc(fused[#loc101, #loc99])
#loc254 = loc(fused[#loc105, #loc106])
#loc255 = loc(fused[#loc110, #loc111])
#loc256 = loc(fused[#loc112, #loc113])
#loc257 = loc(fused[#loc115, #loc116])
#loc258 = loc(fused[#loc117, #loc118])
#loc259 = loc(fused[#loc119, #loc120])
#loc260 = loc(fused[#loc121, #loc113])
#loc261 = loc(fused[#loc125, #loc126])
#loc262 = loc(fused[#loc129, #loc130])
#loc263 = loc(fused[#loc131, #loc132])
#loc264 = loc(fused[#loc133, #loc134])
#loc265 = loc(fused[#loc136, #loc137])
#loc266 = loc(fused[#loc138, #loc132])
#loc267 = loc(fused[#loc142, #loc140])
#loc268 = loc(fused[#loc145, #loc146])
#loc269 = loc(fused[#loc148, #loc149])
#loc270 = loc(fused[#loc150, #loc151])
#loc271 = loc(fused[#loc152, #loc149])
#loc272 = loc(fused[#loc157, #loc158])
#loc274 = loc(fused[#loc162, #loc163])
#loc275 = loc(fused[#loc164, #loc165])
#loc276 = loc(fused[#loc164, #loc166])
#loc277 = loc(fused[#loc167, #loc168])
#loc278 = loc(fused[#loc170, #loc171])
#loc279 = loc(fused[#loc169, #loc171])
#loc280 = loc(fused[#loc172, #loc171])
#loc281 = loc(fused[#loc175, #loc176])
#loc282 = loc(fused[#loc177, #loc176])
#loc283 = loc(fused[#loc178, #loc179])
#loc284 = loc(fused[#loc181, #loc180])
#loc285 = loc(fused[#loc182, #loc183])
#loc286 = loc(fused[#loc184, #loc179])
#loc287 = loc(fused[#loc186, #loc185])
#loc288 = loc(fused[#loc190, #loc189])
#loc289 = loc(fused[#loc196, #loc197])
#loc290 = loc(fused[#loc198, #loc199])
#loc291 = loc(fused[#loc202, #loc200])
#loc292 = loc(fused[#loc204, #loc203])
#loc293 = loc(fused[#loc207, #loc208])
