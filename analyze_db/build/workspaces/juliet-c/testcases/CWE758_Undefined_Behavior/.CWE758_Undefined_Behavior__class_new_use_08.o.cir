!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr2 = #cir<extra({nothrow = #cir.nothrow})>
#loc7 = loc("../../testcasesupport/std_testcase.h":61:7)
!ty_TwoIntsClass = !cir.record<class "TwoIntsClass" {!s32i, !s32i}>
module @"/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__class_new_use_08.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func internal private @_ZL17staticReturnsTruev() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc2)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc3)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc112)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    cir.return %2 : !s32i loc(#loc112)
  } loc(#loc111)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc113)
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc7)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc7)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc7)
    cir.return loc(#loc7)
  } loc(#loc7)
  cir.func linkonce_odr @_ZN12TwoIntsClassC2ERKS_(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../testcasesupport/std_testcase.h":61:7), %arg1: !cir.ptr<!ty_TwoIntsClass> loc("../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc7)
    %1 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["", init, const] {alignment = 8 : i64} loc(#loc7)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc7)
    cir.store %arg1, %1 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc7)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc7)
    %3 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc8)
    %4 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc7)
    %5 = cir.get_member %4[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc8)
    %6 = cir.const #cir.int<8> : !u64i loc(#loc7)
    %7 = cir.cast(bitcast, %3 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc8)
    %8 = cir.cast(bitcast, %5 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc8)
    cir.libc.memcpy %6 bytes from %8 to %7 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc7)
    cir.return loc(#loc7)
  } loc(#loc7)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr2) loc(#loc114)
  cir.func private @printIntLine(!s32i) loc(#loc115)
  cir.func @_ZN43CWE758_Undefined_Behavior__class_new_use_083badEv() extra(#fn_attr) {
    cir.scope {
      %0 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc17)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc118)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["pointer", init] {alignment = 8 : i64} loc(#loc121)
          %3 = cir.alloca !ty_TwoIntsClass, !cir.ptr<!ty_TwoIntsClass>, ["data", init] {alignment = 4 : i64} loc(#loc122)
          %4 = cir.const #cir.int<8> : !u64i loc(#loc123)
          %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc121)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc123)
          cir.call @_ZN12TwoIntsClassC2Ev(%6) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc23)
          cir.store %6, %2 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc121)
          %7 = cir.load deref %2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc25)
          cir.call @_ZN12TwoIntsClassC2ERKS_(%3, %7) : (!cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc27)
          %8 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc28)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc28)
          cir.call @_ZdlPv(%9) : (!cir.ptr<!void>) -> () extra(#fn_attr2) loc(#loc29)
          %10 = cir.get_member %3[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc8)
          %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc30)
          cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc31)
          %12 = cir.get_member %3[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc32)
          %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc33)
          cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc34)
        } loc(#loc120)
      } loc(#loc119)
    } loc(#loc117)
    cir.return loc(#loc14)
  } loc(#loc116)
  cir.func internal private @_ZL18staticReturnsFalsev() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc36)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc37)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc125)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    cir.return %2 : !s32i loc(#loc125)
  } loc(#loc124)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc126)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc41)
  cir.func linkonce_odr @_ZN12TwoIntsClassaSERKS_(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../testcasesupport/std_testcase.h":61:7), %arg1: !cir.ptr<!ty_TwoIntsClass> loc("../../testcasesupport/std_testcase.h":61:7)) -> !cir.ptr<!ty_TwoIntsClass> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc7)
    %1 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["", init, const] {alignment = 8 : i64} loc(#loc7)
    %2 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["__retval"] {alignment = 8 : i64} loc(#loc7)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc7)
    cir.store %arg1, %1 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc7)
    %3 = cir.load deref %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc7)
    %4 = cir.get_member %3[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc8)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc7)
    %6 = cir.get_member %5[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc8)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc7)
    %8 = cir.cast(bitcast, %4 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc8)
    %9 = cir.cast(bitcast, %6 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc8)
    cir.libc.memcpy %7 bytes from %9 to %8 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc7)
    cir.store %3, %2 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc7)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc7)
    cir.return %10 : !cir.ptr<!ty_TwoIntsClass> loc(#loc7)
  } loc(#loc7)
  cir.func internal private @_ZN43CWE758_Undefined_Behavior__class_new_use_08L5good1Ev() extra(#fn_attr) {
    cir.scope {
      %0 = cir.call @_ZL18staticReturnsFalsev() : () -> !s32i loc(#loc46)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc129)
      cir.if %1 {
        %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc41)
        %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc41)
        cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc51)
      } else {
        cir.scope {
          %2 = cir.alloca !ty_TwoIntsClass, !cir.ptr<!ty_TwoIntsClass>, ["data"] {alignment = 4 : i64} loc(#loc132)
          %3 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["pointer", init] {alignment = 8 : i64} loc(#loc133)
          %4 = cir.const #cir.int<1> : !s32i loc(#loc58)
          %5 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc8)
          cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc134)
          %6 = cir.const #cir.int<2> : !s32i loc(#loc60)
          %7 = cir.get_member %2[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc32)
          cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc135)
          %8 = cir.const #cir.int<8> : !u64i loc(#loc136)
          %9 = cir.call @_Znwm(%8) : (!u64i) -> !cir.ptr<!void> loc(#loc133)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc136)
          cir.call @_ZN12TwoIntsClassC2Ev(%10) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc57)
          cir.store %10, %3 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc133)
          %11 = cir.load deref %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc63)
          %12 = cir.call @_ZN12TwoIntsClassaSERKS_(%11, %2) : (!cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!ty_TwoIntsClass>) -> !cir.ptr<!ty_TwoIntsClass> extra(#fn_attr2) loc(#loc64)
          cir.scope {
            %15 = cir.alloca !ty_TwoIntsClass, !cir.ptr<!ty_TwoIntsClass>, ["data", init] {alignment = 4 : i64} loc(#loc138)
            %16 = cir.load deref %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc68)
            cir.call @_ZN12TwoIntsClassC2ERKS_(%15, %16) : (!cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc69)
            %17 = cir.get_member %15[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc8)
            %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc70)
            cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc71)
            %19 = cir.get_member %15[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc32)
            %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc72)
            cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc73)
          } loc(#loc137)
          %13 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc74)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc74)
          cir.call @_ZdlPv(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr2) loc(#loc75)
        } loc(#loc131)
      } loc(#loc130)
    } loc(#loc128)
    cir.return loc(#loc43)
  } loc(#loc127)
  cir.func internal private @_ZN43CWE758_Undefined_Behavior__class_new_use_08L5good2Ev() extra(#fn_attr) {
    cir.scope {
      %0 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc80)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc141)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !ty_TwoIntsClass, !cir.ptr<!ty_TwoIntsClass>, ["data"] {alignment = 4 : i64} loc(#loc144)
          %3 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["pointer", init] {alignment = 8 : i64} loc(#loc145)
          %4 = cir.const #cir.int<1> : !s32i loc(#loc89)
          %5 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc8)
          cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc146)
          %6 = cir.const #cir.int<2> : !s32i loc(#loc91)
          %7 = cir.get_member %2[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc32)
          cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc147)
          %8 = cir.const #cir.int<8> : !u64i loc(#loc148)
          %9 = cir.call @_Znwm(%8) : (!u64i) -> !cir.ptr<!void> loc(#loc145)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc148)
          cir.call @_ZN12TwoIntsClassC2Ev(%10) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc88)
          cir.store %10, %3 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc145)
          %11 = cir.load deref %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc94)
          %12 = cir.call @_ZN12TwoIntsClassaSERKS_(%11, %2) : (!cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!ty_TwoIntsClass>) -> !cir.ptr<!ty_TwoIntsClass> extra(#fn_attr2) loc(#loc95)
          cir.scope {
            %15 = cir.alloca !ty_TwoIntsClass, !cir.ptr<!ty_TwoIntsClass>, ["data", init] {alignment = 4 : i64} loc(#loc150)
            %16 = cir.load deref %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc99)
            cir.call @_ZN12TwoIntsClassC2ERKS_(%15, %16) : (!cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc100)
            %17 = cir.get_member %15[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc8)
            %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc101)
            cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc102)
            %19 = cir.get_member %15[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc32)
            %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc103)
            cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc104)
          } loc(#loc149)
          %13 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc105)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc105)
          cir.call @_ZdlPv(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr2) loc(#loc106)
        } loc(#loc143)
      } loc(#loc142)
    } loc(#loc140)
    cir.return loc(#loc77)
  } loc(#loc139)
  cir.func @_ZN43CWE758_Undefined_Behavior__class_new_use_084goodEv() extra(#fn_attr) {
    cir.call @_ZN43CWE758_Undefined_Behavior__class_new_use_08L5good1Ev() : () -> () loc(#loc109)
    cir.call @_ZN43CWE758_Undefined_Behavior__class_new_use_08L5good2Ev() : () -> () loc(#loc110)
    cir.return loc(#loc108)
  } loc(#loc151)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__class_new_use_08.cpp":0:0)
#loc1 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":21:1)
#loc2 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":24:1)
#loc3 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":23:12)
#loc4 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":23:5)
#loc5 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":126:20)
#loc6 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":127:41)
#loc8 = loc("../../testcasesupport/std_testcase.h":64:13)
#loc9 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":130:1)
#loc10 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":131:41)
#loc11 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc12 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc13 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":36:1)
#loc14 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":48:1)
#loc15 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":38:5)
#loc16 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":47:5)
#loc17 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":38:8)
#loc18 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":38:26)
#loc19 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":39:5)
#loc20 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":40:9)
#loc21 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":46:9)
#loc22 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":41:13)
#loc23 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":41:42)
#loc24 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":42:13)
#loc25 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":42:34)
#loc26 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":41:38)
#loc27 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":42:33)
#loc28 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":43:20)
#loc29 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":36:6)
#loc30 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":44:31)
#loc31 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":44:13)
#loc32 = loc("../../testcasesupport/std_testcase.h":65:13)
#loc33 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":45:31)
#loc34 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":45:13)
#loc35 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":26:1)
#loc36 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":29:1)
#loc37 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":28:12)
#loc38 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":28:5)
#loc39 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc40 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc41 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":60:19)
#loc42 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":55:1)
#loc43 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":78:1)
#loc44 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":57:5)
#loc45 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":77:5)
#loc46 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":57:8)
#loc47 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":57:27)
#loc48 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":58:5)
#loc49 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":61:5)
#loc50 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":63:5)
#loc51 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":60:9)
#loc52 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":64:9)
#loc53 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":76:9)
#loc54 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":65:13)
#loc55 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":65:26)
#loc56 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":68:13)
#loc57 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":68:42)
#loc58 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":66:27)
#loc59 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":66:13)
#loc60 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":67:27)
#loc61 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":67:13)
#loc62 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":68:38)
#loc63 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":69:14)
#loc64 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":69:22)
#loc65 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":70:13)
#loc66 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":74:13)
#loc67 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":71:17)
#loc68 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":71:38)
#loc69 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":71:37)
#loc70 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":72:35)
#loc71 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":72:17)
#loc72 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":73:35)
#loc73 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":73:17)
#loc74 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":75:20)
#loc75 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":55:13)
#loc76 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":81:1)
#loc77 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":99:1)
#loc78 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":83:5)
#loc79 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":98:5)
#loc80 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":83:8)
#loc81 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":83:26)
#loc82 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":84:5)
#loc83 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":85:9)
#loc84 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":97:9)
#loc85 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":86:13)
#loc86 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":86:26)
#loc87 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":89:13)
#loc88 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":89:42)
#loc89 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":87:27)
#loc90 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":87:13)
#loc91 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":88:27)
#loc92 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":88:13)
#loc93 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":89:38)
#loc94 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":90:14)
#loc95 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":90:22)
#loc96 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":91:13)
#loc97 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":95:13)
#loc98 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":92:17)
#loc99 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":92:38)
#loc100 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":92:37)
#loc101 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":93:35)
#loc102 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":93:17)
#loc103 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":94:35)
#loc104 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":94:17)
#loc105 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":96:20)
#loc106 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":81:13)
#loc107 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":101:1)
#loc108 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":105:1)
#loc109 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":103:5)
#loc110 = loc("CWE758_Undefined_Behavior__class_new_use_08.cpp":104:5)
#loc111 = loc(fused[#loc1, #loc2])
#loc112 = loc(fused[#loc4, #loc3])
#loc113 = loc(fused[#loc5, #loc6])
#loc114 = loc(fused[#loc9, #loc10])
#loc115 = loc(fused[#loc11, #loc12])
#loc116 = loc(fused[#loc13, #loc14])
#loc117 = loc(fused[#loc15, #loc16])
#loc118 = loc(fused[#loc17, #loc18])
#loc119 = loc(fused[#loc19, #loc16])
#loc120 = loc(fused[#loc20, #loc21])
#loc121 = loc(fused[#loc22, #loc23])
#loc122 = loc(fused[#loc24, #loc25])
#loc123 = loc(fused[#loc26, #loc23])
#loc124 = loc(fused[#loc35, #loc36])
#loc125 = loc(fused[#loc38, #loc37])
#loc126 = loc(fused[#loc39, #loc40])
#loc127 = loc(fused[#loc42, #loc43])
#loc128 = loc(fused[#loc44, #loc45])
#loc129 = loc(fused[#loc46, #loc47])
#loc130 = loc(fused[#loc48, #loc49, #loc50, #loc45])
#loc131 = loc(fused[#loc52, #loc53])
#loc132 = loc(fused[#loc54, #loc55])
#loc133 = loc(fused[#loc56, #loc57])
#loc134 = loc(fused[#loc59, #loc58])
#loc135 = loc(fused[#loc61, #loc60])
#loc136 = loc(fused[#loc62, #loc57])
#loc137 = loc(fused[#loc65, #loc66])
#loc138 = loc(fused[#loc67, #loc68])
#loc139 = loc(fused[#loc76, #loc77])
#loc140 = loc(fused[#loc78, #loc79])
#loc141 = loc(fused[#loc80, #loc81])
#loc142 = loc(fused[#loc82, #loc79])
#loc143 = loc(fused[#loc83, #loc84])
#loc144 = loc(fused[#loc85, #loc86])
#loc145 = loc(fused[#loc87, #loc88])
#loc146 = loc(fused[#loc90, #loc89])
#loc147 = loc(fused[#loc92, #loc91])
#loc148 = loc(fused[#loc93, #loc88])
#loc149 = loc(fused[#loc96, #loc97])
#loc150 = loc(fused[#loc98, #loc99])
#loc151 = loc(fused[#loc107, #loc108])
