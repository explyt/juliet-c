!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc342)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc343)
  cir.func private  @printIntLine(!s32i) loc(#loc344)
  cir.func no_proto  @CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc346)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc11)
    %2 = cir.const #cir.int<10> : !s32i loc(#loc12)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc12)
    %4 = cir.const #cir.int<4> : !u64i loc(#loc347)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc348)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc11)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc349)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc350)
    cir.scope {
      %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc19)
      %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc20)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc20)
      %11 = cir.cmp(eq, %8, %10) : !cir.ptr<!s32i>, !s32i loc(#loc352)
      %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc21)
      cir.if %12 {
        %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc23)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc24)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc25)
        cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc23)
      } loc(#loc353)
    } loc(#loc351)
    cir.scope {
      %8 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc355)
      %9 = cir.call %8() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc28)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc28)
      cir.if %10 {
      } loc(#loc356)
    } loc(#loc354)
    cir.scope {
      %8 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc358)
      %9 = cir.call %8() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc33)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc33)
      cir.if %10 {
        cir.scope {
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc361)
          cir.scope {
            %12 = cir.const #cir.int<0> : !s32i loc(#loc42)
            cir.store %12, %11 : !s32i, !cir.ptr<!s32i> loc(#loc363)
            cir.for : cond {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc44)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc45)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !s32i loc(#loc364)
              %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc46)
              cir.condition(%16) loc(#loc46)
            } body {
              cir.scope {
                %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc48)
                %14 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc49)
                %15 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc50)
                %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc48)
                cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc51)
              } loc(#loc365)
              cir.yield loc(#loc41)
            } step {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc52)
              %14 = cir.unary(inc, %13) : !s32i, !s32i loc(#loc53)
              cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc366)
              cir.yield loc(#loc362)
            } loc(#loc362)
          } loc(#loc362)
        } loc(#loc360)
      } loc(#loc359)
    } loc(#loc357)
    cir.return loc(#loc8)
  } loc(#loc345)
  cir.func no_proto  @CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc368)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc56)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc369)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc58)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc370)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc60)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc371)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc62)
    cir.return loc(#loc55)
  } loc(#loc367)
  cir.func no_proto internal private  @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc65)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc66)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc373)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc373)
    cir.return %2 : !s32i loc(#loc373)
  } loc(#loc372)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc374)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc70)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc376)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc75)
    %2 = cir.const #cir.int<10> : !s32i loc(#loc76)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc76)
    %4 = cir.const #cir.int<4> : !u64i loc(#loc377)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc378)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc75)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc379)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc380)
    cir.scope {
      %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc83)
      %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc84)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc84)
      %11 = cir.cmp(eq, %8, %10) : !cir.ptr<!s32i>, !s32i loc(#loc382)
      %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc85)
      cir.if %12 {
        %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc87)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc88)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc89)
        cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc87)
      } loc(#loc383)
    } loc(#loc381)
    cir.scope {
      %8 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc385)
      %9 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc92)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc92)
      cir.if %10 {
      } loc(#loc386)
    } loc(#loc384)
    cir.scope {
      %8 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc388)
      %9 = cir.call %8() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc97)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc97)
      cir.if %10 {
        %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc70)
        %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc70)
        cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc102)
      } else {
        cir.scope {
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc391)
          cir.scope {
            %12 = cir.const #cir.int<0> : !s32i loc(#loc109)
            cir.store %12, %11 : !s32i, !cir.ptr<!s32i> loc(#loc393)
            cir.for : cond {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc111)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc112)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !s32i loc(#loc394)
              %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc113)
              cir.condition(%16) loc(#loc113)
            } body {
              cir.scope {
                %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc115)
                %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc116)
                %15 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc117)
                %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc118)
                cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc396)
              } loc(#loc395)
              cir.yield loc(#loc108)
            } step {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc119)
              %14 = cir.unary(inc, %13) : !s32i, !s32i loc(#loc120)
              cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc397)
              cir.yield loc(#loc392)
            } loc(#loc392)
          } loc(#loc392)
        } loc(#loc390)
        cir.scope {
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc399)
          cir.scope {
            %12 = cir.const #cir.int<0> : !s32i loc(#loc127)
            cir.store %12, %11 : !s32i, !cir.ptr<!s32i> loc(#loc401)
            cir.for : cond {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc129)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc130)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !s32i loc(#loc402)
              %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc131)
              cir.condition(%16) loc(#loc131)
            } body {
              cir.scope {
                %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc133)
                %14 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc134)
                %15 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc135)
                %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc133)
                cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc136)
              } loc(#loc403)
              cir.yield loc(#loc126)
            } step {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc137)
              %14 = cir.unary(inc, %13) : !s32i, !s32i loc(#loc138)
              cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc404)
              cir.yield loc(#loc400)
            } loc(#loc400)
          } loc(#loc400)
        } loc(#loc398)
      } loc(#loc389)
    } loc(#loc387)
    cir.return loc(#loc72)
  } loc(#loc375)
  cir.func no_proto internal private  @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc140)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc141)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc406)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc406)
    cir.return %2 : !s32i loc(#loc406)
  } loc(#loc405)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc408)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc147)
    %2 = cir.const #cir.int<10> : !s32i loc(#loc148)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc148)
    %4 = cir.const #cir.int<4> : !u64i loc(#loc409)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc410)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc147)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc411)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc412)
    cir.scope {
      %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc155)
      %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc156)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc156)
      %11 = cir.cmp(eq, %8, %10) : !cir.ptr<!s32i>, !s32i loc(#loc414)
      %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc157)
      cir.if %12 {
        %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc159)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc160)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc161)
        cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc159)
      } loc(#loc415)
    } loc(#loc413)
    cir.scope {
      %8 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc417)
      %9 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc164)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc164)
      cir.if %10 {
      } loc(#loc418)
    } loc(#loc416)
    cir.scope {
      %8 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc420)
      %9 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc169)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc169)
      cir.if %10 {
        cir.scope {
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc423)
          cir.scope {
            %12 = cir.const #cir.int<0> : !s32i loc(#loc178)
            cir.store %12, %11 : !s32i, !cir.ptr<!s32i> loc(#loc425)
            cir.for : cond {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc180)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc181)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !s32i loc(#loc426)
              %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc182)
              cir.condition(%16) loc(#loc182)
            } body {
              cir.scope {
                %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc184)
                %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc185)
                %15 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc186)
                %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc187)
                cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc428)
              } loc(#loc427)
              cir.yield loc(#loc177)
            } step {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc188)
              %14 = cir.unary(inc, %13) : !s32i, !s32i loc(#loc189)
              cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc429)
              cir.yield loc(#loc424)
            } loc(#loc424)
          } loc(#loc424)
        } loc(#loc422)
        cir.scope {
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc431)
          cir.scope {
            %12 = cir.const #cir.int<0> : !s32i loc(#loc196)
            cir.store %12, %11 : !s32i, !cir.ptr<!s32i> loc(#loc433)
            cir.for : cond {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc198)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc199)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !s32i loc(#loc434)
              %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc200)
              cir.condition(%16) loc(#loc200)
            } body {
              cir.scope {
                %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc202)
                %14 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc203)
                %15 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc204)
                %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc202)
                cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc205)
              } loc(#loc435)
              cir.yield loc(#loc195)
            } step {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc206)
              %14 = cir.unary(inc, %13) : !s32i, !s32i loc(#loc207)
              cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc436)
              cir.yield loc(#loc432)
            } loc(#loc432)
          } loc(#loc432)
        } loc(#loc430)
      } loc(#loc421)
    } loc(#loc419)
    cir.return loc(#loc144)
  } loc(#loc407)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc438)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc212)
    %2 = cir.const #cir.int<10> : !s32i loc(#loc213)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc213)
    %4 = cir.const #cir.int<4> : !u64i loc(#loc439)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc440)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc212)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc441)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc442)
    cir.scope {
      %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc220)
      %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc221)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc221)
      %11 = cir.cmp(eq, %8, %10) : !cir.ptr<!s32i>, !s32i loc(#loc444)
      %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc222)
      cir.if %12 {
        %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc224)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc225)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc226)
        cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc224)
      } loc(#loc445)
    } loc(#loc443)
    cir.scope {
      %8 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc447)
      %9 = cir.call @staticReturnsFalse() : () -> !s32i loc(#loc229)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc229)
      cir.if %10 {
        %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc234)
        %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc234)
        cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc235)
      } else {
        cir.scope {
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc450)
          cir.scope {
            %12 = cir.const #cir.int<0> : !s32i loc(#loc242)
            cir.store %12, %11 : !s32i, !cir.ptr<!s32i> loc(#loc452)
            cir.for : cond {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc244)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc245)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !s32i loc(#loc453)
              %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc246)
              cir.condition(%16) loc(#loc246)
            } body {
              cir.scope {
                %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc248)
                %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc249)
                %15 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc250)
                %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc251)
                cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc455)
              } loc(#loc454)
              cir.yield loc(#loc241)
            } step {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc252)
              %14 = cir.unary(inc, %13) : !s32i, !s32i loc(#loc253)
              cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc456)
              cir.yield loc(#loc451)
            } loc(#loc451)
          } loc(#loc451)
        } loc(#loc449)
      } loc(#loc448)
    } loc(#loc446)
    cir.scope {
      %8 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc458)
      %9 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc256)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc256)
      cir.if %10 {
        cir.scope {
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc461)
          cir.scope {
            %12 = cir.const #cir.int<0> : !s32i loc(#loc265)
            cir.store %12, %11 : !s32i, !cir.ptr<!s32i> loc(#loc463)
            cir.for : cond {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc267)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc268)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !s32i loc(#loc464)
              %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc269)
              cir.condition(%16) loc(#loc269)
            } body {
              cir.scope {
                %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc271)
                %14 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc272)
                %15 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc273)
                %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc271)
                cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc274)
              } loc(#loc465)
              cir.yield loc(#loc264)
            } step {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc275)
              %14 = cir.unary(inc, %13) : !s32i, !s32i loc(#loc276)
              cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc466)
              cir.yield loc(#loc462)
            } loc(#loc462)
          } loc(#loc462)
        } loc(#loc460)
      } loc(#loc459)
    } loc(#loc457)
    cir.return loc(#loc209)
  } loc(#loc437)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc468)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc281)
    %2 = cir.const #cir.int<10> : !s32i loc(#loc282)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc282)
    %4 = cir.const #cir.int<4> : !u64i loc(#loc469)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc470)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc281)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc471)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc472)
    cir.scope {
      %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc289)
      %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc290)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc290)
      %11 = cir.cmp(eq, %8, %10) : !cir.ptr<!s32i>, !s32i loc(#loc474)
      %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc291)
      cir.if %12 {
        %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc293)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc294)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc295)
        cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc293)
      } loc(#loc475)
    } loc(#loc473)
    cir.scope {
      %8 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc477)
      %9 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc298)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc298)
      cir.if %10 {
        cir.scope {
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc480)
          cir.scope {
            %12 = cir.const #cir.int<0> : !s32i loc(#loc307)
            cir.store %12, %11 : !s32i, !cir.ptr<!s32i> loc(#loc482)
            cir.for : cond {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc309)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc310)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !s32i loc(#loc483)
              %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc311)
              cir.condition(%16) loc(#loc311)
            } body {
              cir.scope {
                %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc313)
                %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc314)
                %15 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc315)
                %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc316)
                cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc485)
              } loc(#loc484)
              cir.yield loc(#loc306)
            } step {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc317)
              %14 = cir.unary(inc, %13) : !s32i, !s32i loc(#loc318)
              cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc486)
              cir.yield loc(#loc481)
            } loc(#loc481)
          } loc(#loc481)
        } loc(#loc479)
      } loc(#loc478)
    } loc(#loc476)
    cir.scope {
      %8 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc488)
      %9 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc321)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc321)
      cir.if %10 {
        cir.scope {
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc491)
          cir.scope {
            %12 = cir.const #cir.int<0> : !s32i loc(#loc330)
            cir.store %12, %11 : !s32i, !cir.ptr<!s32i> loc(#loc493)
            cir.for : cond {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc332)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc333)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !s32i loc(#loc494)
              %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc334)
              cir.condition(%16) loc(#loc334)
            } body {
              cir.scope {
                %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc336)
                %14 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc337)
                %15 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc338)
                %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc336)
                cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc339)
              } loc(#loc495)
              cir.yield loc(#loc329)
            } step {
              %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc340)
              %14 = cir.unary(inc, %13) : !s32i, !s32i loc(#loc341)
              cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc496)
              cir.yield loc(#loc492)
            } loc(#loc492)
          } loc(#loc492)
        } loc(#loc490)
      } loc(#loc489)
    } loc(#loc487)
    cir.return loc(#loc278)
  } loc(#loc467)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":35:1)
#loc8 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":56:1)
#loc9 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":37:5)
#loc10 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":37:11)
#loc11 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":38:19)
#loc12 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":38:26)
#loc13 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":38:29)
#loc14 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":38:39)
#loc15 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":38:40)
#loc16 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":38:5)
#loc17 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":39:5)
#loc18 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":39:33)
#loc19 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":39:9)
#loc20 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":39:17)
#loc21 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":39:14)
#loc22 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":39:23)
#loc23 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":39:24)
#loc24 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":39:30)
#loc25 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":39:29)
#loc26 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":40:5)
#loc27 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":44:5)
#loc28 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":40:8)
#loc29 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":40:26)
#loc30 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":41:5)
#loc31 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":45:5)
#loc32 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":55:5)
#loc33 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":45:8)
#loc34 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":45:26)
#loc35 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":46:5)
#loc36 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":48:9)
#loc37 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":54:9)
#loc38 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":49:13)
#loc39 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":49:17)
#loc40 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":50:13)
#loc41 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":53:13)
#loc42 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":50:19)
#loc43 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":50:17)
#loc44 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":50:22)
#loc45 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":50:24)
#loc46 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":50:23)
#loc47 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":51:13)
#loc48 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":52:30)
#loc49 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":52:35)
#loc50 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":52:36)
#loc51 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":52:17)
#loc52 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":50:29)
#loc53 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":50:28)
#loc54 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":194:1)
#loc55 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":200:1)
#loc56 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":196:5)
#loc57 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":196:14)
#loc58 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":197:5)
#loc59 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":197:14)
#loc60 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":198:5)
#loc61 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":198:14)
#loc62 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":199:5)
#loc63 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":199:14)
#loc64 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":23:1)
#loc65 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":26:1)
#loc66 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":25:12)
#loc67 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":25:5)
#loc68 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc69 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc70 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":76:19)
#loc71 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":63:1)
#loc72 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":96:1)
#loc73 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":65:5)
#loc74 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":65:11)
#loc75 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":66:19)
#loc76 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":66:26)
#loc77 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":66:29)
#loc78 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":66:39)
#loc79 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":66:40)
#loc80 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":66:5)
#loc81 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":67:5)
#loc82 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":67:33)
#loc83 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":67:9)
#loc84 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":67:17)
#loc85 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":67:14)
#loc86 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":67:23)
#loc87 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":67:24)
#loc88 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":67:30)
#loc89 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":67:29)
#loc90 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":68:5)
#loc91 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":72:5)
#loc92 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":68:8)
#loc93 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":68:26)
#loc94 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":69:5)
#loc95 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":73:5)
#loc96 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":95:5)
#loc97 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":73:8)
#loc98 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":73:27)
#loc99 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":74:5)
#loc100 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":77:5)
#loc101 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":79:5)
#loc102 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":76:9)
#loc103 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":81:9)
#loc104 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":87:9)
#loc105 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":82:13)
#loc106 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":82:17)
#loc107 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":83:13)
#loc108 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":86:13)
#loc109 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":83:19)
#loc110 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":83:17)
#loc111 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":83:22)
#loc112 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":83:24)
#loc113 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":83:23)
#loc114 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":84:13)
#loc115 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":85:27)
#loc116 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":85:17)
#loc117 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":85:22)
#loc118 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":85:23)
#loc119 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":83:29)
#loc120 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":83:28)
#loc121 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":88:9)
#loc122 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":94:9)
#loc123 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":89:13)
#loc124 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":89:17)
#loc125 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":90:13)
#loc126 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":93:13)
#loc127 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":90:19)
#loc128 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":90:17)
#loc129 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":90:22)
#loc130 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":90:24)
#loc131 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":90:23)
#loc132 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":91:13)
#loc133 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":92:30)
#loc134 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":92:35)
#loc135 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":92:36)
#loc136 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":92:17)
#loc137 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":90:29)
#loc138 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":90:28)
#loc139 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":28:1)
#loc140 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":31:1)
#loc141 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":30:12)
#loc142 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":30:5)
#loc143 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":99:1)
#loc144 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":127:1)
#loc145 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":101:5)
#loc146 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":101:11)
#loc147 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":102:19)
#loc148 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":102:26)
#loc149 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":102:29)
#loc150 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":102:39)
#loc151 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":102:40)
#loc152 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":102:5)
#loc153 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":103:5)
#loc154 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":103:33)
#loc155 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":103:9)
#loc156 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":103:17)
#loc157 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":103:14)
#loc158 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":103:23)
#loc159 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":103:24)
#loc160 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":103:30)
#loc161 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":103:29)
#loc162 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":104:5)
#loc163 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":108:5)
#loc164 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":104:8)
#loc165 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":104:26)
#loc166 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":105:5)
#loc167 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":109:5)
#loc168 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":126:5)
#loc169 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":109:8)
#loc170 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":109:26)
#loc171 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":110:5)
#loc172 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":112:9)
#loc173 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":118:9)
#loc174 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":113:13)
#loc175 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":113:17)
#loc176 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":114:13)
#loc177 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":117:13)
#loc178 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":114:19)
#loc179 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":114:17)
#loc180 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":114:22)
#loc181 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":114:24)
#loc182 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":114:23)
#loc183 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":115:13)
#loc184 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":116:27)
#loc185 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":116:17)
#loc186 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":116:22)
#loc187 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":116:23)
#loc188 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":114:29)
#loc189 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":114:28)
#loc190 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":119:9)
#loc191 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":125:9)
#loc192 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":120:13)
#loc193 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":120:17)
#loc194 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":121:13)
#loc195 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":124:13)
#loc196 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":121:19)
#loc197 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":121:17)
#loc198 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":121:22)
#loc199 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":121:24)
#loc200 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":121:23)
#loc201 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":122:13)
#loc202 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":123:30)
#loc203 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":123:35)
#loc204 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":123:36)
#loc205 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":123:17)
#loc206 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":121:29)
#loc207 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":121:28)
#loc208 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":130:1)
#loc209 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":162:1)
#loc210 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":132:5)
#loc211 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":132:11)
#loc212 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":133:19)
#loc213 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":133:26)
#loc214 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":133:29)
#loc215 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":133:39)
#loc216 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":133:40)
#loc217 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":133:5)
#loc218 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":134:5)
#loc219 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":134:33)
#loc220 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":134:9)
#loc221 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":134:17)
#loc222 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":134:14)
#loc223 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":134:23)
#loc224 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":134:24)
#loc225 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":134:30)
#loc226 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":134:29)
#loc227 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":135:5)
#loc228 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":150:5)
#loc229 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":135:8)
#loc230 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":135:27)
#loc231 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":136:5)
#loc232 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":139:5)
#loc233 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":141:5)
#loc234 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":138:19)
#loc235 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":138:9)
#loc236 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":143:9)
#loc237 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":149:9)
#loc238 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":144:13)
#loc239 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":144:17)
#loc240 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":145:13)
#loc241 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":148:13)
#loc242 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":145:19)
#loc243 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":145:17)
#loc244 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":145:22)
#loc245 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":145:24)
#loc246 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":145:23)
#loc247 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":146:13)
#loc248 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":147:27)
#loc249 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":147:17)
#loc250 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":147:22)
#loc251 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":147:23)
#loc252 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":145:29)
#loc253 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":145:28)
#loc254 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":151:5)
#loc255 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":161:5)
#loc256 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":151:8)
#loc257 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":151:26)
#loc258 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":152:5)
#loc259 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":154:9)
#loc260 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":160:9)
#loc261 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":155:13)
#loc262 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":155:17)
#loc263 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":156:13)
#loc264 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":159:13)
#loc265 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":156:19)
#loc266 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":156:17)
#loc267 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":156:22)
#loc268 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":156:24)
#loc269 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":156:23)
#loc270 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":157:13)
#loc271 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":158:30)
#loc272 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":158:35)
#loc273 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":158:36)
#loc274 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":158:17)
#loc275 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":156:29)
#loc276 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":156:28)
#loc277 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":165:1)
#loc278 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":192:1)
#loc279 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":167:5)
#loc280 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":167:11)
#loc281 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":168:19)
#loc282 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":168:26)
#loc283 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":168:29)
#loc284 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":168:39)
#loc285 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":168:40)
#loc286 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":168:5)
#loc287 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":169:5)
#loc288 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":169:33)
#loc289 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":169:9)
#loc290 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":169:17)
#loc291 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":169:14)
#loc292 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":169:23)
#loc293 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":169:24)
#loc294 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":169:30)
#loc295 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":169:29)
#loc296 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":170:5)
#loc297 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":180:5)
#loc298 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":170:8)
#loc299 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":170:26)
#loc300 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":171:5)
#loc301 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":173:9)
#loc302 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":179:9)
#loc303 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":174:13)
#loc304 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":174:17)
#loc305 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":175:13)
#loc306 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":178:13)
#loc307 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":175:19)
#loc308 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":175:17)
#loc309 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":175:22)
#loc310 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":175:24)
#loc311 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":175:23)
#loc312 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":176:13)
#loc313 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":177:27)
#loc314 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":177:17)
#loc315 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":177:22)
#loc316 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":177:23)
#loc317 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":175:29)
#loc318 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":175:28)
#loc319 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":181:5)
#loc320 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":191:5)
#loc321 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":181:8)
#loc322 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":181:26)
#loc323 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":182:5)
#loc324 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":184:9)
#loc325 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":190:9)
#loc326 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":185:13)
#loc327 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":185:17)
#loc328 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":186:13)
#loc329 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":189:13)
#loc330 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":186:19)
#loc331 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":186:17)
#loc332 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":186:22)
#loc333 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":186:24)
#loc334 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":186:23)
#loc335 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":187:13)
#loc336 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":188:30)
#loc337 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":188:35)
#loc338 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":188:36)
#loc339 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":188:17)
#loc340 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":186:29)
#loc341 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_08.c":186:28)
#loc342 = loc(fused[#loc1, #loc2])
#loc343 = loc(fused[#loc3, #loc4])
#loc344 = loc(fused[#loc5, #loc6])
#loc345 = loc(fused[#loc7, #loc8])
#loc346 = loc(fused[#loc9, #loc10])
#loc347 = loc(fused[#loc13, #loc14])
#loc348 = loc(fused[#loc12, #loc14])
#loc349 = loc(fused[#loc11, #loc15])
#loc350 = loc(fused[#loc16, #loc15])
#loc351 = loc(fused[#loc17, #loc18])
#loc352 = loc(fused[#loc19, #loc20])
#loc353 = loc(fused[#loc22, #loc18])
#loc354 = loc(fused[#loc26, #loc27])
#loc355 = loc(fused[#loc28, #loc29])
#loc356 = loc(fused[#loc30, #loc27])
#loc357 = loc(fused[#loc31, #loc32])
#loc358 = loc(fused[#loc33, #loc34])
#loc359 = loc(fused[#loc35, #loc32])
#loc360 = loc(fused[#loc36, #loc37])
#loc361 = loc(fused[#loc38, #loc39])
#loc362 = loc(fused[#loc40, #loc41])
#loc363 = loc(fused[#loc43, #loc42])
#loc364 = loc(fused[#loc44, #loc45])
#loc365 = loc(fused[#loc47, #loc41])
#loc366 = loc(fused[#loc53, #loc52])
#loc367 = loc(fused[#loc54, #loc55])
#loc368 = loc(fused[#loc56, #loc57])
#loc369 = loc(fused[#loc58, #loc59])
#loc370 = loc(fused[#loc60, #loc61])
#loc371 = loc(fused[#loc62, #loc63])
#loc372 = loc(fused[#loc64, #loc65])
#loc373 = loc(fused[#loc67, #loc66])
#loc374 = loc(fused[#loc68, #loc69])
#loc375 = loc(fused[#loc71, #loc72])
#loc376 = loc(fused[#loc73, #loc74])
#loc377 = loc(fused[#loc77, #loc78])
#loc378 = loc(fused[#loc76, #loc78])
#loc379 = loc(fused[#loc75, #loc79])
#loc380 = loc(fused[#loc80, #loc79])
#loc381 = loc(fused[#loc81, #loc82])
#loc382 = loc(fused[#loc83, #loc84])
#loc383 = loc(fused[#loc86, #loc82])
#loc384 = loc(fused[#loc90, #loc91])
#loc385 = loc(fused[#loc92, #loc93])
#loc386 = loc(fused[#loc94, #loc91])
#loc387 = loc(fused[#loc95, #loc96])
#loc388 = loc(fused[#loc97, #loc98])
#loc389 = loc(fused[#loc99, #loc100, #loc101, #loc96])
#loc390 = loc(fused[#loc103, #loc104])
#loc391 = loc(fused[#loc105, #loc106])
#loc392 = loc(fused[#loc107, #loc108])
#loc393 = loc(fused[#loc110, #loc109])
#loc394 = loc(fused[#loc111, #loc112])
#loc395 = loc(fused[#loc114, #loc108])
#loc396 = loc(fused[#loc116, #loc115])
#loc397 = loc(fused[#loc120, #loc119])
#loc398 = loc(fused[#loc121, #loc122])
#loc399 = loc(fused[#loc123, #loc124])
#loc400 = loc(fused[#loc125, #loc126])
#loc401 = loc(fused[#loc128, #loc127])
#loc402 = loc(fused[#loc129, #loc130])
#loc403 = loc(fused[#loc132, #loc126])
#loc404 = loc(fused[#loc138, #loc137])
#loc405 = loc(fused[#loc139, #loc140])
#loc406 = loc(fused[#loc142, #loc141])
#loc407 = loc(fused[#loc143, #loc144])
#loc408 = loc(fused[#loc145, #loc146])
#loc409 = loc(fused[#loc149, #loc150])
#loc410 = loc(fused[#loc148, #loc150])
#loc411 = loc(fused[#loc147, #loc151])
#loc412 = loc(fused[#loc152, #loc151])
#loc413 = loc(fused[#loc153, #loc154])
#loc414 = loc(fused[#loc155, #loc156])
#loc415 = loc(fused[#loc158, #loc154])
#loc416 = loc(fused[#loc162, #loc163])
#loc417 = loc(fused[#loc164, #loc165])
#loc418 = loc(fused[#loc166, #loc163])
#loc419 = loc(fused[#loc167, #loc168])
#loc420 = loc(fused[#loc169, #loc170])
#loc421 = loc(fused[#loc171, #loc168])
#loc422 = loc(fused[#loc172, #loc173])
#loc423 = loc(fused[#loc174, #loc175])
#loc424 = loc(fused[#loc176, #loc177])
#loc425 = loc(fused[#loc179, #loc178])
#loc426 = loc(fused[#loc180, #loc181])
#loc427 = loc(fused[#loc183, #loc177])
#loc428 = loc(fused[#loc185, #loc184])
#loc429 = loc(fused[#loc189, #loc188])
#loc430 = loc(fused[#loc190, #loc191])
#loc431 = loc(fused[#loc192, #loc193])
#loc432 = loc(fused[#loc194, #loc195])
#loc433 = loc(fused[#loc197, #loc196])
#loc434 = loc(fused[#loc198, #loc199])
#loc435 = loc(fused[#loc201, #loc195])
#loc436 = loc(fused[#loc207, #loc206])
#loc437 = loc(fused[#loc208, #loc209])
#loc438 = loc(fused[#loc210, #loc211])
#loc439 = loc(fused[#loc214, #loc215])
#loc440 = loc(fused[#loc213, #loc215])
#loc441 = loc(fused[#loc212, #loc216])
#loc442 = loc(fused[#loc217, #loc216])
#loc443 = loc(fused[#loc218, #loc219])
#loc444 = loc(fused[#loc220, #loc221])
#loc445 = loc(fused[#loc223, #loc219])
#loc446 = loc(fused[#loc227, #loc228])
#loc447 = loc(fused[#loc229, #loc230])
#loc448 = loc(fused[#loc231, #loc232, #loc233, #loc228])
#loc449 = loc(fused[#loc236, #loc237])
#loc450 = loc(fused[#loc238, #loc239])
#loc451 = loc(fused[#loc240, #loc241])
#loc452 = loc(fused[#loc243, #loc242])
#loc453 = loc(fused[#loc244, #loc245])
#loc454 = loc(fused[#loc247, #loc241])
#loc455 = loc(fused[#loc249, #loc248])
#loc456 = loc(fused[#loc253, #loc252])
#loc457 = loc(fused[#loc254, #loc255])
#loc458 = loc(fused[#loc256, #loc257])
#loc459 = loc(fused[#loc258, #loc255])
#loc460 = loc(fused[#loc259, #loc260])
#loc461 = loc(fused[#loc261, #loc262])
#loc462 = loc(fused[#loc263, #loc264])
#loc463 = loc(fused[#loc266, #loc265])
#loc464 = loc(fused[#loc267, #loc268])
#loc465 = loc(fused[#loc270, #loc264])
#loc466 = loc(fused[#loc276, #loc275])
#loc467 = loc(fused[#loc277, #loc278])
#loc468 = loc(fused[#loc279, #loc280])
#loc469 = loc(fused[#loc283, #loc284])
#loc470 = loc(fused[#loc282, #loc284])
#loc471 = loc(fused[#loc281, #loc285])
#loc472 = loc(fused[#loc286, #loc285])
#loc473 = loc(fused[#loc287, #loc288])
#loc474 = loc(fused[#loc289, #loc290])
#loc475 = loc(fused[#loc292, #loc288])
#loc476 = loc(fused[#loc296, #loc297])
#loc477 = loc(fused[#loc298, #loc299])
#loc478 = loc(fused[#loc300, #loc297])
#loc479 = loc(fused[#loc301, #loc302])
#loc480 = loc(fused[#loc303, #loc304])
#loc481 = loc(fused[#loc305, #loc306])
#loc482 = loc(fused[#loc308, #loc307])
#loc483 = loc(fused[#loc309, #loc310])
#loc484 = loc(fused[#loc312, #loc306])
#loc485 = loc(fused[#loc314, #loc313])
#loc486 = loc(fused[#loc318, #loc317])
#loc487 = loc(fused[#loc319, #loc320])
#loc488 = loc(fused[#loc321, #loc322])
#loc489 = loc(fused[#loc323, #loc320])
#loc490 = loc(fused[#loc324, #loc325])
#loc491 = loc(fused[#loc326, #loc327])
#loc492 = loc(fused[#loc328, #loc329])
#loc493 = loc(fused[#loc331, #loc330])
#loc494 = loc(fused[#loc332, #loc333])
#loc495 = loc(fused[#loc335, #loc329])
#loc496 = loc(fused[#loc341, #loc340])
