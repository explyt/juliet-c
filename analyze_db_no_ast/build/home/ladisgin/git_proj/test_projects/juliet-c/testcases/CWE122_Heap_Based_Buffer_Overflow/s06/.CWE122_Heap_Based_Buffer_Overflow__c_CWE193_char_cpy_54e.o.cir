!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_54e.c":30:71)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_54e.c":30:78)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_54e.c":46:75)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_54e.c":46:82)
#loc43 = loc(fused[#loc9, #loc10])
#loc47 = loc(fused[#loc25, #loc26])
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_54e.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc39)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc40)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc41)
  cir.func  @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_54e_badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc9, #loc10])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc43)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc11)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc45)
      %2 = cir.const #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc45)
      cir.store %2, %1 : !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>> loc(#loc45)
      %3 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc16)
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc17)
      %5 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc18)
      %6 = cir.call @strcpy(%4, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc16)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
      cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc20)
      %8 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc21)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc22)
      cir.call @free(%10) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc21)
    } loc(#loc44)
    cir.return loc(#loc8)
  } loc(#loc42)
  cir.func  @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_54e_goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc25, #loc26])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc47)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc27)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc49)
      %2 = cir.const #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc49)
      cir.store %2, %1 : !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>> loc(#loc49)
      %3 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc32)
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
      %5 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc34)
      %6 = cir.call @strcpy(%4, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc32)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
      cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc36)
      %8 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc37)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc38)
      cir.call @free(%10) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc37)
    } loc(#loc48)
    cir.return loc(#loc24)
  } loc(#loc46)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_54e.c":0:0)
#loc1 = loc("/usr/include/string.h":141:1)
#loc2 = loc("/usr/include/string.h":142:14)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_54e.c":30:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_54e.c":39:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_54e.c":31:1)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_54e.c":32:5)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_54e.c":38:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_54e.c":33:9)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_54e.c":33:29)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_54e.c":35:9)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_54e.c":35:16)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_54e.c":35:22)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_54e.c":36:19)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_54e.c":36:9)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_54e.c":37:9)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_54e.c":37:14)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_54e.c":46:1)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_54e.c":55:1)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_54e.c":47:1)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_54e.c":48:5)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_54e.c":54:5)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_54e.c":49:9)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_54e.c":49:29)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_54e.c":51:9)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_54e.c":51:16)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_54e.c":51:22)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_54e.c":52:19)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_54e.c":52:9)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_54e.c":53:9)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_54e.c":53:14)
#loc39 = loc(fused[#loc1, #loc2])
#loc40 = loc(fused[#loc3, #loc4])
#loc41 = loc(fused[#loc5, #loc6])
#loc42 = loc(fused[#loc7, #loc8])
#loc44 = loc(fused[#loc12, #loc13])
#loc45 = loc(fused[#loc14, #loc15])
#loc46 = loc(fused[#loc23, #loc24])
#loc48 = loc(fused[#loc28, #loc29])
#loc49 = loc(fused[#loc30, #loc31])
