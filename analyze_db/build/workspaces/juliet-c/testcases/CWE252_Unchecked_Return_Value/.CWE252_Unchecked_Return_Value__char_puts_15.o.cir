!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_puts_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @puts(!cir.ptr<!s8i>) -> !s32i loc(#loc62)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"string\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc3)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc63)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc6)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_puts_15_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc11)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc3)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc3)
          %3 = cir.call @puts(%2) : (!cir.ptr<!s8i>) -> !s32i loc(#loc13)
          cir.break loc(#loc14)
        } loc(#loc12)
        cir.case(default, []) {
          %1 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc6)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc6)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc16)
          cir.break loc(#loc17)
        } loc(#loc15)
        cir.yield loc(#loc9)
      } loc(#loc9)
    } loc(#loc65)
    cir.return loc(#loc8)
  } loc(#loc64)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_puts_15_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc67)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc20)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc68)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc22)
    cir.return loc(#loc19)
  } loc(#loc66)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"puts failed!\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc24)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc29)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %1 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc31)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc31)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc32)
          cir.break loc(#loc33)
        } loc(#loc30)
        cir.case(default, []) {
          cir.scope {
            %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc37)
            %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc37)
            %3 = cir.call @puts(%2) : (!cir.ptr<!s8i>) -> !s32i loc(#loc38)
            %4 = cir.const #cir.int<1> : !s32i loc(#loc39)
            %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc39)
            %6 = cir.cmp(eq, %3, %5) : !s32i, !cir.bool loc(#loc72)
            cir.if %6 {
              %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc24)
              %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc24)
              cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc41)
            } loc(#loc73)
          } loc(#loc71)
          cir.break loc(#loc42)
        } loc(#loc34)
        cir.yield loc(#loc27)
      } loc(#loc27)
    } loc(#loc70)
    cir.return loc(#loc26)
  } loc(#loc69)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc47)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc51)
            %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc51)
            %3 = cir.call @puts(%2) : (!cir.ptr<!s8i>) -> !s32i loc(#loc52)
            %4 = cir.const #cir.int<1> : !s32i loc(#loc53)
            %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc53)
            %6 = cir.cmp(eq, %3, %5) : !s32i, !cir.bool loc(#loc77)
            cir.if %6 {
              %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc55)
              %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc55)
              cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc56)
            } loc(#loc78)
          } loc(#loc76)
          cir.break loc(#loc57)
        } loc(#loc48)
        cir.case(default, []) {
          %1 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc59)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc59)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc60)
          cir.break loc(#loc61)
        } loc(#loc58)
        cir.yield loc(#loc45)
      } loc(#loc45)
    } loc(#loc75)
    cir.return loc(#loc44)
  } loc(#loc74)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_puts_15.c":0:0)
#loc1 = loc("/usr/include/stdio.h":724:1)
#loc2 = loc("/usr/include/stdio.h":724:33)
#loc3 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":36:14)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc6 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":40:19)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":30:1)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":43:1)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":32:5)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":42:5)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":32:12)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":34:5)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":36:9)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":37:9)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":38:5)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":40:9)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":41:9)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":87:1)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":91:1)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":89:5)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":89:11)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":90:5)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":90:11)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":62:23)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":50:1)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":66:1)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":52:5)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":65:5)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":52:12)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":54:5)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":56:19)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":56:9)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":57:9)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":58:5)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":60:9)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":63:9)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":60:18)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":60:13)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":60:31)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":61:9)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":62:13)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":64:9)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":69:1)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":85:1)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":71:5)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":84:5)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":71:12)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":73:5)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":75:9)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":78:9)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":75:18)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":75:13)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":75:31)
#loc54 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":76:9)
#loc55 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":77:23)
#loc56 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":77:13)
#loc57 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":79:9)
#loc58 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":80:5)
#loc59 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":82:19)
#loc60 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":82:9)
#loc61 = loc("CWE252_Unchecked_Return_Value__char_puts_15.c":83:9)
#loc62 = loc(fused[#loc1, #loc2])
#loc63 = loc(fused[#loc4, #loc5])
#loc64 = loc(fused[#loc7, #loc8])
#loc65 = loc(fused[#loc9, #loc10])
#loc66 = loc(fused[#loc18, #loc19])
#loc67 = loc(fused[#loc20, #loc21])
#loc68 = loc(fused[#loc22, #loc23])
#loc69 = loc(fused[#loc25, #loc26])
#loc70 = loc(fused[#loc27, #loc28])
#loc71 = loc(fused[#loc35, #loc36])
#loc72 = loc(fused[#loc38, #loc39])
#loc73 = loc(fused[#loc40, #loc36])
#loc74 = loc(fused[#loc43, #loc44])
#loc75 = loc(fused[#loc45, #loc46])
#loc76 = loc(fused[#loc49, #loc50])
#loc77 = loc(fused[#loc52, #loc53])
#loc78 = loc(fused[#loc54, #loc50])
