!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc165 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":253:10)
#loc166 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":253:14)
#loc167 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":253:20)
#loc168 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":253:32)
#true = #cir.bool<true> : !cir.bool
#loc521 = loc(fused[#loc165, #loc166])
#loc522 = loc(fused[#loc167, #loc168])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_fwrite_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc451)
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc452)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"output_bad.txt\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc5)
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc453)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"w+\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc8)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc454)
  cir.func private @fwrite(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc455)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"This is the sentence we are printing to the file. \00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc13)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc456)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"output_good.txt\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc16)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_fwrite_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc458)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc22)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc459)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc461)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc461)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc26)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc26)
      cir.if %6 {
        %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc31)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc31)
        %9 = cir.binop(and, %7, %8) : !s32i loc(#loc31)
        %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc31)
        %11 = cir.ternary(%10, true {
          %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc31)
          %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc31)
          %15 = cir.const #cir.int<30> : !s32i loc(#loc31)
          %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc31)
          %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc31)
          %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc31)
          %19 = cir.const #cir.int<15> : !s32i loc(#loc31)
          %20 = cir.shift(left, %18 : !u32i, %19 : !s32i) -> !u32i loc(#loc31)
          %21 = cir.binop(xor, %16, %20) : !u32i loc(#loc31)
          %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc31)
          %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc31)
          %24 = cir.binop(xor, %21, %23) : !u32i loc(#loc31)
          cir.yield %24 : !u32i loc(#loc31)
        }, false {
          %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc31)
          %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc31)
          %15 = cir.const #cir.int<30> : !s32i loc(#loc31)
          %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc31)
          %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc31)
          %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc31)
          %19 = cir.const #cir.int<15> : !s32i loc(#loc31)
          %20 = cir.shift(left, %18 : !u32i, %19 : !s32i) -> !u32i loc(#loc31)
          %21 = cir.binop(xor, %16, %20) : !u32i loc(#loc31)
          %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc31)
          %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc31)
          %24 = cir.binop(xor, %21, %23) : !u32i loc(#loc31)
          %25 = cir.unary(minus, %24) : !u32i, !u32i loc(#loc31)
          %26 = cir.const #cir.int<1> : !s32i loc(#loc31)
          %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc31)
          %28 = cir.binop(sub, %25, %27) : !u32i loc(#loc31)
          cir.yield %28 : !u32i loc(#loc31)
        }) : (!cir.bool) -> !u32i loc(#loc31)
        %12 = cir.cast(integral, %11 : !u32i), !s32i loc(#loc31)
        cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc463)
      } else {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc33)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc464)
      } loc(#loc462)
    } loc(#loc460)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc466)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc466)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc37)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc37)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc469)
          %8 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc470)
          %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc471)
          %10 = cir.const #cir.int<0> : !s32i loc(#loc45)
          %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc45)
          cir.store %11, %7 : !u64i, !cir.ptr<!u64i> loc(#loc469)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc47)
          cir.store %12, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc470)
          %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc5)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc5)
          cir.store %14, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc471)
          %15 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc49)
          %16 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
          %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc8)
          %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc8)
          %19 = cir.call @fopen(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc49)
          cir.store %19, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc472)
          cir.scope {
            %20 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc55)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc56)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc56)
            %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc474)
            cir.if %23 {
              %24 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc58)
              %25 = cir.const #cir.int<1> : !s32i loc(#loc59)
              cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc58)
            } loc(#loc475)
          } loc(#loc473)
          cir.scope {
            %20 = cir.const #cir.int<0> : !s32i loc(#loc62)
            %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc62)
            cir.store %21, %7 : !u64i, !cir.ptr<!u64i> loc(#loc477)
            cir.for : cond {
              %22 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc64)
              %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc65)
              %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc65)
              %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc478)
              cir.condition(%25) loc(#loc66)
            } body {
              cir.scope {
                cir.scope {
                  %22 = cir.const #cir.int<50> : !u64i loc(#loc481)
                  %23 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc72)
                  %24 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc13)
                  %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc13)
                  %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc13)
                  %27 = cir.const #cir.int<1> : !u64i loc(#loc482)
                  %28 = cir.const #cir.int<50> : !u64i loc(#loc483)
                  %29 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc77)
                  %30 = cir.call @fwrite(%26, %27, %28, %29) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc72)
                  %31 = cir.cmp(ne, %22, %30) : !u64i, !cir.bool loc(#loc484)
                  cir.if %31 {
                    %32 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc80)
                    %33 = cir.const #cir.int<1> : !s32i loc(#loc81)
                    cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc80)
                  } loc(#loc485)
                } loc(#loc480)
              } loc(#loc479)
              cir.yield loc(#loc61)
            } step {
              %22 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc82)
              %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc83)
              cir.store %23, %7 : !u64i, !cir.ptr<!u64i> loc(#loc486)
              cir.yield loc(#loc476)
            } loc(#loc476)
          } loc(#loc476)
          cir.scope {
            %20 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc86)
            %21 = cir.cast(ptr_to_bool, %20 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc86)
            cir.if %21 {
              %22 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc88)
              %23 = cir.call @fclose(%22) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc89)
            } loc(#loc488)
          } loc(#loc487)
        } loc(#loc468)
      } else {
        cir.scope {
          %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc490)
          %8 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc491)
          %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc492)
          %10 = cir.const #cir.int<0> : !s32i loc(#loc93)
          %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc93)
          cir.store %11, %7 : !u64i, !cir.ptr<!u64i> loc(#loc490)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc95)
          cir.store %12, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc491)
          %13 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc16)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc16)
          cir.store %14, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc492)
          cir.scope {
            %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc99)
            %16 = cir.const #cir.int<0> : !s32i loc(#loc100)
            %17 = cir.cmp(gt, %15, %16) : !s32i, !cir.bool loc(#loc494)
            %18 = cir.ternary(%17, true {
              %19 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc102)
              %20 = cir.const #cir.int<20> : !s32i loc(#loc103)
              %21 = cir.cmp(le, %19, %20) : !s32i, !cir.bool loc(#loc495)
              %22 = cir.ternary(%21, true {
                %23 = cir.const #true loc(#loc101)
                cir.yield %23 : !cir.bool loc(#loc101)
              }, false {
                %23 = cir.const #false loc(#loc101)
                cir.yield %23 : !cir.bool loc(#loc101)
              }) : (!cir.bool) -> !cir.bool loc(#loc101)
              cir.yield %22 : !cir.bool loc(#loc101)
            }, false {
              %19 = cir.const #false loc(#loc101)
              cir.yield %19 : !cir.bool loc(#loc101)
            }) : (!cir.bool) -> !cir.bool loc(#loc101)
            cir.if %18 {
              %19 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc105)
              %20 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
              %21 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc107)
              %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc107)
              %23 = cir.call @fopen(%20, %22) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc105)
              cir.store %23, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc497)
              cir.scope {
                %24 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc112)
                %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc113)
                %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc113)
                %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc499)
                cir.if %27 {
                  %28 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc115)
                  %29 = cir.const #cir.int<1> : !s32i loc(#loc116)
                  cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc115)
                } loc(#loc500)
              } loc(#loc498)
              cir.scope {
                %24 = cir.const #cir.int<0> : !s32i loc(#loc119)
                %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc119)
                cir.store %25, %7 : !u64i, !cir.ptr<!u64i> loc(#loc502)
                cir.for : cond {
                  %26 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc121)
                  %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc122)
                  %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc122)
                  %29 = cir.cmp(lt, %26, %28) : !u64i, !cir.bool loc(#loc503)
                  cir.condition(%29) loc(#loc123)
                } body {
                  cir.scope {
                    cir.scope {
                      %26 = cir.const #cir.int<50> : !u64i loc(#loc506)
                      %27 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc129)
                      %28 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc130)
                      %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc130)
                      %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc130)
                      %31 = cir.const #cir.int<1> : !u64i loc(#loc507)
                      %32 = cir.const #cir.int<50> : !u64i loc(#loc508)
                      %33 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc135)
                      %34 = cir.call @fwrite(%30, %31, %32, %33) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc129)
                      %35 = cir.cmp(ne, %26, %34) : !u64i, !cir.bool loc(#loc509)
                      cir.if %35 {
                        %36 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc137)
                        %37 = cir.const #cir.int<1> : !s32i loc(#loc138)
                        cir.call @exit(%37) : (!s32i) -> () extra(#fn_attr) loc(#loc137)
                      } loc(#loc510)
                    } loc(#loc505)
                  } loc(#loc504)
                  cir.yield loc(#loc118)
                } step {
                  %26 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc139)
                  %27 = cir.unary(inc, %26) : !u64i, !u64i loc(#loc140)
                  cir.store %27, %7 : !u64i, !cir.ptr<!u64i> loc(#loc511)
                  cir.yield loc(#loc501)
                } loc(#loc501)
              } loc(#loc501)
              cir.scope {
                %24 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc143)
                %25 = cir.cast(ptr_to_bool, %24 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc143)
                cir.if %25 {
                  %26 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc145)
                  %27 = cir.call @fclose(%26) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc146)
                } loc(#loc513)
              } loc(#loc512)
            } loc(#loc496)
          } loc(#loc493)
        } loc(#loc489)
      } loc(#loc467)
    } loc(#loc465)
    cir.return loc(#loc18)
  } loc(#loc457)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_fwrite_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc515)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc149)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc516)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc151)
    cir.return loc(#loc148)
  } loc(#loc514)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc517)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc518)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc519)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc159)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc160)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc161)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc162)
  cir.func @main(%arg0: !s32i loc(fused[#loc165, #loc166]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc167, #loc168])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc521)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc522)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc164)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc169)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc169)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc170)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc171)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc171)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc172)
    %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc159)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc159)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc173)
    %8 = cir.get_global @CWE400_Resource_Exhaustion__rand_fwrite_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc523)
    cir.call @CWE400_Resource_Exhaustion__rand_fwrite_12_good() : () -> () loc(#loc174)
    %9 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc160)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc160)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc176)
    %11 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc161)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc161)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc177)
    %13 = cir.get_global @CWE400_Resource_Exhaustion__rand_fwrite_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc524)
    cir.call @CWE400_Resource_Exhaustion__rand_fwrite_12_bad() : () -> () loc(#loc178)
    %14 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc162)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc162)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc180)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc181)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc525)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc525)
    cir.return %17 : !s32i loc(#loc525)
  } loc(#loc520)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc527)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc187)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc188)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc528)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc530)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc530)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc192)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc192)
      cir.if %6 {
        %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc197)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc197)
        %9 = cir.binop(and, %7, %8) : !s32i loc(#loc197)
        %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc197)
        %11 = cir.ternary(%10, true {
          %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc197)
          %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc197)
          %15 = cir.const #cir.int<30> : !s32i loc(#loc197)
          %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc197)
          %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc197)
          %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc197)
          %19 = cir.const #cir.int<15> : !s32i loc(#loc197)
          %20 = cir.shift(left, %18 : !u32i, %19 : !s32i) -> !u32i loc(#loc197)
          %21 = cir.binop(xor, %16, %20) : !u32i loc(#loc197)
          %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc197)
          %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc197)
          %24 = cir.binop(xor, %21, %23) : !u32i loc(#loc197)
          cir.yield %24 : !u32i loc(#loc197)
        }, false {
          %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc197)
          %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc197)
          %15 = cir.const #cir.int<30> : !s32i loc(#loc197)
          %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc197)
          %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc197)
          %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc197)
          %19 = cir.const #cir.int<15> : !s32i loc(#loc197)
          %20 = cir.shift(left, %18 : !u32i, %19 : !s32i) -> !u32i loc(#loc197)
          %21 = cir.binop(xor, %16, %20) : !u32i loc(#loc197)
          %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc197)
          %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc197)
          %24 = cir.binop(xor, %21, %23) : !u32i loc(#loc197)
          %25 = cir.unary(minus, %24) : !u32i, !u32i loc(#loc197)
          %26 = cir.const #cir.int<1> : !s32i loc(#loc197)
          %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc197)
          %28 = cir.binop(sub, %25, %27) : !u32i loc(#loc197)
          cir.yield %28 : !u32i loc(#loc197)
        }) : (!cir.bool) -> !u32i loc(#loc197)
        %12 = cir.cast(integral, %11 : !u32i), !s32i loc(#loc197)
        cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc532)
      } else {
        %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc199)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc199)
        %9 = cir.binop(and, %7, %8) : !s32i loc(#loc199)
        %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc199)
        %11 = cir.ternary(%10, true {
          %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc199)
          %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc199)
          %15 = cir.const #cir.int<30> : !s32i loc(#loc199)
          %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc199)
          %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc199)
          %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc199)
          %19 = cir.const #cir.int<15> : !s32i loc(#loc199)
          %20 = cir.shift(left, %18 : !u32i, %19 : !s32i) -> !u32i loc(#loc199)
          %21 = cir.binop(xor, %16, %20) : !u32i loc(#loc199)
          %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc199)
          %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc199)
          %24 = cir.binop(xor, %21, %23) : !u32i loc(#loc199)
          cir.yield %24 : !u32i loc(#loc199)
        }, false {
          %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc199)
          %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc199)
          %15 = cir.const #cir.int<30> : !s32i loc(#loc199)
          %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc199)
          %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc199)
          %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc199)
          %19 = cir.const #cir.int<15> : !s32i loc(#loc199)
          %20 = cir.shift(left, %18 : !u32i, %19 : !s32i) -> !u32i loc(#loc199)
          %21 = cir.binop(xor, %16, %20) : !u32i loc(#loc199)
          %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc199)
          %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc199)
          %24 = cir.binop(xor, %21, %23) : !u32i loc(#loc199)
          %25 = cir.unary(minus, %24) : !u32i, !u32i loc(#loc199)
          %26 = cir.const #cir.int<1> : !s32i loc(#loc199)
          %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc199)
          %28 = cir.binop(sub, %25, %27) : !u32i loc(#loc199)
          cir.yield %28 : !u32i loc(#loc199)
        }) : (!cir.bool) -> !u32i loc(#loc199)
        %12 = cir.cast(integral, %11 : !u32i), !s32i loc(#loc199)
        cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc533)
      } loc(#loc531)
    } loc(#loc529)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc535)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc535)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc203)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc203)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc538)
          %8 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc539)
          %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc540)
          %10 = cir.const #cir.int<0> : !s32i loc(#loc211)
          %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc211)
          cir.store %11, %7 : !u64i, !cir.ptr<!u64i> loc(#loc538)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc213)
          cir.store %12, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc539)
          %13 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc215)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc215)
          cir.store %14, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc540)
          cir.scope {
            %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc218)
            %16 = cir.const #cir.int<0> : !s32i loc(#loc219)
            %17 = cir.cmp(gt, %15, %16) : !s32i, !cir.bool loc(#loc542)
            %18 = cir.ternary(%17, true {
              %19 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc221)
              %20 = cir.const #cir.int<20> : !s32i loc(#loc222)
              %21 = cir.cmp(le, %19, %20) : !s32i, !cir.bool loc(#loc543)
              %22 = cir.ternary(%21, true {
                %23 = cir.const #true loc(#loc220)
                cir.yield %23 : !cir.bool loc(#loc220)
              }, false {
                %23 = cir.const #false loc(#loc220)
                cir.yield %23 : !cir.bool loc(#loc220)
              }) : (!cir.bool) -> !cir.bool loc(#loc220)
              cir.yield %22 : !cir.bool loc(#loc220)
            }, false {
              %19 = cir.const #false loc(#loc220)
              cir.yield %19 : !cir.bool loc(#loc220)
            }) : (!cir.bool) -> !cir.bool loc(#loc220)
            cir.if %18 {
              %19 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc224)
              %20 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc225)
              %21 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc226)
              %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc226)
              %23 = cir.call @fopen(%20, %22) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc224)
              cir.store %23, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc545)
              cir.scope {
                %24 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc231)
                %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc232)
                %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc232)
                %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc547)
                cir.if %27 {
                  %28 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc234)
                  %29 = cir.const #cir.int<1> : !s32i loc(#loc235)
                  cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc234)
                } loc(#loc548)
              } loc(#loc546)
              cir.scope {
                %24 = cir.const #cir.int<0> : !s32i loc(#loc238)
                %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc238)
                cir.store %25, %7 : !u64i, !cir.ptr<!u64i> loc(#loc550)
                cir.for : cond {
                  %26 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc240)
                  %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc241)
                  %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc241)
                  %29 = cir.cmp(lt, %26, %28) : !u64i, !cir.bool loc(#loc551)
                  cir.condition(%29) loc(#loc242)
                } body {
                  cir.scope {
                    cir.scope {
                      %26 = cir.const #cir.int<50> : !u64i loc(#loc554)
                      %27 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc248)
                      %28 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc249)
                      %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc249)
                      %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc249)
                      %31 = cir.const #cir.int<1> : !u64i loc(#loc555)
                      %32 = cir.const #cir.int<50> : !u64i loc(#loc556)
                      %33 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc254)
                      %34 = cir.call @fwrite(%30, %31, %32, %33) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc248)
                      %35 = cir.cmp(ne, %26, %34) : !u64i, !cir.bool loc(#loc557)
                      cir.if %35 {
                        %36 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc256)
                        %37 = cir.const #cir.int<1> : !s32i loc(#loc257)
                        cir.call @exit(%37) : (!s32i) -> () extra(#fn_attr) loc(#loc256)
                      } loc(#loc558)
                    } loc(#loc553)
                  } loc(#loc552)
                  cir.yield loc(#loc237)
                } step {
                  %26 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc258)
                  %27 = cir.unary(inc, %26) : !u64i, !u64i loc(#loc259)
                  cir.store %27, %7 : !u64i, !cir.ptr<!u64i> loc(#loc559)
                  cir.yield loc(#loc549)
                } loc(#loc549)
              } loc(#loc549)
              cir.scope {
                %24 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc262)
                %25 = cir.cast(ptr_to_bool, %24 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc262)
                cir.if %25 {
                  %26 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc264)
                  %27 = cir.call @fclose(%26) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc265)
                } loc(#loc561)
              } loc(#loc560)
            } loc(#loc544)
          } loc(#loc541)
        } loc(#loc537)
      } else {
        cir.scope {
          %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc563)
          %8 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc564)
          %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc565)
          %10 = cir.const #cir.int<0> : !s32i loc(#loc269)
          %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc269)
          cir.store %11, %7 : !u64i, !cir.ptr<!u64i> loc(#loc563)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc271)
          cir.store %12, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc564)
          %13 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc273)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc273)
          cir.store %14, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc565)
          cir.scope {
            %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc276)
            %16 = cir.const #cir.int<0> : !s32i loc(#loc277)
            %17 = cir.cmp(gt, %15, %16) : !s32i, !cir.bool loc(#loc567)
            %18 = cir.ternary(%17, true {
              %19 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc279)
              %20 = cir.const #cir.int<20> : !s32i loc(#loc280)
              %21 = cir.cmp(le, %19, %20) : !s32i, !cir.bool loc(#loc568)
              %22 = cir.ternary(%21, true {
                %23 = cir.const #true loc(#loc278)
                cir.yield %23 : !cir.bool loc(#loc278)
              }, false {
                %23 = cir.const #false loc(#loc278)
                cir.yield %23 : !cir.bool loc(#loc278)
              }) : (!cir.bool) -> !cir.bool loc(#loc278)
              cir.yield %22 : !cir.bool loc(#loc278)
            }, false {
              %19 = cir.const #false loc(#loc278)
              cir.yield %19 : !cir.bool loc(#loc278)
            }) : (!cir.bool) -> !cir.bool loc(#loc278)
            cir.if %18 {
              %19 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc282)
              %20 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc283)
              %21 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc284)
              %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc284)
              %23 = cir.call @fopen(%20, %22) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc282)
              cir.store %23, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc570)
              cir.scope {
                %24 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc289)
                %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc290)
                %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc290)
                %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc572)
                cir.if %27 {
                  %28 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc292)
                  %29 = cir.const #cir.int<1> : !s32i loc(#loc293)
                  cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc292)
                } loc(#loc573)
              } loc(#loc571)
              cir.scope {
                %24 = cir.const #cir.int<0> : !s32i loc(#loc296)
                %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc296)
                cir.store %25, %7 : !u64i, !cir.ptr<!u64i> loc(#loc575)
                cir.for : cond {
                  %26 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc298)
                  %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc299)
                  %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc299)
                  %29 = cir.cmp(lt, %26, %28) : !u64i, !cir.bool loc(#loc576)
                  cir.condition(%29) loc(#loc300)
                } body {
                  cir.scope {
                    cir.scope {
                      %26 = cir.const #cir.int<50> : !u64i loc(#loc579)
                      %27 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc306)
                      %28 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc307)
                      %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc307)
                      %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc307)
                      %31 = cir.const #cir.int<1> : !u64i loc(#loc580)
                      %32 = cir.const #cir.int<50> : !u64i loc(#loc581)
                      %33 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc312)
                      %34 = cir.call @fwrite(%30, %31, %32, %33) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc306)
                      %35 = cir.cmp(ne, %26, %34) : !u64i, !cir.bool loc(#loc582)
                      cir.if %35 {
                        %36 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc314)
                        %37 = cir.const #cir.int<1> : !s32i loc(#loc315)
                        cir.call @exit(%37) : (!s32i) -> () extra(#fn_attr) loc(#loc314)
                      } loc(#loc583)
                    } loc(#loc578)
                  } loc(#loc577)
                  cir.yield loc(#loc295)
                } step {
                  %26 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc316)
                  %27 = cir.unary(inc, %26) : !u64i, !u64i loc(#loc317)
                  cir.store %27, %7 : !u64i, !cir.ptr<!u64i> loc(#loc584)
                  cir.yield loc(#loc574)
                } loc(#loc574)
              } loc(#loc574)
              cir.scope {
                %24 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc320)
                %25 = cir.cast(ptr_to_bool, %24 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc320)
                cir.if %25 {
                  %26 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc322)
                  %27 = cir.call @fclose(%26) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc323)
                } loc(#loc586)
              } loc(#loc585)
            } loc(#loc569)
          } loc(#loc566)
        } loc(#loc562)
      } loc(#loc536)
    } loc(#loc534)
    cir.return loc(#loc184)
  } loc(#loc526)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc588)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc328)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc329)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc589)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc591)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc591)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc333)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc333)
      cir.if %6 {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc338)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc593)
      } else {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc340)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc594)
      } loc(#loc592)
    } loc(#loc590)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc596)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc596)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc344)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc344)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc599)
          %8 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc600)
          %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc601)
          %10 = cir.const #cir.int<0> : !s32i loc(#loc352)
          %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc352)
          cir.store %11, %7 : !u64i, !cir.ptr<!u64i> loc(#loc599)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc354)
          cir.store %12, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc600)
          %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc356)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc356)
          cir.store %14, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc601)
          %15 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc357)
          %16 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc358)
          %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc359)
          %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc359)
          %19 = cir.call @fopen(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc357)
          cir.store %19, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc602)
          cir.scope {
            %20 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc364)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc365)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc365)
            %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc604)
            cir.if %23 {
              %24 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc367)
              %25 = cir.const #cir.int<1> : !s32i loc(#loc368)
              cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc367)
            } loc(#loc605)
          } loc(#loc603)
          cir.scope {
            %20 = cir.const #cir.int<0> : !s32i loc(#loc371)
            %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc371)
            cir.store %21, %7 : !u64i, !cir.ptr<!u64i> loc(#loc607)
            cir.for : cond {
              %22 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc373)
              %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc374)
              %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc374)
              %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc608)
              cir.condition(%25) loc(#loc375)
            } body {
              cir.scope {
                cir.scope {
                  %22 = cir.const #cir.int<50> : !u64i loc(#loc611)
                  %23 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc381)
                  %24 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc382)
                  %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc382)
                  %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc382)
                  %27 = cir.const #cir.int<1> : !u64i loc(#loc612)
                  %28 = cir.const #cir.int<50> : !u64i loc(#loc613)
                  %29 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc387)
                  %30 = cir.call @fwrite(%26, %27, %28, %29) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc381)
                  %31 = cir.cmp(ne, %22, %30) : !u64i, !cir.bool loc(#loc614)
                  cir.if %31 {
                    %32 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc390)
                    %33 = cir.const #cir.int<1> : !s32i loc(#loc391)
                    cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc390)
                  } loc(#loc615)
                } loc(#loc610)
              } loc(#loc609)
              cir.yield loc(#loc370)
            } step {
              %22 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc392)
              %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc393)
              cir.store %23, %7 : !u64i, !cir.ptr<!u64i> loc(#loc616)
              cir.yield loc(#loc606)
            } loc(#loc606)
          } loc(#loc606)
          cir.scope {
            %20 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc396)
            %21 = cir.cast(ptr_to_bool, %20 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc396)
            cir.if %21 {
              %22 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc398)
              %23 = cir.call @fclose(%22) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc399)
            } loc(#loc618)
          } loc(#loc617)
        } loc(#loc598)
      } else {
        cir.scope {
          %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc620)
          %8 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc621)
          %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc622)
          %10 = cir.const #cir.int<0> : !s32i loc(#loc403)
          %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc403)
          cir.store %11, %7 : !u64i, !cir.ptr<!u64i> loc(#loc620)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc405)
          cir.store %12, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc621)
          %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc407)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc407)
          cir.store %14, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc622)
          %15 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc408)
          %16 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc409)
          %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc410)
          %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc410)
          %19 = cir.call @fopen(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc408)
          cir.store %19, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc623)
          cir.scope {
            %20 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc415)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc416)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc416)
            %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc625)
            cir.if %23 {
              %24 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc418)
              %25 = cir.const #cir.int<1> : !s32i loc(#loc419)
              cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc418)
            } loc(#loc626)
          } loc(#loc624)
          cir.scope {
            %20 = cir.const #cir.int<0> : !s32i loc(#loc422)
            %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc422)
            cir.store %21, %7 : !u64i, !cir.ptr<!u64i> loc(#loc628)
            cir.for : cond {
              %22 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc424)
              %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc425)
              %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc425)
              %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc629)
              cir.condition(%25) loc(#loc426)
            } body {
              cir.scope {
                cir.scope {
                  %22 = cir.const #cir.int<50> : !u64i loc(#loc632)
                  %23 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc432)
                  %24 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc433)
                  %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc433)
                  %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc433)
                  %27 = cir.const #cir.int<1> : !u64i loc(#loc633)
                  %28 = cir.const #cir.int<50> : !u64i loc(#loc634)
                  %29 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc438)
                  %30 = cir.call @fwrite(%26, %27, %28, %29) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc432)
                  %31 = cir.cmp(ne, %22, %30) : !u64i, !cir.bool loc(#loc635)
                  cir.if %31 {
                    %32 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc441)
                    %33 = cir.const #cir.int<1> : !s32i loc(#loc442)
                    cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc441)
                  } loc(#loc636)
                } loc(#loc631)
              } loc(#loc630)
              cir.yield loc(#loc421)
            } step {
              %22 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc443)
              %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc444)
              cir.store %23, %7 : !u64i, !cir.ptr<!u64i> loc(#loc637)
              cir.yield loc(#loc627)
            } loc(#loc627)
          } loc(#loc627)
          cir.scope {
            %20 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc447)
            %21 = cir.cast(ptr_to_bool, %20 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc447)
            cir.if %21 {
              %22 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc449)
              %23 = cir.call @fclose(%22) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc450)
            } loc(#loc639)
          } loc(#loc638)
        } loc(#loc619)
      } loc(#loc597)
    } loc(#loc595)
    cir.return loc(#loc325)
  } loc(#loc587)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_fwrite_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdlib.h":573:1)
#loc4 = loc("/usr/include/stdlib.h":573:24)
#loc5 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":44:36)
#loc6 = loc("/usr/include/stdio.h":264:1)
#loc7 = loc("/usr/include/stdio.h":266:3)
#loc8 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":45:37)
#loc9 = loc("/usr/include/stdlib.h":756:1)
#loc10 = loc("/usr/include/stdlib.h":756:70)
#loc11 = loc("/usr/include/stdio.h":735:1)
#loc12 = loc("/usr/include/stdio.h":736:43)
#loc13 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":54:48)
#loc14 = loc("/usr/include/stdio.h":184:1)
#loc15 = loc("/usr/include/stdio.h":184:36)
#loc16 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":70:36)
#loc17 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":24:1)
#loc18 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":90:1)
#loc19 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":26:5)
#loc20 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":26:9)
#loc21 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":28:14)
#loc22 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":28:13)
#loc23 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":28:5)
#loc24 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":29:5)
#loc25 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":38:5)
#loc26 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":29:8)
#loc27 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":29:33)
#loc28 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":30:5)
#loc29 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":33:5)
#loc30 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":35:5)
#loc31 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":32:17)
#loc32 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":32:9)
#loc33 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":37:17)
#loc34 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":37:9)
#loc35 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":39:5)
#loc36 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":89:5)
#loc37 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":39:8)
#loc38 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":39:33)
#loc39 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":40:5)
#loc40 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":64:5)
#loc41 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":66:5)
#loc42 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":41:9)
#loc43 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":63:9)
#loc44 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":42:13)
#loc45 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":42:24)
#loc46 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":43:13)
#loc47 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":43:27)
#loc48 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":44:13)
#loc49 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":45:21)
#loc50 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":45:27)
#loc51 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":45:13)
#loc52 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":45:41)
#loc53 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":46:13)
#loc54 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":49:13)
#loc55 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":46:17)
#loc56 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":46:26)
#loc57 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":47:13)
#loc58 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":48:17)
#loc59 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":48:22)
#loc60 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":52:13)
#loc61 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":58:13)
#loc62 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":52:22)
#loc63 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":52:18)
#loc64 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":52:25)
#loc65 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":52:37)
#loc66 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":52:27)
#loc67 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":53:13)
#loc68 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":54:17)
#loc69 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":57:17)
#loc70 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":54:21)
#loc71 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":54:36)
#loc72 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":54:41)
#loc73 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":54:58)
#loc74 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":54:69)
#loc75 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":54:72)
#loc76 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":54:87)
#loc77 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":54:90)
#loc78 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":54:95)
#loc79 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":55:17)
#loc80 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":56:21)
#loc81 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":56:26)
#loc82 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":52:45)
#loc83 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":52:44)
#loc84 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":59:13)
#loc85 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":62:13)
#loc86 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":59:17)
#loc87 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":60:13)
#loc88 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":61:24)
#loc89 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":61:17)
#loc90 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":67:9)
#loc91 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":88:9)
#loc92 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":68:13)
#loc93 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":68:24)
#loc94 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":69:13)
#loc95 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":69:27)
#loc96 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":70:13)
#loc97 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":72:13)
#loc98 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":87:13)
#loc99 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":72:17)
#loc100 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":72:25)
#loc101 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":72:27)
#loc102 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":72:30)
#loc103 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":72:39)
#loc104 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":73:13)
#loc105 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":74:25)
#loc106 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":74:31)
#loc107 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":74:41)
#loc108 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":74:17)
#loc109 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":74:45)
#loc110 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":75:17)
#loc111 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":78:17)
#loc112 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":75:21)
#loc113 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":75:30)
#loc114 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":76:17)
#loc115 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":77:21)
#loc116 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":77:26)
#loc117 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":79:17)
#loc118 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":82:17)
#loc119 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":79:26)
#loc120 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":79:22)
#loc121 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":79:29)
#loc122 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":79:41)
#loc123 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":79:31)
#loc124 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":80:17)
#loc125 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":81:21)
#loc126 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":81:108)
#loc127 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":81:25)
#loc128 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":81:40)
#loc129 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":81:45)
#loc130 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":81:52)
#loc131 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":81:62)
#loc132 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":81:73)
#loc133 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":81:76)
#loc134 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":81:91)
#loc135 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":81:94)
#loc136 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":81:99)
#loc137 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":81:102)
#loc138 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":81:107)
#loc139 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":79:49)
#loc140 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":79:48)
#loc141 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":83:17)
#loc142 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":86:17)
#loc143 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":83:21)
#loc144 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":84:17)
#loc145 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":85:28)
#loc146 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":85:21)
#loc147 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":238:1)
#loc148 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":242:1)
#loc149 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":240:5)
#loc150 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":240:13)
#loc151 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":241:5)
#loc152 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":241:13)
#loc153 = loc("/usr/include/stdlib.h":575:1)
#loc154 = loc("/usr/include/stdlib.h":575:41)
#loc155 = loc("/usr/include/time.h":76:1)
#loc156 = loc("/usr/include/time.h":76:38)
#loc157 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc158 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc159 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":258:15)
#loc160 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":260:15)
#loc161 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":263:15)
#loc162 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":265:15)
#loc163 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":253:1)
#loc164 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":268:1)
#loc169 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":254:1)
#loc170 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":256:27)
#loc171 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":256:22)
#loc172 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":256:5)
#loc173 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":258:5)
#loc174 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":259:5)
#loc175 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":259:53)
#loc176 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":260:5)
#loc177 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":263:5)
#loc178 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":264:5)
#loc179 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":264:52)
#loc180 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":265:5)
#loc181 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":267:12)
#loc182 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":267:5)
#loc183 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":99:1)
#loc184 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":164:1)
#loc185 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":101:5)
#loc186 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":101:9)
#loc187 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":103:14)
#loc188 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":103:13)
#loc189 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":103:5)
#loc190 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":104:5)
#loc191 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":113:5)
#loc192 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":104:8)
#loc193 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":104:33)
#loc194 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":105:5)
#loc195 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":108:5)
#loc196 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":110:5)
#loc197 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":107:17)
#loc198 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":107:9)
#loc199 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":112:17)
#loc200 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":112:9)
#loc201 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":114:5)
#loc202 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":163:5)
#loc203 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":114:8)
#loc204 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":114:33)
#loc205 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":115:5)
#loc206 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":138:5)
#loc207 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":140:5)
#loc208 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":116:9)
#loc209 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":137:9)
#loc210 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":117:13)
#loc211 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":117:24)
#loc212 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":118:13)
#loc213 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":118:27)
#loc214 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":119:13)
#loc215 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":119:36)
#loc216 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":121:13)
#loc217 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":136:13)
#loc218 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":121:17)
#loc219 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":121:25)
#loc220 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":121:27)
#loc221 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":121:30)
#loc222 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":121:39)
#loc223 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":122:13)
#loc224 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":123:25)
#loc225 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":123:31)
#loc226 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":123:41)
#loc227 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":123:17)
#loc228 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":123:45)
#loc229 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":124:17)
#loc230 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":127:17)
#loc231 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":124:21)
#loc232 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":124:30)
#loc233 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":125:17)
#loc234 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":126:21)
#loc235 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":126:26)
#loc236 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":128:17)
#loc237 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":131:17)
#loc238 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":128:26)
#loc239 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":128:22)
#loc240 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":128:29)
#loc241 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":128:41)
#loc242 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":128:31)
#loc243 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":129:17)
#loc244 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":130:21)
#loc245 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":130:108)
#loc246 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":130:25)
#loc247 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":130:40)
#loc248 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":130:45)
#loc249 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":130:52)
#loc250 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":130:62)
#loc251 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":130:73)
#loc252 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":130:76)
#loc253 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":130:91)
#loc254 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":130:94)
#loc255 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":130:99)
#loc256 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":130:102)
#loc257 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":130:107)
#loc258 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":128:49)
#loc259 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":128:48)
#loc260 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":132:17)
#loc261 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":135:17)
#loc262 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":132:21)
#loc263 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":133:17)
#loc264 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":134:28)
#loc265 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":134:21)
#loc266 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":141:9)
#loc267 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":162:9)
#loc268 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":142:13)
#loc269 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":142:24)
#loc270 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":143:13)
#loc271 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":143:27)
#loc272 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":144:13)
#loc273 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":144:36)
#loc274 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":146:13)
#loc275 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":161:13)
#loc276 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":146:17)
#loc277 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":146:25)
#loc278 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":146:27)
#loc279 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":146:30)
#loc280 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":146:39)
#loc281 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":147:13)
#loc282 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":148:25)
#loc283 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":148:31)
#loc284 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":148:41)
#loc285 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":148:17)
#loc286 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":148:45)
#loc287 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":149:17)
#loc288 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":152:17)
#loc289 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":149:21)
#loc290 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":149:30)
#loc291 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":150:17)
#loc292 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":151:21)
#loc293 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":151:26)
#loc294 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":153:17)
#loc295 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":156:17)
#loc296 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":153:26)
#loc297 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":153:22)
#loc298 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":153:29)
#loc299 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":153:41)
#loc300 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":153:31)
#loc301 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":154:17)
#loc302 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":155:21)
#loc303 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":155:108)
#loc304 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":155:25)
#loc305 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":155:40)
#loc306 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":155:45)
#loc307 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":155:52)
#loc308 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":155:62)
#loc309 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":155:73)
#loc310 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":155:76)
#loc311 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":155:91)
#loc312 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":155:94)
#loc313 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":155:99)
#loc314 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":155:102)
#loc315 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":155:107)
#loc316 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":153:49)
#loc317 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":153:48)
#loc318 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":157:17)
#loc319 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":160:17)
#loc320 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":157:21)
#loc321 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":158:17)
#loc322 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":159:28)
#loc323 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":159:21)
#loc324 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":169:1)
#loc325 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":236:1)
#loc326 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":171:5)
#loc327 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":171:9)
#loc328 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":173:14)
#loc329 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":173:13)
#loc330 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":173:5)
#loc331 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":174:5)
#loc332 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":183:5)
#loc333 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":174:8)
#loc334 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":174:33)
#loc335 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":175:5)
#loc336 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":178:5)
#loc337 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":180:5)
#loc338 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":177:17)
#loc339 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":177:9)
#loc340 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":182:17)
#loc341 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":182:9)
#loc342 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":184:5)
#loc343 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":235:5)
#loc344 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":184:8)
#loc345 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":184:33)
#loc346 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":185:5)
#loc347 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":209:5)
#loc348 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":211:5)
#loc349 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":186:9)
#loc350 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":208:9)
#loc351 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":187:13)
#loc352 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":187:24)
#loc353 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":188:13)
#loc354 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":188:27)
#loc355 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":189:13)
#loc356 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":189:36)
#loc357 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":190:21)
#loc358 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":190:27)
#loc359 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":190:37)
#loc360 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":190:13)
#loc361 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":190:41)
#loc362 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":191:13)
#loc363 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":194:13)
#loc364 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":191:17)
#loc365 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":191:26)
#loc366 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":192:13)
#loc367 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":193:17)
#loc368 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":193:22)
#loc369 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":197:13)
#loc370 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":203:13)
#loc371 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":197:22)
#loc372 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":197:18)
#loc373 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":197:25)
#loc374 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":197:37)
#loc375 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":197:27)
#loc376 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":198:13)
#loc377 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":199:17)
#loc378 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":202:17)
#loc379 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":199:21)
#loc380 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":199:36)
#loc381 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":199:41)
#loc382 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":199:48)
#loc383 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":199:58)
#loc384 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":199:69)
#loc385 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":199:72)
#loc386 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":199:87)
#loc387 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":199:90)
#loc388 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":199:95)
#loc389 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":200:17)
#loc390 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":201:21)
#loc391 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":201:26)
#loc392 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":197:45)
#loc393 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":197:44)
#loc394 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":204:13)
#loc395 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":207:13)
#loc396 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":204:17)
#loc397 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":205:13)
#loc398 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":206:24)
#loc399 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":206:17)
#loc400 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":212:9)
#loc401 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":234:9)
#loc402 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":213:13)
#loc403 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":213:24)
#loc404 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":214:13)
#loc405 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":214:27)
#loc406 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":215:13)
#loc407 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":215:36)
#loc408 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":216:21)
#loc409 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":216:27)
#loc410 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":216:37)
#loc411 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":216:13)
#loc412 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":216:41)
#loc413 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":217:13)
#loc414 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":220:13)
#loc415 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":217:17)
#loc416 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":217:26)
#loc417 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":218:13)
#loc418 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":219:17)
#loc419 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":219:22)
#loc420 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":223:13)
#loc421 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":229:13)
#loc422 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":223:22)
#loc423 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":223:18)
#loc424 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":223:25)
#loc425 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":223:37)
#loc426 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":223:27)
#loc427 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":224:13)
#loc428 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":225:17)
#loc429 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":228:17)
#loc430 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":225:21)
#loc431 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":225:36)
#loc432 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":225:41)
#loc433 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":225:48)
#loc434 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":225:58)
#loc435 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":225:69)
#loc436 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":225:72)
#loc437 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":225:87)
#loc438 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":225:90)
#loc439 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":225:95)
#loc440 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":226:17)
#loc441 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":227:21)
#loc442 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":227:26)
#loc443 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":223:45)
#loc444 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":223:44)
#loc445 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":230:13)
#loc446 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":233:13)
#loc447 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":230:17)
#loc448 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":231:13)
#loc449 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":232:24)
#loc450 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":232:17)
#loc451 = loc(fused[#loc1, #loc2])
#loc452 = loc(fused[#loc3, #loc4])
#loc453 = loc(fused[#loc6, #loc7])
#loc454 = loc(fused[#loc9, #loc10])
#loc455 = loc(fused[#loc11, #loc12])
#loc456 = loc(fused[#loc14, #loc15])
#loc457 = loc(fused[#loc17, #loc18])
#loc458 = loc(fused[#loc19, #loc20])
#loc459 = loc(fused[#loc23, #loc21])
#loc460 = loc(fused[#loc24, #loc25])
#loc461 = loc(fused[#loc26, #loc27])
#loc462 = loc(fused[#loc28, #loc29, #loc30, #loc25])
#loc463 = loc(fused[#loc32, #loc31])
#loc464 = loc(fused[#loc34, #loc33])
#loc465 = loc(fused[#loc35, #loc36])
#loc466 = loc(fused[#loc37, #loc38])
#loc467 = loc(fused[#loc39, #loc40, #loc41, #loc36])
#loc468 = loc(fused[#loc42, #loc43])
#loc469 = loc(fused[#loc44, #loc45])
#loc470 = loc(fused[#loc46, #loc47])
#loc471 = loc(fused[#loc48, #loc5])
#loc472 = loc(fused[#loc51, #loc52])
#loc473 = loc(fused[#loc53, #loc54])
#loc474 = loc(fused[#loc55, #loc56])
#loc475 = loc(fused[#loc57, #loc54])
#loc476 = loc(fused[#loc60, #loc61])
#loc477 = loc(fused[#loc63, #loc62])
#loc478 = loc(fused[#loc64, #loc65])
#loc479 = loc(fused[#loc67, #loc61])
#loc480 = loc(fused[#loc68, #loc69])
#loc481 = loc(fused[#loc70, #loc71])
#loc482 = loc(fused[#loc73, #loc74])
#loc483 = loc(fused[#loc75, #loc76])
#loc484 = loc(fused[#loc70, #loc78])
#loc485 = loc(fused[#loc79, #loc69])
#loc486 = loc(fused[#loc83, #loc82])
#loc487 = loc(fused[#loc84, #loc85])
#loc488 = loc(fused[#loc87, #loc85])
#loc489 = loc(fused[#loc90, #loc91])
#loc490 = loc(fused[#loc92, #loc93])
#loc491 = loc(fused[#loc94, #loc95])
#loc492 = loc(fused[#loc96, #loc16])
#loc493 = loc(fused[#loc97, #loc98])
#loc494 = loc(fused[#loc99, #loc100])
#loc495 = loc(fused[#loc102, #loc103])
#loc496 = loc(fused[#loc104, #loc98])
#loc497 = loc(fused[#loc108, #loc109])
#loc498 = loc(fused[#loc110, #loc111])
#loc499 = loc(fused[#loc112, #loc113])
#loc500 = loc(fused[#loc114, #loc111])
#loc501 = loc(fused[#loc117, #loc118])
#loc502 = loc(fused[#loc120, #loc119])
#loc503 = loc(fused[#loc121, #loc122])
#loc504 = loc(fused[#loc124, #loc118])
#loc505 = loc(fused[#loc125, #loc126])
#loc506 = loc(fused[#loc127, #loc128])
#loc507 = loc(fused[#loc131, #loc132])
#loc508 = loc(fused[#loc133, #loc134])
#loc509 = loc(fused[#loc127, #loc136])
#loc510 = loc(fused[#loc137, #loc126])
#loc511 = loc(fused[#loc140, #loc139])
#loc512 = loc(fused[#loc141, #loc142])
#loc513 = loc(fused[#loc144, #loc142])
#loc514 = loc(fused[#loc147, #loc148])
#loc515 = loc(fused[#loc149, #loc150])
#loc516 = loc(fused[#loc151, #loc152])
#loc517 = loc(fused[#loc153, #loc154])
#loc518 = loc(fused[#loc155, #loc156])
#loc519 = loc(fused[#loc157, #loc158])
#loc520 = loc(fused[#loc163, #loc164])
#loc523 = loc(fused[#loc174, #loc175])
#loc524 = loc(fused[#loc178, #loc179])
#loc525 = loc(fused[#loc182, #loc181])
#loc526 = loc(fused[#loc183, #loc184])
#loc527 = loc(fused[#loc185, #loc186])
#loc528 = loc(fused[#loc189, #loc187])
#loc529 = loc(fused[#loc190, #loc191])
#loc530 = loc(fused[#loc192, #loc193])
#loc531 = loc(fused[#loc194, #loc195, #loc196, #loc191])
#loc532 = loc(fused[#loc198, #loc197])
#loc533 = loc(fused[#loc200, #loc199])
#loc534 = loc(fused[#loc201, #loc202])
#loc535 = loc(fused[#loc203, #loc204])
#loc536 = loc(fused[#loc205, #loc206, #loc207, #loc202])
#loc537 = loc(fused[#loc208, #loc209])
#loc538 = loc(fused[#loc210, #loc211])
#loc539 = loc(fused[#loc212, #loc213])
#loc540 = loc(fused[#loc214, #loc215])
#loc541 = loc(fused[#loc216, #loc217])
#loc542 = loc(fused[#loc218, #loc219])
#loc543 = loc(fused[#loc221, #loc222])
#loc544 = loc(fused[#loc223, #loc217])
#loc545 = loc(fused[#loc227, #loc228])
#loc546 = loc(fused[#loc229, #loc230])
#loc547 = loc(fused[#loc231, #loc232])
#loc548 = loc(fused[#loc233, #loc230])
#loc549 = loc(fused[#loc236, #loc237])
#loc550 = loc(fused[#loc239, #loc238])
#loc551 = loc(fused[#loc240, #loc241])
#loc552 = loc(fused[#loc243, #loc237])
#loc553 = loc(fused[#loc244, #loc245])
#loc554 = loc(fused[#loc246, #loc247])
#loc555 = loc(fused[#loc250, #loc251])
#loc556 = loc(fused[#loc252, #loc253])
#loc557 = loc(fused[#loc246, #loc255])
#loc558 = loc(fused[#loc256, #loc245])
#loc559 = loc(fused[#loc259, #loc258])
#loc560 = loc(fused[#loc260, #loc261])
#loc561 = loc(fused[#loc263, #loc261])
#loc562 = loc(fused[#loc266, #loc267])
#loc563 = loc(fused[#loc268, #loc269])
#loc564 = loc(fused[#loc270, #loc271])
#loc565 = loc(fused[#loc272, #loc273])
#loc566 = loc(fused[#loc274, #loc275])
#loc567 = loc(fused[#loc276, #loc277])
#loc568 = loc(fused[#loc279, #loc280])
#loc569 = loc(fused[#loc281, #loc275])
#loc570 = loc(fused[#loc285, #loc286])
#loc571 = loc(fused[#loc287, #loc288])
#loc572 = loc(fused[#loc289, #loc290])
#loc573 = loc(fused[#loc291, #loc288])
#loc574 = loc(fused[#loc294, #loc295])
#loc575 = loc(fused[#loc297, #loc296])
#loc576 = loc(fused[#loc298, #loc299])
#loc577 = loc(fused[#loc301, #loc295])
#loc578 = loc(fused[#loc302, #loc303])
#loc579 = loc(fused[#loc304, #loc305])
#loc580 = loc(fused[#loc308, #loc309])
#loc581 = loc(fused[#loc310, #loc311])
#loc582 = loc(fused[#loc304, #loc313])
#loc583 = loc(fused[#loc314, #loc303])
#loc584 = loc(fused[#loc317, #loc316])
#loc585 = loc(fused[#loc318, #loc319])
#loc586 = loc(fused[#loc321, #loc319])
#loc587 = loc(fused[#loc324, #loc325])
#loc588 = loc(fused[#loc326, #loc327])
#loc589 = loc(fused[#loc330, #loc328])
#loc590 = loc(fused[#loc331, #loc332])
#loc591 = loc(fused[#loc333, #loc334])
#loc592 = loc(fused[#loc335, #loc336, #loc337, #loc332])
#loc593 = loc(fused[#loc339, #loc338])
#loc594 = loc(fused[#loc341, #loc340])
#loc595 = loc(fused[#loc342, #loc343])
#loc596 = loc(fused[#loc344, #loc345])
#loc597 = loc(fused[#loc346, #loc347, #loc348, #loc343])
#loc598 = loc(fused[#loc349, #loc350])
#loc599 = loc(fused[#loc351, #loc352])
#loc600 = loc(fused[#loc353, #loc354])
#loc601 = loc(fused[#loc355, #loc356])
#loc602 = loc(fused[#loc360, #loc361])
#loc603 = loc(fused[#loc362, #loc363])
#loc604 = loc(fused[#loc364, #loc365])
#loc605 = loc(fused[#loc366, #loc363])
#loc606 = loc(fused[#loc369, #loc370])
#loc607 = loc(fused[#loc372, #loc371])
#loc608 = loc(fused[#loc373, #loc374])
#loc609 = loc(fused[#loc376, #loc370])
#loc610 = loc(fused[#loc377, #loc378])
#loc611 = loc(fused[#loc379, #loc380])
#loc612 = loc(fused[#loc383, #loc384])
#loc613 = loc(fused[#loc385, #loc386])
#loc614 = loc(fused[#loc379, #loc388])
#loc615 = loc(fused[#loc389, #loc378])
#loc616 = loc(fused[#loc393, #loc392])
#loc617 = loc(fused[#loc394, #loc395])
#loc618 = loc(fused[#loc397, #loc395])
#loc619 = loc(fused[#loc400, #loc401])
#loc620 = loc(fused[#loc402, #loc403])
#loc621 = loc(fused[#loc404, #loc405])
#loc622 = loc(fused[#loc406, #loc407])
#loc623 = loc(fused[#loc411, #loc412])
#loc624 = loc(fused[#loc413, #loc414])
#loc625 = loc(fused[#loc415, #loc416])
#loc626 = loc(fused[#loc417, #loc414])
#loc627 = loc(fused[#loc420, #loc421])
#loc628 = loc(fused[#loc423, #loc422])
#loc629 = loc(fused[#loc424, #loc425])
#loc630 = loc(fused[#loc427, #loc421])
#loc631 = loc(fused[#loc428, #loc429])
#loc632 = loc(fused[#loc430, #loc431])
#loc633 = loc(fused[#loc434, #loc435])
#loc634 = loc(fused[#loc436, #loc437])
#loc635 = loc(fused[#loc430, #loc439])
#loc636 = loc(fused[#loc440, #loc429])
#loc637 = loc(fused[#loc444, #loc443])
#loc638 = loc(fused[#loc445, #loc446])
#loc639 = loc(fused[#loc448, #loc446])
