!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":112:10)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":112:14)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":112:20)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":112:32)
#loc202 = loc(fused[#loc75, #loc76])
#loc203 = loc(fused[#loc77, #loc78])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global external dsolocal @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22_badGlobal = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc173)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc174)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc175)
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22_badSource(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc176)
  cir.func private @snprintf(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc177)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc178)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc13)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc179)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc180)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc182)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc183)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc24)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc25)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc25)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc184)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc185)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc24)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc186)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc187)
    cir.br ^bb1 loc(#loc188)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc33)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc33)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc189)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc190)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc35)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc37)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc35)
    cir.br ^bb3 loc(#loc31)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc31)
  ^bb4:  // pred: ^bb3
    %16 = cir.const #cir.int<1> : !s32i loc(#loc38)
    %17 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22_badGlobal : !cir.ptr<!s32i> loc(#loc173)
    cir.store %16, %17 : !s32i, !cir.ptr<!s32i> loc(#loc191)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
    %19 = cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22_badSource(%18) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc41)
    cir.store %19, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc192)
    cir.br ^bb5 loc(#loc193)
  ^bb5:  // pred: ^bb4
    %20 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc182)
    cir.store %20, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc182)
    %21 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc46)
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc47)
    %23 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc48)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
    %25 = cir.call @strlen(%24) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc48)
    %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc13)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc13)
    %28 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
    %29 = cir.call @snprintf(%22, %25, %27, %28) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc46)
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    %31 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc53)
    %32 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc54)
    cir.call @free(%33) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc53)
    cir.br ^bb6 loc(#loc45)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc19)
  } loc(#loc181)
  cir.global external dsolocal @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22_goodG2B1Global = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc194)
  cir.global external dsolocal @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22_goodG2B2Global = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc195)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc197)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc61)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc198)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc63)
    cir.return loc(#loc60)
  } loc(#loc196)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc199)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc200)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc69)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc70)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc71)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc72)
  cir.func @main(%arg0: !s32i loc(fused[#loc75, #loc76]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc77, #loc78])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc202)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc203)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc74)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc79)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc79)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc80)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc81)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc81)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc82)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc69)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22_good : !cir.ptr<!cir.func<!void ()>> loc(#loc204)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22_good() : () -> () loc(#loc84)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc70)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc71)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc205)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22_bad() : () -> () loc(#loc88)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc72)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc72)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc91)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc206)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc206)
    cir.return %17 : !s32i loc(#loc206)
  } loc(#loc201)
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22_goodG2B1Source(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc207)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc209)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc210)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc101)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc102)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc102)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc211)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc212)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc101)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc213)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc214)
    cir.br ^bb1 loc(#loc215)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc110)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc110)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc216)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc217)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc112)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc113)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc114)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc112)
    cir.br ^bb3 loc(#loc108)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc108)
  ^bb4:  // pred: ^bb3
    %16 = cir.const #cir.int<0> : !s32i loc(#loc115)
    %17 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22_goodG2B1Global : !cir.ptr<!s32i> loc(#loc194)
    cir.store %16, %17 : !s32i, !cir.ptr<!s32i> loc(#loc218)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
    %19 = cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22_goodG2B1Source(%18) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc118)
    cir.store %19, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc219)
    cir.br ^bb5 loc(#loc220)
  ^bb5:  // pred: ^bb4
    %20 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc209)
    cir.store %20, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc209)
    %21 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc123)
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc124)
    %23 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc125)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
    %25 = cir.call @strlen(%24) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc125)
    %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc127)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc127)
    %28 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
    %29 = cir.call @snprintf(%22, %25, %27, %28) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc123)
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
    cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc130)
    %31 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc131)
    %32 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc132)
    cir.call @free(%33) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc131)
    cir.br ^bb6 loc(#loc122)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc96)
  } loc(#loc208)
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22_goodG2B2Source(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc221)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc223)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc224)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc141)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc142)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc142)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc225)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc226)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc141)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc227)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc228)
    cir.br ^bb1 loc(#loc229)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc149)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc150)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc150)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc230)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc231)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc152)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc153)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc154)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc152)
    cir.br ^bb3 loc(#loc148)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc148)
  ^bb4:  // pred: ^bb3
    %16 = cir.const #cir.int<1> : !s32i loc(#loc155)
    %17 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22_goodG2B2Global : !cir.ptr<!s32i> loc(#loc195)
    cir.store %16, %17 : !s32i, !cir.ptr<!s32i> loc(#loc232)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
    %19 = cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22_goodG2B2Source(%18) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc158)
    cir.store %19, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc233)
    cir.br ^bb5 loc(#loc234)
  ^bb5:  // pred: ^bb4
    %20 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc223)
    cir.store %20, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc223)
    %21 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc163)
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc164)
    %23 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc165)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc166)
    %25 = cir.call @strlen(%24) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc165)
    %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc167)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc167)
    %28 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc168)
    %29 = cir.call @snprintf(%22, %25, %27, %28) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc163)
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
    cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc170)
    %31 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc171)
    %32 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc172)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc172)
    cir.call @free(%33) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc171)
    cir.br ^bb6 loc(#loc162)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc136)
  } loc(#loc222)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":30:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":30:78)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":32:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":32:90)
#loc9 = loc("/usr/include/stdio.h":385:1)
#loc10 = loc("/usr/include/stdio.h":387:62)
#loc11 = loc("/usr/include/string.h":407:1)
#loc12 = loc("/usr/include/string.h":408:33)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":44:38)
#loc14 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc16 = loc("/usr/include/stdlib.h":687:1)
#loc17 = loc("/usr/include/stdlib.h":687:32)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":34:1)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":48:1)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":42:9)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":42:25)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":36:5)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":36:12)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":37:20)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":37:27)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":37:31)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":37:42)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":37:43)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":37:5)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":38:5)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":38:33)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":38:9)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":38:17)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":38:23)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":38:24)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":38:30)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":38:29)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":39:78)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":39:5)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":40:83)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":40:12)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":40:5)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":40:87)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":41:5)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":47:5)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":44:9)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":44:18)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":44:24)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":44:31)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":44:44)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":45:19)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":45:9)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":46:9)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":46:14)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":55:1)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":55:83)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":56:1)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":56:83)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":96:1)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":100:1)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":98:5)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":98:14)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":99:5)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":99:14)
#loc65 = loc("/usr/include/stdlib.h":575:1)
#loc66 = loc("/usr/include/stdlib.h":575:41)
#loc67 = loc("/usr/include/time.h":76:1)
#loc68 = loc("/usr/include/time.h":76:38)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":117:15)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":119:15)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":122:15)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":124:15)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":112:1)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":127:1)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":113:1)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":115:27)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":115:22)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":115:5)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":117:5)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":118:5)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":118:71)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":119:5)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":122:5)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":123:5)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":123:70)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":124:5)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":126:12)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":126:5)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":59:1)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":59:95)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":61:1)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":75:1)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":69:9)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":69:25)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":63:5)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":63:12)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":64:20)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":64:27)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":64:31)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":64:42)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":64:43)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":64:5)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":65:5)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":65:33)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":65:9)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":65:17)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":65:23)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":65:24)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":65:30)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":65:29)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":66:83)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":66:5)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":67:88)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":67:12)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":67:5)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":67:92)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":68:5)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":74:5)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":71:9)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":71:18)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":71:24)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":71:31)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":71:38)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":71:44)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":72:19)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":72:9)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":73:9)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":73:14)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":78:1)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":78:95)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":80:1)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":94:1)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":88:9)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":88:25)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":82:5)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":82:12)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":83:20)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":83:27)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":83:31)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":83:42)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":83:43)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":83:5)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":84:5)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":84:33)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":84:9)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":84:17)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":84:23)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":84:24)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":84:30)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":84:29)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":85:83)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":85:5)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":86:88)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":86:12)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":86:5)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":86:92)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":87:5)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":93:5)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":90:9)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":90:18)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":90:24)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":90:31)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":90:38)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":90:44)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":91:19)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":91:9)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":92:9)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_22a.c":92:14)
#loc173 = loc(fused[#loc1, #loc2])
#loc174 = loc(fused[#loc3, #loc4])
#loc175 = loc(fused[#loc5, #loc6])
#loc176 = loc(fused[#loc7, #loc8])
#loc177 = loc(fused[#loc9, #loc10])
#loc178 = loc(fused[#loc11, #loc12])
#loc179 = loc(fused[#loc14, #loc15])
#loc180 = loc(fused[#loc16, #loc17])
#loc181 = loc(fused[#loc18, #loc19])
#loc182 = loc(fused[#loc20, #loc21])
#loc183 = loc(fused[#loc22, #loc23])
#loc184 = loc(fused[#loc26, #loc27])
#loc185 = loc(fused[#loc25, #loc27])
#loc186 = loc(fused[#loc24, #loc28])
#loc187 = loc(fused[#loc29, #loc28])
#loc188 = loc(fused[#loc30, #loc31])
#loc189 = loc(fused[#loc32, #loc33])
#loc190 = loc(fused[#loc34, #loc31])
#loc191 = loc(fused[#loc39, #loc38])
#loc192 = loc(fused[#loc42, #loc43])
#loc193 = loc(fused[#loc44, #loc45])
#loc194 = loc(fused[#loc55, #loc56])
#loc195 = loc(fused[#loc57, #loc58])
#loc196 = loc(fused[#loc59, #loc60])
#loc197 = loc(fused[#loc61, #loc62])
#loc198 = loc(fused[#loc63, #loc64])
#loc199 = loc(fused[#loc65, #loc66])
#loc200 = loc(fused[#loc67, #loc68])
#loc201 = loc(fused[#loc73, #loc74])
#loc204 = loc(fused[#loc84, #loc85])
#loc205 = loc(fused[#loc88, #loc89])
#loc206 = loc(fused[#loc92, #loc91])
#loc207 = loc(fused[#loc93, #loc94])
#loc208 = loc(fused[#loc95, #loc96])
#loc209 = loc(fused[#loc97, #loc98])
#loc210 = loc(fused[#loc99, #loc100])
#loc211 = loc(fused[#loc103, #loc104])
#loc212 = loc(fused[#loc102, #loc104])
#loc213 = loc(fused[#loc101, #loc105])
#loc214 = loc(fused[#loc106, #loc105])
#loc215 = loc(fused[#loc107, #loc108])
#loc216 = loc(fused[#loc109, #loc110])
#loc217 = loc(fused[#loc111, #loc108])
#loc218 = loc(fused[#loc116, #loc115])
#loc219 = loc(fused[#loc119, #loc120])
#loc220 = loc(fused[#loc121, #loc122])
#loc221 = loc(fused[#loc133, #loc134])
#loc222 = loc(fused[#loc135, #loc136])
#loc223 = loc(fused[#loc137, #loc138])
#loc224 = loc(fused[#loc139, #loc140])
#loc225 = loc(fused[#loc143, #loc144])
#loc226 = loc(fused[#loc142, #loc144])
#loc227 = loc(fused[#loc141, #loc145])
#loc228 = loc(fused[#loc146, #loc145])
#loc229 = loc(fused[#loc147, #loc148])
#loc230 = loc(fused[#loc149, #loc150])
#loc231 = loc(fused[#loc151, #loc148])
#loc232 = loc(fused[#loc156, #loc155])
#loc233 = loc(fused[#loc159, #loc160])
#loc234 = loc(fused[#loc161, #loc162])
