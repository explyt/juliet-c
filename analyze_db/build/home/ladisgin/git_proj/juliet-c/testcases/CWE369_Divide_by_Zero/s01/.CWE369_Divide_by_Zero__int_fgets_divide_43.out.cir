!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc10 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":27:23)
#loc11 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":27:28)
#loc47 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":59:27)
#loc48 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":59:32)
#loc65 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":76:27)
#loc66 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":76:32)
#loc124 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":129:10)
#loc125 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":129:14)
#loc126 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":129:20)
#loc127 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":129:32)
#loc144 = loc(fused[#loc10, #loc11])
#loc157 = loc(fused[#loc47, #loc48])
#loc164 = loc(fused[#loc65, #loc66])
#loc183 = loc(fused[#loc124, #loc125])
#loc184 = loc(fused[#loc126, #loc127])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_divide_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc140)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc141)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc142)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc7)
  cir.func internal private @_ZN42CWE369_Divide_by_Zero__int_fgets_divide_43L9badSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc10, #loc11])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc144)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc12)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc146)
      %2 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc146)
      cir.store %2, %1 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc146)
      cir.scope {
        %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc19)
        %4 = cir.const #cir.int<3> : !s32i loc(#loc20)
        %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc20)
        %6 = cir.const #cir.int<4> : !u64i loc(#loc20)
        %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc20)
        %8 = cir.const #cir.int<2> : !s32i loc(#loc20)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc20)
        %10 = cir.binop(add, %7, %9) : !u64i loc(#loc20)
        %11 = cir.cast(integral, %10 : !u64i), !s32i loc(#loc20)
        %12 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc141)
        %13 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc21)
        %14 = cir.call @fgets(%3, %11, %13) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc22)
        %15 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc23)
        %16 = cir.cmp(ne, %14, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc148)
        cir.if %16 {
          %17 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc27)
          %18 = cir.call @atoi(%17) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc28)
          %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc29)
          cir.store %18, %19 : !s32i, !cir.ptr<!s32i> loc(#loc150)
        } else {
          %17 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc7)
          %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc7)
          cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc31)
        } loc(#loc149)
      } loc(#loc147)
    } loc(#loc145)
    cir.return loc(#loc9)
  } loc(#loc143)
  cir.func private @printIntLine(!s32i) loc(#loc151)
  cir.func @_ZN42CWE369_Divide_by_Zero__int_fgets_divide_433badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc153)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc38)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc39)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc154)
    cir.call @_ZN42CWE369_Divide_by_Zero__int_fgets_divide_43L9badSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc41)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc42)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc43)
    %5 = cir.binop(div, %3, %4) : !s32i loc(#loc155)
    cir.call @printIntLine(%5) : (!s32i) -> () loc(#loc44)
    cir.return loc(#loc35)
  } loc(#loc152)
  cir.func internal private @_ZN42CWE369_Divide_by_Zero__int_fgets_divide_43L13goodG2BSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc47, #loc48])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc157)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc49)
    %1 = cir.const #cir.int<7> : !s32i loc(#loc50)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc51)
    cir.store %1, %2 : !s32i, !cir.ptr<!s32i> loc(#loc158)
    cir.return loc(#loc46)
  } loc(#loc156)
  cir.func internal private @_ZN42CWE369_Divide_by_Zero__int_fgets_divide_43L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc160)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc57)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc161)
    cir.call @_ZN42CWE369_Divide_by_Zero__int_fgets_divide_43L13goodG2BSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc59)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc60)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc61)
    %5 = cir.binop(div, %3, %4) : !s32i loc(#loc162)
    cir.call @printIntLine(%5) : (!s32i) -> () loc(#loc62)
    cir.return loc(#loc53)
  } loc(#loc159)
  cir.func internal private @_ZN42CWE369_Divide_by_Zero__int_fgets_divide_43L13goodB2GSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc65, #loc66])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc164)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc67)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc166)
      %2 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc166)
      cir.store %2, %1 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc166)
      cir.scope {
        %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc74)
        %4 = cir.const #cir.int<3> : !s32i loc(#loc75)
        %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc75)
        %6 = cir.const #cir.int<4> : !u64i loc(#loc75)
        %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc75)
        %8 = cir.const #cir.int<2> : !s32i loc(#loc75)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc75)
        %10 = cir.binop(add, %7, %9) : !u64i loc(#loc75)
        %11 = cir.cast(integral, %10 : !u64i), !s32i loc(#loc75)
        %12 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc141)
        %13 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc76)
        %14 = cir.call @fgets(%3, %11, %13) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc77)
        %15 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc78)
        %16 = cir.cmp(ne, %14, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc168)
        cir.if %16 {
          %17 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc82)
          %18 = cir.call @atoi(%17) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc83)
          %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc84)
          cir.store %18, %19 : !s32i, !cir.ptr<!s32i> loc(#loc170)
        } else {
          %17 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc86)
          %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc86)
          cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc87)
        } loc(#loc169)
      } loc(#loc167)
    } loc(#loc165)
    cir.return loc(#loc64)
  } loc(#loc163)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc88)
  cir.func internal private @_ZN42CWE369_Divide_by_Zero__int_fgets_divide_43L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc172)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc93)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc94)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc173)
    cir.call @_ZN42CWE369_Divide_by_Zero__int_fgets_divide_43L13goodB2GSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc96)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc99)
      %4 = cir.const #cir.int<0> : !s32i loc(#loc100)
      %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc175)
      cir.if %5 {
        %6 = cir.const #cir.int<100> : !s32i loc(#loc104)
        %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc105)
        %8 = cir.binop(div, %6, %7) : !s32i loc(#loc177)
        cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc106)
      } else {
        %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc88)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc88)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc107)
      } loc(#loc176)
    } loc(#loc174)
    cir.return loc(#loc90)
  } loc(#loc171)
  cir.func @_ZN42CWE369_Divide_by_Zero__int_fgets_divide_434goodEv() extra(#fn_attr1) {
    cir.call @_ZN42CWE369_Divide_by_Zero__int_fgets_divide_43L7goodG2BEv() : () -> () loc(#loc110)
    cir.call @_ZN42CWE369_Divide_by_Zero__int_fgets_divide_43L7goodB2GEv() : () -> () loc(#loc111)
    cir.return loc(#loc109)
  } loc(#loc178)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc179)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc180)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc181)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc118)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc119)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc120)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc121)
  cir.func @main(%arg0: !s32i loc(fused[#loc124, #loc125]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc126, #loc127])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc183)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc184)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc123)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc128)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc128)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc129)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc130)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc130)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc131)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc118)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc118)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc132)
    cir.call @_ZN42CWE369_Divide_by_Zero__int_fgets_divide_434goodEv() : () -> () loc(#loc133)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc119)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc119)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc134)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc120)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc120)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc135)
    cir.call @_ZN42CWE369_Divide_by_Zero__int_fgets_divide_433badEv() : () -> () loc(#loc136)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc121)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc121)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc137)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc138)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc185)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc185)
    cir.return %15 : !s32i loc(#loc185)
  } loc(#loc182)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":39:23)
#loc8 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":27:1)
#loc9 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":42:1)
#loc12 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":28:1)
#loc13 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":29:5)
#loc14 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":41:5)
#loc15 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":30:9)
#loc16 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":30:45)
#loc17 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":32:9)
#loc18 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":40:9)
#loc19 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":32:19)
#loc20 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":32:32)
#loc21 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":32:49)
#loc22 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":32:13)
#loc23 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":32:59)
#loc24 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":33:9)
#loc25 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":36:9)
#loc26 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":38:9)
#loc27 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":35:25)
#loc28 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":35:20)
#loc29 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":35:13)
#loc30 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":35:36)
#loc31 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":39:13)
#loc32 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc33 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc34 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":44:1)
#loc35 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":52:1)
#loc36 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":46:5)
#loc37 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":46:9)
#loc38 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":48:13)
#loc39 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":48:12)
#loc40 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":48:5)
#loc41 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":49:5)
#loc42 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":51:18)
#loc43 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":51:24)
#loc44 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":51:5)
#loc45 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":59:1)
#loc46 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":63:1)
#loc49 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":60:1)
#loc50 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":62:12)
#loc51 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":62:5)
#loc52 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":65:1)
#loc53 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":73:1)
#loc54 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":67:5)
#loc55 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":67:9)
#loc56 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":69:13)
#loc57 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":69:12)
#loc58 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":69:5)
#loc59 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":70:5)
#loc60 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":72:18)
#loc61 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":72:24)
#loc62 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":72:5)
#loc63 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":76:1)
#loc64 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":91:1)
#loc67 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":77:1)
#loc68 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":78:5)
#loc69 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":90:5)
#loc70 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":79:9)
#loc71 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":79:45)
#loc72 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":81:9)
#loc73 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":89:9)
#loc74 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":81:19)
#loc75 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":81:32)
#loc76 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":81:49)
#loc77 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":81:13)
#loc78 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":81:59)
#loc79 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":82:9)
#loc80 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":85:9)
#loc81 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":87:9)
#loc82 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":84:25)
#loc83 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":84:20)
#loc84 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":84:13)
#loc85 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":84:36)
#loc86 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":88:23)
#loc87 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":88:13)
#loc88 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":106:19)
#loc89 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":93:1)
#loc90 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":108:1)
#loc91 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":95:5)
#loc92 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":95:9)
#loc93 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":97:13)
#loc94 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":97:12)
#loc95 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":97:5)
#loc96 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":98:5)
#loc97 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":100:5)
#loc98 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":107:5)
#loc99 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":100:9)
#loc100 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":100:17)
#loc101 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":101:5)
#loc102 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":103:5)
#loc103 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":105:5)
#loc104 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":102:22)
#loc105 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":102:28)
#loc106 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":102:9)
#loc107 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":106:9)
#loc108 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":110:1)
#loc109 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":114:1)
#loc110 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":112:5)
#loc111 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":113:5)
#loc112 = loc("/usr/include/stdlib.h":575:1)
#loc113 = loc("/usr/include/stdlib.h":575:41)
#loc114 = loc("/usr/include/time.h":76:1)
#loc115 = loc("/usr/include/time.h":76:38)
#loc116 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc117 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc118 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":134:15)
#loc119 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":136:15)
#loc120 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":139:15)
#loc121 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":141:15)
#loc122 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":129:1)
#loc123 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":144:1)
#loc128 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":130:1)
#loc129 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":132:27)
#loc130 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":132:22)
#loc131 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":132:5)
#loc132 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":134:5)
#loc133 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":135:5)
#loc134 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":136:5)
#loc135 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":139:5)
#loc136 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":140:5)
#loc137 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":141:5)
#loc138 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":143:12)
#loc139 = loc("CWE369_Divide_by_Zero__int_fgets_divide_43.cpp":143:5)
#loc140 = loc(fused[#loc1, #loc2])
#loc141 = loc(fused[#loc3, #loc4])
#loc142 = loc(fused[#loc5, #loc6])
#loc143 = loc(fused[#loc8, #loc9])
#loc145 = loc(fused[#loc13, #loc14])
#loc146 = loc(fused[#loc15, #loc16])
#loc147 = loc(fused[#loc17, #loc18])
#loc148 = loc(fused[#loc22, #loc23])
#loc149 = loc(fused[#loc24, #loc25, #loc26, #loc18])
#loc150 = loc(fused[#loc29, #loc30])
#loc151 = loc(fused[#loc32, #loc33])
#loc152 = loc(fused[#loc34, #loc35])
#loc153 = loc(fused[#loc36, #loc37])
#loc154 = loc(fused[#loc40, #loc38])
#loc155 = loc(fused[#loc42, #loc43])
#loc156 = loc(fused[#loc45, #loc46])
#loc158 = loc(fused[#loc51, #loc50])
#loc159 = loc(fused[#loc52, #loc53])
#loc160 = loc(fused[#loc54, #loc55])
#loc161 = loc(fused[#loc58, #loc56])
#loc162 = loc(fused[#loc60, #loc61])
#loc163 = loc(fused[#loc63, #loc64])
#loc165 = loc(fused[#loc68, #loc69])
#loc166 = loc(fused[#loc70, #loc71])
#loc167 = loc(fused[#loc72, #loc73])
#loc168 = loc(fused[#loc77, #loc78])
#loc169 = loc(fused[#loc79, #loc80, #loc81, #loc73])
#loc170 = loc(fused[#loc84, #loc85])
#loc171 = loc(fused[#loc89, #loc90])
#loc172 = loc(fused[#loc91, #loc92])
#loc173 = loc(fused[#loc95, #loc93])
#loc174 = loc(fused[#loc97, #loc98])
#loc175 = loc(fused[#loc99, #loc100])
#loc176 = loc(fused[#loc101, #loc102, #loc103, #loc98])
#loc177 = loc(fused[#loc104, #loc105])
#loc178 = loc(fused[#loc108, #loc109])
#loc179 = loc(fused[#loc112, #loc113])
#loc180 = loc(fused[#loc114, #loc115])
#loc181 = loc(fused[#loc116, #loc117])
#loc182 = loc(fused[#loc122, #loc123])
#loc185 = loc(fused[#loc139, #loc138])
