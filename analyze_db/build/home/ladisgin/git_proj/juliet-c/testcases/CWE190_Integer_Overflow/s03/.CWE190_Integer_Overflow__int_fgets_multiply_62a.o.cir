!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @_ZN46CWE190_Integer_Overflow__int_fgets_multiply_629badSourceERi(!cir.ptr<!s32i>) loc(#loc77)
  cir.func private @printIntLine(!s32i) loc(#loc78)
  cir.func @_ZN46CWE190_Integer_Overflow__int_fgets_multiply_623badEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc80)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc81)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc11)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc82)
    cir.call @_ZN46CWE190_Integer_Overflow__int_fgets_multiply_629badSourceERi(%1) : (!cir.ptr<!s32i>) -> () loc(#loc13)
    cir.br ^bb1 loc(#loc83)
  ^bb1:  // pred: ^bb0
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc16)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc17)
    %5 = cir.cmp(gt, %3, %4) : !s32i, !cir.bool loc(#loc84)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc85)
  ^bb2:  // pred: ^bb1
    %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc19)
    %7 = cir.const #cir.int<2> : !s32i loc(#loc8)
    %8 = cir.binop(mul, %6, %7) nsw : !s32i loc(#loc19)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc80)
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc20)
    cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc21)
    cir.br ^bb3 loc(#loc15)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc15)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc6)
  } loc(#loc79)
  cir.func private @_ZN46CWE190_Integer_Overflow__int_fgets_multiply_6213goodG2BSourceERi(!cir.ptr<!s32i>) loc(#loc86)
  cir.func internal private @_ZN46CWE190_Integer_Overflow__int_fgets_multiply_62L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc88)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc89)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc30)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc90)
    cir.call @_ZN46CWE190_Integer_Overflow__int_fgets_multiply_6213goodG2BSourceERi(%1) : (!cir.ptr<!s32i>) -> () loc(#loc32)
    cir.br ^bb1 loc(#loc91)
  ^bb1:  // pred: ^bb0
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc35)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc36)
    %5 = cir.cmp(gt, %3, %4) : !s32i, !cir.bool loc(#loc92)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc93)
  ^bb2:  // pred: ^bb1
    %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc38)
    %7 = cir.const #cir.int<2> : !s32i loc(#loc27)
    %8 = cir.binop(mul, %6, %7) nsw : !s32i loc(#loc38)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc88)
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc39)
    cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc40)
    cir.br ^bb3 loc(#loc34)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc34)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc25)
  } loc(#loc87)
  cir.func private @_ZN46CWE190_Integer_Overflow__int_fgets_multiply_6213goodB2GSourceERi(!cir.ptr<!s32i>) loc(#loc94)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc95)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc45)
  cir.func internal private @_ZN46CWE190_Integer_Overflow__int_fgets_multiply_62L7goodB2GEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc97)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc98)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc52)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc99)
    cir.call @_ZN46CWE190_Integer_Overflow__int_fgets_multiply_6213goodB2GSourceERi(%1) : (!cir.ptr<!s32i>) -> () loc(#loc54)
    cir.br ^bb1 loc(#loc100)
  ^bb1:  // pred: ^bb0
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc57)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc58)
    %5 = cir.cmp(gt, %3, %4) : !s32i, !cir.bool loc(#loc101)
    cir.brcond %5 ^bb2, ^bb8 loc(#loc102)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc103)
  ^bb3:  // pred: ^bb2
    %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc62)
    %7 = cir.const #cir.int<2147483647> : !s32i loc(#loc63)
    %8 = cir.const #cir.int<2> : !s32i loc(#loc64)
    %9 = cir.binop(div, %7, %8) : !s32i loc(#loc104)
    %10 = cir.cmp(lt, %6, %9) : !s32i, !cir.bool loc(#loc105)
    cir.brcond %10 ^bb4, ^bb5 loc(#loc106)
  ^bb4:  // pred: ^bb3
    %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc69)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc49)
    %13 = cir.binop(mul, %11, %12) nsw : !s32i loc(#loc69)
    cir.store %13, %0 : !s32i, !cir.ptr<!s32i> loc(#loc97)
    %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc70)
    cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc71)
    cir.br ^bb6 loc(#loc67)
  ^bb5:  // pred: ^bb3
    %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc45)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    cir.br ^bb6 loc(#loc61)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc61)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc56)
  ^bb8:  // 2 preds: ^bb1, ^bb7
    cir.br ^bb9 loc(#loc56)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc47)
  } loc(#loc96)
  cir.func @_ZN46CWE190_Integer_Overflow__int_fgets_multiply_624goodEv() extra(#fn_attr) {
    cir.call @_ZN46CWE190_Integer_Overflow__int_fgets_multiply_62L7goodG2BEv() : () -> () loc(#loc75)
    cir.call @_ZN46CWE190_Integer_Overflow__int_fgets_multiply_62L7goodB2GEv() : () -> () loc(#loc76)
    cir.return loc(#loc74)
  } loc(#loc107)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":0:0)
#loc1 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":26:1)
#loc2 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":26:25)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":28:1)
#loc6 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":40:1)
#loc7 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":37:9)
#loc8 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":37:29)
#loc9 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":30:5)
#loc10 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":30:9)
#loc11 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":32:12)
#loc12 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":32:5)
#loc13 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":33:5)
#loc14 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":34:5)
#loc15 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":39:5)
#loc16 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":34:8)
#loc17 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":34:15)
#loc18 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":35:5)
#loc19 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":37:22)
#loc20 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":38:22)
#loc21 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":38:9)
#loc22 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":47:1)
#loc23 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":47:29)
#loc24 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":49:1)
#loc25 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":61:1)
#loc26 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":58:9)
#loc27 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":58:29)
#loc28 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":51:5)
#loc29 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":51:9)
#loc30 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":53:12)
#loc31 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":53:5)
#loc32 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":54:5)
#loc33 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":55:5)
#loc34 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":60:5)
#loc35 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":55:8)
#loc36 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":55:15)
#loc37 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":56:5)
#loc38 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":58:22)
#loc39 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":59:22)
#loc40 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":59:9)
#loc41 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":64:1)
#loc42 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":64:29)
#loc43 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc44 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc45 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":82:23)
#loc46 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":66:1)
#loc47 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":85:1)
#loc48 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":77:13)
#loc49 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":77:33)
#loc50 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":68:5)
#loc51 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":68:9)
#loc52 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":70:12)
#loc53 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":70:5)
#loc54 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":71:5)
#loc55 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":72:5)
#loc56 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":84:5)
#loc57 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":72:8)
#loc58 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":72:15)
#loc59 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":73:5)
#loc60 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":75:9)
#loc61 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":83:9)
#loc62 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":75:13)
#loc63 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":75:21)
#loc64 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":75:29)
#loc65 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":75:30)
#loc66 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":76:9)
#loc67 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":79:9)
#loc68 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":81:9)
#loc69 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":77:26)
#loc70 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":78:26)
#loc71 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":78:13)
#loc72 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":82:13)
#loc73 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":87:1)
#loc74 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":91:1)
#loc75 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":89:5)
#loc76 = loc("CWE190_Integer_Overflow__int_fgets_multiply_62a.cpp":90:5)
#loc77 = loc(fused[#loc1, #loc2])
#loc78 = loc(fused[#loc3, #loc4])
#loc79 = loc(fused[#loc5, #loc6])
#loc80 = loc(fused[#loc7, #loc8])
#loc81 = loc(fused[#loc9, #loc10])
#loc82 = loc(fused[#loc12, #loc11])
#loc83 = loc(fused[#loc14, #loc15])
#loc84 = loc(fused[#loc16, #loc17])
#loc85 = loc(fused[#loc18, #loc15])
#loc86 = loc(fused[#loc22, #loc23])
#loc87 = loc(fused[#loc24, #loc25])
#loc88 = loc(fused[#loc26, #loc27])
#loc89 = loc(fused[#loc28, #loc29])
#loc90 = loc(fused[#loc31, #loc30])
#loc91 = loc(fused[#loc33, #loc34])
#loc92 = loc(fused[#loc35, #loc36])
#loc93 = loc(fused[#loc37, #loc34])
#loc94 = loc(fused[#loc41, #loc42])
#loc95 = loc(fused[#loc43, #loc44])
#loc96 = loc(fused[#loc46, #loc47])
#loc97 = loc(fused[#loc48, #loc49])
#loc98 = loc(fused[#loc50, #loc51])
#loc99 = loc(fused[#loc53, #loc52])
#loc100 = loc(fused[#loc55, #loc56])
#loc101 = loc(fused[#loc57, #loc58])
#loc102 = loc(fused[#loc59, #loc56])
#loc103 = loc(fused[#loc60, #loc61])
#loc104 = loc(fused[#loc63, #loc64])
#loc105 = loc(fused[#loc62, #loc65])
#loc106 = loc(fused[#loc66, #loc67, #loc68, #loc61])
#loc107 = loc(fused[#loc73, #loc74])
