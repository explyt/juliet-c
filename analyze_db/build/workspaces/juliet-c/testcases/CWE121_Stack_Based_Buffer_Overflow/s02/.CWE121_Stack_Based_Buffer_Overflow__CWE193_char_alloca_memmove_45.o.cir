!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2BSink.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc89)
  cir.global "private" constant cir_private @__const.badSink.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc90)
  cir.global "private" internal dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45_badData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc91)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc93)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc94)
    %2 = cir.const #cir.int<10> : !s32i loc(#loc12)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc12)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc12)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc12)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc12)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc95)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc12)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc12)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc94)
    %10 = cir.const #cir.int<10> : !s32i loc(#loc14)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc14)
    %12 = cir.binop(add, %10, %11) nsw : !s32i loc(#loc14)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc14)
    %14 = cir.const #cir.int<1> : !u64i loc(#loc14)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc14)
    %16 = cir.alloca !u8i, !cir.ptr<!u8i>, %15 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc14)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc14)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc14)
    cir.store %18, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc95)
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc15)
    cir.store %19, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc96)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc17)
    %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc17)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc19)
    %24 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc20)
    cir.store %21, %24 : !s8i, !cir.ptr<!s8i> loc(#loc97)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
    %26 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc91)
    cir.store %25, %26 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc98)
    %27 = cir.get_global @badSink : !cir.ptr<!cir.func<()>> loc(#loc99)
    cir.call %27() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc23)
    cir.return loc(#loc8)
  } loc(#loc92)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc101)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc27)
    cir.return loc(#loc26)
  } loc(#loc100)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc102)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc103)
  cir.func no_proto internal private @badSink() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc105)
    %1 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc91)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc105)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc90)
      %4 = cir.get_global @__const.badSink.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc90)
      cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc90)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc39)
      %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc40)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc40)
      %9 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc41)
      %10 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc42)
      %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr1) loc(#loc41)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc43)
      %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc43)
      %14 = cir.binop(add, %11, %13) : !u64i loc(#loc107)
      %15 = cir.const #cir.int<1> : !u64i loc(#loc108)
      %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc109)
      cir.libc.memmove %16 bytes from %8 to %6 : !cir.ptr<!void>, !u64i loc(#loc110)
      %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
      cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc50)
    } loc(#loc106)
    cir.return loc(#loc34)
  } loc(#loc104)
  cir.global "private" internal dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45_goodG2BData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc111)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc113)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc114)
    %2 = cir.const #cir.int<10> : !s32i loc(#loc58)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc58)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc58)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc58)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc58)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc115)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc58)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc58)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc114)
    %10 = cir.const #cir.int<10> : !s32i loc(#loc60)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc60)
    %12 = cir.binop(add, %10, %11) nsw : !s32i loc(#loc60)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc60)
    %14 = cir.const #cir.int<1> : !u64i loc(#loc60)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc60)
    %16 = cir.alloca !u8i, !cir.ptr<!u8i>, %15 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc60)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc60)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc60)
    cir.store %18, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc115)
    %19 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
    cir.store %19, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc116)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc63)
    %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc63)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc65)
    %24 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc66)
    cir.store %21, %24 : !s8i, !cir.ptr<!s8i> loc(#loc117)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
    %26 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc111)
    cir.store %25, %26 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc118)
    %27 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<()>> loc(#loc119)
    cir.call %27() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc69)
    cir.return loc(#loc54)
  } loc(#loc112)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc121)
    %1 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc111)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc121)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc89)
      %4 = cir.get_global @__const.goodG2BSink.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc89)
      cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc89)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc77)
      %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc78)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc78)
      %9 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc79)
      %10 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc80)
      %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr1) loc(#loc79)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc81)
      %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc81)
      %14 = cir.binop(add, %11, %13) : !u64i loc(#loc123)
      %15 = cir.const #cir.int<1> : !u64i loc(#loc124)
      %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc125)
      cir.libc.memmove %16 bytes from %8 to %6 : !cir.ptr<!void>, !u64i loc(#loc126)
      %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
      cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    } loc(#loc122)
    cir.return loc(#loc72)
  } loc(#loc120)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":65:9)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":65:29)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":35:9)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":35:29)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":26:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":26:15)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":43:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":54:1)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":45:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":45:12)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":46:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":46:36)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":47:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":47:37)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":50:12)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":50:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":51:15)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":51:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":51:10)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":51:11)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":52:81)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":52:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":53:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":53:13)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":86:1)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":89:1)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":88:5)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":88:13)
#loc29 = loc("/usr/include/string.h":407:1)
#loc30 = loc("/usr/include/string.h":408:33)
#loc31 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc32 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":31:1)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":41:1)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":33:5)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":33:19)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":34:5)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":40:5)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":38:17)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":38:23)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":38:32)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":38:39)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":38:49)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":38:54)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":38:65)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":38:31)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":38:9)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":38:66)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":39:19)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":39:9)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":27:1)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":27:15)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":73:1)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":84:1)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":75:5)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":75:12)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":76:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":76:36)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":77:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":77:37)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":80:12)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":80:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":81:15)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":81:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":81:10)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":81:11)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":82:85)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":82:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":83:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":83:17)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":61:1)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":71:1)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":63:5)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":63:19)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":64:5)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":70:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":68:17)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":68:23)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":68:32)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":68:39)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":68:49)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":68:54)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":68:65)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":68:31)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":68:9)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":68:66)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":69:19)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memmove_45.c":69:9)
#loc89 = loc(fused[#loc1, #loc2])
#loc90 = loc(fused[#loc3, #loc4])
#loc91 = loc(fused[#loc5, #loc6])
#loc92 = loc(fused[#loc7, #loc8])
#loc93 = loc(fused[#loc9, #loc10])
#loc94 = loc(fused[#loc11, #loc12])
#loc95 = loc(fused[#loc13, #loc14])
#loc96 = loc(fused[#loc16, #loc15])
#loc97 = loc(fused[#loc18, #loc17])
#loc98 = loc(fused[#loc22, #loc21])
#loc99 = loc(fused[#loc23, #loc24])
#loc100 = loc(fused[#loc25, #loc26])
#loc101 = loc(fused[#loc27, #loc28])
#loc102 = loc(fused[#loc29, #loc30])
#loc103 = loc(fused[#loc31, #loc32])
#loc104 = loc(fused[#loc33, #loc34])
#loc105 = loc(fused[#loc35, #loc36])
#loc106 = loc(fused[#loc37, #loc38])
#loc107 = loc(fused[#loc41, #loc43])
#loc108 = loc(fused[#loc44, #loc45])
#loc109 = loc(fused[#loc46, #loc45])
#loc110 = loc(fused[#loc47, #loc48])
#loc111 = loc(fused[#loc51, #loc52])
#loc112 = loc(fused[#loc53, #loc54])
#loc113 = loc(fused[#loc55, #loc56])
#loc114 = loc(fused[#loc57, #loc58])
#loc115 = loc(fused[#loc59, #loc60])
#loc116 = loc(fused[#loc62, #loc61])
#loc117 = loc(fused[#loc64, #loc63])
#loc118 = loc(fused[#loc68, #loc67])
#loc119 = loc(fused[#loc69, #loc70])
#loc120 = loc(fused[#loc71, #loc72])
#loc121 = loc(fused[#loc73, #loc74])
#loc122 = loc(fused[#loc75, #loc76])
#loc123 = loc(fused[#loc79, #loc81])
#loc124 = loc(fused[#loc82, #loc83])
#loc125 = loc(fused[#loc84, #loc83])
#loc126 = loc(fused[#loc85, #loc86])
