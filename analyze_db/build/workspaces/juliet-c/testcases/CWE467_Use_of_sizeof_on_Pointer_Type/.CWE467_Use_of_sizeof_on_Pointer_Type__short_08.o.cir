!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE467_Use_of_sizeof_on_Pointer_Type/CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc125)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc126)
  cir.func private @printShortLine(!s16i) loc(#loc127)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc128)
  cir.func no_proto @CWE467_Use_of_sizeof_on_Pointer_Type__short_08_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc131)
      %1 = cir.call %0() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc13)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc13)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>>, ["badShort", init] {alignment = 8 : i64} loc(#loc134)
          %4 = cir.const #cir.ptr<null> : !cir.ptr<!s16i> loc(#loc19)
          cir.store %4, %3 : !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>> loc(#loc134)
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc20)
          %6 = cir.const #cir.int<8> : !u64i loc(#loc135)
          %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc20)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s16i> loc(#loc136)
          cir.store %8, %3 : !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>> loc(#loc137)
          cir.scope {
            %17 = cir.load %3 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc27)
            %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc28)
            %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s16i> loc(#loc28)
            %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s16i>, !cir.bool loc(#loc139)
            cir.if %20 {
              %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc30)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc31)
              %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc32)
              cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc30)
            } loc(#loc140)
          } loc(#loc138)
          %9 = cir.const #cir.int<5> : !s32i loc(#loc33)
          %10 = cir.cast(integral, %9 : !s32i), !s16i loc(#loc33)
          %11 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc34)
          cir.store %10, %11 : !s16i, !cir.ptr<!s16i> loc(#loc141)
          %12 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc36)
          %13 = cir.load %12 : !cir.ptr<!s16i>, !s16i loc(#loc37)
          cir.call @printShortLine(%13) : (!s16i) -> () loc(#loc38)
          %14 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc39)
          %15 = cir.load %3 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc40)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!s16i>), !cir.ptr<!void> loc(#loc40)
          cir.call @free(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc39)
        } loc(#loc133)
      } loc(#loc132)
    } loc(#loc130)
    cir.return loc(#loc10)
  } loc(#loc129)
  cir.func no_proto @CWE467_Use_of_sizeof_on_Pointer_Type__short_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc143)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc43)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc144)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc45)
    cir.return loc(#loc42)
  } loc(#loc142)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc48)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc49)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc146)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc146)
    cir.return %2 : !s32i loc(#loc146)
  } loc(#loc145)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc147)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc53)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc150)
      %1 = cir.call %0() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc58)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc58)
      cir.if %2 {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc53)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc53)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc63)
      } else {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>>, ["goodShort", init] {alignment = 8 : i64} loc(#loc153)
          %4 = cir.const #cir.ptr<null> : !cir.ptr<!s16i> loc(#loc67)
          cir.store %4, %3 : !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>> loc(#loc153)
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc68)
          %6 = cir.const #cir.int<2> : !u64i loc(#loc154)
          %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc68)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s16i> loc(#loc155)
          cir.store %8, %3 : !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>> loc(#loc156)
          cir.scope {
            %17 = cir.load %3 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc75)
            %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc76)
            %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s16i> loc(#loc76)
            %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s16i>, !cir.bool loc(#loc158)
            cir.if %20 {
              %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc78)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc79)
              %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc80)
              cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc78)
            } loc(#loc159)
          } loc(#loc157)
          %9 = cir.const #cir.int<6> : !s32i loc(#loc81)
          %10 = cir.cast(integral, %9 : !s32i), !s16i loc(#loc81)
          %11 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc82)
          cir.store %10, %11 : !s16i, !cir.ptr<!s16i> loc(#loc160)
          %12 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc84)
          %13 = cir.load %12 : !cir.ptr<!s16i>, !s16i loc(#loc85)
          cir.call @printShortLine(%13) : (!s16i) -> () loc(#loc86)
          %14 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc87)
          %15 = cir.load %3 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc88)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!s16i>), !cir.ptr<!void> loc(#loc88)
          cir.call @free(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc87)
        } loc(#loc152)
      } loc(#loc151)
    } loc(#loc149)
    cir.return loc(#loc55)
  } loc(#loc148)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc90)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc91)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc162)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc162)
    cir.return %2 : !s32i loc(#loc162)
  } loc(#loc161)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc165)
      %1 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc97)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc97)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>>, ["goodShort", init] {alignment = 8 : i64} loc(#loc168)
          %4 = cir.const #cir.ptr<null> : !cir.ptr<!s16i> loc(#loc103)
          cir.store %4, %3 : !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>> loc(#loc168)
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc104)
          %6 = cir.const #cir.int<2> : !u64i loc(#loc169)
          %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc104)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s16i> loc(#loc170)
          cir.store %8, %3 : !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>> loc(#loc171)
          cir.scope {
            %17 = cir.load %3 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc111)
            %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc112)
            %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s16i> loc(#loc112)
            %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s16i>, !cir.bool loc(#loc173)
            cir.if %20 {
              %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc114)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc115)
              %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc116)
              cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc114)
            } loc(#loc174)
          } loc(#loc172)
          %9 = cir.const #cir.int<6> : !s32i loc(#loc117)
          %10 = cir.cast(integral, %9 : !s32i), !s16i loc(#loc117)
          %11 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc118)
          cir.store %10, %11 : !s16i, !cir.ptr<!s16i> loc(#loc175)
          %12 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc120)
          %13 = cir.load %12 : !cir.ptr<!s16i>, !s16i loc(#loc121)
          cir.call @printShortLine(%13) : (!s16i) -> () loc(#loc122)
          %14 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc123)
          %15 = cir.load %3 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc124)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!s16i>), !cir.ptr<!void> loc(#loc124)
          cir.call @free(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc123)
        } loc(#loc167)
      } loc(#loc166)
    } loc(#loc164)
    cir.return loc(#loc94)
  } loc(#loc163)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE467_Use_of_sizeof_on_Pointer_Type/CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":20:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":20:39)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":33:1)
#loc10 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":47:1)
#loc11 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":35:5)
#loc12 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":46:5)
#loc13 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":35:8)
#loc14 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":35:26)
#loc15 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":36:5)
#loc16 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":37:9)
#loc17 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":45:9)
#loc18 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":38:13)
#loc19 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":38:32)
#loc20 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":40:33)
#loc21 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":40:40)
#loc22 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":40:55)
#loc23 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":40:56)
#loc24 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":40:13)
#loc25 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":41:13)
#loc26 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":41:45)
#loc27 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":41:17)
#loc28 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":41:29)
#loc29 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":41:35)
#loc30 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":41:36)
#loc31 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":41:42)
#loc32 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":41:41)
#loc33 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":42:25)
#loc34 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":42:14)
#loc35 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":42:13)
#loc36 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":43:29)
#loc37 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":43:28)
#loc38 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":43:13)
#loc39 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":44:13)
#loc40 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":44:18)
#loc41 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":92:1)
#loc42 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":96:1)
#loc43 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":94:5)
#loc44 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":94:11)
#loc45 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":95:5)
#loc46 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":95:11)
#loc47 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":21:1)
#loc48 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":24:1)
#loc49 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":23:12)
#loc50 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":23:5)
#loc51 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc52 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc53 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":59:19)
#loc54 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":54:1)
#loc55 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":73:1)
#loc56 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":56:5)
#loc57 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":72:5)
#loc58 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":56:8)
#loc59 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":56:27)
#loc60 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":57:5)
#loc61 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":60:5)
#loc62 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":62:5)
#loc63 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":59:9)
#loc64 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":63:9)
#loc65 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":71:9)
#loc66 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":64:13)
#loc67 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":64:33)
#loc68 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":66:34)
#loc69 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":66:41)
#loc70 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":66:58)
#loc71 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":66:59)
#loc72 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":66:13)
#loc73 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":67:13)
#loc74 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":67:46)
#loc75 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":67:17)
#loc76 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":67:30)
#loc77 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":67:36)
#loc78 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":67:37)
#loc79 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":67:43)
#loc80 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":67:42)
#loc81 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":68:26)
#loc82 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":68:14)
#loc83 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":68:13)
#loc84 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":69:29)
#loc85 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":69:28)
#loc86 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":69:13)
#loc87 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":70:13)
#loc88 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":70:18)
#loc89 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":26:1)
#loc90 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":29:1)
#loc91 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":28:12)
#loc92 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":28:5)
#loc93 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":76:1)
#loc94 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":90:1)
#loc95 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":78:5)
#loc96 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":89:5)
#loc97 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":78:8)
#loc98 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":78:26)
#loc99 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":79:5)
#loc100 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":80:9)
#loc101 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":88:9)
#loc102 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":81:13)
#loc103 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":81:33)
#loc104 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":83:34)
#loc105 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":83:41)
#loc106 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":83:58)
#loc107 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":83:59)
#loc108 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":83:13)
#loc109 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":84:13)
#loc110 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":84:46)
#loc111 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":84:17)
#loc112 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":84:30)
#loc113 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":84:36)
#loc114 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":84:37)
#loc115 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":84:43)
#loc116 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":84:42)
#loc117 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":85:26)
#loc118 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":85:14)
#loc119 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":85:13)
#loc120 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":86:29)
#loc121 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":86:28)
#loc122 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":86:13)
#loc123 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":87:13)
#loc124 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_08.c":87:18)
#loc125 = loc(fused[#loc1, #loc2])
#loc126 = loc(fused[#loc3, #loc4])
#loc127 = loc(fused[#loc5, #loc6])
#loc128 = loc(fused[#loc7, #loc8])
#loc129 = loc(fused[#loc9, #loc10])
#loc130 = loc(fused[#loc11, #loc12])
#loc131 = loc(fused[#loc13, #loc14])
#loc132 = loc(fused[#loc15, #loc12])
#loc133 = loc(fused[#loc16, #loc17])
#loc134 = loc(fused[#loc18, #loc19])
#loc135 = loc(fused[#loc21, #loc22])
#loc136 = loc(fused[#loc20, #loc23])
#loc137 = loc(fused[#loc24, #loc23])
#loc138 = loc(fused[#loc25, #loc26])
#loc139 = loc(fused[#loc27, #loc28])
#loc140 = loc(fused[#loc29, #loc26])
#loc141 = loc(fused[#loc35, #loc33])
#loc142 = loc(fused[#loc41, #loc42])
#loc143 = loc(fused[#loc43, #loc44])
#loc144 = loc(fused[#loc45, #loc46])
#loc145 = loc(fused[#loc47, #loc48])
#loc146 = loc(fused[#loc50, #loc49])
#loc147 = loc(fused[#loc51, #loc52])
#loc148 = loc(fused[#loc54, #loc55])
#loc149 = loc(fused[#loc56, #loc57])
#loc150 = loc(fused[#loc58, #loc59])
#loc151 = loc(fused[#loc60, #loc61, #loc62, #loc57])
#loc152 = loc(fused[#loc64, #loc65])
#loc153 = loc(fused[#loc66, #loc67])
#loc154 = loc(fused[#loc69, #loc70])
#loc155 = loc(fused[#loc68, #loc71])
#loc156 = loc(fused[#loc72, #loc71])
#loc157 = loc(fused[#loc73, #loc74])
#loc158 = loc(fused[#loc75, #loc76])
#loc159 = loc(fused[#loc77, #loc74])
#loc160 = loc(fused[#loc83, #loc81])
#loc161 = loc(fused[#loc89, #loc90])
#loc162 = loc(fused[#loc92, #loc91])
#loc163 = loc(fused[#loc93, #loc94])
#loc164 = loc(fused[#loc95, #loc96])
#loc165 = loc(fused[#loc97, #loc98])
#loc166 = loc(fused[#loc99, #loc96])
#loc167 = loc(fused[#loc100, #loc101])
#loc168 = loc(fused[#loc102, #loc103])
#loc169 = loc(fused[#loc105, #loc106])
#loc170 = loc(fused[#loc104, #loc107])
#loc171 = loc(fused[#loc108, #loc107])
#loc172 = loc(fused[#loc109, #loc110])
#loc173 = loc(fused[#loc111, #loc112])
#loc174 = loc(fused[#loc113, #loc110])
#loc175 = loc(fused[#loc119, #loc117])
