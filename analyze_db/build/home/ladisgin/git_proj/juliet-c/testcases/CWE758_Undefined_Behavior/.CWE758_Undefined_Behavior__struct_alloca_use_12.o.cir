!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__struct_alloca_use_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc96)
  cir.func private @printIntLine(!s32i) loc(#loc97)
  cir.func no_proto @CWE758_Undefined_Behavior__struct_alloca_use_12_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["pointer", init] {alignment = 8 : i64} loc(#loc99)
    %1 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data", init] {alignment = 4 : i64} loc(#loc100)
    %2 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data"] {alignment = 4 : i64} loc(#loc101)
    %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["pointer", init] {alignment = 8 : i64} loc(#loc102)
    %4 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data", init] {alignment = 4 : i64} loc(#loc103)
    cir.br ^bb1 loc(#loc104)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc105)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc105)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc19)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc19)
    cir.brcond %8 ^bb2, ^bb5 loc(#loc106)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc107)
  ^bb3:  // pred: ^bb2
    %9 = cir.const #cir.int<8> : !u64i loc(#loc8)
    %10 = cir.alloca !u8i, !cir.ptr<!u8i>, %9 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc8)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc8)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc8)
    cir.store %12, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc99)
    %13 = cir.load deref %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc10)
    cir.copy %13 to %1 : !cir.ptr<!ty__twoIntsStruct> loc(#loc100)
    %14 = cir.get_member %1[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc26)
    %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc27)
    cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc28)
    %16 = cir.get_member %1[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc29)
    %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc30)
    cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc31)
    cir.br ^bb4 loc(#loc25)
  ^bb4:  // pred: ^bb3
    cir.br ^bb10 loc(#loc22)
  ^bb5:  // pred: ^bb1
    cir.br ^bb6 loc(#loc108)
  ^bb6:  // pred: ^bb5
    %18 = cir.const #cir.int<8> : !u64i loc(#loc14)
    %19 = cir.alloca !u8i, !cir.ptr<!u8i>, %18 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc14)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc14)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc14)
    cir.store %21, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc102)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %23 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc26)
    cir.store %22, %23 : !s32i, !cir.ptr<!s32i> loc(#loc109)
    %24 = cir.const #cir.int<2> : !s32i loc(#loc36)
    %25 = cir.get_member %2[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc29)
    cir.store %24, %25 : !s32i, !cir.ptr<!s32i> loc(#loc110)
    %26 = cir.load deref %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc38)
    cir.copy %2 to %26 : !cir.ptr<!ty__twoIntsStruct> loc(#loc38)
    cir.br ^bb7 loc(#loc111)
  ^bb7:  // pred: ^bb6
    %27 = cir.load deref %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc16)
    cir.copy %27 to %4 : !cir.ptr<!ty__twoIntsStruct> loc(#loc103)
    %28 = cir.get_member %4[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc26)
    %29 = cir.load %28 : !cir.ptr<!s32i>, !s32i loc(#loc41)
    cir.call @printIntLine(%29) : (!s32i) -> () loc(#loc42)
    %30 = cir.get_member %4[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc29)
    %31 = cir.load %30 : !cir.ptr<!s32i>, !s32i loc(#loc43)
    cir.call @printIntLine(%31) : (!s32i) -> () loc(#loc44)
    cir.br ^bb8 loc(#loc40)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc33)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc18)
  ^bb10:  // 2 preds: ^bb4, ^bb9
    cir.br ^bb11 loc(#loc18)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc6)
  } loc(#loc98)
  cir.func no_proto @CWE758_Undefined_Behavior__struct_alloca_use_12_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc113)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc47)
    cir.return loc(#loc46)
  } loc(#loc112)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data"] {alignment = 4 : i64} loc(#loc115)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["pointer", init] {alignment = 8 : i64} loc(#loc116)
    %2 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data", init] {alignment = 4 : i64} loc(#loc117)
    %3 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data"] {alignment = 4 : i64} loc(#loc118)
    %4 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["pointer", init] {alignment = 8 : i64} loc(#loc119)
    %5 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data", init] {alignment = 4 : i64} loc(#loc120)
    cir.br ^bb1 loc(#loc121)
  ^bb1:  // pred: ^bb0
    %6 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc122)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc122)
    %8 = cir.call %7() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc65)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc65)
    cir.brcond %9 ^bb2, ^bb7 loc(#loc123)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc124)
  ^bb3:  // pred: ^bb2
    %10 = cir.const #cir.int<8> : !u64i loc(#loc54)
    %11 = cir.alloca !u8i, !cir.ptr<!u8i>, %10 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc54)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc54)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc54)
    cir.store %13, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc116)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc72)
    %15 = cir.get_member %0[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc26)
    cir.store %14, %15 : !s32i, !cir.ptr<!s32i> loc(#loc125)
    %16 = cir.const #cir.int<2> : !s32i loc(#loc74)
    %17 = cir.get_member %0[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc29)
    cir.store %16, %17 : !s32i, !cir.ptr<!s32i> loc(#loc126)
    %18 = cir.load deref %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc76)
    cir.copy %0 to %18 : !cir.ptr<!ty__twoIntsStruct> loc(#loc76)
    cir.br ^bb4 loc(#loc127)
  ^bb4:  // pred: ^bb3
    %19 = cir.load deref %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc56)
    cir.copy %19 to %2 : !cir.ptr<!ty__twoIntsStruct> loc(#loc117)
    %20 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc26)
    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc79)
    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc80)
    %22 = cir.get_member %2[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc29)
    %23 = cir.load %22 : !cir.ptr<!s32i>, !s32i loc(#loc81)
    cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc82)
    cir.br ^bb5 loc(#loc78)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc71)
  ^bb6:  // pred: ^bb5
    cir.br ^bb12 loc(#loc68)
  ^bb7:  // pred: ^bb1
    cir.br ^bb8 loc(#loc128)
  ^bb8:  // pred: ^bb7
    %24 = cir.const #cir.int<8> : !u64i loc(#loc60)
    %25 = cir.alloca !u8i, !cir.ptr<!u8i>, %24 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc60)
    %26 = cir.cast(bitcast, %25 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc60)
    %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc60)
    cir.store %27, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc119)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc85)
    %29 = cir.get_member %3[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc26)
    cir.store %28, %29 : !s32i, !cir.ptr<!s32i> loc(#loc129)
    %30 = cir.const #cir.int<2> : !s32i loc(#loc87)
    %31 = cir.get_member %3[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc29)
    cir.store %30, %31 : !s32i, !cir.ptr<!s32i> loc(#loc130)
    %32 = cir.load deref %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc89)
    cir.copy %3 to %32 : !cir.ptr<!ty__twoIntsStruct> loc(#loc89)
    cir.br ^bb9 loc(#loc131)
  ^bb9:  // pred: ^bb8
    %33 = cir.load deref %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc62)
    cir.copy %33 to %5 : !cir.ptr<!ty__twoIntsStruct> loc(#loc120)
    %34 = cir.get_member %5[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc26)
    %35 = cir.load %34 : !cir.ptr<!s32i>, !s32i loc(#loc92)
    cir.call @printIntLine(%35) : (!s32i) -> () loc(#loc93)
    %36 = cir.get_member %5[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc29)
    %37 = cir.load %36 : !cir.ptr<!s32i>, !s32i loc(#loc94)
    cir.call @printIntLine(%37) : (!s32i) -> () loc(#loc95)
    cir.br ^bb10 loc(#loc91)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc84)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc64)
  ^bb12:  // 2 preds: ^bb6, ^bb11
    cir.br ^bb13 loc(#loc64)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc50)
  } loc(#loc114)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__struct_alloca_use_12.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":20:1)
#loc6 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":46:1)
#loc7 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":25:13)
#loc8 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":25:56)
#loc9 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":26:13)
#loc10 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":26:35)
#loc11 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":34:13)
#loc12 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":34:27)
#loc13 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":35:13)
#loc14 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":35:56)
#loc15 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":40:17)
#loc16 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":40:39)
#loc17 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":22:5)
#loc18 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":45:5)
#loc19 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":22:8)
#loc20 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":22:33)
#loc21 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":23:5)
#loc22 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":30:5)
#loc23 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":32:5)
#loc24 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":24:9)
#loc25 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":29:9)
#loc26 = loc("../../testcasesupport/std_testcase.h":98:9)
#loc27 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":27:31)
#loc28 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":27:13)
#loc29 = loc("../../testcasesupport/std_testcase.h":99:9)
#loc30 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":28:31)
#loc31 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":28:13)
#loc32 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":33:9)
#loc33 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":44:9)
#loc34 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":36:27)
#loc35 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":36:13)
#loc36 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":37:27)
#loc37 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":37:13)
#loc38 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":38:14)
#loc39 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":39:13)
#loc40 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":43:13)
#loc41 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":41:35)
#loc42 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":41:17)
#loc43 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":42:35)
#loc44 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":42:17)
#loc45 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":87:1)
#loc46 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":90:1)
#loc47 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":89:5)
#loc48 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":89:11)
#loc49 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":53:1)
#loc50 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":85:1)
#loc51 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":58:13)
#loc52 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":58:27)
#loc53 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":59:13)
#loc54 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":59:56)
#loc55 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":64:17)
#loc56 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":64:39)
#loc57 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":73:13)
#loc58 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":73:27)
#loc59 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":74:13)
#loc60 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":74:56)
#loc61 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":79:17)
#loc62 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":79:39)
#loc63 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":55:5)
#loc64 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":84:5)
#loc65 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":55:8)
#loc66 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":55:33)
#loc67 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":56:5)
#loc68 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":69:5)
#loc69 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":71:5)
#loc70 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":57:9)
#loc71 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":68:9)
#loc72 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":60:27)
#loc73 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":60:13)
#loc74 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":61:27)
#loc75 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":61:13)
#loc76 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":62:14)
#loc77 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":63:13)
#loc78 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":67:13)
#loc79 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":65:35)
#loc80 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":65:17)
#loc81 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":66:35)
#loc82 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":66:17)
#loc83 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":72:9)
#loc84 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":83:9)
#loc85 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":75:27)
#loc86 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":75:13)
#loc87 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":76:27)
#loc88 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":76:13)
#loc89 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":77:14)
#loc90 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":78:13)
#loc91 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":82:13)
#loc92 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":80:35)
#loc93 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":80:17)
#loc94 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":81:35)
#loc95 = loc("CWE758_Undefined_Behavior__struct_alloca_use_12.c":81:17)
#loc96 = loc(fused[#loc1, #loc2])
#loc97 = loc(fused[#loc3, #loc4])
#loc98 = loc(fused[#loc5, #loc6])
#loc99 = loc(fused[#loc7, #loc8])
#loc100 = loc(fused[#loc9, #loc10])
#loc101 = loc(fused[#loc11, #loc12])
#loc102 = loc(fused[#loc13, #loc14])
#loc103 = loc(fused[#loc15, #loc16])
#loc104 = loc(fused[#loc17, #loc18])
#loc105 = loc(fused[#loc19, #loc20])
#loc106 = loc(fused[#loc21, #loc22, #loc23, #loc18])
#loc107 = loc(fused[#loc24, #loc25])
#loc108 = loc(fused[#loc32, #loc33])
#loc109 = loc(fused[#loc35, #loc34])
#loc110 = loc(fused[#loc37, #loc36])
#loc111 = loc(fused[#loc39, #loc40])
#loc112 = loc(fused[#loc45, #loc46])
#loc113 = loc(fused[#loc47, #loc48])
#loc114 = loc(fused[#loc49, #loc50])
#loc115 = loc(fused[#loc51, #loc52])
#loc116 = loc(fused[#loc53, #loc54])
#loc117 = loc(fused[#loc55, #loc56])
#loc118 = loc(fused[#loc57, #loc58])
#loc119 = loc(fused[#loc59, #loc60])
#loc120 = loc(fused[#loc61, #loc62])
#loc121 = loc(fused[#loc63, #loc64])
#loc122 = loc(fused[#loc65, #loc66])
#loc123 = loc(fused[#loc67, #loc68, #loc69, #loc64])
#loc124 = loc(fused[#loc70, #loc71])
#loc125 = loc(fused[#loc73, #loc72])
#loc126 = loc(fused[#loc75, #loc74])
#loc127 = loc(fused[#loc77, #loc78])
#loc128 = loc(fused[#loc83, #loc84])
#loc129 = loc(fused[#loc86, #loc85])
#loc130 = loc(fused[#loc88, #loc87])
#loc131 = loc(fused[#loc90, #loc91])
