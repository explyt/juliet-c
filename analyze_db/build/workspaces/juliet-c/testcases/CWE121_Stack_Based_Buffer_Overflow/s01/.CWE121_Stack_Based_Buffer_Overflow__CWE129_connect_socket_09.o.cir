!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.global "private" constant external @GLOBAL_CONST_TRUE : !s32i {alignment = 4 : i64} loc(#loc545)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc546)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc547)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc7)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc548)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc549)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc550)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc551)
  cir.func private @close(!s32i) -> !s32i loc(#loc552)
  cir.func private @printIntLine(!s32i) loc(#loc553)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc554)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc22)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc556)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc28)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc557)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc545)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc32)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc32)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc561)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc562)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc563)
          %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc564)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc41)
          %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc41)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc563)
          cir.scope {
            cir.do {
              cir.scope {
                %12 = cir.const #cir.int<2> : !s32i loc(#loc48)
                %13 = cir.const #cir.int<1> : !s32i loc(#loc49)
                %14 = cir.const #cir.int<6> : !s32i loc(#loc50)
                %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc51)
                cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc567)
                cir.scope {
                  %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc56)
                  %55 = cir.const #cir.int<1> : !s32i loc(#loc57)
                  %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc57)
                  %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc569)
                  cir.if %57 {
                    cir.break loc(#loc59)
                  } loc(#loc570)
                } loc(#loc568)
                %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc571)
                %17 = cir.const #cir.int<0> : !s32i loc(#loc62)
                %18 = cir.const #cir.int<16> : !u64i loc(#loc572)
                cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc573)
                %19 = cir.const #cir.int<2> : !s32i loc(#loc67)
                %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc67)
                %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
                cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc574)
                %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc7)
                %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc7)
                %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc70)
                %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc71)
                %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc72)
                cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc575)
                %27 = cir.const #cir.int<27015> : !s32i loc(#loc75)
                %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc75)
                %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc76)
                %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc77)
                cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc576)
                cir.scope {
                  %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc82)
                  %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc578)
                  %56 = cir.const #cir.int<16> : !u64i loc(#loc579)
                  %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc579)
                  %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc87)
                  %59 = cir.const #cir.int<1> : !s32i loc(#loc88)
                  %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc88)
                  %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc580)
                  cir.if %61 {
                    cir.break loc(#loc90)
                  } loc(#loc581)
                } loc(#loc577)
                %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc91)
                %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc92)
                %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc92)
                %34 = cir.const #cir.int<3> : !s32i loc(#loc93)
                %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc93)
                %36 = cir.const #cir.int<4> : !u64i loc(#loc93)
                %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc93)
                %38 = cir.const #cir.int<2> : !s32i loc(#loc93)
                %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc93)
                %40 = cir.binop(add, %37, %39) : !u64i loc(#loc93)
                %41 = cir.const #cir.int<1> : !s32i loc(#loc94)
                %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc94)
                %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc582)
                %44 = cir.const #cir.int<0> : !s32i loc(#loc95)
                %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc96)
                %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc96)
                cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc583)
                cir.scope {
                  %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc101)
                  %55 = cir.const #cir.int<1> : !s32i loc(#loc102)
                  %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc102)
                  %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc585)
                  %58 = cir.ternary(%57, true {
                    %59 = cir.const #true loc(#loc103)
                    cir.yield %59 : !cir.bool loc(#loc103)
                  }, false {
                    %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc104)
                    %60 = cir.const #cir.int<0> : !s32i loc(#loc105)
                    %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc586)
                    %62 = cir.ternary(%61, true {
                      %63 = cir.const #true loc(#loc103)
                      cir.yield %63 : !cir.bool loc(#loc103)
                    }, false {
                      %63 = cir.const #false loc(#loc103)
                      cir.yield %63 : !cir.bool loc(#loc103)
                    }) : (!cir.bool) -> !cir.bool loc(#loc103)
                    cir.yield %62 : !cir.bool loc(#loc103)
                  }) : (!cir.bool) -> !cir.bool loc(#loc103)
                  cir.if %58 {
                    cir.break loc(#loc107)
                  } loc(#loc587)
                } loc(#loc584)
                %47 = cir.const #cir.int<0> : !s32i loc(#loc108)
                %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc108)
                %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc109)
                %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc110)
                %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc110)
                cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc588)
                %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc111)
                %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc112)
                cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc589)
              } loc(#loc566)
              cir.yield loc(#loc45)
            } while {
              %12 = cir.const #cir.int<0> : !s32i loc(#loc115)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc115)
              cir.condition(%13) loc(#loc115)
            } loc(#loc565)
          } loc(#loc565)
          cir.scope {
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc118)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc119)
            %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc119)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc591)
            cir.if %15 {
              %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc121)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc122)
            } loc(#loc592)
          } loc(#loc590)
        } loc(#loc560)
      } loc(#loc559)
    } loc(#loc558)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc545)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc125)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc125)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc596)
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc597)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc597)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc597)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc135)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc136)
            %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc599)
            cir.if %11 {
              %12 = cir.const #cir.int<1> : !s32i loc(#loc140)
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc141)
              %14 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc142)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc142)
              cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc601)
              cir.scope {
                %16 = cir.const #cir.int<0> : !s32i loc(#loc145)
                cir.store %16, %6 : !s32i, !cir.ptr<!s32i> loc(#loc603)
                cir.for : cond {
                  %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc147)
                  %18 = cir.const #cir.int<10> : !s32i loc(#loc148)
                  %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc604)
                  cir.condition(%19) loc(#loc149)
                } body {
                  cir.scope {
                    %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc151)
                    %18 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc152)
                    %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc152)
                    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc152)
                    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc153)
                  } loc(#loc605)
                  cir.yield loc(#loc144)
                } step {
                  %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc154)
                  %18 = cir.unary(inc, %17) nsw : !s32i, !s32i loc(#loc155)
                  cir.store %18, %6 : !s32i, !cir.ptr<!s32i> loc(#loc606)
                  cir.yield loc(#loc602)
                } loc(#loc602)
              } loc(#loc602)
            } else {
              %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc22)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc22)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc156)
            } loc(#loc600)
          } loc(#loc598)
        } loc(#loc595)
      } loc(#loc594)
    } loc(#loc593)
    cir.return loc(#loc24)
  } loc(#loc555)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc608)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc159)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc609)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc161)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc610)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc163)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc611)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc165)
    cir.return loc(#loc158)
  } loc(#loc607)
  cir.global "private" constant external @GLOBAL_CONST_FALSE : !s32i {alignment = 4 : i64} loc(#loc612)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc169)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc170)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc614)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc175)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc176)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc615)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc545)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc180)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc180)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc619)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc620)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc621)
          %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc622)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc189)
          %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc189)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc621)
          cir.scope {
            cir.do {
              cir.scope {
                %12 = cir.const #cir.int<2> : !s32i loc(#loc196)
                %13 = cir.const #cir.int<1> : !s32i loc(#loc197)
                %14 = cir.const #cir.int<6> : !s32i loc(#loc198)
                %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc199)
                cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc625)
                cir.scope {
                  %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc204)
                  %55 = cir.const #cir.int<1> : !s32i loc(#loc205)
                  %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc205)
                  %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc627)
                  cir.if %57 {
                    cir.break loc(#loc207)
                  } loc(#loc628)
                } loc(#loc626)
                %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc629)
                %17 = cir.const #cir.int<0> : !s32i loc(#loc210)
                %18 = cir.const #cir.int<16> : !u64i loc(#loc630)
                cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc631)
                %19 = cir.const #cir.int<2> : !s32i loc(#loc215)
                %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc215)
                %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
                cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc632)
                %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc217)
                %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc217)
                %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc218)
                %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc71)
                %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc72)
                cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc633)
                %27 = cir.const #cir.int<27015> : !s32i loc(#loc221)
                %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc221)
                %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc222)
                %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc77)
                cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc634)
                cir.scope {
                  %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc227)
                  %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc636)
                  %56 = cir.const #cir.int<16> : !u64i loc(#loc637)
                  %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc637)
                  %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc232)
                  %59 = cir.const #cir.int<1> : !s32i loc(#loc233)
                  %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc233)
                  %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc638)
                  cir.if %61 {
                    cir.break loc(#loc235)
                  } loc(#loc639)
                } loc(#loc635)
                %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc236)
                %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc237)
                %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc237)
                %34 = cir.const #cir.int<3> : !s32i loc(#loc238)
                %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc238)
                %36 = cir.const #cir.int<4> : !u64i loc(#loc238)
                %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc238)
                %38 = cir.const #cir.int<2> : !s32i loc(#loc238)
                %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc238)
                %40 = cir.binop(add, %37, %39) : !u64i loc(#loc238)
                %41 = cir.const #cir.int<1> : !s32i loc(#loc239)
                %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc239)
                %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc640)
                %44 = cir.const #cir.int<0> : !s32i loc(#loc240)
                %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc241)
                %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc241)
                cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc641)
                cir.scope {
                  %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc246)
                  %55 = cir.const #cir.int<1> : !s32i loc(#loc247)
                  %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc247)
                  %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc643)
                  %58 = cir.ternary(%57, true {
                    %59 = cir.const #true loc(#loc248)
                    cir.yield %59 : !cir.bool loc(#loc248)
                  }, false {
                    %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc249)
                    %60 = cir.const #cir.int<0> : !s32i loc(#loc250)
                    %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc644)
                    %62 = cir.ternary(%61, true {
                      %63 = cir.const #true loc(#loc248)
                      cir.yield %63 : !cir.bool loc(#loc248)
                    }, false {
                      %63 = cir.const #false loc(#loc248)
                      cir.yield %63 : !cir.bool loc(#loc248)
                    }) : (!cir.bool) -> !cir.bool loc(#loc248)
                    cir.yield %62 : !cir.bool loc(#loc248)
                  }) : (!cir.bool) -> !cir.bool loc(#loc248)
                  cir.if %58 {
                    cir.break loc(#loc252)
                  } loc(#loc645)
                } loc(#loc642)
                %47 = cir.const #cir.int<0> : !s32i loc(#loc253)
                %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc253)
                %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc254)
                %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc255)
                %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc255)
                cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc646)
                %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc256)
                %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc257)
                cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc647)
              } loc(#loc624)
              cir.yield loc(#loc193)
            } while {
              %12 = cir.const #cir.int<0> : !s32i loc(#loc260)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc260)
              cir.condition(%13) loc(#loc260)
            } loc(#loc623)
          } loc(#loc623)
          cir.scope {
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc263)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc264)
            %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc264)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc649)
            cir.if %15 {
              %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc266)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc267)
            } loc(#loc650)
          } loc(#loc648)
        } loc(#loc618)
      } loc(#loc617)
    } loc(#loc616)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_FALSE : !cir.ptr<!s32i> loc(#loc612)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc270)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc270)
      cir.if %5 {
        %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc169)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc169)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc274)
      } else {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc654)
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc655)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc655)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc655)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc283)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc284)
            %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc657)
            %12 = cir.ternary(%11, true {
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc286)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc287)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc658)
              %16 = cir.ternary(%15, true {
                %17 = cir.const #true loc(#loc285)
                cir.yield %17 : !cir.bool loc(#loc285)
              }, false {
                %17 = cir.const #false loc(#loc285)
                cir.yield %17 : !cir.bool loc(#loc285)
              }) : (!cir.bool) -> !cir.bool loc(#loc285)
              cir.yield %16 : !cir.bool loc(#loc285)
            }, false {
              %13 = cir.const #false loc(#loc285)
              cir.yield %13 : !cir.bool loc(#loc285)
            }) : (!cir.bool) -> !cir.bool loc(#loc285)
            cir.if %12 {
              %13 = cir.const #cir.int<1> : !s32i loc(#loc292)
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc293)
              %15 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc294)
              %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc294)
              cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc660)
              cir.scope {
                %17 = cir.const #cir.int<0> : !s32i loc(#loc297)
                cir.store %17, %6 : !s32i, !cir.ptr<!s32i> loc(#loc662)
                cir.for : cond {
                  %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc299)
                  %19 = cir.const #cir.int<10> : !s32i loc(#loc300)
                  %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc663)
                  cir.condition(%20) loc(#loc301)
                } body {
                  cir.scope {
                    %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc303)
                    %19 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc304)
                    %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc304)
                    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc304)
                    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc305)
                  } loc(#loc664)
                  cir.yield loc(#loc296)
                } step {
                  %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc306)
                  %19 = cir.unary(inc, %18) nsw : !s32i, !s32i loc(#loc307)
                  cir.store %19, %6 : !s32i, !cir.ptr<!s32i> loc(#loc665)
                  cir.yield loc(#loc661)
                } loc(#loc661)
              } loc(#loc661)
            } else {
              %13 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc170)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc170)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc308)
            } loc(#loc659)
          } loc(#loc656)
        } loc(#loc653)
      } loc(#loc652)
    } loc(#loc651)
    cir.return loc(#loc172)
  } loc(#loc613)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc667)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc313)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc314)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc668)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc545)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc318)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc318)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc672)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc673)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc674)
          %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc675)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc327)
          %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc327)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc674)
          cir.scope {
            cir.do {
              cir.scope {
                %12 = cir.const #cir.int<2> : !s32i loc(#loc334)
                %13 = cir.const #cir.int<1> : !s32i loc(#loc335)
                %14 = cir.const #cir.int<6> : !s32i loc(#loc336)
                %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc337)
                cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc678)
                cir.scope {
                  %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc342)
                  %55 = cir.const #cir.int<1> : !s32i loc(#loc343)
                  %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc343)
                  %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc680)
                  cir.if %57 {
                    cir.break loc(#loc345)
                  } loc(#loc681)
                } loc(#loc679)
                %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc682)
                %17 = cir.const #cir.int<0> : !s32i loc(#loc348)
                %18 = cir.const #cir.int<16> : !u64i loc(#loc683)
                cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc684)
                %19 = cir.const #cir.int<2> : !s32i loc(#loc353)
                %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc353)
                %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
                cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc685)
                %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc355)
                %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc355)
                %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc356)
                %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc71)
                %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc72)
                cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc686)
                %27 = cir.const #cir.int<27015> : !s32i loc(#loc359)
                %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc359)
                %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc360)
                %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc77)
                cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc687)
                cir.scope {
                  %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc365)
                  %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc689)
                  %56 = cir.const #cir.int<16> : !u64i loc(#loc690)
                  %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc690)
                  %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc370)
                  %59 = cir.const #cir.int<1> : !s32i loc(#loc371)
                  %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc371)
                  %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc691)
                  cir.if %61 {
                    cir.break loc(#loc373)
                  } loc(#loc692)
                } loc(#loc688)
                %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc374)
                %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc375)
                %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc375)
                %34 = cir.const #cir.int<3> : !s32i loc(#loc376)
                %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc376)
                %36 = cir.const #cir.int<4> : !u64i loc(#loc376)
                %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc376)
                %38 = cir.const #cir.int<2> : !s32i loc(#loc376)
                %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc376)
                %40 = cir.binop(add, %37, %39) : !u64i loc(#loc376)
                %41 = cir.const #cir.int<1> : !s32i loc(#loc377)
                %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc377)
                %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc693)
                %44 = cir.const #cir.int<0> : !s32i loc(#loc378)
                %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc379)
                %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc379)
                cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc694)
                cir.scope {
                  %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc384)
                  %55 = cir.const #cir.int<1> : !s32i loc(#loc385)
                  %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc385)
                  %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc696)
                  %58 = cir.ternary(%57, true {
                    %59 = cir.const #true loc(#loc386)
                    cir.yield %59 : !cir.bool loc(#loc386)
                  }, false {
                    %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc387)
                    %60 = cir.const #cir.int<0> : !s32i loc(#loc388)
                    %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc697)
                    %62 = cir.ternary(%61, true {
                      %63 = cir.const #true loc(#loc386)
                      cir.yield %63 : !cir.bool loc(#loc386)
                    }, false {
                      %63 = cir.const #false loc(#loc386)
                      cir.yield %63 : !cir.bool loc(#loc386)
                    }) : (!cir.bool) -> !cir.bool loc(#loc386)
                    cir.yield %62 : !cir.bool loc(#loc386)
                  }) : (!cir.bool) -> !cir.bool loc(#loc386)
                  cir.if %58 {
                    cir.break loc(#loc390)
                  } loc(#loc698)
                } loc(#loc695)
                %47 = cir.const #cir.int<0> : !s32i loc(#loc391)
                %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc391)
                %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc392)
                %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc393)
                %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc393)
                cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc699)
                %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc394)
                %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc395)
                cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc700)
              } loc(#loc677)
              cir.yield loc(#loc331)
            } while {
              %12 = cir.const #cir.int<0> : !s32i loc(#loc398)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc398)
              cir.condition(%13) loc(#loc398)
            } loc(#loc676)
          } loc(#loc676)
          cir.scope {
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc401)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc402)
            %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc402)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc702)
            cir.if %15 {
              %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc404)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc405)
            } loc(#loc703)
          } loc(#loc701)
        } loc(#loc671)
      } loc(#loc670)
    } loc(#loc669)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc545)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc408)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc408)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc707)
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc708)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc708)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc708)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc418)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc419)
            %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc710)
            %12 = cir.ternary(%11, true {
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc421)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc422)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc711)
              %16 = cir.ternary(%15, true {
                %17 = cir.const #true loc(#loc420)
                cir.yield %17 : !cir.bool loc(#loc420)
              }, false {
                %17 = cir.const #false loc(#loc420)
                cir.yield %17 : !cir.bool loc(#loc420)
              }) : (!cir.bool) -> !cir.bool loc(#loc420)
              cir.yield %16 : !cir.bool loc(#loc420)
            }, false {
              %13 = cir.const #false loc(#loc420)
              cir.yield %13 : !cir.bool loc(#loc420)
            }) : (!cir.bool) -> !cir.bool loc(#loc420)
            cir.if %12 {
              %13 = cir.const #cir.int<1> : !s32i loc(#loc427)
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc428)
              %15 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc429)
              %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc429)
              cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc713)
              cir.scope {
                %17 = cir.const #cir.int<0> : !s32i loc(#loc432)
                cir.store %17, %6 : !s32i, !cir.ptr<!s32i> loc(#loc715)
                cir.for : cond {
                  %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc434)
                  %19 = cir.const #cir.int<10> : !s32i loc(#loc435)
                  %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc716)
                  cir.condition(%20) loc(#loc436)
                } body {
                  cir.scope {
                    %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc438)
                    %19 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc439)
                    %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc439)
                    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc439)
                    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc440)
                  } loc(#loc717)
                  cir.yield loc(#loc431)
                } step {
                  %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc441)
                  %19 = cir.unary(inc, %18) nsw : !s32i, !s32i loc(#loc442)
                  cir.store %19, %6 : !s32i, !cir.ptr<!s32i> loc(#loc718)
                  cir.yield loc(#loc714)
                } loc(#loc714)
              } loc(#loc714)
            } else {
              %13 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc443)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc443)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc444)
            } loc(#loc712)
          } loc(#loc709)
        } loc(#loc706)
      } loc(#loc705)
    } loc(#loc704)
    cir.return loc(#loc310)
  } loc(#loc666)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc720)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc449)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc450)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc721)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_FALSE : !cir.ptr<!s32i> loc(#loc612)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc454)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc454)
      cir.if %5 {
        %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc458)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc458)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc459)
      } else {
        %6 = cir.const #cir.int<7> : !s32i loc(#loc460)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc724)
      } loc(#loc723)
    } loc(#loc722)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc545)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc464)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc464)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc728)
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc729)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc729)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc729)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc474)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc475)
            %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc731)
            cir.if %11 {
              %12 = cir.const #cir.int<1> : !s32i loc(#loc479)
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc480)
              %14 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc481)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc481)
              cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc733)
              cir.scope {
                %16 = cir.const #cir.int<0> : !s32i loc(#loc484)
                cir.store %16, %6 : !s32i, !cir.ptr<!s32i> loc(#loc735)
                cir.for : cond {
                  %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc486)
                  %18 = cir.const #cir.int<10> : !s32i loc(#loc487)
                  %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc736)
                  cir.condition(%19) loc(#loc488)
                } body {
                  cir.scope {
                    %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc490)
                    %18 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc491)
                    %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc491)
                    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc491)
                    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc492)
                  } loc(#loc737)
                  cir.yield loc(#loc483)
                } step {
                  %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc493)
                  %18 = cir.unary(inc, %17) nsw : !s32i, !s32i loc(#loc494)
                  cir.store %18, %6 : !s32i, !cir.ptr<!s32i> loc(#loc738)
                  cir.yield loc(#loc734)
                } loc(#loc734)
              } loc(#loc734)
            } else {
              %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc495)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc495)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc496)
            } loc(#loc732)
          } loc(#loc730)
        } loc(#loc727)
      } loc(#loc726)
    } loc(#loc725)
    cir.return loc(#loc446)
  } loc(#loc719)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc740)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc501)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc502)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc741)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc545)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc506)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc506)
      cir.if %5 {
        %6 = cir.const #cir.int<7> : !s32i loc(#loc508)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc744)
      } loc(#loc743)
    } loc(#loc742)
    cir.scope {
      %3 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc545)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc512)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc512)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc748)
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc749)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc749)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc749)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc522)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc523)
            %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc751)
            cir.if %11 {
              %12 = cir.const #cir.int<1> : !s32i loc(#loc527)
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc528)
              %14 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc529)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc529)
              cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc753)
              cir.scope {
                %16 = cir.const #cir.int<0> : !s32i loc(#loc532)
                cir.store %16, %6 : !s32i, !cir.ptr<!s32i> loc(#loc755)
                cir.for : cond {
                  %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc534)
                  %18 = cir.const #cir.int<10> : !s32i loc(#loc535)
                  %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc756)
                  cir.condition(%19) loc(#loc536)
                } body {
                  cir.scope {
                    %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc538)
                    %18 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc539)
                    %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc539)
                    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc539)
                    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc540)
                  } loc(#loc757)
                  cir.yield loc(#loc531)
                } step {
                  %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc541)
                  %18 = cir.unary(inc, %17) nsw : !s32i, !s32i loc(#loc542)
                  cir.store %18, %6 : !s32i, !cir.ptr<!s32i> loc(#loc758)
                  cir.yield loc(#loc754)
                } loc(#loc754)
              } loc(#loc754)
            } else {
              %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc543)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc543)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc544)
            } loc(#loc752)
          } loc(#loc750)
        } loc(#loc747)
      } loc(#loc746)
    } loc(#loc745)
    cir.return loc(#loc498)
  } loc(#loc739)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":109:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":109:18)
#loc3 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc4 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc5 = loc("/usr/include/arpa/inet.h":34:1)
#loc6 = loc("/usr/include/arpa/inet.h":34:47)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":77:53)
#loc8 = loc("/usr/include/netinet/in.h":402:1)
#loc9 = loc("/usr/include/netinet/in.h":403:40)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc14 = loc("/usr/include/stdlib.h":105:1)
#loc15 = loc("/usr/include/stdlib.h":106:33)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc21 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":126:27)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":44:1)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":130:1)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":46:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":46:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":48:13)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":48:12)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":48:5)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":49:5)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":107:5)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":49:8)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":50:5)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":51:9)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":106:9)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":56:13)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":56:17)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":57:13)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":57:32)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":58:13)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":58:36)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":59:13)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":59:45)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":60:13)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":95:21)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":61:13)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":94:13)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":70:40)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":70:49)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":70:62)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":70:33)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":70:17)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":70:73)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":71:17)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":74:17)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":71:21)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":71:38)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":72:17)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":73:21)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":75:24)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":75:25)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":75:34)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":75:37)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":75:51)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":75:17)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":75:52)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":76:38)
#loc68 = loc("/usr/include/netinet/in.h":249:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":76:17)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":77:43)
#loc71 = loc("/usr/include/netinet/in.h":251:20)
#loc72 = loc("/usr/include/netinet/in.h":33:15)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":77:17)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":77:63)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":78:42)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":78:36)
#loc77 = loc("/usr/include/netinet/in.h":250:15)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":78:17)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":78:50)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":79:17)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":82:17)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":79:29)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":79:62)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":79:63)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":79:72)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":79:86)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":79:21)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":79:92)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":80:17)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":81:21)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":85:35)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":85:50)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":85:63)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":85:81)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":85:84)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":85:30)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":85:17)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":85:85)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":86:17)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":89:17)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":86:21)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":86:35)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":86:48)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":86:51)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":86:65)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":87:17)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":88:21)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":91:43)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":91:29)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":91:17)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":93:29)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":93:24)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":93:17)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":93:40)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":95:20)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":96:13)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":99:13)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":96:17)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":96:34)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":97:13)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":98:30)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":98:17)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":108:5)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":129:5)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":108:8)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":109:5)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":110:9)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":128:9)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":111:13)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":111:17)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":112:13)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":112:34)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":115:13)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":127:13)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":115:17)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":115:25)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":116:13)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":123:13)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":125:13)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":117:32)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":117:24)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":117:17)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":119:17)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":122:17)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":119:25)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":119:21)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":119:28)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":119:32)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":119:30)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":120:17)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":121:41)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":121:34)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":121:21)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":119:37)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":119:36)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":126:17)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":394:1)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":400:1)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":396:5)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":396:14)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":397:5)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":397:14)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":398:5)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":398:14)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":399:5)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":399:14)
#loc167 = loc("../../../testcasesupport/std_testcase.h":110:1)
#loc168 = loc("../../../testcasesupport/std_testcase.h":110:18)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":204:19)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":223:27)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":137:1)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":227:1)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":139:5)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":139:9)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":141:13)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":141:12)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":141:5)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":142:5)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":200:5)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":142:8)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":143:5)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":144:9)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":199:9)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":149:13)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":149:17)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":150:13)
#loc187 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":150:32)
#loc188 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":151:13)
#loc189 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":151:36)
#loc190 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":152:13)
#loc191 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":152:45)
#loc192 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":153:13)
#loc193 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":188:21)
#loc194 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":154:13)
#loc195 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":187:13)
#loc196 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":163:40)
#loc197 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":163:49)
#loc198 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":163:62)
#loc199 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":163:33)
#loc200 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":163:17)
#loc201 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":163:73)
#loc202 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":164:17)
#loc203 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":167:17)
#loc204 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":164:21)
#loc205 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":164:38)
#loc206 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":165:17)
#loc207 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":166:21)
#loc208 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":168:24)
#loc209 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":168:25)
#loc210 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":168:34)
#loc211 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":168:37)
#loc212 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":168:51)
#loc213 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":168:17)
#loc214 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":168:52)
#loc215 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":169:38)
#loc216 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":169:17)
#loc217 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":170:53)
#loc218 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":170:43)
#loc219 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":170:17)
#loc220 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":170:63)
#loc221 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":171:42)
#loc222 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":171:36)
#loc223 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":171:17)
#loc224 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":171:50)
#loc225 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":172:17)
#loc226 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":175:17)
#loc227 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":172:29)
#loc228 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":172:62)
#loc229 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":172:63)
#loc230 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":172:72)
#loc231 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":172:86)
#loc232 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":172:21)
#loc233 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":172:92)
#loc234 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":173:17)
#loc235 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":174:21)
#loc236 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":178:35)
#loc237 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":178:50)
#loc238 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":178:63)
#loc239 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":178:81)
#loc240 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":178:84)
#loc241 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":178:30)
#loc242 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":178:17)
#loc243 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":178:85)
#loc244 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":179:17)
#loc245 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":182:17)
#loc246 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":179:21)
#loc247 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":179:35)
#loc248 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":179:48)
#loc249 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":179:51)
#loc250 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":179:65)
#loc251 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":180:17)
#loc252 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":181:21)
#loc253 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":184:43)
#loc254 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":184:29)
#loc255 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":184:17)
#loc256 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":186:29)
#loc257 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":186:24)
#loc258 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":186:17)
#loc259 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":186:40)
#loc260 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":188:20)
#loc261 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":189:13)
#loc262 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":192:13)
#loc263 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":189:17)
#loc264 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":189:34)
#loc265 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":190:13)
#loc266 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":191:30)
#loc267 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":191:17)
#loc268 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":201:5)
#loc269 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":226:5)
#loc270 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":201:8)
#loc271 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":202:5)
#loc272 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":205:5)
#loc273 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":207:5)
#loc274 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":204:9)
#loc275 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":208:9)
#loc276 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":225:9)
#loc277 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":209:13)
#loc278 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":209:17)
#loc279 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":210:13)
#loc280 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":210:34)
#loc281 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":212:13)
#loc282 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":224:13)
#loc283 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":212:17)
#loc284 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":212:25)
#loc285 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":212:27)
#loc286 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":212:30)
#loc287 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":212:38)
#loc288 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":212:40)
#loc289 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":213:13)
#loc290 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":220:13)
#loc291 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":222:13)
#loc292 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":214:32)
#loc293 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":214:24)
#loc294 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":214:17)
#loc295 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":216:17)
#loc296 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":219:17)
#loc297 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":216:25)
#loc298 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":216:21)
#loc299 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":216:28)
#loc300 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":216:32)
#loc301 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":216:30)
#loc302 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":217:17)
#loc303 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":218:41)
#loc304 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":218:34)
#loc305 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":218:21)
#loc306 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":216:37)
#loc307 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":216:36)
#loc308 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":223:17)
#loc309 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":230:1)
#loc310 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":315:1)
#loc311 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":232:5)
#loc312 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":232:9)
#loc313 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":234:13)
#loc314 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":234:12)
#loc315 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":234:5)
#loc316 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":235:5)
#loc317 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":293:5)
#loc318 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":235:8)
#loc319 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":236:5)
#loc320 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":237:9)
#loc321 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":292:9)
#loc322 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":242:13)
#loc323 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":242:17)
#loc324 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":243:13)
#loc325 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":243:32)
#loc326 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":244:13)
#loc327 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":244:36)
#loc328 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":245:13)
#loc329 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":245:45)
#loc330 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":246:13)
#loc331 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":281:21)
#loc332 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":247:13)
#loc333 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":280:13)
#loc334 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":256:40)
#loc335 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":256:49)
#loc336 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":256:62)
#loc337 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":256:33)
#loc338 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":256:17)
#loc339 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":256:73)
#loc340 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":257:17)
#loc341 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":260:17)
#loc342 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":257:21)
#loc343 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":257:38)
#loc344 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":258:17)
#loc345 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":259:21)
#loc346 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":261:24)
#loc347 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":261:25)
#loc348 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":261:34)
#loc349 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":261:37)
#loc350 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":261:51)
#loc351 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":261:17)
#loc352 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":261:52)
#loc353 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":262:38)
#loc354 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":262:17)
#loc355 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":263:53)
#loc356 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":263:43)
#loc357 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":263:17)
#loc358 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":263:63)
#loc359 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":264:42)
#loc360 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":264:36)
#loc361 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":264:17)
#loc362 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":264:50)
#loc363 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":265:17)
#loc364 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":268:17)
#loc365 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":265:29)
#loc366 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":265:62)
#loc367 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":265:63)
#loc368 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":265:72)
#loc369 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":265:86)
#loc370 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":265:21)
#loc371 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":265:92)
#loc372 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":266:17)
#loc373 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":267:21)
#loc374 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":271:35)
#loc375 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":271:50)
#loc376 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":271:63)
#loc377 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":271:81)
#loc378 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":271:84)
#loc379 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":271:30)
#loc380 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":271:17)
#loc381 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":271:85)
#loc382 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":272:17)
#loc383 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":275:17)
#loc384 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":272:21)
#loc385 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":272:35)
#loc386 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":272:48)
#loc387 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":272:51)
#loc388 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":272:65)
#loc389 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":273:17)
#loc390 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":274:21)
#loc391 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":277:43)
#loc392 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":277:29)
#loc393 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":277:17)
#loc394 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":279:29)
#loc395 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":279:24)
#loc396 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":279:17)
#loc397 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":279:40)
#loc398 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":281:20)
#loc399 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":282:13)
#loc400 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":285:13)
#loc401 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":282:17)
#loc402 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":282:34)
#loc403 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":283:13)
#loc404 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":284:30)
#loc405 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":284:17)
#loc406 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":294:5)
#loc407 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":314:5)
#loc408 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":294:8)
#loc409 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":295:5)
#loc410 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":296:9)
#loc411 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":313:9)
#loc412 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":297:13)
#loc413 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":297:17)
#loc414 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":298:13)
#loc415 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":298:34)
#loc416 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":300:13)
#loc417 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":312:13)
#loc418 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":300:17)
#loc419 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":300:25)
#loc420 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":300:27)
#loc421 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":300:30)
#loc422 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":300:38)
#loc423 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":300:40)
#loc424 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":301:13)
#loc425 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":308:13)
#loc426 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":310:13)
#loc427 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":302:32)
#loc428 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":302:24)
#loc429 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":302:17)
#loc430 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":304:17)
#loc431 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":307:17)
#loc432 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":304:25)
#loc433 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":304:21)
#loc434 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":304:28)
#loc435 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":304:32)
#loc436 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":304:30)
#loc437 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":305:17)
#loc438 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":306:41)
#loc439 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":306:34)
#loc440 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":306:21)
#loc441 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":304:37)
#loc442 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":304:36)
#loc443 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":311:27)
#loc444 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":311:17)
#loc445 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":318:1)
#loc446 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":356:1)
#loc447 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":320:5)
#loc448 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":320:9)
#loc449 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":322:13)
#loc450 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":322:12)
#loc451 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":322:5)
#loc452 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":323:5)
#loc453 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":333:5)
#loc454 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":323:8)
#loc455 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":324:5)
#loc456 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":327:5)
#loc457 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":329:5)
#loc458 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":326:19)
#loc459 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":326:9)
#loc460 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":332:16)
#loc461 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":332:9)
#loc462 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":334:5)
#loc463 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":355:5)
#loc464 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":334:8)
#loc465 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":335:5)
#loc466 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":336:9)
#loc467 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":354:9)
#loc468 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":337:13)
#loc469 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":337:17)
#loc470 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":338:13)
#loc471 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":338:34)
#loc472 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":341:13)
#loc473 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":353:13)
#loc474 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":341:17)
#loc475 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":341:25)
#loc476 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":342:13)
#loc477 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":349:13)
#loc478 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":351:13)
#loc479 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":343:32)
#loc480 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":343:24)
#loc481 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":343:17)
#loc482 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":345:17)
#loc483 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":348:17)
#loc484 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":345:25)
#loc485 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":345:21)
#loc486 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":345:28)
#loc487 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":345:32)
#loc488 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":345:30)
#loc489 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":346:17)
#loc490 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":347:41)
#loc491 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":347:34)
#loc492 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":347:21)
#loc493 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":345:37)
#loc494 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":345:36)
#loc495 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":352:27)
#loc496 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":352:17)
#loc497 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":359:1)
#loc498 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":392:1)
#loc499 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":361:5)
#loc500 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":361:9)
#loc501 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":363:13)
#loc502 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":363:12)
#loc503 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":363:5)
#loc504 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":364:5)
#loc505 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":369:5)
#loc506 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":364:8)
#loc507 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":365:5)
#loc508 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":368:16)
#loc509 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":368:9)
#loc510 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":370:5)
#loc511 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":391:5)
#loc512 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":370:8)
#loc513 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":371:5)
#loc514 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":372:9)
#loc515 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":390:9)
#loc516 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":373:13)
#loc517 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":373:17)
#loc518 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":374:13)
#loc519 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":374:34)
#loc520 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":377:13)
#loc521 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":389:13)
#loc522 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":377:17)
#loc523 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":377:25)
#loc524 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":378:13)
#loc525 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":385:13)
#loc526 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":387:13)
#loc527 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":379:32)
#loc528 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":379:24)
#loc529 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":379:17)
#loc530 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":381:17)
#loc531 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":384:17)
#loc532 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":381:25)
#loc533 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":381:21)
#loc534 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":381:28)
#loc535 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":381:32)
#loc536 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":381:30)
#loc537 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":382:17)
#loc538 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":383:41)
#loc539 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":383:34)
#loc540 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":383:21)
#loc541 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":381:37)
#loc542 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":381:36)
#loc543 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":388:27)
#loc544 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_09.c":388:17)
#loc545 = loc(fused[#loc1, #loc2])
#loc546 = loc(fused[#loc3, #loc4])
#loc547 = loc(fused[#loc5, #loc6])
#loc548 = loc(fused[#loc8, #loc9])
#loc549 = loc(fused[#loc10, #loc11])
#loc550 = loc(fused[#loc12, #loc13])
#loc551 = loc(fused[#loc14, #loc15])
#loc552 = loc(fused[#loc16, #loc17])
#loc553 = loc(fused[#loc18, #loc19])
#loc554 = loc(fused[#loc20, #loc21])
#loc555 = loc(fused[#loc23, #loc24])
#loc556 = loc(fused[#loc25, #loc26])
#loc557 = loc(fused[#loc29, #loc27])
#loc558 = loc(fused[#loc30, #loc31])
#loc559 = loc(fused[#loc33, #loc31])
#loc560 = loc(fused[#loc34, #loc35])
#loc561 = loc(fused[#loc36, #loc37])
#loc562 = loc(fused[#loc38, #loc39])
#loc563 = loc(fused[#loc40, #loc41])
#loc564 = loc(fused[#loc42, #loc43])
#loc565 = loc(fused[#loc44, #loc45])
#loc566 = loc(fused[#loc46, #loc47])
#loc567 = loc(fused[#loc52, #loc53])
#loc568 = loc(fused[#loc54, #loc55])
#loc569 = loc(fused[#loc56, #loc57])
#loc570 = loc(fused[#loc58, #loc55])
#loc571 = loc(fused[#loc60, #loc61])
#loc572 = loc(fused[#loc63, #loc64])
#loc573 = loc(fused[#loc65, #loc66])
#loc574 = loc(fused[#loc69, #loc67])
#loc575 = loc(fused[#loc73, #loc74])
#loc576 = loc(fused[#loc78, #loc79])
#loc577 = loc(fused[#loc80, #loc81])
#loc578 = loc(fused[#loc83, #loc84])
#loc579 = loc(fused[#loc85, #loc86])
#loc580 = loc(fused[#loc87, #loc88])
#loc581 = loc(fused[#loc89, #loc81])
#loc582 = loc(fused[#loc93, #loc94])
#loc583 = loc(fused[#loc97, #loc98])
#loc584 = loc(fused[#loc99, #loc100])
#loc585 = loc(fused[#loc101, #loc102])
#loc586 = loc(fused[#loc104, #loc105])
#loc587 = loc(fused[#loc106, #loc100])
#loc588 = loc(fused[#loc110, #loc108])
#loc589 = loc(fused[#loc113, #loc114])
#loc590 = loc(fused[#loc116, #loc117])
#loc591 = loc(fused[#loc118, #loc119])
#loc592 = loc(fused[#loc120, #loc117])
#loc593 = loc(fused[#loc123, #loc124])
#loc594 = loc(fused[#loc126, #loc124])
#loc595 = loc(fused[#loc127, #loc128])
#loc596 = loc(fused[#loc129, #loc130])
#loc597 = loc(fused[#loc131, #loc132])
#loc598 = loc(fused[#loc133, #loc134])
#loc599 = loc(fused[#loc135, #loc136])
#loc600 = loc(fused[#loc137, #loc138, #loc139, #loc134])
#loc601 = loc(fused[#loc142, #loc140])
#loc602 = loc(fused[#loc143, #loc144])
#loc603 = loc(fused[#loc146, #loc145])
#loc604 = loc(fused[#loc147, #loc148])
#loc605 = loc(fused[#loc150, #loc144])
#loc606 = loc(fused[#loc155, #loc154])
#loc607 = loc(fused[#loc157, #loc158])
#loc608 = loc(fused[#loc159, #loc160])
#loc609 = loc(fused[#loc161, #loc162])
#loc610 = loc(fused[#loc163, #loc164])
#loc611 = loc(fused[#loc165, #loc166])
#loc612 = loc(fused[#loc167, #loc168])
#loc613 = loc(fused[#loc171, #loc172])
#loc614 = loc(fused[#loc173, #loc174])
#loc615 = loc(fused[#loc177, #loc175])
#loc616 = loc(fused[#loc178, #loc179])
#loc617 = loc(fused[#loc181, #loc179])
#loc618 = loc(fused[#loc182, #loc183])
#loc619 = loc(fused[#loc184, #loc185])
#loc620 = loc(fused[#loc186, #loc187])
#loc621 = loc(fused[#loc188, #loc189])
#loc622 = loc(fused[#loc190, #loc191])
#loc623 = loc(fused[#loc192, #loc193])
#loc624 = loc(fused[#loc194, #loc195])
#loc625 = loc(fused[#loc200, #loc201])
#loc626 = loc(fused[#loc202, #loc203])
#loc627 = loc(fused[#loc204, #loc205])
#loc628 = loc(fused[#loc206, #loc203])
#loc629 = loc(fused[#loc208, #loc209])
#loc630 = loc(fused[#loc211, #loc212])
#loc631 = loc(fused[#loc213, #loc214])
#loc632 = loc(fused[#loc216, #loc215])
#loc633 = loc(fused[#loc219, #loc220])
#loc634 = loc(fused[#loc223, #loc224])
#loc635 = loc(fused[#loc225, #loc226])
#loc636 = loc(fused[#loc228, #loc229])
#loc637 = loc(fused[#loc230, #loc231])
#loc638 = loc(fused[#loc232, #loc233])
#loc639 = loc(fused[#loc234, #loc226])
#loc640 = loc(fused[#loc238, #loc239])
#loc641 = loc(fused[#loc242, #loc243])
#loc642 = loc(fused[#loc244, #loc245])
#loc643 = loc(fused[#loc246, #loc247])
#loc644 = loc(fused[#loc249, #loc250])
#loc645 = loc(fused[#loc251, #loc245])
#loc646 = loc(fused[#loc255, #loc253])
#loc647 = loc(fused[#loc258, #loc259])
#loc648 = loc(fused[#loc261, #loc262])
#loc649 = loc(fused[#loc263, #loc264])
#loc650 = loc(fused[#loc265, #loc262])
#loc651 = loc(fused[#loc268, #loc269])
#loc652 = loc(fused[#loc271, #loc272, #loc273, #loc269])
#loc653 = loc(fused[#loc275, #loc276])
#loc654 = loc(fused[#loc277, #loc278])
#loc655 = loc(fused[#loc279, #loc280])
#loc656 = loc(fused[#loc281, #loc282])
#loc657 = loc(fused[#loc283, #loc284])
#loc658 = loc(fused[#loc286, #loc288])
#loc659 = loc(fused[#loc289, #loc290, #loc291, #loc282])
#loc660 = loc(fused[#loc294, #loc292])
#loc661 = loc(fused[#loc295, #loc296])
#loc662 = loc(fused[#loc298, #loc297])
#loc663 = loc(fused[#loc299, #loc300])
#loc664 = loc(fused[#loc302, #loc296])
#loc665 = loc(fused[#loc307, #loc306])
#loc666 = loc(fused[#loc309, #loc310])
#loc667 = loc(fused[#loc311, #loc312])
#loc668 = loc(fused[#loc315, #loc313])
#loc669 = loc(fused[#loc316, #loc317])
#loc670 = loc(fused[#loc319, #loc317])
#loc671 = loc(fused[#loc320, #loc321])
#loc672 = loc(fused[#loc322, #loc323])
#loc673 = loc(fused[#loc324, #loc325])
#loc674 = loc(fused[#loc326, #loc327])
#loc675 = loc(fused[#loc328, #loc329])
#loc676 = loc(fused[#loc330, #loc331])
#loc677 = loc(fused[#loc332, #loc333])
#loc678 = loc(fused[#loc338, #loc339])
#loc679 = loc(fused[#loc340, #loc341])
#loc680 = loc(fused[#loc342, #loc343])
#loc681 = loc(fused[#loc344, #loc341])
#loc682 = loc(fused[#loc346, #loc347])
#loc683 = loc(fused[#loc349, #loc350])
#loc684 = loc(fused[#loc351, #loc352])
#loc685 = loc(fused[#loc354, #loc353])
#loc686 = loc(fused[#loc357, #loc358])
#loc687 = loc(fused[#loc361, #loc362])
#loc688 = loc(fused[#loc363, #loc364])
#loc689 = loc(fused[#loc366, #loc367])
#loc690 = loc(fused[#loc368, #loc369])
#loc691 = loc(fused[#loc370, #loc371])
#loc692 = loc(fused[#loc372, #loc364])
#loc693 = loc(fused[#loc376, #loc377])
#loc694 = loc(fused[#loc380, #loc381])
#loc695 = loc(fused[#loc382, #loc383])
#loc696 = loc(fused[#loc384, #loc385])
#loc697 = loc(fused[#loc387, #loc388])
#loc698 = loc(fused[#loc389, #loc383])
#loc699 = loc(fused[#loc393, #loc391])
#loc700 = loc(fused[#loc396, #loc397])
#loc701 = loc(fused[#loc399, #loc400])
#loc702 = loc(fused[#loc401, #loc402])
#loc703 = loc(fused[#loc403, #loc400])
#loc704 = loc(fused[#loc406, #loc407])
#loc705 = loc(fused[#loc409, #loc407])
#loc706 = loc(fused[#loc410, #loc411])
#loc707 = loc(fused[#loc412, #loc413])
#loc708 = loc(fused[#loc414, #loc415])
#loc709 = loc(fused[#loc416, #loc417])
#loc710 = loc(fused[#loc418, #loc419])
#loc711 = loc(fused[#loc421, #loc423])
#loc712 = loc(fused[#loc424, #loc425, #loc426, #loc417])
#loc713 = loc(fused[#loc429, #loc427])
#loc714 = loc(fused[#loc430, #loc431])
#loc715 = loc(fused[#loc433, #loc432])
#loc716 = loc(fused[#loc434, #loc435])
#loc717 = loc(fused[#loc437, #loc431])
#loc718 = loc(fused[#loc442, #loc441])
#loc719 = loc(fused[#loc445, #loc446])
#loc720 = loc(fused[#loc447, #loc448])
#loc721 = loc(fused[#loc451, #loc449])
#loc722 = loc(fused[#loc452, #loc453])
#loc723 = loc(fused[#loc455, #loc456, #loc457, #loc453])
#loc724 = loc(fused[#loc461, #loc460])
#loc725 = loc(fused[#loc462, #loc463])
#loc726 = loc(fused[#loc465, #loc463])
#loc727 = loc(fused[#loc466, #loc467])
#loc728 = loc(fused[#loc468, #loc469])
#loc729 = loc(fused[#loc470, #loc471])
#loc730 = loc(fused[#loc472, #loc473])
#loc731 = loc(fused[#loc474, #loc475])
#loc732 = loc(fused[#loc476, #loc477, #loc478, #loc473])
#loc733 = loc(fused[#loc481, #loc479])
#loc734 = loc(fused[#loc482, #loc483])
#loc735 = loc(fused[#loc485, #loc484])
#loc736 = loc(fused[#loc486, #loc487])
#loc737 = loc(fused[#loc489, #loc483])
#loc738 = loc(fused[#loc494, #loc493])
#loc739 = loc(fused[#loc497, #loc498])
#loc740 = loc(fused[#loc499, #loc500])
#loc741 = loc(fused[#loc503, #loc501])
#loc742 = loc(fused[#loc504, #loc505])
#loc743 = loc(fused[#loc507, #loc505])
#loc744 = loc(fused[#loc509, #loc508])
#loc745 = loc(fused[#loc510, #loc511])
#loc746 = loc(fused[#loc513, #loc511])
#loc747 = loc(fused[#loc514, #loc515])
#loc748 = loc(fused[#loc516, #loc517])
#loc749 = loc(fused[#loc518, #loc519])
#loc750 = loc(fused[#loc520, #loc521])
#loc751 = loc(fused[#loc522, #loc523])
#loc752 = loc(fused[#loc524, #loc525, #loc526, #loc521])
#loc753 = loc(fused[#loc529, #loc527])
#loc754 = loc(fused[#loc530, #loc531])
#loc755 = loc(fused[#loc533, #loc532])
#loc756 = loc(fused[#loc534, #loc535])
#loc757 = loc(fused[#loc537, #loc531])
#loc758 = loc(fused[#loc542, #loc541])
