!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":23:21)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":23:28)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":93:10)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":93:14)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":93:20)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":93:32)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":52:25)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":52:32)
#loc127 = loc(fused[#loc5, #loc6])
#loc143 = loc(fused[#loc54, #loc55])
#loc144 = loc(fused[#loc56, #loc57])
#loc149 = loc(fused[#loc74, #loc75])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc125)
  cir.func internal private @badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc5, #loc6])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc127)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc7)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc8)
    cir.call @printLine(%1) : (!cir.ptr<!s8i>) -> () loc(#loc9)
    %2 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc10)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc11)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc11)
    cir.call @free(%4) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc10)
    cir.return loc(#loc4)
  } loc(#loc126)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_char_declare_44_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc129)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc130)
    %2 = cir.get_global @badSink : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc17)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>> loc(#loc130)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc18)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc131)
    cir.scope {
      %6 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc133)
      %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc24)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc24)
      %9 = cir.const #cir.int<65> : !s32i loc(#loc25)
      %10 = cir.const #cir.int<100> : !s32i loc(#loc26)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc27)
      %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc26)
      %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc26)
      cir.libc.memset %13 bytes from %8 set to %9 : !cir.ptr<!void>, !s32i, !u64i loc(#loc134)
      %14 = cir.const #cir.int<0> : !s32i loc(#loc30)
      %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc30)
      %16 = cir.const #cir.int<100> : !s32i loc(#loc31)
      %17 = cir.const #cir.int<1> : !s32i loc(#loc32)
      %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc31)
      %19 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc33)
      %20 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc33)
      cir.store %15, %20 : !s8i, !cir.ptr<!s8i> loc(#loc135)
      %21 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc34)
      cir.store %21, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc136)
    } loc(#loc132)
    %4 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc36)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    cir.call %4(%5) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc36)
    cir.return loc(#loc13)
  } loc(#loc128)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_char_declare_44_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc138)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    cir.return loc(#loc39)
  } loc(#loc137)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc139)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc140)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc141)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc48)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc49)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc50)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc51)
  cir.func @main(%arg0: !s32i loc(fused[#loc54, #loc55]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc56, #loc57])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc143)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc144)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc53)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc58)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc58)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc59)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc60)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc60)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc61)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc48)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %8 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_char_declare_44_good : !cir.ptr<!cir.func<!void ()>> loc(#loc145)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_char_declare_44_good() : () -> () loc(#loc63)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc49)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc50)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %13 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_char_declare_44_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc146)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_char_declare_44_bad() : () -> () loc(#loc67)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc51)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc70)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc147)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc147)
    cir.return %17 : !s32i loc(#loc147)
  } loc(#loc142)
  cir.func internal private @goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc74, #loc75])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc149)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc76)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
    cir.call @printLine(%1) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    %2 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc79)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc80)
    cir.call @free(%4) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc79)
    cir.return loc(#loc73)
  } loc(#loc148)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc150)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc83)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc151)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc153)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc154)
    %2 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc91)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>> loc(#loc154)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc92)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc155)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc157)
      %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc98)
      %8 = cir.const #cir.int<100> : !s32i loc(#loc99)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc99)
      %10 = cir.const #cir.int<1> : !u64i loc(#loc158)
      %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc159)
      %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc98)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc160)
      cir.store %13, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc157)
      cir.scope {
        %29 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
        %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc105)
        %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc105)
        %32 = cir.cmp(eq, %29, %31) : !cir.ptr<!s8i>, !cir.bool loc(#loc162)
        cir.if %32 {
          %33 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc83)
          %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc83)
          cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc107)
          %35 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc108)
          %36 = cir.const #cir.int<1> : !s32i loc(#loc109)
          cir.call @exit(%36) : (!s32i) -> () extra(#fn_attr) loc(#loc108)
        } loc(#loc163)
      } loc(#loc161)
      %14 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
      %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc110)
      %16 = cir.const #cir.int<65> : !s32i loc(#loc111)
      %17 = cir.const #cir.int<100> : !s32i loc(#loc112)
      %18 = cir.const #cir.int<1> : !s32i loc(#loc113)
      %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc112)
      %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc112)
      cir.libc.memset %20 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc164)
      %21 = cir.const #cir.int<0> : !s32i loc(#loc116)
      %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc116)
      %23 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
      %24 = cir.const #cir.int<100> : !s32i loc(#loc118)
      %25 = cir.const #cir.int<1> : !s32i loc(#loc119)
      %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc118)
      %27 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc120)
      cir.store %22, %27 : !s8i, !cir.ptr<!s8i> loc(#loc165)
      %28 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
      cir.store %28, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc166)
    } loc(#loc156)
    %4 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc123)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc124)
    cir.call %4(%5) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc123)
    cir.return loc(#loc87)
  } loc(#loc152)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":687:1)
#loc2 = loc("/usr/include/stdlib.h":687:32)
#loc3 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":23:1)
#loc4 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":28:1)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":24:1)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":25:15)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":25:5)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":27:5)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":27:10)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":30:1)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":45:1)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":32:5)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":32:12)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":34:5)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":34:32)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":35:12)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":35:5)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":36:5)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":42:5)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":38:9)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":38:28)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":39:16)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":39:28)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":39:33)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":39:37)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":39:9)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":39:38)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":40:29)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":40:20)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":40:24)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":40:9)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":41:16)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":41:9)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":44:5)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":44:13)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":79:1)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":82:1)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":81:5)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":81:13)
#loc42 = loc("/usr/include/stdlib.h":575:1)
#loc43 = loc("/usr/include/stdlib.h":575:41)
#loc44 = loc("/usr/include/time.h":76:1)
#loc45 = loc("/usr/include/time.h":76:38)
#loc46 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc47 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":98:15)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":100:15)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":103:15)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":105:15)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":93:1)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":108:1)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":94:1)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":96:27)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":96:22)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":96:5)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":98:5)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":99:5)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":99:63)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":100:5)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":103:5)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":104:5)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":104:62)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":105:5)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":107:12)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":107:5)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":52:1)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":57:1)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":53:1)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":54:15)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":54:5)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":56:5)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":56:10)
#loc81 = loc("/usr/include/stdlib.h":672:1)
#loc82 = loc("/usr/include/stdlib.h":672:45)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":69:23)
#loc84 = loc("/usr/include/stdlib.h":756:1)
#loc85 = loc("/usr/include/stdlib.h":756:70)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":59:1)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":77:1)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":61:5)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":61:12)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":62:5)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":62:32)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":63:12)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":63:5)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":64:5)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":75:5)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":66:9)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":66:60)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":66:37)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":66:44)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":66:48)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":66:59)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":67:9)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":71:9)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":67:13)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":67:27)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":68:9)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":69:13)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":70:13)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":70:18)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":72:16)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":72:28)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":72:33)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":72:37)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":72:9)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":72:38)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":73:29)
#loc117 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":73:9)
#loc118 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":73:20)
#loc119 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":73:24)
#loc120 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":73:25)
#loc121 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":74:16)
#loc122 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":74:9)
#loc123 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":76:5)
#loc124 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_declare_44.c":76:13)
#loc125 = loc(fused[#loc1, #loc2])
#loc126 = loc(fused[#loc3, #loc4])
#loc128 = loc(fused[#loc12, #loc13])
#loc129 = loc(fused[#loc14, #loc15])
#loc130 = loc(fused[#loc16, #loc17])
#loc131 = loc(fused[#loc19, #loc18])
#loc132 = loc(fused[#loc20, #loc21])
#loc133 = loc(fused[#loc22, #loc23])
#loc134 = loc(fused[#loc28, #loc29])
#loc135 = loc(fused[#loc33, #loc30])
#loc136 = loc(fused[#loc35, #loc34])
#loc137 = loc(fused[#loc38, #loc39])
#loc138 = loc(fused[#loc40, #loc41])
#loc139 = loc(fused[#loc42, #loc43])
#loc140 = loc(fused[#loc44, #loc45])
#loc141 = loc(fused[#loc46, #loc47])
#loc142 = loc(fused[#loc52, #loc53])
#loc145 = loc(fused[#loc63, #loc64])
#loc146 = loc(fused[#loc67, #loc68])
#loc147 = loc(fused[#loc71, #loc70])
#loc148 = loc(fused[#loc72, #loc73])
#loc150 = loc(fused[#loc81, #loc82])
#loc151 = loc(fused[#loc84, #loc85])
#loc152 = loc(fused[#loc86, #loc87])
#loc153 = loc(fused[#loc88, #loc89])
#loc154 = loc(fused[#loc90, #loc91])
#loc155 = loc(fused[#loc93, #loc92])
#loc156 = loc(fused[#loc94, #loc95])
#loc157 = loc(fused[#loc96, #loc97])
#loc158 = loc(fused[#loc100, #loc101])
#loc159 = loc(fused[#loc99, #loc101])
#loc160 = loc(fused[#loc98, #loc97])
#loc161 = loc(fused[#loc102, #loc103])
#loc162 = loc(fused[#loc104, #loc105])
#loc163 = loc(fused[#loc106, #loc103])
#loc164 = loc(fused[#loc114, #loc115])
#loc165 = loc(fused[#loc117, #loc116])
#loc166 = loc(fused[#loc122, #loc121])
