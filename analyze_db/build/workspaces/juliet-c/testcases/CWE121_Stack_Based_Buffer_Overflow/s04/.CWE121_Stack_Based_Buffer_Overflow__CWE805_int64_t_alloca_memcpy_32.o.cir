!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLongLongLine(!s64i) loc(#loc91)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc93)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc94)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc95)
    %3 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc96)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc94)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc95)
    %4 = cir.const #cir.int<50> : !s32i loc(#loc12)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc12)
    %6 = cir.const #cir.int<8> : !u64i loc(#loc12)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc12)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc12)
    %9 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc97)
    %10 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc12)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc12)
    cir.store %11, %3 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc96)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc14)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc14)
    %14 = cir.const #cir.int<8> : !u64i loc(#loc14)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc14)
    %16 = cir.alloca !u8i, !cir.ptr<!u8i>, %15 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc14)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc14)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc14)
    cir.store %18, %9 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc97)
    cir.scope {
      %19 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc99)
      %20 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc18)
      %21 = cir.load %20 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc19)
      cir.store %21, %19 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc99)
      %22 = cir.load %3 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc20)
      cir.store %22, %19 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc100)
      %23 = cir.load %19 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc22)
      %24 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc23)
      cir.store %23, %24 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc101)
    } loc(#loc98)
    cir.scope {
      %19 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc103)
      %20 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc28)
      %21 = cir.load %20 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc29)
      cir.store %21, %19 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc103)
      cir.scope {
        %22 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc105)
        %23 = cir.const #cir.zero : !cir.array<!s64i x 100> loc(#loc105)
        cir.store %23, %22 : !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>> loc(#loc105)
        %24 = cir.load %19 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc34)
        %25 = cir.cast(bitcast, %24 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc34)
        %26 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc35)
        %27 = cir.cast(bitcast, %26 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc35)
        %28 = cir.const #cir.int<100> : !s32i loc(#loc36)
        %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc36)
        %30 = cir.const #cir.int<8> : !u64i loc(#loc106)
        %31 = cir.binop(mul, %29, %30) : !u64i loc(#loc107)
        cir.libc.memcpy %31 bytes from %27 to %25 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc108)
        %32 = cir.load %19 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc41)
        %33 = cir.const #cir.int<0> : !s32i loc(#loc42)
        %34 = cir.ptr_stride(%32 : !cir.ptr<!s64i>, %33 : !s32i), !cir.ptr<!s64i> loc(#loc43)
        %35 = cir.load %34 : !cir.ptr<!s64i>, !s64i loc(#loc41)
        cir.call @printLongLongLine(%35) : (!s64i) -> () loc(#loc44)
      } loc(#loc104)
    } loc(#loc102)
    cir.return loc(#loc4)
  } loc(#loc92)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc110)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc47)
    cir.return loc(#loc46)
  } loc(#loc109)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc112)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc113)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc114)
    %3 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc115)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc113)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc114)
    %4 = cir.const #cir.int<50> : !s32i loc(#loc58)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc58)
    %6 = cir.const #cir.int<8> : !u64i loc(#loc58)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc58)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc58)
    %9 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc116)
    %10 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc58)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc58)
    cir.store %11, %3 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc115)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc60)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc60)
    %14 = cir.const #cir.int<8> : !u64i loc(#loc60)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc60)
    %16 = cir.alloca !u8i, !cir.ptr<!u8i>, %15 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc60)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc60)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc60)
    cir.store %18, %9 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc116)
    cir.scope {
      %19 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc118)
      %20 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc64)
      %21 = cir.load %20 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc65)
      cir.store %21, %19 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc118)
      %22 = cir.load %9 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc66)
      cir.store %22, %19 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc119)
      %23 = cir.load %19 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc68)
      %24 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc69)
      cir.store %23, %24 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc120)
    } loc(#loc117)
    cir.scope {
      %19 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc122)
      %20 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc74)
      %21 = cir.load %20 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc75)
      cir.store %21, %19 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc122)
      cir.scope {
        %22 = cir.alloca !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc124)
        %23 = cir.const #cir.zero : !cir.array<!s64i x 100> loc(#loc124)
        cir.store %23, %22 : !cir.array<!s64i x 100>, !cir.ptr<!cir.array<!s64i x 100>> loc(#loc124)
        %24 = cir.load %19 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc80)
        %25 = cir.cast(bitcast, %24 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc80)
        %26 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc81)
        %27 = cir.cast(bitcast, %26 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc81)
        %28 = cir.const #cir.int<100> : !s32i loc(#loc82)
        %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc82)
        %30 = cir.const #cir.int<8> : !u64i loc(#loc125)
        %31 = cir.binop(mul, %29, %30) : !u64i loc(#loc126)
        cir.libc.memcpy %31 bytes from %27 to %25 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc127)
        %32 = cir.load %19 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc87)
        %33 = cir.const #cir.int<0> : !s32i loc(#loc88)
        %34 = cir.ptr_stride(%32 : !cir.ptr<!s64i>, %33 : !s32i), !cir.ptr<!s64i> loc(#loc89)
        %35 = cir.load %34 : !cir.ptr<!s64i>, !s64i loc(#loc87)
        cir.call @printLongLongLine(%35) : (!s64i) -> () loc(#loc90)
      } loc(#loc123)
    } loc(#loc121)
    cir.return loc(#loc50)
  } loc(#loc111)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":21:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":44:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":23:5)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":23:15)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":24:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":24:28)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":25:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":25:28)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":26:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":26:42)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":27:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":27:43)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":28:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":34:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":29:9)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":29:27)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":29:26)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":32:16)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":32:9)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":33:21)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":33:10)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":33:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":35:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":43:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":36:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":36:27)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":36:26)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":37:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":42:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":38:13)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":38:37)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":40:20)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":40:26)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":40:34)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":40:38)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":40:52)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":40:13)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":40:53)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":41:31)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":41:36)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":41:37)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":41:13)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":75:1)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":78:1)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":77:5)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":77:13)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":51:1)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":73:1)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":53:5)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":53:15)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":54:5)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":54:28)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":55:5)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":55:28)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":56:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":56:42)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":57:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":57:43)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":58:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":63:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":59:9)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":59:27)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":59:26)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":61:16)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":61:9)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":62:21)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":62:10)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":62:9)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":64:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":72:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":65:9)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":65:27)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":65:26)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":66:9)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":71:9)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":67:13)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":67:37)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":69:20)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":69:26)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":69:34)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":69:38)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":69:52)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":69:13)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":69:53)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":70:31)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":70:36)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":70:37)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int64_t_alloca_memcpy_32.c":70:13)
#loc91 = loc(fused[#loc1, #loc2])
#loc92 = loc(fused[#loc3, #loc4])
#loc93 = loc(fused[#loc5, #loc6])
#loc94 = loc(fused[#loc7, #loc8])
#loc95 = loc(fused[#loc9, #loc10])
#loc96 = loc(fused[#loc11, #loc12])
#loc97 = loc(fused[#loc13, #loc14])
#loc98 = loc(fused[#loc15, #loc16])
#loc99 = loc(fused[#loc17, #loc18])
#loc100 = loc(fused[#loc21, #loc20])
#loc101 = loc(fused[#loc24, #loc22])
#loc102 = loc(fused[#loc25, #loc26])
#loc103 = loc(fused[#loc27, #loc28])
#loc104 = loc(fused[#loc30, #loc31])
#loc105 = loc(fused[#loc32, #loc33])
#loc106 = loc(fused[#loc37, #loc38])
#loc107 = loc(fused[#loc36, #loc38])
#loc108 = loc(fused[#loc39, #loc40])
#loc109 = loc(fused[#loc45, #loc46])
#loc110 = loc(fused[#loc47, #loc48])
#loc111 = loc(fused[#loc49, #loc50])
#loc112 = loc(fused[#loc51, #loc52])
#loc113 = loc(fused[#loc53, #loc54])
#loc114 = loc(fused[#loc55, #loc56])
#loc115 = loc(fused[#loc57, #loc58])
#loc116 = loc(fused[#loc59, #loc60])
#loc117 = loc(fused[#loc61, #loc62])
#loc118 = loc(fused[#loc63, #loc64])
#loc119 = loc(fused[#loc67, #loc66])
#loc120 = loc(fused[#loc70, #loc68])
#loc121 = loc(fused[#loc71, #loc72])
#loc122 = loc(fused[#loc73, #loc74])
#loc123 = loc(fused[#loc76, #loc77])
#loc124 = loc(fused[#loc78, #loc79])
#loc125 = loc(fused[#loc83, #loc84])
#loc126 = loc(fused[#loc82, #loc84])
#loc127 = loc(fused[#loc85, #loc86])
