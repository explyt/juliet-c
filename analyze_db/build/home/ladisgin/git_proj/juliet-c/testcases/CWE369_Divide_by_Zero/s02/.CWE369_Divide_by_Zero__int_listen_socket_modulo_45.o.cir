!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc115 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":104:44)
#loc276 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":220:44)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc324)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc325)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc326)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc327)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc328)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc329)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc330)
  cir.func private @close(!s32i) -> !s32i loc(#loc331)
  cir.global "private" internal dsolocal @CWE369_Divide_by_Zero__int_listen_socket_modulo_45_badData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc332)
  cir.func no_proto @CWE369_Divide_by_Zero__int_listen_socket_modulo_45_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc334)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc335)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc336)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc337)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc338)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc339)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc34)
    cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc340)
    cir.br ^bb1 loc(#loc341)
  ^bb1:  // pred: ^bb0
    %8 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc26)
    cir.store %9, %2 : !s32i, !cir.ptr<!s32i> loc(#loc336)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc28)
    cir.store %11, %3 : !s32i, !cir.ptr<!s32i> loc(#loc337)
    cir.br ^bb2 loc(#loc342)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc342)
  ^bb3:  // pred: ^bb32
    %12 = cir.const #cir.int<0> : !s32i loc(#loc40)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc40)
    cir.brcond %13 ^bb4, ^bb33 loc(#loc40)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %14 = cir.const #cir.int<2> : !s32i loc(#loc41)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc42)
    %16 = cir.const #cir.int<6> : !s32i loc(#loc43)
    %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc44)
    cir.store %17, %2 : !s32i, !cir.ptr<!s32i> loc(#loc343)
    cir.br ^bb5 loc(#loc344)
  ^bb5:  // pred: ^bb4
    %18 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc49)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc50)
    %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc50)
    %21 = cir.cmp(eq, %18, %20) : !s32i, !cir.bool loc(#loc345)
    cir.brcond %21 ^bb6, ^bb7 loc(#loc346)
  ^bb6:  // pred: ^bb5
    cir.br ^bb33 loc(#loc52)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc48)
  ^bb8:  // pred: ^bb7
    %22 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc347)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc55)
    %24 = cir.const #cir.int<16> : !u64i loc(#loc348)
    cir.libc.memset %24 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc349)
    %25 = cir.const #cir.int<2> : !s32i loc(#loc60)
    %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc60)
    %27 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc61)
    cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc350)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc63)
    %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc63)
    %30 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc64)
    %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc65)
    cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc351)
    %32 = cir.const #cir.int<27015> : !s32i loc(#loc67)
    %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc67)
    %34 = cir.call @htons(%33) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc68)
    %35 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
    cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc352)
    cir.br ^bb9 loc(#loc353)
  ^bb9:  // pred: ^bb8
    %36 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc74)
    %37 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc354)
    %38 = cir.const #cir.int<16> : !u64i loc(#loc355)
    %39 = cir.cast(integral, %38 : !u64i), !u32i loc(#loc355)
    %40 = cir.call @bind(%36, %37, %39) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc79)
    %41 = cir.const #cir.int<1> : !s32i loc(#loc80)
    %42 = cir.unary(minus, %41) : !s32i, !s32i loc(#loc80)
    %43 = cir.cmp(eq, %40, %42) : !s32i, !cir.bool loc(#loc356)
    cir.brcond %43 ^bb10, ^bb11 loc(#loc357)
  ^bb10:  // pred: ^bb9
    cir.br ^bb33 loc(#loc82)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc73)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc358)
  ^bb13:  // pred: ^bb12
    %44 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc85)
    %45 = cir.const #cir.int<5> : !s32i loc(#loc86)
    %46 = cir.call @listen(%44, %45) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc87)
    %47 = cir.const #cir.int<1> : !s32i loc(#loc88)
    %48 = cir.unary(minus, %47) : !s32i, !s32i loc(#loc88)
    %49 = cir.cmp(eq, %46, %48) : !s32i, !cir.bool loc(#loc359)
    cir.brcond %49 ^bb14, ^bb15 loc(#loc360)
  ^bb14:  // pred: ^bb13
    cir.br ^bb33 loc(#loc90)
  ^bb15:  // pred: ^bb13
    cir.br ^bb16 loc(#loc84)
  ^bb16:  // pred: ^bb15
    %50 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc91)
    %51 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc92)
    %52 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc93)
    %53 = cir.call @accept(%50, %51, %52) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc94)
    cir.store %53, %3 : !s32i, !cir.ptr<!s32i> loc(#loc361)
    cir.br ^bb17 loc(#loc362)
  ^bb17:  // pred: ^bb16
    %54 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc99)
    %55 = cir.const #cir.int<1> : !s32i loc(#loc100)
    %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc100)
    %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc363)
    cir.brcond %57 ^bb18, ^bb19 loc(#loc364)
  ^bb18:  // pred: ^bb17
    cir.br ^bb33 loc(#loc102)
  ^bb19:  // pred: ^bb17
    cir.br ^bb20 loc(#loc98)
  ^bb20:  // pred: ^bb19
    %58 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    %59 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc104)
    %60 = cir.cast(bitcast, %59 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc104)
    %61 = cir.const #cir.int<3> : !s32i loc(#loc105)
    %62 = cir.cast(integral, %61 : !s32i), !u64i loc(#loc105)
    %63 = cir.const #cir.int<4> : !u64i loc(#loc105)
    %64 = cir.binop(mul, %62, %63) : !u64i loc(#loc105)
    %65 = cir.const #cir.int<2> : !s32i loc(#loc105)
    %66 = cir.cast(integral, %65 : !s32i), !u64i loc(#loc105)
    %67 = cir.binop(add, %64, %66) : !u64i loc(#loc105)
    %68 = cir.const #cir.int<1> : !s32i loc(#loc106)
    %69 = cir.cast(integral, %68 : !s32i), !u64i loc(#loc106)
    %70 = cir.binop(sub, %67, %69) : !u64i loc(#loc365)
    %71 = cir.const #cir.int<0> : !s32i loc(#loc107)
    %72 = cir.call @recv(%58, %60, %70, %71) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc108)
    %73 = cir.cast(integral, %72 : !s64i), !s32i loc(#loc108)
    cir.store %73, %0 : !s32i, !cir.ptr<!s32i> loc(#loc366)
    cir.br ^bb21 loc(#loc367)
  ^bb21:  // pred: ^bb20
    %74 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc113)
    %75 = cir.const #cir.int<1> : !s32i loc(#loc114)
    %76 = cir.unary(minus, %75) : !s32i, !s32i loc(#loc114)
    %77 = cir.cmp(eq, %74, %76) : !s32i, !cir.bool loc(#loc368)
    cir.brcond %77 ^bb22, ^bb23 loc(#loc115)
  ^bb22:  // pred: ^bb21
    %78 = cir.const #true loc(#loc115)
    cir.br ^bb28(%78 : !cir.bool) loc(#loc115)
  ^bb23:  // pred: ^bb21
    %79 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc116)
    %80 = cir.const #cir.int<0> : !s32i loc(#loc117)
    %81 = cir.cmp(eq, %79, %80) : !s32i, !cir.bool loc(#loc369)
    cir.brcond %81 ^bb24, ^bb25 loc(#loc115)
  ^bb24:  // pred: ^bb23
    %82 = cir.const #true loc(#loc115)
    cir.br ^bb26(%82 : !cir.bool) loc(#loc115)
  ^bb25:  // pred: ^bb23
    %83 = cir.const #false loc(#loc115)
    cir.br ^bb26(%83 : !cir.bool) loc(#loc115)
  ^bb26(%84: !cir.bool loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":104:44)):  // 2 preds: ^bb24, ^bb25
    cir.br ^bb27 loc(#loc115)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28(%84 : !cir.bool) loc(#loc115)
  ^bb28(%85: !cir.bool loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":104:44)):  // 2 preds: ^bb22, ^bb27
    cir.br ^bb29 loc(#loc115)
  ^bb29:  // pred: ^bb28
    cir.brcond %85 ^bb30, ^bb31 loc(#loc370)
  ^bb30:  // pred: ^bb29
    cir.br ^bb33 loc(#loc119)
  ^bb31:  // pred: ^bb29
    cir.br ^bb32 loc(#loc112)
  ^bb32:  // pred: ^bb31
    %86 = cir.const #cir.int<0> : !s32i loc(#loc120)
    %87 = cir.cast(integral, %86 : !s32i), !s8i loc(#loc120)
    %88 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc121)
    %89 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc122)
    %90 = cir.ptr_stride(%89 : !cir.ptr<!s8i>, %88 : !s32i), !cir.ptr<!s8i> loc(#loc122)
    cir.store %87, %90 : !s8i, !cir.ptr<!s8i> loc(#loc371)
    %91 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc123)
    %92 = cir.call @atoi(%91) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc124)
    cir.store %92, %5 : !s32i, !cir.ptr<!s32i> loc(#loc372)
    cir.br ^bb3 loc(#loc39)
  ^bb33:  // 6 preds: ^bb3, ^bb6, ^bb10, ^bb14, ^bb18, ^bb30
    cir.br ^bb34 loc(#loc39)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc373)
  ^bb35:  // pred: ^bb34
    %93 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc129)
    %94 = cir.const #cir.int<1> : !s32i loc(#loc130)
    %95 = cir.unary(minus, %94) : !s32i, !s32i loc(#loc130)
    %96 = cir.cmp(ne, %93, %95) : !s32i, !cir.bool loc(#loc374)
    cir.brcond %96 ^bb36, ^bb37 loc(#loc375)
  ^bb36:  // pred: ^bb35
    %97 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc132)
    %98 = cir.call @close(%97) : (!s32i) -> !s32i loc(#loc133)
    cir.br ^bb37 loc(#loc128)
  ^bb37:  // 2 preds: ^bb35, ^bb36
    cir.br ^bb38 loc(#loc128)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc376)
  ^bb39:  // pred: ^bb38
    %99 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc136)
    %100 = cir.const #cir.int<1> : !s32i loc(#loc137)
    %101 = cir.unary(minus, %100) : !s32i, !s32i loc(#loc137)
    %102 = cir.cmp(ne, %99, %101) : !s32i, !cir.bool loc(#loc377)
    cir.brcond %102 ^bb40, ^bb41 loc(#loc378)
  ^bb40:  // pred: ^bb39
    %103 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc139)
    %104 = cir.call @close(%103) : (!s32i) -> !s32i loc(#loc140)
    cir.br ^bb41 loc(#loc135)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc135)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc37)
  ^bb43:  // pred: ^bb42
    %105 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc141)
    %106 = cir.get_global @CWE369_Divide_by_Zero__int_listen_socket_modulo_45_badData : !cir.ptr<!s32i> loc(#loc332)
    cir.store %105, %106 : !s32i, !cir.ptr<!s32i> loc(#loc379)
    %107 = cir.get_global @badSink : !cir.ptr<!cir.func<!void ()>> loc(#loc380)
    cir.call %107() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc143)
    cir.return loc(#loc20)
  } loc(#loc333)
  cir.func no_proto @CWE369_Divide_by_Zero__int_listen_socket_modulo_45_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc382)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc147)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc383)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc149)
    cir.return loc(#loc146)
  } loc(#loc381)
  cir.func private @printIntLine(!s32i) loc(#loc384)
  cir.func no_proto internal private @badSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc386)
    %1 = cir.get_global @CWE369_Divide_by_Zero__int_listen_socket_modulo_45_badData : !cir.ptr<!s32i> loc(#loc332)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc156)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc386)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc157)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc158)
    %5 = cir.binop(rem, %3, %4) : !s32i loc(#loc387)
    cir.call @printIntLine(%5) : (!s32i) -> () loc(#loc159)
    cir.return loc(#loc154)
  } loc(#loc385)
  cir.global "private" internal dsolocal @CWE369_Divide_by_Zero__int_listen_socket_modulo_45_goodG2BData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc388)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc390)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc166)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc167)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc391)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc169)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc392)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc171)
    %5 = cir.get_global @CWE369_Divide_by_Zero__int_listen_socket_modulo_45_goodG2BData : !cir.ptr<!s32i> loc(#loc388)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc393)
    %6 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void ()>> loc(#loc394)
    cir.call %6() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc173)
    cir.return loc(#loc163)
  } loc(#loc389)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc396)
    %1 = cir.get_global @CWE369_Divide_by_Zero__int_listen_socket_modulo_45_goodG2BData : !cir.ptr<!s32i> loc(#loc388)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc178)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc396)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc179)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc180)
    %5 = cir.binop(rem, %3, %4) : !s32i loc(#loc397)
    cir.call @printIntLine(%5) : (!s32i) -> () loc(#loc181)
    cir.return loc(#loc176)
  } loc(#loc395)
  cir.global "private" internal dsolocal @CWE369_Divide_by_Zero__int_listen_socket_modulo_45_goodB2GData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc398)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc400)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc401)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc402)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc403)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc404)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc405)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc198)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc199)
    cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc406)
    cir.br ^bb1 loc(#loc407)
  ^bb1:  // pred: ^bb0
    %8 = cir.const #cir.int<1> : !s32i loc(#loc191)
    %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc191)
    cir.store %9, %2 : !s32i, !cir.ptr<!s32i> loc(#loc402)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc193)
    %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc193)
    cir.store %11, %3 : !s32i, !cir.ptr<!s32i> loc(#loc403)
    cir.br ^bb2 loc(#loc408)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc408)
  ^bb3:  // pred: ^bb32
    %12 = cir.const #cir.int<0> : !s32i loc(#loc205)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc205)
    cir.brcond %13 ^bb4, ^bb33 loc(#loc205)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %14 = cir.const #cir.int<2> : !s32i loc(#loc206)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc207)
    %16 = cir.const #cir.int<6> : !s32i loc(#loc208)
    %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc209)
    cir.store %17, %2 : !s32i, !cir.ptr<!s32i> loc(#loc409)
    cir.br ^bb5 loc(#loc410)
  ^bb5:  // pred: ^bb4
    %18 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc214)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc215)
    %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc215)
    %21 = cir.cmp(eq, %18, %20) : !s32i, !cir.bool loc(#loc411)
    cir.brcond %21 ^bb6, ^bb7 loc(#loc412)
  ^bb6:  // pred: ^bb5
    cir.br ^bb33 loc(#loc217)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc213)
  ^bb8:  // pred: ^bb7
    %22 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc413)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc220)
    %24 = cir.const #cir.int<16> : !u64i loc(#loc414)
    cir.libc.memset %24 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc415)
    %25 = cir.const #cir.int<2> : !s32i loc(#loc225)
    %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc225)
    %27 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc61)
    cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc416)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc227)
    %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc227)
    %30 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc64)
    %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc65)
    cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc417)
    %32 = cir.const #cir.int<27015> : !s32i loc(#loc229)
    %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc229)
    %34 = cir.call @htons(%33) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc230)
    %35 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
    cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc418)
    cir.br ^bb9 loc(#loc419)
  ^bb9:  // pred: ^bb8
    %36 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc235)
    %37 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc420)
    %38 = cir.const #cir.int<16> : !u64i loc(#loc421)
    %39 = cir.cast(integral, %38 : !u64i), !u32i loc(#loc421)
    %40 = cir.call @bind(%36, %37, %39) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc240)
    %41 = cir.const #cir.int<1> : !s32i loc(#loc241)
    %42 = cir.unary(minus, %41) : !s32i, !s32i loc(#loc241)
    %43 = cir.cmp(eq, %40, %42) : !s32i, !cir.bool loc(#loc422)
    cir.brcond %43 ^bb10, ^bb11 loc(#loc423)
  ^bb10:  // pred: ^bb9
    cir.br ^bb33 loc(#loc243)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc234)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc424)
  ^bb13:  // pred: ^bb12
    %44 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc246)
    %45 = cir.const #cir.int<5> : !s32i loc(#loc247)
    %46 = cir.call @listen(%44, %45) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc248)
    %47 = cir.const #cir.int<1> : !s32i loc(#loc249)
    %48 = cir.unary(minus, %47) : !s32i, !s32i loc(#loc249)
    %49 = cir.cmp(eq, %46, %48) : !s32i, !cir.bool loc(#loc425)
    cir.brcond %49 ^bb14, ^bb15 loc(#loc426)
  ^bb14:  // pred: ^bb13
    cir.br ^bb33 loc(#loc251)
  ^bb15:  // pred: ^bb13
    cir.br ^bb16 loc(#loc245)
  ^bb16:  // pred: ^bb15
    %50 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc252)
    %51 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc253)
    %52 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc254)
    %53 = cir.call @accept(%50, %51, %52) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc255)
    cir.store %53, %3 : !s32i, !cir.ptr<!s32i> loc(#loc427)
    cir.br ^bb17 loc(#loc428)
  ^bb17:  // pred: ^bb16
    %54 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc260)
    %55 = cir.const #cir.int<1> : !s32i loc(#loc261)
    %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc261)
    %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc429)
    cir.brcond %57 ^bb18, ^bb19 loc(#loc430)
  ^bb18:  // pred: ^bb17
    cir.br ^bb33 loc(#loc263)
  ^bb19:  // pred: ^bb17
    cir.br ^bb20 loc(#loc259)
  ^bb20:  // pred: ^bb19
    %58 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc264)
    %59 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc265)
    %60 = cir.cast(bitcast, %59 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc265)
    %61 = cir.const #cir.int<3> : !s32i loc(#loc266)
    %62 = cir.cast(integral, %61 : !s32i), !u64i loc(#loc266)
    %63 = cir.const #cir.int<4> : !u64i loc(#loc266)
    %64 = cir.binop(mul, %62, %63) : !u64i loc(#loc266)
    %65 = cir.const #cir.int<2> : !s32i loc(#loc266)
    %66 = cir.cast(integral, %65 : !s32i), !u64i loc(#loc266)
    %67 = cir.binop(add, %64, %66) : !u64i loc(#loc266)
    %68 = cir.const #cir.int<1> : !s32i loc(#loc267)
    %69 = cir.cast(integral, %68 : !s32i), !u64i loc(#loc267)
    %70 = cir.binop(sub, %67, %69) : !u64i loc(#loc431)
    %71 = cir.const #cir.int<0> : !s32i loc(#loc268)
    %72 = cir.call @recv(%58, %60, %70, %71) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc269)
    %73 = cir.cast(integral, %72 : !s64i), !s32i loc(#loc269)
    cir.store %73, %0 : !s32i, !cir.ptr<!s32i> loc(#loc432)
    cir.br ^bb21 loc(#loc433)
  ^bb21:  // pred: ^bb20
    %74 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc274)
    %75 = cir.const #cir.int<1> : !s32i loc(#loc275)
    %76 = cir.unary(minus, %75) : !s32i, !s32i loc(#loc275)
    %77 = cir.cmp(eq, %74, %76) : !s32i, !cir.bool loc(#loc434)
    cir.brcond %77 ^bb22, ^bb23 loc(#loc276)
  ^bb22:  // pred: ^bb21
    %78 = cir.const #true loc(#loc276)
    cir.br ^bb28(%78 : !cir.bool) loc(#loc276)
  ^bb23:  // pred: ^bb21
    %79 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc277)
    %80 = cir.const #cir.int<0> : !s32i loc(#loc278)
    %81 = cir.cmp(eq, %79, %80) : !s32i, !cir.bool loc(#loc435)
    cir.brcond %81 ^bb24, ^bb25 loc(#loc276)
  ^bb24:  // pred: ^bb23
    %82 = cir.const #true loc(#loc276)
    cir.br ^bb26(%82 : !cir.bool) loc(#loc276)
  ^bb25:  // pred: ^bb23
    %83 = cir.const #false loc(#loc276)
    cir.br ^bb26(%83 : !cir.bool) loc(#loc276)
  ^bb26(%84: !cir.bool loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":220:44)):  // 2 preds: ^bb24, ^bb25
    cir.br ^bb27 loc(#loc276)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28(%84 : !cir.bool) loc(#loc276)
  ^bb28(%85: !cir.bool loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":220:44)):  // 2 preds: ^bb22, ^bb27
    cir.br ^bb29 loc(#loc276)
  ^bb29:  // pred: ^bb28
    cir.brcond %85 ^bb30, ^bb31 loc(#loc436)
  ^bb30:  // pred: ^bb29
    cir.br ^bb33 loc(#loc280)
  ^bb31:  // pred: ^bb29
    cir.br ^bb32 loc(#loc273)
  ^bb32:  // pred: ^bb31
    %86 = cir.const #cir.int<0> : !s32i loc(#loc281)
    %87 = cir.cast(integral, %86 : !s32i), !s8i loc(#loc281)
    %88 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc282)
    %89 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc283)
    %90 = cir.ptr_stride(%89 : !cir.ptr<!s8i>, %88 : !s32i), !cir.ptr<!s8i> loc(#loc283)
    cir.store %87, %90 : !s8i, !cir.ptr<!s8i> loc(#loc437)
    %91 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc284)
    %92 = cir.call @atoi(%91) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc285)
    cir.store %92, %5 : !s32i, !cir.ptr<!s32i> loc(#loc438)
    cir.br ^bb3 loc(#loc204)
  ^bb33:  // 6 preds: ^bb3, ^bb6, ^bb10, ^bb14, ^bb18, ^bb30
    cir.br ^bb34 loc(#loc204)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc439)
  ^bb35:  // pred: ^bb34
    %93 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc290)
    %94 = cir.const #cir.int<1> : !s32i loc(#loc291)
    %95 = cir.unary(minus, %94) : !s32i, !s32i loc(#loc291)
    %96 = cir.cmp(ne, %93, %95) : !s32i, !cir.bool loc(#loc440)
    cir.brcond %96 ^bb36, ^bb37 loc(#loc441)
  ^bb36:  // pred: ^bb35
    %97 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc293)
    %98 = cir.call @close(%97) : (!s32i) -> !s32i loc(#loc294)
    cir.br ^bb37 loc(#loc289)
  ^bb37:  // 2 preds: ^bb35, ^bb36
    cir.br ^bb38 loc(#loc289)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc442)
  ^bb39:  // pred: ^bb38
    %99 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc297)
    %100 = cir.const #cir.int<1> : !s32i loc(#loc298)
    %101 = cir.unary(minus, %100) : !s32i, !s32i loc(#loc298)
    %102 = cir.cmp(ne, %99, %101) : !s32i, !cir.bool loc(#loc443)
    cir.brcond %102 ^bb40, ^bb41 loc(#loc444)
  ^bb40:  // pred: ^bb39
    %103 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc300)
    %104 = cir.call @close(%103) : (!s32i) -> !s32i loc(#loc301)
    cir.br ^bb41 loc(#loc296)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc296)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc202)
  ^bb43:  // pred: ^bb42
    %105 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc302)
    %106 = cir.get_global @CWE369_Divide_by_Zero__int_listen_socket_modulo_45_goodB2GData : !cir.ptr<!s32i> loc(#loc398)
    cir.store %105, %106 : !s32i, !cir.ptr<!s32i> loc(#loc445)
    %107 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<!void ()>> loc(#loc446)
    cir.call %107() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc304)
    cir.return loc(#loc185)
  } loc(#loc399)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc447)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc308)
  cir.func no_proto internal private @goodB2GSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc449)
    %1 = cir.get_global @CWE369_Divide_by_Zero__int_listen_socket_modulo_45_goodB2GData : !cir.ptr<!s32i> loc(#loc398)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc312)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc449)
    cir.br ^bb1 loc(#loc450)
  ^bb1:  // pred: ^bb0
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc315)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc316)
    %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc451)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc452)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<100> : !s32i loc(#loc320)
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc321)
    %8 = cir.binop(rem, %6, %7) : !s32i loc(#loc453)
    cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc322)
    cir.br ^bb4 loc(#loc318)
  ^bb3:  // pred: ^bb1
    %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc308)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc308)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc323)
    cir.br ^bb4 loc(#loc314)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc314)
  ^bb5:  // pred: ^bb4
    cir.return loc(#loc310)
  } loc(#loc448)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":145:1)
#loc12 = loc("/usr/include/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":42:1)
#loc18 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":42:12)
#loc19 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":55:1)
#loc20 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":131:1)
#loc21 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":65:9)
#loc22 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":65:13)
#loc23 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":66:9)
#loc24 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":66:28)
#loc25 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":67:9)
#loc26 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":67:31)
#loc27 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":68:9)
#loc28 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":68:31)
#loc29 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":69:9)
#loc30 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":69:41)
#loc31 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":57:5)
#loc32 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":57:9)
#loc33 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":59:13)
#loc34 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":59:12)
#loc35 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":59:5)
#loc36 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":60:5)
#loc37 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":128:5)
#loc38 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":70:9)
#loc39 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":113:17)
#loc40 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":113:16)
#loc41 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":80:35)
#loc42 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":80:44)
#loc43 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":80:57)
#loc44 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":80:28)
#loc45 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":80:13)
#loc46 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":80:68)
#loc47 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":81:13)
#loc48 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":84:13)
#loc49 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":81:17)
#loc50 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":81:33)
#loc51 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":82:13)
#loc52 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":83:17)
#loc53 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":85:20)
#loc54 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":85:21)
#loc55 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":85:30)
#loc56 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":85:33)
#loc57 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":85:47)
#loc58 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":85:13)
#loc59 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":85:48)
#loc60 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":86:34)
#loc61 = loc("/usr/include/netinet/in.h":249:5)
#loc62 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":86:13)
#loc63 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":87:39)
#loc64 = loc("/usr/include/netinet/in.h":251:20)
#loc65 = loc("/usr/include/netinet/in.h":33:15)
#loc66 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":87:13)
#loc67 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":88:38)
#loc68 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":88:32)
#loc69 = loc("/usr/include/netinet/in.h":250:15)
#loc70 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":88:13)
#loc71 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":88:46)
#loc72 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":89:13)
#loc73 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":92:13)
#loc74 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":89:22)
#loc75 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":89:54)
#loc76 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":89:55)
#loc77 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":89:64)
#loc78 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":89:78)
#loc79 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":89:17)
#loc80 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":89:84)
#loc81 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":90:13)
#loc82 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":91:17)
#loc83 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":93:13)
#loc84 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":96:13)
#loc85 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":93:24)
#loc86 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":93:38)
#loc87 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":93:17)
#loc88 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":93:57)
#loc89 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":94:13)
#loc90 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":95:17)
#loc91 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":97:35)
#loc92 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":97:49)
#loc93 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":97:55)
#loc94 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":97:28)
#loc95 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":97:13)
#loc96 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":97:59)
#loc97 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":98:13)
#loc98 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":101:13)
#loc99 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":98:17)
#loc100 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":98:33)
#loc101 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":99:13)
#loc102 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":100:17)
#loc103 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":103:31)
#loc104 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":103:45)
#loc105 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":103:58)
#loc106 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":103:76)
#loc107 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":103:79)
#loc108 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":103:26)
#loc109 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":103:13)
#loc110 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":103:80)
#loc111 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":104:13)
#loc112 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":107:13)
#loc113 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":104:17)
#loc114 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":104:31)
#loc116 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":104:47)
#loc117 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":104:61)
#loc118 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":105:13)
#loc119 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":106:17)
#loc120 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":109:39)
#loc121 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":109:25)
#loc122 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":109:13)
#loc123 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":111:25)
#loc124 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":111:20)
#loc125 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":111:13)
#loc126 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":111:36)
#loc127 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":114:9)
#loc128 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":117:9)
#loc129 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":114:13)
#loc130 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":114:29)
#loc131 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":115:9)
#loc132 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":116:26)
#loc133 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":116:13)
#loc134 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":118:9)
#loc135 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":121:9)
#loc136 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":118:13)
#loc137 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":118:29)
#loc138 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":119:9)
#loc139 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":120:26)
#loc140 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":120:13)
#loc141 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":129:66)
#loc142 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":129:5)
#loc143 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":130:5)
#loc144 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":130:13)
#loc145 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":249:1)
#loc146 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":253:1)
#loc147 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":251:5)
#loc148 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":251:13)
#loc149 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":252:5)
#loc150 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":252:13)
#loc151 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc152 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc153 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":48:1)
#loc154 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":53:1)
#loc155 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":50:5)
#loc156 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":50:16)
#loc157 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":52:18)
#loc158 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":52:24)
#loc159 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":52:5)
#loc160 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":43:1)
#loc161 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":43:12)
#loc162 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":145:1)
#loc163 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":154:1)
#loc164 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":147:5)
#loc165 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":147:9)
#loc166 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":149:13)
#loc167 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":149:12)
#loc168 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":149:5)
#loc169 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":151:12)
#loc170 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":151:5)
#loc171 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":152:70)
#loc172 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":152:5)
#loc173 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":153:5)
#loc174 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":153:17)
#loc175 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":138:1)
#loc176 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":143:1)
#loc177 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":140:5)
#loc178 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":140:16)
#loc179 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":142:18)
#loc180 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":142:24)
#loc181 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":142:5)
#loc182 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":44:1)
#loc183 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":44:12)
#loc184 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":171:1)
#loc185 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":247:1)
#loc186 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":181:9)
#loc187 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":181:13)
#loc188 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":182:9)
#loc189 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":182:28)
#loc190 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":183:9)
#loc191 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":183:31)
#loc192 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":184:9)
#loc193 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":184:31)
#loc194 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":185:9)
#loc195 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":185:41)
#loc196 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":173:5)
#loc197 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":173:9)
#loc198 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":175:13)
#loc199 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":175:12)
#loc200 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":175:5)
#loc201 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":176:5)
#loc202 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":244:5)
#loc203 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":186:9)
#loc204 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":229:17)
#loc205 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":229:16)
#loc206 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":196:35)
#loc207 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":196:44)
#loc208 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":196:57)
#loc209 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":196:28)
#loc210 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":196:13)
#loc211 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":196:68)
#loc212 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":197:13)
#loc213 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":200:13)
#loc214 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":197:17)
#loc215 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":197:33)
#loc216 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":198:13)
#loc217 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":199:17)
#loc218 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":201:20)
#loc219 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":201:21)
#loc220 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":201:30)
#loc221 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":201:33)
#loc222 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":201:47)
#loc223 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":201:13)
#loc224 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":201:48)
#loc225 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":202:34)
#loc226 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":202:13)
#loc227 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":203:39)
#loc228 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":203:13)
#loc229 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":204:38)
#loc230 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":204:32)
#loc231 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":204:13)
#loc232 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":204:46)
#loc233 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":205:13)
#loc234 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":208:13)
#loc235 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":205:22)
#loc236 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":205:54)
#loc237 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":205:55)
#loc238 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":205:64)
#loc239 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":205:78)
#loc240 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":205:17)
#loc241 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":205:84)
#loc242 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":206:13)
#loc243 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":207:17)
#loc244 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":209:13)
#loc245 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":212:13)
#loc246 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":209:24)
#loc247 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":209:38)
#loc248 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":209:17)
#loc249 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":209:57)
#loc250 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":210:13)
#loc251 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":211:17)
#loc252 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":213:35)
#loc253 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":213:49)
#loc254 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":213:55)
#loc255 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":213:28)
#loc256 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":213:13)
#loc257 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":213:59)
#loc258 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":214:13)
#loc259 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":217:13)
#loc260 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":214:17)
#loc261 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":214:33)
#loc262 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":215:13)
#loc263 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":216:17)
#loc264 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":219:31)
#loc265 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":219:45)
#loc266 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":219:58)
#loc267 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":219:76)
#loc268 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":219:79)
#loc269 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":219:26)
#loc270 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":219:13)
#loc271 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":219:80)
#loc272 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":220:13)
#loc273 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":223:13)
#loc274 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":220:17)
#loc275 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":220:31)
#loc277 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":220:47)
#loc278 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":220:61)
#loc279 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":221:13)
#loc280 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":222:17)
#loc281 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":225:39)
#loc282 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":225:25)
#loc283 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":225:13)
#loc284 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":227:25)
#loc285 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":227:20)
#loc286 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":227:13)
#loc287 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":227:36)
#loc288 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":230:9)
#loc289 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":233:9)
#loc290 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":230:13)
#loc291 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":230:29)
#loc292 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":231:9)
#loc293 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":232:26)
#loc294 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":232:13)
#loc295 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":234:9)
#loc296 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":237:9)
#loc297 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":234:13)
#loc298 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":234:29)
#loc299 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":235:9)
#loc300 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":236:26)
#loc301 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":236:13)
#loc302 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":245:70)
#loc303 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":245:5)
#loc304 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":246:5)
#loc305 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":246:17)
#loc306 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc307 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc308 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":167:19)
#loc309 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":157:1)
#loc310 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":169:1)
#loc311 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":159:5)
#loc312 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":159:16)
#loc313 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":161:5)
#loc314 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":168:5)
#loc315 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":161:9)
#loc316 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":161:17)
#loc317 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":162:5)
#loc318 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":164:5)
#loc319 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":166:5)
#loc320 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":163:22)
#loc321 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":163:28)
#loc322 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":163:9)
#loc323 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_45.c":167:9)
#loc324 = loc(fused[#loc1, #loc2])
#loc325 = loc(fused[#loc3, #loc4])
#loc326 = loc(fused[#loc5, #loc6])
#loc327 = loc(fused[#loc7, #loc8])
#loc328 = loc(fused[#loc9, #loc10])
#loc329 = loc(fused[#loc11, #loc12])
#loc330 = loc(fused[#loc13, #loc14])
#loc331 = loc(fused[#loc15, #loc16])
#loc332 = loc(fused[#loc17, #loc18])
#loc333 = loc(fused[#loc19, #loc20])
#loc334 = loc(fused[#loc21, #loc22])
#loc335 = loc(fused[#loc23, #loc24])
#loc336 = loc(fused[#loc25, #loc26])
#loc337 = loc(fused[#loc27, #loc28])
#loc338 = loc(fused[#loc29, #loc30])
#loc339 = loc(fused[#loc31, #loc32])
#loc340 = loc(fused[#loc35, #loc33])
#loc341 = loc(fused[#loc36, #loc37])
#loc342 = loc(fused[#loc38, #loc39])
#loc343 = loc(fused[#loc45, #loc46])
#loc344 = loc(fused[#loc47, #loc48])
#loc345 = loc(fused[#loc49, #loc50])
#loc346 = loc(fused[#loc51, #loc48])
#loc347 = loc(fused[#loc53, #loc54])
#loc348 = loc(fused[#loc56, #loc57])
#loc349 = loc(fused[#loc58, #loc59])
#loc350 = loc(fused[#loc62, #loc60])
#loc351 = loc(fused[#loc66, #loc63])
#loc352 = loc(fused[#loc70, #loc71])
#loc353 = loc(fused[#loc72, #loc73])
#loc354 = loc(fused[#loc75, #loc76])
#loc355 = loc(fused[#loc77, #loc78])
#loc356 = loc(fused[#loc79, #loc80])
#loc357 = loc(fused[#loc81, #loc73])
#loc358 = loc(fused[#loc83, #loc84])
#loc359 = loc(fused[#loc87, #loc88])
#loc360 = loc(fused[#loc89, #loc84])
#loc361 = loc(fused[#loc95, #loc96])
#loc362 = loc(fused[#loc97, #loc98])
#loc363 = loc(fused[#loc99, #loc100])
#loc364 = loc(fused[#loc101, #loc98])
#loc365 = loc(fused[#loc105, #loc106])
#loc366 = loc(fused[#loc109, #loc110])
#loc367 = loc(fused[#loc111, #loc112])
#loc368 = loc(fused[#loc113, #loc114])
#loc369 = loc(fused[#loc116, #loc117])
#loc370 = loc(fused[#loc118, #loc112])
#loc371 = loc(fused[#loc122, #loc120])
#loc372 = loc(fused[#loc125, #loc126])
#loc373 = loc(fused[#loc127, #loc128])
#loc374 = loc(fused[#loc129, #loc130])
#loc375 = loc(fused[#loc131, #loc128])
#loc376 = loc(fused[#loc134, #loc135])
#loc377 = loc(fused[#loc136, #loc137])
#loc378 = loc(fused[#loc138, #loc135])
#loc379 = loc(fused[#loc142, #loc141])
#loc380 = loc(fused[#loc143, #loc144])
#loc381 = loc(fused[#loc145, #loc146])
#loc382 = loc(fused[#loc147, #loc148])
#loc383 = loc(fused[#loc149, #loc150])
#loc384 = loc(fused[#loc151, #loc152])
#loc385 = loc(fused[#loc153, #loc154])
#loc386 = loc(fused[#loc155, #loc156])
#loc387 = loc(fused[#loc157, #loc158])
#loc388 = loc(fused[#loc160, #loc161])
#loc389 = loc(fused[#loc162, #loc163])
#loc390 = loc(fused[#loc164, #loc165])
#loc391 = loc(fused[#loc168, #loc166])
#loc392 = loc(fused[#loc170, #loc169])
#loc393 = loc(fused[#loc172, #loc171])
#loc394 = loc(fused[#loc173, #loc174])
#loc395 = loc(fused[#loc175, #loc176])
#loc396 = loc(fused[#loc177, #loc178])
#loc397 = loc(fused[#loc179, #loc180])
#loc398 = loc(fused[#loc182, #loc183])
#loc399 = loc(fused[#loc184, #loc185])
#loc400 = loc(fused[#loc186, #loc187])
#loc401 = loc(fused[#loc188, #loc189])
#loc402 = loc(fused[#loc190, #loc191])
#loc403 = loc(fused[#loc192, #loc193])
#loc404 = loc(fused[#loc194, #loc195])
#loc405 = loc(fused[#loc196, #loc197])
#loc406 = loc(fused[#loc200, #loc198])
#loc407 = loc(fused[#loc201, #loc202])
#loc408 = loc(fused[#loc203, #loc204])
#loc409 = loc(fused[#loc210, #loc211])
#loc410 = loc(fused[#loc212, #loc213])
#loc411 = loc(fused[#loc214, #loc215])
#loc412 = loc(fused[#loc216, #loc213])
#loc413 = loc(fused[#loc218, #loc219])
#loc414 = loc(fused[#loc221, #loc222])
#loc415 = loc(fused[#loc223, #loc224])
#loc416 = loc(fused[#loc226, #loc225])
#loc417 = loc(fused[#loc228, #loc227])
#loc418 = loc(fused[#loc231, #loc232])
#loc419 = loc(fused[#loc233, #loc234])
#loc420 = loc(fused[#loc236, #loc237])
#loc421 = loc(fused[#loc238, #loc239])
#loc422 = loc(fused[#loc240, #loc241])
#loc423 = loc(fused[#loc242, #loc234])
#loc424 = loc(fused[#loc244, #loc245])
#loc425 = loc(fused[#loc248, #loc249])
#loc426 = loc(fused[#loc250, #loc245])
#loc427 = loc(fused[#loc256, #loc257])
#loc428 = loc(fused[#loc258, #loc259])
#loc429 = loc(fused[#loc260, #loc261])
#loc430 = loc(fused[#loc262, #loc259])
#loc431 = loc(fused[#loc266, #loc267])
#loc432 = loc(fused[#loc270, #loc271])
#loc433 = loc(fused[#loc272, #loc273])
#loc434 = loc(fused[#loc274, #loc275])
#loc435 = loc(fused[#loc277, #loc278])
#loc436 = loc(fused[#loc279, #loc273])
#loc437 = loc(fused[#loc283, #loc281])
#loc438 = loc(fused[#loc286, #loc287])
#loc439 = loc(fused[#loc288, #loc289])
#loc440 = loc(fused[#loc290, #loc291])
#loc441 = loc(fused[#loc292, #loc289])
#loc442 = loc(fused[#loc295, #loc296])
#loc443 = loc(fused[#loc297, #loc298])
#loc444 = loc(fused[#loc299, #loc296])
#loc445 = loc(fused[#loc303, #loc302])
#loc446 = loc(fused[#loc304, #loc305])
#loc447 = loc(fused[#loc306, #loc307])
#loc448 = loc(fused[#loc309, #loc310])
#loc449 = loc(fused[#loc311, #loc312])
#loc450 = loc(fused[#loc313, #loc314])
#loc451 = loc(fused[#loc315, #loc316])
#loc452 = loc(fused[#loc317, #loc318, #loc319, #loc314])
#loc453 = loc(fused[#loc320, #loc321])
