!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc49 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":78:10)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":78:14)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":78:20)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":78:32)
#loc122 = loc(fused[#loc49, #loc50])
#loc123 = loc(fused[#loc51, #loc52])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fread_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fread(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc102)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc103)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_fread_17_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc105)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc106)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc107)
    cir.br ^bb1 loc(#loc108)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<0> : !s32i loc(#loc15)
    cir.store %3, %2 : !s32i, !cir.ptr<!s32i> loc(#loc109)
    cir.br ^bb2 loc(#loc108)
  ^bb2:  // 2 preds: ^bb1, ^bb8
    %4 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc17)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc110)
    cir.brcond %6 ^bb3, ^bb9 loc(#loc19)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc111)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc112)
  ^bb5:  // pred: ^bb4
    %7 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc105)
    cir.store %7, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc105)
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc10)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc106)
    %9 = cir.get_global @fread : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc23)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc113)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc114)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc28)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc28)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc28)
    %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc103)
    %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc30)
    %19 = cir.call @fread(%11, %12, %16, %18) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc23)
    cir.br ^bb6 loc(#loc22)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc14)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc14)
  ^bb8:  // pred: ^bb7
    %20 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc31)
    %21 = cir.unary(inc, %20) : !s32i, !s32i loc(#loc32)
    cir.store %21, %2 : !s32i, !cir.ptr<!s32i> loc(#loc115)
    cir.br ^bb2 loc(#loc108)
  ^bb9:  // pred: ^bb2
    cir.br ^bb10 loc(#loc14)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc6)
  } loc(#loc104)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_fread_17_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc117)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc35)
    cir.return loc(#loc34)
  } loc(#loc116)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc118)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc119)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc120)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc43)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc44)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc45)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc46)
  cir.func @main(%arg0: !s32i loc(fused[#loc49, #loc50]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc51, #loc52])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc122)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc123)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc48)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc53)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc53)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc54)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc55)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc55)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc56)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc43)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc57)
    %8 = cir.get_global @CWE252_Unchecked_Return_Value__char_fread_17_good : !cir.ptr<!cir.func<!void ()>> loc(#loc124)
    cir.call @CWE252_Unchecked_Return_Value__char_fread_17_good() : () -> () loc(#loc58)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc44)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc45)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    %13 = cir.get_global @CWE252_Unchecked_Return_Value__char_fread_17_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc125)
    cir.call @CWE252_Unchecked_Return_Value__char_fread_17_bad() : () -> () loc(#loc62)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc46)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc65)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc126)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc126)
    cir.return %17 : !s32i loc(#loc126)
  } loc(#loc121)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"fread failed!\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc67)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc128)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc129)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc130)
    cir.br ^bb1 loc(#loc131)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<0> : !s32i loc(#loc78)
    cir.store %3, %2 : !s32i, !cir.ptr<!s32i> loc(#loc132)
    cir.br ^bb2 loc(#loc131)
  ^bb2:  // 2 preds: ^bb1, ^bb12
    %4 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc80)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc81)
    %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc133)
    cir.brcond %6 ^bb3, ^bb13 loc(#loc82)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc134)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc135)
  ^bb5:  // pred: ^bb4
    %7 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc128)
    cir.store %7, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc128)
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc73)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc129)
    cir.br ^bb6 loc(#loc136)
  ^bb6:  // pred: ^bb5
    %9 = cir.get_global @fread : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc88)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc137)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc138)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc93)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc94)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc93)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc93)
    %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc103)
    %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc95)
    %19 = cir.call @fread(%11, %12, %16, %18) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc88)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc96)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc97)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc96)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc96)
    %24 = cir.cmp(ne, %19, %23) : !u64i, !cir.bool loc(#loc139)
    cir.brcond %24 ^bb7, ^bb8 loc(#loc140)
  ^bb7:  // pred: ^bb6
    %25 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc67)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc99)
    cir.br ^bb8 loc(#loc87)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc87)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc85)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc77)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc77)
  ^bb12:  // pred: ^bb11
    %27 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc100)
    %28 = cir.unary(inc, %27) : !s32i, !s32i loc(#loc101)
    cir.store %28, %2 : !s32i, !cir.ptr<!s32i> loc(#loc141)
    cir.br ^bb2 loc(#loc131)
  ^bb13:  // pred: ^bb2
    cir.br ^bb14 loc(#loc77)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc69)
  } loc(#loc127)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fread_17.c":0:0)
#loc1 = loc("/usr/include/stdio.h":728:1)
#loc2 = loc("/usr/include/stdio.h":730:3)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":24:1)
#loc6 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":38:1)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":32:13)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":32:36)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":33:13)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":33:27)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":26:5)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":26:9)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":27:5)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":37:5)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":27:13)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":27:9)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":27:16)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":27:20)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":27:18)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":28:5)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":29:9)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":36:9)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":35:13)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":35:27)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":35:19)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":35:33)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":35:44)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":35:56)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":35:60)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":35:64)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":27:24)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":27:23)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":64:1)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":67:1)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":66:5)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":66:11)
#loc37 = loc("/usr/include/stdlib.h":575:1)
#loc38 = loc("/usr/include/stdlib.h":575:41)
#loc39 = loc("/usr/include/time.h":76:1)
#loc40 = loc("/usr/include/time.h":76:38)
#loc41 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc42 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":83:15)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":85:15)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":88:15)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":90:15)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":78:1)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":93:1)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":79:1)
#loc54 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":81:27)
#loc55 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":81:22)
#loc56 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":81:5)
#loc57 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":83:5)
#loc58 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":84:5)
#loc59 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":84:55)
#loc60 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":85:5)
#loc61 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":88:5)
#loc62 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":89:5)
#loc63 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":89:54)
#loc64 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":90:5)
#loc65 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":92:12)
#loc66 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":92:5)
#loc67 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":58:27)
#loc68 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":45:1)
#loc69 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":62:1)
#loc70 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":53:13)
#loc71 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":53:36)
#loc72 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":54:13)
#loc73 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":54:27)
#loc74 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":47:5)
#loc75 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":47:9)
#loc76 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":48:5)
#loc77 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":61:5)
#loc78 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":48:13)
#loc79 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":48:9)
#loc80 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":48:16)
#loc81 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":48:20)
#loc82 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":48:18)
#loc83 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":49:5)
#loc84 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":50:9)
#loc85 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":60:9)
#loc86 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":56:13)
#loc87 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":59:13)
#loc88 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":56:17)
#loc89 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":56:31)
#loc90 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":56:23)
#loc91 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":56:37)
#loc92 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":56:48)
#loc93 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":56:60)
#loc94 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":56:64)
#loc95 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":56:68)
#loc96 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":56:78)
#loc97 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":56:82)
#loc98 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":57:13)
#loc99 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":58:17)
#loc100 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":48:24)
#loc101 = loc("CWE252_Unchecked_Return_Value__char_fread_17.c":48:23)
#loc102 = loc(fused[#loc1, #loc2])
#loc103 = loc(fused[#loc3, #loc4])
#loc104 = loc(fused[#loc5, #loc6])
#loc105 = loc(fused[#loc7, #loc8])
#loc106 = loc(fused[#loc9, #loc10])
#loc107 = loc(fused[#loc11, #loc12])
#loc108 = loc(fused[#loc13, #loc14])
#loc109 = loc(fused[#loc16, #loc15])
#loc110 = loc(fused[#loc17, #loc18])
#loc111 = loc(fused[#loc20, #loc14])
#loc112 = loc(fused[#loc21, #loc22])
#loc113 = loc(fused[#loc25, #loc24])
#loc114 = loc(fused[#loc26, #loc27])
#loc115 = loc(fused[#loc32, #loc31])
#loc116 = loc(fused[#loc33, #loc34])
#loc117 = loc(fused[#loc35, #loc36])
#loc118 = loc(fused[#loc37, #loc38])
#loc119 = loc(fused[#loc39, #loc40])
#loc120 = loc(fused[#loc41, #loc42])
#loc121 = loc(fused[#loc47, #loc48])
#loc124 = loc(fused[#loc58, #loc59])
#loc125 = loc(fused[#loc62, #loc63])
#loc126 = loc(fused[#loc66, #loc65])
#loc127 = loc(fused[#loc68, #loc69])
#loc128 = loc(fused[#loc70, #loc71])
#loc129 = loc(fused[#loc72, #loc73])
#loc130 = loc(fused[#loc74, #loc75])
#loc131 = loc(fused[#loc76, #loc77])
#loc132 = loc(fused[#loc79, #loc78])
#loc133 = loc(fused[#loc80, #loc81])
#loc134 = loc(fused[#loc83, #loc77])
#loc135 = loc(fused[#loc84, #loc85])
#loc136 = loc(fused[#loc86, #loc87])
#loc137 = loc(fused[#loc90, #loc89])
#loc138 = loc(fused[#loc91, #loc92])
#loc139 = loc(fused[#loc88, #loc97])
#loc140 = loc(fused[#loc98, #loc87])
#loc141 = loc(fused[#loc101, #loc100])
