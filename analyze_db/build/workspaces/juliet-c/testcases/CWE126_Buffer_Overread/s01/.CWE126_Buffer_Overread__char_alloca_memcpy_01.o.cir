!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_alloca_memcpy_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc129)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc130)
  cir.func no_proto @CWE126_Buffer_Overread__char_alloca_memcpy_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc132)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc133)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc134)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc12)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc12)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc12)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc12)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc12)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc135)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc12)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc12)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc134)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc14)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc14)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc14)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc14)
    %15 = cir.alloca !u8i, !cir.ptr<!u8i>, %14 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc14)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc14)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc14)
    cir.store %17, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc135)
    %18 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc15)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc15)
    %20 = cir.const #cir.int<65> : !s32i loc(#loc16)
    %21 = cir.const #cir.int<50> : !s32i loc(#loc17)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc17)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc17)
    cir.libc.memset %24 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc136)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc21)
    %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc21)
    %27 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
    %28 = cir.const #cir.int<50> : !s32i loc(#loc23)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc23)
    %31 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc25)
    cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc137)
    %32 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc26)
    %34 = cir.const #cir.int<65> : !s32i loc(#loc27)
    %35 = cir.const #cir.int<100> : !s32i loc(#loc28)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %37 = cir.binop(sub, %35, %36) nsw : !s32i loc(#loc28)
    %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc28)
    cir.libc.memset %38 bytes from %33 set to %34 : !cir.ptr<!void>, !s32i, !u64i loc(#loc138)
    %39 = cir.const #cir.int<0> : !s32i loc(#loc32)
    %40 = cir.cast(integral, %39 : !s32i), !s8i loc(#loc32)
    %41 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
    %42 = cir.const #cir.int<100> : !s32i loc(#loc34)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %44 = cir.binop(sub, %42, %43) nsw : !s32i loc(#loc34)
    %45 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %44 : !s32i), !cir.ptr<!s8i> loc(#loc36)
    cir.store %40, %45 : !s8i, !cir.ptr<!s8i> loc(#loc139)
    %46 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    cir.store %46, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc140)
    cir.br ^bb1 loc(#loc141)
  ^bb1:  // pred: ^bb0
    %47 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc41)
    %48 = cir.cast(bitcast, %47 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc41)
    %49 = cir.const #cir.int<67> : !s32i loc(#loc42)
    %50 = cir.const #cir.int<100> : !s32i loc(#loc43)
    %51 = cir.const #cir.int<1> : !s32i loc(#loc44)
    %52 = cir.binop(sub, %50, %51) nsw : !s32i loc(#loc43)
    %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc43)
    cir.libc.memset %53 bytes from %48 set to %49 : !cir.ptr<!void>, !s32i, !u64i loc(#loc142)
    %54 = cir.const #cir.int<0> : !s32i loc(#loc47)
    %55 = cir.cast(integral, %54 : !s32i), !s8i loc(#loc47)
    %56 = cir.const #cir.int<100> : !s32i loc(#loc48)
    %57 = cir.const #cir.int<1> : !s32i loc(#loc49)
    %58 = cir.binop(sub, %56, %57) nsw : !s32i loc(#loc48)
    %59 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc50)
    %60 = cir.ptr_stride(%59 : !cir.ptr<!s8i>, %58 : !s32i), !cir.ptr<!s8i> loc(#loc50)
    cir.store %55, %60 : !s8i, !cir.ptr<!s8i> loc(#loc143)
    %61 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc51)
    %62 = cir.cast(bitcast, %61 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc51)
    %63 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
    %64 = cir.cast(bitcast, %63 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc52)
    %65 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc53)
    %66 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc54)
    %67 = cir.call @strlen(%66) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc53)
    %68 = cir.const #cir.int<1> : !u64i loc(#loc144)
    %69 = cir.binop(mul, %67, %68) : !u64i loc(#loc145)
    cir.libc.memcpy %69 bytes from %64 to %62 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc146)
    %70 = cir.const #cir.int<0> : !s32i loc(#loc59)
    %71 = cir.cast(integral, %70 : !s32i), !s8i loc(#loc59)
    %72 = cir.const #cir.int<100> : !s32i loc(#loc60)
    %73 = cir.const #cir.int<1> : !s32i loc(#loc61)
    %74 = cir.binop(sub, %72, %73) nsw : !s32i loc(#loc60)
    %75 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc62)
    %76 = cir.ptr_stride(%75 : !cir.ptr<!s8i>, %74 : !s32i), !cir.ptr<!s8i> loc(#loc62)
    cir.store %71, %76 : !s8i, !cir.ptr<!s8i> loc(#loc147)
    %77 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc63)
    cir.call @printLine(%77) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    cir.br ^bb2 loc(#loc40)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc6)
  } loc(#loc131)
  cir.func no_proto @CWE126_Buffer_Overread__char_alloca_memcpy_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc149)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc67)
    cir.return loc(#loc66)
  } loc(#loc148)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc151)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc152)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc153)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc76)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc76)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc76)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc76)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc76)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc154)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc76)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc76)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc153)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc78)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc78)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc78)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc78)
    %15 = cir.alloca !u8i, !cir.ptr<!u8i>, %14 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc78)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc78)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc78)
    cir.store %17, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc154)
    %18 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc79)
    %20 = cir.const #cir.int<65> : !s32i loc(#loc80)
    %21 = cir.const #cir.int<50> : !s32i loc(#loc81)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc82)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc81)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc81)
    cir.libc.memset %24 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc155)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc85)
    %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc85)
    %27 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
    %28 = cir.const #cir.int<50> : !s32i loc(#loc87)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc88)
    %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc87)
    %31 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc89)
    cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc156)
    %32 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc90)
    %34 = cir.const #cir.int<65> : !s32i loc(#loc91)
    %35 = cir.const #cir.int<100> : !s32i loc(#loc92)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc93)
    %37 = cir.binop(sub, %35, %36) nsw : !s32i loc(#loc92)
    %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc92)
    cir.libc.memset %38 bytes from %33 set to %34 : !cir.ptr<!void>, !s32i, !u64i loc(#loc157)
    %39 = cir.const #cir.int<0> : !s32i loc(#loc96)
    %40 = cir.cast(integral, %39 : !s32i), !s8i loc(#loc96)
    %41 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
    %42 = cir.const #cir.int<100> : !s32i loc(#loc98)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc99)
    %44 = cir.binop(sub, %42, %43) nsw : !s32i loc(#loc98)
    %45 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %44 : !s32i), !cir.ptr<!s8i> loc(#loc100)
    cir.store %40, %45 : !s8i, !cir.ptr<!s8i> loc(#loc158)
    %46 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc101)
    cir.store %46, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc159)
    cir.br ^bb1 loc(#loc160)
  ^bb1:  // pred: ^bb0
    %47 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc105)
    %48 = cir.cast(bitcast, %47 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc105)
    %49 = cir.const #cir.int<67> : !s32i loc(#loc106)
    %50 = cir.const #cir.int<100> : !s32i loc(#loc107)
    %51 = cir.const #cir.int<1> : !s32i loc(#loc108)
    %52 = cir.binop(sub, %50, %51) nsw : !s32i loc(#loc107)
    %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc107)
    cir.libc.memset %53 bytes from %48 set to %49 : !cir.ptr<!void>, !s32i, !u64i loc(#loc161)
    %54 = cir.const #cir.int<0> : !s32i loc(#loc111)
    %55 = cir.cast(integral, %54 : !s32i), !s8i loc(#loc111)
    %56 = cir.const #cir.int<100> : !s32i loc(#loc112)
    %57 = cir.const #cir.int<1> : !s32i loc(#loc113)
    %58 = cir.binop(sub, %56, %57) nsw : !s32i loc(#loc112)
    %59 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc114)
    %60 = cir.ptr_stride(%59 : !cir.ptr<!s8i>, %58 : !s32i), !cir.ptr<!s8i> loc(#loc114)
    cir.store %55, %60 : !s8i, !cir.ptr<!s8i> loc(#loc162)
    %61 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc115)
    %62 = cir.cast(bitcast, %61 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc115)
    %63 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
    %64 = cir.cast(bitcast, %63 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc116)
    %65 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc117)
    %66 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc118)
    %67 = cir.call @strlen(%66) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc117)
    %68 = cir.const #cir.int<1> : !u64i loc(#loc163)
    %69 = cir.binop(mul, %67, %68) : !u64i loc(#loc164)
    cir.libc.memcpy %69 bytes from %64 to %62 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc165)
    %70 = cir.const #cir.int<0> : !s32i loc(#loc123)
    %71 = cir.cast(integral, %70 : !s32i), !s8i loc(#loc123)
    %72 = cir.const #cir.int<100> : !s32i loc(#loc124)
    %73 = cir.const #cir.int<1> : !s32i loc(#loc125)
    %74 = cir.binop(sub, %72, %73) nsw : !s32i loc(#loc124)
    %75 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc126)
    %76 = cir.ptr_stride(%75 : !cir.ptr<!s8i>, %74 : !s32i), !cir.ptr<!s8i> loc(#loc126)
    cir.store %71, %76 : !s8i, !cir.ptr<!s8i> loc(#loc166)
    %77 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc127)
    cir.call @printLine(%77) : (!cir.ptr<!s8i>) -> () loc(#loc128)
    cir.br ^bb2 loc(#loc104)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc70)
  } loc(#loc150)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_alloca_memcpy_01.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":23:1)
#loc6 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":44:1)
#loc7 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":35:9)
#loc8 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":35:22)
#loc9 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":25:5)
#loc10 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":25:12)
#loc11 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":26:5)
#loc12 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":26:36)
#loc13 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":27:5)
#loc14 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":27:37)
#loc15 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":28:12)
#loc16 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":28:27)
#loc17 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":28:32)
#loc18 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":28:35)
#loc19 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":28:5)
#loc20 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":28:36)
#loc21 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":29:27)
#loc22 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":29:5)
#loc23 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":29:19)
#loc24 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":29:22)
#loc25 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":29:23)
#loc26 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":30:12)
#loc27 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":30:28)
#loc28 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":30:33)
#loc29 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":30:37)
#loc30 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":30:5)
#loc31 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":30:38)
#loc32 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":31:29)
#loc33 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":31:5)
#loc34 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":31:20)
#loc35 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":31:24)
#loc36 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":31:25)
#loc37 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":33:12)
#loc38 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":33:5)
#loc39 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":34:5)
#loc40 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":43:5)
#loc41 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":36:16)
#loc42 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":36:22)
#loc43 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":36:27)
#loc44 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":36:31)
#loc45 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":36:9)
#loc46 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":36:32)
#loc47 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":37:23)
#loc48 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":37:14)
#loc49 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":37:18)
#loc50 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":37:9)
#loc51 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":40:16)
#loc52 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":40:22)
#loc53 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":40:28)
#loc54 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":40:35)
#loc55 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":40:41)
#loc56 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":40:52)
#loc57 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":40:9)
#loc58 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":40:53)
#loc59 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":41:23)
#loc60 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":41:14)
#loc61 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":41:18)
#loc62 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":41:9)
#loc63 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":42:19)
#loc64 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":42:9)
#loc65 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":74:1)
#loc66 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":77:1)
#loc67 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":76:5)
#loc68 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":76:13)
#loc69 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":51:1)
#loc70 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":72:1)
#loc71 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":63:9)
#loc72 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":63:22)
#loc73 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":53:5)
#loc74 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":53:12)
#loc75 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":54:5)
#loc76 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":54:36)
#loc77 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":55:5)
#loc78 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":55:37)
#loc79 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":56:12)
#loc80 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":56:27)
#loc81 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":56:32)
#loc82 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":56:35)
#loc83 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":56:5)
#loc84 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":56:36)
#loc85 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":57:27)
#loc86 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":57:5)
#loc87 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":57:19)
#loc88 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":57:22)
#loc89 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":57:23)
#loc90 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":58:12)
#loc91 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":58:28)
#loc92 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":58:33)
#loc93 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":58:37)
#loc94 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":58:5)
#loc95 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":58:38)
#loc96 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":59:29)
#loc97 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":59:5)
#loc98 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":59:20)
#loc99 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":59:24)
#loc100 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":59:25)
#loc101 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":61:12)
#loc102 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":61:5)
#loc103 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":62:5)
#loc104 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":71:5)
#loc105 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":64:16)
#loc106 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":64:22)
#loc107 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":64:27)
#loc108 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":64:31)
#loc109 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":64:9)
#loc110 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":64:32)
#loc111 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":65:23)
#loc112 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":65:14)
#loc113 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":65:18)
#loc114 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":65:9)
#loc115 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":68:16)
#loc116 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":68:22)
#loc117 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":68:28)
#loc118 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":68:35)
#loc119 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":68:41)
#loc120 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":68:52)
#loc121 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":68:9)
#loc122 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":68:53)
#loc123 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":69:23)
#loc124 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":69:14)
#loc125 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":69:18)
#loc126 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":69:9)
#loc127 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":70:19)
#loc128 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_01.c":70:9)
#loc129 = loc(fused[#loc1, #loc2])
#loc130 = loc(fused[#loc3, #loc4])
#loc131 = loc(fused[#loc5, #loc6])
#loc132 = loc(fused[#loc7, #loc8])
#loc133 = loc(fused[#loc9, #loc10])
#loc134 = loc(fused[#loc11, #loc12])
#loc135 = loc(fused[#loc13, #loc14])
#loc136 = loc(fused[#loc19, #loc20])
#loc137 = loc(fused[#loc22, #loc21])
#loc138 = loc(fused[#loc30, #loc31])
#loc139 = loc(fused[#loc33, #loc32])
#loc140 = loc(fused[#loc38, #loc37])
#loc141 = loc(fused[#loc39, #loc40])
#loc142 = loc(fused[#loc45, #loc46])
#loc143 = loc(fused[#loc50, #loc47])
#loc144 = loc(fused[#loc55, #loc56])
#loc145 = loc(fused[#loc53, #loc56])
#loc146 = loc(fused[#loc57, #loc58])
#loc147 = loc(fused[#loc62, #loc59])
#loc148 = loc(fused[#loc65, #loc66])
#loc149 = loc(fused[#loc67, #loc68])
#loc150 = loc(fused[#loc69, #loc70])
#loc151 = loc(fused[#loc71, #loc72])
#loc152 = loc(fused[#loc73, #loc74])
#loc153 = loc(fused[#loc75, #loc76])
#loc154 = loc(fused[#loc77, #loc78])
#loc155 = loc(fused[#loc83, #loc84])
#loc156 = loc(fused[#loc86, #loc85])
#loc157 = loc(fused[#loc94, #loc95])
#loc158 = loc(fused[#loc97, #loc96])
#loc159 = loc(fused[#loc102, #loc101])
#loc160 = loc(fused[#loc103, #loc104])
#loc161 = loc(fused[#loc109, #loc110])
#loc162 = loc(fused[#loc114, #loc111])
#loc163 = loc(fused[#loc119, #loc120])
#loc164 = loc(fused[#loc117, #loc120])
#loc165 = loc(fused[#loc121, #loc122])
#loc166 = loc(fused[#loc126, #loc123])
