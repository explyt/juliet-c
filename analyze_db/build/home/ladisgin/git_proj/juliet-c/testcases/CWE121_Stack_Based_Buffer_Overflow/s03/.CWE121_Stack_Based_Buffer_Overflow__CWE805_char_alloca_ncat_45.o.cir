!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45_badData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc97)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc99)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc100)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc8)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc8)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc8)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc8)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc8)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc101)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc8)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc8)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc100)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc10)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc10)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc10)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc10)
    %14 = cir.alloca !u8i, !cir.ptr<!u8i>, %13 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc10)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc10)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc10)
    cir.store %16, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc101)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc11)
    cir.store %17, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc102)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc13)
    %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc13)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc14)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc15)
    %22 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc16)
    cir.store %19, %22 : !s8i, !cir.ptr<!s8i> loc(#loc103)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc17)
    %24 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc97)
    cir.store %23, %24 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc104)
    %25 = cir.get_global @badSink : !cir.ptr<!cir.func<!void ()>> loc(#loc105)
    cir.call %25() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc19)
    cir.return loc(#loc4)
  } loc(#loc98)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc107)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc23)
    cir.return loc(#loc22)
  } loc(#loc106)
  cir.func private @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc108)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc109)
  cir.func no_proto internal private @badSink() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc111)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc112)
    %2 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc97)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc112)
    cir.br ^bb1 loc(#loc113)
  ^bb1:  // pred: ^bb0
    %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc37)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc37)
    %6 = cir.const #cir.int<67> : !s32i loc(#loc38)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc39)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc39)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc39)
    cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc114)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc43)
    %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc43)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc44)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc45)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc44)
    %16 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc46)
    %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc46)
    cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc115)
    %18 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc47)
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
    %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc49)
    %21 = cir.const #cir.int<100> : !s32i loc(#loc50)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc50)
    %23 = cir.call @strncat(%19, %20, %22) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc47)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    cir.br ^bb2 loc(#loc36)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc30)
  } loc(#loc110)
  cir.global "private" internal dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45_goodG2BData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc116)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc118)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc119)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc60)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc60)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc60)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc60)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc60)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc120)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc60)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc60)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc119)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc62)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc62)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc62)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc62)
    %14 = cir.alloca !u8i, !cir.ptr<!u8i>, %13 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc62)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc62)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc62)
    cir.store %16, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc120)
    %17 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
    cir.store %17, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc121)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc65)
    %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc65)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc67)
    %22 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc68)
    cir.store %19, %22 : !s8i, !cir.ptr<!s8i> loc(#loc122)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
    %24 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc116)
    cir.store %23, %24 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc123)
    %25 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void ()>> loc(#loc124)
    cir.call %25() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc71)
    cir.return loc(#loc56)
  } loc(#loc117)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc126)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc127)
    %2 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc116)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc127)
    cir.br ^bb1 loc(#loc128)
  ^bb1:  // pred: ^bb0
    %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc81)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc81)
    %6 = cir.const #cir.int<67> : !s32i loc(#loc82)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc83)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc84)
    %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc83)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc83)
    cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc129)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc87)
    %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc87)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc88)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc89)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc88)
    %16 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc90)
    %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc90)
    cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc130)
    %18 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc91)
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
    %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc93)
    %21 = cir.const #cir.int<100> : !s32i loc(#loc94)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc94)
    %23 = cir.call @strncat(%19, %20, %22) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc91)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    cir.br ^bb2 loc(#loc80)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc74)
  } loc(#loc125)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":21:1)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":21:15)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":39:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":50:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":41:5)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":41:12)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":42:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":42:36)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":43:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":43:37)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":46:12)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":46:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":47:15)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":47:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":47:10)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":47:11)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":48:78)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":48:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":49:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":49:13)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":82:1)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":85:1)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":84:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":84:13)
#loc25 = loc("/usr/include/string.h":152:1)
#loc26 = loc("/usr/include/string.h":153:29)
#loc27 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc28 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":26:1)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":37:1)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":30:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":30:24)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":28:5)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":28:19)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":29:5)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":36:5)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":31:16)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":31:24)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":31:29)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":31:33)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":31:9)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":31:34)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":32:25)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":32:16)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":32:20)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":32:9)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":34:9)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":34:17)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":34:23)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":34:31)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":35:19)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":35:9)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":22:1)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":22:15)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":70:1)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":80:1)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":72:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":72:12)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":73:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":73:36)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":74:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":74:37)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":76:12)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":76:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":77:15)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":77:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":77:10)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":77:11)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":78:82)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":78:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":79:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":79:17)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":57:1)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":68:1)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":61:9)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":61:24)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":59:5)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":59:19)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":60:5)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":67:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":62:16)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":62:24)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":62:29)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":62:33)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":62:9)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":62:34)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":63:25)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":63:16)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":63:20)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":63:9)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":65:9)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":65:17)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":65:23)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":65:31)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":66:19)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_45.c":66:9)
#loc97 = loc(fused[#loc1, #loc2])
#loc98 = loc(fused[#loc3, #loc4])
#loc99 = loc(fused[#loc5, #loc6])
#loc100 = loc(fused[#loc7, #loc8])
#loc101 = loc(fused[#loc9, #loc10])
#loc102 = loc(fused[#loc12, #loc11])
#loc103 = loc(fused[#loc14, #loc13])
#loc104 = loc(fused[#loc18, #loc17])
#loc105 = loc(fused[#loc19, #loc20])
#loc106 = loc(fused[#loc21, #loc22])
#loc107 = loc(fused[#loc23, #loc24])
#loc108 = loc(fused[#loc25, #loc26])
#loc109 = loc(fused[#loc27, #loc28])
#loc110 = loc(fused[#loc29, #loc30])
#loc111 = loc(fused[#loc31, #loc32])
#loc112 = loc(fused[#loc33, #loc34])
#loc113 = loc(fused[#loc35, #loc36])
#loc114 = loc(fused[#loc41, #loc42])
#loc115 = loc(fused[#loc46, #loc43])
#loc116 = loc(fused[#loc53, #loc54])
#loc117 = loc(fused[#loc55, #loc56])
#loc118 = loc(fused[#loc57, #loc58])
#loc119 = loc(fused[#loc59, #loc60])
#loc120 = loc(fused[#loc61, #loc62])
#loc121 = loc(fused[#loc64, #loc63])
#loc122 = loc(fused[#loc66, #loc65])
#loc123 = loc(fused[#loc70, #loc69])
#loc124 = loc(fused[#loc71, #loc72])
#loc125 = loc(fused[#loc73, #loc74])
#loc126 = loc(fused[#loc75, #loc76])
#loc127 = loc(fused[#loc77, #loc78])
#loc128 = loc(fused[#loc79, #loc80])
#loc129 = loc(fused[#loc85, #loc86])
#loc130 = loc(fused[#loc90, #loc87])
