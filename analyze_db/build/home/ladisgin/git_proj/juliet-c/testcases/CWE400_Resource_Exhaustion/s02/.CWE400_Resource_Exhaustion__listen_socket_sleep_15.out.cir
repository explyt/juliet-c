!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc185 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":440:10)
#loc186 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":440:14)
#loc187 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":440:20)
#loc188 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":440:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc635 = loc(fused[#loc185, #loc186])
#loc636 = loc(fused[#loc187, #loc188])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__listen_socket_sleep_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc569)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc570)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc571)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc572)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc573)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc574)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc575)
  cir.func private @close(!s32i) -> !s32i loc(#loc576)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc577)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc19)
  cir.func private @usleep(!u32i) -> !s32i loc(#loc578)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Sleep time possibly too long\00" : !cir.array<!s8i x 29>> : !cir.array<!s8i x 29> {alignment = 1 : i64} loc(#loc22)
  cir.func no_proto @CWE400_Resource_Exhaustion__listen_socket_sleep_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc580)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc28)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc581)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc32)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc584)
            %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc585)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc586)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc587)
            %8 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc588)
            %9 = cir.const #cir.int<1> : !s32i loc(#loc41)
            %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc41)
            cir.store %10, %6 : !s32i, !cir.ptr<!s32i> loc(#loc586)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc43)
            %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc43)
            cir.store %12, %7 : !s32i, !cir.ptr<!s32i> loc(#loc587)
            cir.scope {
              cir.do {
                %13 = cir.const #cir.int<2> : !s32i loc(#loc48)
                %14 = cir.const #cir.int<1> : !s32i loc(#loc49)
                %15 = cir.const #cir.int<6> : !s32i loc(#loc50)
                %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc51)
                cir.store %16, %6 : !s32i, !cir.ptr<!s32i> loc(#loc590)
                cir.scope {
                  %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc56)
                  %59 = cir.const #cir.int<1> : !s32i loc(#loc57)
                  %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc57)
                  %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc592)
                  cir.if %61 {
                    cir.break loc(#loc59)
                  } loc(#loc593)
                } loc(#loc591)
                %17 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc594)
                %18 = cir.const #cir.int<0> : !s32i loc(#loc62)
                %19 = cir.const #cir.int<16> : !u64i loc(#loc595)
                cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc596)
                %20 = cir.const #cir.int<2> : !s32i loc(#loc67)
                %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc67)
                %22 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
                cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc597)
                %23 = cir.const #cir.int<0> : !s32i loc(#loc70)
                %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc70)
                %25 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc71)
                %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc72)
                cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc598)
                %27 = cir.const #cir.int<27015> : !s32i loc(#loc74)
                %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc74)
                %29 = cir.call @htons(%28) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc75)
                %30 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
                cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc599)
                cir.scope {
                  %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc81)
                  %59 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc601)
                  %60 = cir.const #cir.int<16> : !u64i loc(#loc602)
                  %61 = cir.cast(integral, %60 : !u64i), !u32i loc(#loc602)
                  %62 = cir.call @bind(%58, %59, %61) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc86)
                  %63 = cir.const #cir.int<1> : !s32i loc(#loc87)
                  %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc87)
                  %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc603)
                  cir.if %65 {
                    cir.break loc(#loc89)
                  } loc(#loc604)
                } loc(#loc600)
                cir.scope {
                  %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc92)
                  %59 = cir.const #cir.int<5> : !s32i loc(#loc93)
                  %60 = cir.call @listen(%58, %59) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc94)
                  %61 = cir.const #cir.int<1> : !s32i loc(#loc95)
                  %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc95)
                  %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc606)
                  cir.if %63 {
                    cir.break loc(#loc97)
                  } loc(#loc607)
                } loc(#loc605)
                %31 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc98)
                %32 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc99)
                %33 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc100)
                %34 = cir.call @accept(%31, %32, %33) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc101)
                cir.store %34, %7 : !s32i, !cir.ptr<!s32i> loc(#loc608)
                cir.scope {
                  %58 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc106)
                  %59 = cir.const #cir.int<1> : !s32i loc(#loc107)
                  %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc107)
                  %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc610)
                  cir.if %61 {
                    cir.break loc(#loc109)
                  } loc(#loc611)
                } loc(#loc609)
                %35 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc110)
                %36 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc111)
                %37 = cir.cast(bitcast, %36 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc111)
                %38 = cir.const #cir.int<3> : !s32i loc(#loc112)
                %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc112)
                %40 = cir.const #cir.int<4> : !u64i loc(#loc112)
                %41 = cir.binop(mul, %39, %40) : !u64i loc(#loc112)
                %42 = cir.const #cir.int<2> : !s32i loc(#loc112)
                %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc112)
                %44 = cir.binop(add, %41, %43) : !u64i loc(#loc112)
                %45 = cir.const #cir.int<1> : !s32i loc(#loc113)
                %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc113)
                %47 = cir.binop(sub, %44, %46) : !u64i loc(#loc612)
                %48 = cir.const #cir.int<0> : !s32i loc(#loc114)
                %49 = cir.call @recv(%35, %37, %47, %48) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc115)
                %50 = cir.cast(integral, %49 : !s64i), !s32i loc(#loc115)
                cir.store %50, %4 : !s32i, !cir.ptr<!s32i> loc(#loc613)
                cir.scope {
                  %58 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc120)
                  %59 = cir.const #cir.int<1> : !s32i loc(#loc121)
                  %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc121)
                  %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc615)
                  %62 = cir.ternary(%61, true {
                    %63 = cir.const #true loc(#loc122)
                    cir.yield %63 : !cir.bool loc(#loc122)
                  }, false {
                    %63 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc123)
                    %64 = cir.const #cir.int<0> : !s32i loc(#loc124)
                    %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc616)
                    %66 = cir.ternary(%65, true {
                      %67 = cir.const #true loc(#loc122)
                      cir.yield %67 : !cir.bool loc(#loc122)
                    }, false {
                      %67 = cir.const #false loc(#loc122)
                      cir.yield %67 : !cir.bool loc(#loc122)
                    }) : (!cir.bool) -> !cir.bool loc(#loc122)
                    cir.yield %66 : !cir.bool loc(#loc122)
                  }) : (!cir.bool) -> !cir.bool loc(#loc122)
                  cir.if %62 {
                    cir.break loc(#loc126)
                  } loc(#loc617)
                } loc(#loc614)
                %51 = cir.const #cir.int<0> : !s32i loc(#loc127)
                %52 = cir.cast(integral, %51 : !s32i), !s8i loc(#loc127)
                %53 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc128)
                %54 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc129)
                %55 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %53 : !s32i), !cir.ptr<!s8i> loc(#loc129)
                cir.store %52, %55 : !s8i, !cir.ptr<!s8i> loc(#loc618)
                %56 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc130)
                %57 = cir.call @atoi(%56) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc131)
                cir.store %57, %0 : !s32i, !cir.ptr<!s32i> loc(#loc619)
                cir.yield loc(#loc47)
              } while {
                %13 = cir.const #cir.int<0> : !s32i loc(#loc134)
                %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc134)
                cir.condition(%14) loc(#loc134)
              } loc(#loc589)
            } loc(#loc589)
            cir.scope {
              %13 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc137)
              %14 = cir.const #cir.int<1> : !s32i loc(#loc138)
              %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc138)
              %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc621)
              cir.if %16 {
                %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc140)
                %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc141)
              } loc(#loc622)
            } loc(#loc620)
            cir.scope {
              %13 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc144)
              %14 = cir.const #cir.int<1> : !s32i loc(#loc145)
              %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc145)
              %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc624)
              cir.if %16 {
                %17 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc147)
                %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc148)
              } loc(#loc625)
            } loc(#loc623)
          } loc(#loc583)
          cir.break loc(#loc149)
        } loc(#loc33)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc19)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc19)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc151)
          cir.break loc(#loc152)
        } loc(#loc150)
        cir.yield loc(#loc30)
      } loc(#loc30)
    } loc(#loc582)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc155)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc157)
          %5 = cir.cast(integral, %4 : !s32i), !u32i loc(#loc157)
          %6 = cir.call @usleep(%5) : (!u32i) -> !s32i loc(#loc158)
          %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc22)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc22)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc159)
          cir.break loc(#loc160)
        } loc(#loc156)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc162)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc162)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc163)
          cir.break loc(#loc164)
        } loc(#loc161)
        cir.yield loc(#loc153)
      } loc(#loc153)
    } loc(#loc626)
    cir.return loc(#loc24)
  } loc(#loc579)
  cir.func no_proto @CWE400_Resource_Exhaustion__listen_socket_sleep_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc628)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc167)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc629)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc169)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc630)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc171)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc631)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc173)
    cir.return loc(#loc166)
  } loc(#loc627)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc632)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc633)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc179)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc180)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc181)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc182)
  cir.func @main(%arg0: !s32i loc(fused[#loc185, #loc186]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc187, #loc188])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc635)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc636)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc184)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc189)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc189)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc190)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc191)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc191)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc192)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc179)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc179)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc193)
    %8 = cir.get_global @CWE400_Resource_Exhaustion__listen_socket_sleep_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc637)
    cir.call @CWE400_Resource_Exhaustion__listen_socket_sleep_15_good() : () -> () loc(#loc194)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc180)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc180)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc196)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc181)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc181)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc197)
    %13 = cir.get_global @CWE400_Resource_Exhaustion__listen_socket_sleep_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc638)
    cir.call @CWE400_Resource_Exhaustion__listen_socket_sleep_15_bad() : () -> () loc(#loc198)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc182)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc182)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc200)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc201)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc639)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc639)
    cir.return %17 : !s32i loc(#loc639)
  } loc(#loc634)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Sleep time OK\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc203)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Sleep time too long\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc204)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc641)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc209)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc210)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc642)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc214)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc645)
            %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc646)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc647)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc648)
            %8 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc649)
            %9 = cir.const #cir.int<1> : !s32i loc(#loc223)
            %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc223)
            cir.store %10, %6 : !s32i, !cir.ptr<!s32i> loc(#loc647)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc225)
            %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc225)
            cir.store %12, %7 : !s32i, !cir.ptr<!s32i> loc(#loc648)
            cir.scope {
              cir.do {
                %13 = cir.const #cir.int<2> : !s32i loc(#loc230)
                %14 = cir.const #cir.int<1> : !s32i loc(#loc231)
                %15 = cir.const #cir.int<6> : !s32i loc(#loc232)
                %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc233)
                cir.store %16, %6 : !s32i, !cir.ptr<!s32i> loc(#loc651)
                cir.scope {
                  %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc238)
                  %59 = cir.const #cir.int<1> : !s32i loc(#loc239)
                  %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc239)
                  %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc653)
                  cir.if %61 {
                    cir.break loc(#loc241)
                  } loc(#loc654)
                } loc(#loc652)
                %17 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc655)
                %18 = cir.const #cir.int<0> : !s32i loc(#loc244)
                %19 = cir.const #cir.int<16> : !u64i loc(#loc656)
                cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc657)
                %20 = cir.const #cir.int<2> : !s32i loc(#loc249)
                %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc249)
                %22 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
                cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc658)
                %23 = cir.const #cir.int<0> : !s32i loc(#loc251)
                %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc251)
                %25 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc71)
                %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc72)
                cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc659)
                %27 = cir.const #cir.int<27015> : !s32i loc(#loc253)
                %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc253)
                %29 = cir.call @htons(%28) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc254)
                %30 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
                cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc660)
                cir.scope {
                  %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc259)
                  %59 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc662)
                  %60 = cir.const #cir.int<16> : !u64i loc(#loc663)
                  %61 = cir.cast(integral, %60 : !u64i), !u32i loc(#loc663)
                  %62 = cir.call @bind(%58, %59, %61) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc264)
                  %63 = cir.const #cir.int<1> : !s32i loc(#loc265)
                  %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc265)
                  %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc664)
                  cir.if %65 {
                    cir.break loc(#loc267)
                  } loc(#loc665)
                } loc(#loc661)
                cir.scope {
                  %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc270)
                  %59 = cir.const #cir.int<5> : !s32i loc(#loc271)
                  %60 = cir.call @listen(%58, %59) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc272)
                  %61 = cir.const #cir.int<1> : !s32i loc(#loc273)
                  %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc273)
                  %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc667)
                  cir.if %63 {
                    cir.break loc(#loc275)
                  } loc(#loc668)
                } loc(#loc666)
                %31 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc276)
                %32 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc277)
                %33 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc278)
                %34 = cir.call @accept(%31, %32, %33) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc279)
                cir.store %34, %7 : !s32i, !cir.ptr<!s32i> loc(#loc669)
                cir.scope {
                  %58 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc284)
                  %59 = cir.const #cir.int<1> : !s32i loc(#loc285)
                  %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc285)
                  %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc671)
                  cir.if %61 {
                    cir.break loc(#loc287)
                  } loc(#loc672)
                } loc(#loc670)
                %35 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc288)
                %36 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc289)
                %37 = cir.cast(bitcast, %36 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc289)
                %38 = cir.const #cir.int<3> : !s32i loc(#loc290)
                %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc290)
                %40 = cir.const #cir.int<4> : !u64i loc(#loc290)
                %41 = cir.binop(mul, %39, %40) : !u64i loc(#loc290)
                %42 = cir.const #cir.int<2> : !s32i loc(#loc290)
                %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc290)
                %44 = cir.binop(add, %41, %43) : !u64i loc(#loc290)
                %45 = cir.const #cir.int<1> : !s32i loc(#loc291)
                %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc291)
                %47 = cir.binop(sub, %44, %46) : !u64i loc(#loc673)
                %48 = cir.const #cir.int<0> : !s32i loc(#loc292)
                %49 = cir.call @recv(%35, %37, %47, %48) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc293)
                %50 = cir.cast(integral, %49 : !s64i), !s32i loc(#loc293)
                cir.store %50, %4 : !s32i, !cir.ptr<!s32i> loc(#loc674)
                cir.scope {
                  %58 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc298)
                  %59 = cir.const #cir.int<1> : !s32i loc(#loc299)
                  %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc299)
                  %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc676)
                  %62 = cir.ternary(%61, true {
                    %63 = cir.const #true loc(#loc300)
                    cir.yield %63 : !cir.bool loc(#loc300)
                  }, false {
                    %63 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc301)
                    %64 = cir.const #cir.int<0> : !s32i loc(#loc302)
                    %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc677)
                    %66 = cir.ternary(%65, true {
                      %67 = cir.const #true loc(#loc300)
                      cir.yield %67 : !cir.bool loc(#loc300)
                    }, false {
                      %67 = cir.const #false loc(#loc300)
                      cir.yield %67 : !cir.bool loc(#loc300)
                    }) : (!cir.bool) -> !cir.bool loc(#loc300)
                    cir.yield %66 : !cir.bool loc(#loc300)
                  }) : (!cir.bool) -> !cir.bool loc(#loc300)
                  cir.if %62 {
                    cir.break loc(#loc304)
                  } loc(#loc678)
                } loc(#loc675)
                %51 = cir.const #cir.int<0> : !s32i loc(#loc305)
                %52 = cir.cast(integral, %51 : !s32i), !s8i loc(#loc305)
                %53 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc306)
                %54 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc307)
                %55 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %53 : !s32i), !cir.ptr<!s8i> loc(#loc307)
                cir.store %52, %55 : !s8i, !cir.ptr<!s8i> loc(#loc679)
                %56 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc308)
                %57 = cir.call @atoi(%56) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc309)
                cir.store %57, %0 : !s32i, !cir.ptr<!s32i> loc(#loc680)
                cir.yield loc(#loc229)
              } while {
                %13 = cir.const #cir.int<0> : !s32i loc(#loc312)
                %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc312)
                cir.condition(%14) loc(#loc312)
              } loc(#loc650)
            } loc(#loc650)
            cir.scope {
              %13 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc315)
              %14 = cir.const #cir.int<1> : !s32i loc(#loc316)
              %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc316)
              %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc682)
              cir.if %16 {
                %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc318)
                %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc319)
              } loc(#loc683)
            } loc(#loc681)
            cir.scope {
              %13 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc322)
              %14 = cir.const #cir.int<1> : !s32i loc(#loc323)
              %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc323)
              %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc685)
              cir.if %16 {
                %17 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc325)
                %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc326)
              } loc(#loc686)
            } loc(#loc684)
          } loc(#loc644)
          cir.break loc(#loc327)
        } loc(#loc215)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc329)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc329)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc330)
          cir.break loc(#loc331)
        } loc(#loc328)
        cir.yield loc(#loc212)
      } loc(#loc212)
    } loc(#loc643)
    cir.scope {
      %3 = cir.const #cir.int<8> : !s32i loc(#loc334)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc336)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc336)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc337)
          cir.break loc(#loc338)
        } loc(#loc335)
        cir.case(default, []) {
          cir.scope {
            %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc342)
            %5 = cir.const #cir.int<0> : !s32i loc(#loc343)
            %6 = cir.cmp(gt, %4, %5) : !s32i, !cir.bool loc(#loc689)
            %7 = cir.ternary(%6, true {
              %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc345)
              %9 = cir.const #cir.int<2000> : !s32i loc(#loc346)
              %10 = cir.cmp(le, %8, %9) : !s32i, !cir.bool loc(#loc690)
              %11 = cir.ternary(%10, true {
                %12 = cir.const #true loc(#loc344)
                cir.yield %12 : !cir.bool loc(#loc344)
              }, false {
                %12 = cir.const #false loc(#loc344)
                cir.yield %12 : !cir.bool loc(#loc344)
              }) : (!cir.bool) -> !cir.bool loc(#loc344)
              cir.yield %11 : !cir.bool loc(#loc344)
            }, false {
              %8 = cir.const #false loc(#loc344)
              cir.yield %8 : !cir.bool loc(#loc344)
            }) : (!cir.bool) -> !cir.bool loc(#loc344)
            cir.if %7 {
              %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc350)
              %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc350)
              %10 = cir.call @usleep(%9) : (!u32i) -> !s32i loc(#loc351)
              %11 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc203)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc203)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc352)
            } else {
              %8 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc204)
              %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc204)
              cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc353)
            } loc(#loc691)
          } loc(#loc688)
          cir.break loc(#loc354)
        } loc(#loc339)
        cir.yield loc(#loc332)
      } loc(#loc332)
    } loc(#loc687)
    cir.return loc(#loc206)
  } loc(#loc640)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc693)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc359)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc360)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc694)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc364)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc697)
            %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc698)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc699)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc700)
            %8 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc701)
            %9 = cir.const #cir.int<1> : !s32i loc(#loc373)
            %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc373)
            cir.store %10, %6 : !s32i, !cir.ptr<!s32i> loc(#loc699)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc375)
            %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc375)
            cir.store %12, %7 : !s32i, !cir.ptr<!s32i> loc(#loc700)
            cir.scope {
              cir.do {
                %13 = cir.const #cir.int<2> : !s32i loc(#loc380)
                %14 = cir.const #cir.int<1> : !s32i loc(#loc381)
                %15 = cir.const #cir.int<6> : !s32i loc(#loc382)
                %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc383)
                cir.store %16, %6 : !s32i, !cir.ptr<!s32i> loc(#loc703)
                cir.scope {
                  %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc388)
                  %59 = cir.const #cir.int<1> : !s32i loc(#loc389)
                  %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc389)
                  %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc705)
                  cir.if %61 {
                    cir.break loc(#loc391)
                  } loc(#loc706)
                } loc(#loc704)
                %17 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc707)
                %18 = cir.const #cir.int<0> : !s32i loc(#loc394)
                %19 = cir.const #cir.int<16> : !u64i loc(#loc708)
                cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc709)
                %20 = cir.const #cir.int<2> : !s32i loc(#loc399)
                %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc399)
                %22 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
                cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc710)
                %23 = cir.const #cir.int<0> : !s32i loc(#loc401)
                %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc401)
                %25 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc71)
                %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc72)
                cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc711)
                %27 = cir.const #cir.int<27015> : !s32i loc(#loc403)
                %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc403)
                %29 = cir.call @htons(%28) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc404)
                %30 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
                cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc712)
                cir.scope {
                  %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc409)
                  %59 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc714)
                  %60 = cir.const #cir.int<16> : !u64i loc(#loc715)
                  %61 = cir.cast(integral, %60 : !u64i), !u32i loc(#loc715)
                  %62 = cir.call @bind(%58, %59, %61) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc414)
                  %63 = cir.const #cir.int<1> : !s32i loc(#loc415)
                  %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc415)
                  %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc716)
                  cir.if %65 {
                    cir.break loc(#loc417)
                  } loc(#loc717)
                } loc(#loc713)
                cir.scope {
                  %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc420)
                  %59 = cir.const #cir.int<5> : !s32i loc(#loc421)
                  %60 = cir.call @listen(%58, %59) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc422)
                  %61 = cir.const #cir.int<1> : !s32i loc(#loc423)
                  %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc423)
                  %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc719)
                  cir.if %63 {
                    cir.break loc(#loc425)
                  } loc(#loc720)
                } loc(#loc718)
                %31 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc426)
                %32 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc427)
                %33 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc428)
                %34 = cir.call @accept(%31, %32, %33) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc429)
                cir.store %34, %7 : !s32i, !cir.ptr<!s32i> loc(#loc721)
                cir.scope {
                  %58 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc434)
                  %59 = cir.const #cir.int<1> : !s32i loc(#loc435)
                  %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc435)
                  %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc723)
                  cir.if %61 {
                    cir.break loc(#loc437)
                  } loc(#loc724)
                } loc(#loc722)
                %35 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc438)
                %36 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc439)
                %37 = cir.cast(bitcast, %36 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc439)
                %38 = cir.const #cir.int<3> : !s32i loc(#loc440)
                %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc440)
                %40 = cir.const #cir.int<4> : !u64i loc(#loc440)
                %41 = cir.binop(mul, %39, %40) : !u64i loc(#loc440)
                %42 = cir.const #cir.int<2> : !s32i loc(#loc440)
                %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc440)
                %44 = cir.binop(add, %41, %43) : !u64i loc(#loc440)
                %45 = cir.const #cir.int<1> : !s32i loc(#loc441)
                %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc441)
                %47 = cir.binop(sub, %44, %46) : !u64i loc(#loc725)
                %48 = cir.const #cir.int<0> : !s32i loc(#loc442)
                %49 = cir.call @recv(%35, %37, %47, %48) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc443)
                %50 = cir.cast(integral, %49 : !s64i), !s32i loc(#loc443)
                cir.store %50, %4 : !s32i, !cir.ptr<!s32i> loc(#loc726)
                cir.scope {
                  %58 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc448)
                  %59 = cir.const #cir.int<1> : !s32i loc(#loc449)
                  %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc449)
                  %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc728)
                  %62 = cir.ternary(%61, true {
                    %63 = cir.const #true loc(#loc450)
                    cir.yield %63 : !cir.bool loc(#loc450)
                  }, false {
                    %63 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc451)
                    %64 = cir.const #cir.int<0> : !s32i loc(#loc452)
                    %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc729)
                    %66 = cir.ternary(%65, true {
                      %67 = cir.const #true loc(#loc450)
                      cir.yield %67 : !cir.bool loc(#loc450)
                    }, false {
                      %67 = cir.const #false loc(#loc450)
                      cir.yield %67 : !cir.bool loc(#loc450)
                    }) : (!cir.bool) -> !cir.bool loc(#loc450)
                    cir.yield %66 : !cir.bool loc(#loc450)
                  }) : (!cir.bool) -> !cir.bool loc(#loc450)
                  cir.if %62 {
                    cir.break loc(#loc454)
                  } loc(#loc730)
                } loc(#loc727)
                %51 = cir.const #cir.int<0> : !s32i loc(#loc455)
                %52 = cir.cast(integral, %51 : !s32i), !s8i loc(#loc455)
                %53 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc456)
                %54 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc457)
                %55 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %53 : !s32i), !cir.ptr<!s8i> loc(#loc457)
                cir.store %52, %55 : !s8i, !cir.ptr<!s8i> loc(#loc731)
                %56 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc458)
                %57 = cir.call @atoi(%56) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc459)
                cir.store %57, %0 : !s32i, !cir.ptr<!s32i> loc(#loc732)
                cir.yield loc(#loc379)
              } while {
                %13 = cir.const #cir.int<0> : !s32i loc(#loc462)
                %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc462)
                cir.condition(%14) loc(#loc462)
              } loc(#loc702)
            } loc(#loc702)
            cir.scope {
              %13 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc465)
              %14 = cir.const #cir.int<1> : !s32i loc(#loc466)
              %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc466)
              %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc734)
              cir.if %16 {
                %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc468)
                %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc469)
              } loc(#loc735)
            } loc(#loc733)
            cir.scope {
              %13 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc472)
              %14 = cir.const #cir.int<1> : !s32i loc(#loc473)
              %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc473)
              %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc737)
              cir.if %16 {
                %17 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc475)
                %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc476)
              } loc(#loc738)
            } loc(#loc736)
          } loc(#loc696)
          cir.break loc(#loc477)
        } loc(#loc365)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc479)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc479)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc480)
          cir.break loc(#loc481)
        } loc(#loc478)
        cir.yield loc(#loc362)
      } loc(#loc362)
    } loc(#loc695)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc484)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc488)
            %5 = cir.const #cir.int<0> : !s32i loc(#loc489)
            %6 = cir.cmp(gt, %4, %5) : !s32i, !cir.bool loc(#loc741)
            %7 = cir.ternary(%6, true {
              %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc491)
              %9 = cir.const #cir.int<2000> : !s32i loc(#loc492)
              %10 = cir.cmp(le, %8, %9) : !s32i, !cir.bool loc(#loc742)
              %11 = cir.ternary(%10, true {
                %12 = cir.const #true loc(#loc490)
                cir.yield %12 : !cir.bool loc(#loc490)
              }, false {
                %12 = cir.const #false loc(#loc490)
                cir.yield %12 : !cir.bool loc(#loc490)
              }) : (!cir.bool) -> !cir.bool loc(#loc490)
              cir.yield %11 : !cir.bool loc(#loc490)
            }, false {
              %8 = cir.const #false loc(#loc490)
              cir.yield %8 : !cir.bool loc(#loc490)
            }) : (!cir.bool) -> !cir.bool loc(#loc490)
            cir.if %7 {
              %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc496)
              %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc496)
              %10 = cir.call @usleep(%9) : (!u32i) -> !s32i loc(#loc497)
              %11 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc498)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc498)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc499)
            } else {
              %8 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc500)
              %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc500)
              cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc501)
            } loc(#loc743)
          } loc(#loc740)
          cir.break loc(#loc502)
        } loc(#loc485)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc504)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc504)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc505)
          cir.break loc(#loc506)
        } loc(#loc503)
        cir.yield loc(#loc482)
      } loc(#loc482)
    } loc(#loc739)
    cir.return loc(#loc356)
  } loc(#loc692)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc745)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc511)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc512)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc746)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc516)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc518)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc518)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc519)
          cir.break loc(#loc520)
        } loc(#loc517)
        cir.case(default, []) {
          %4 = cir.const #cir.int<20> : !s32i loc(#loc522)
          cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc748)
          cir.break loc(#loc524)
        } loc(#loc521)
        cir.yield loc(#loc514)
      } loc(#loc514)
    } loc(#loc747)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc527)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc529)
          %5 = cir.cast(integral, %4 : !s32i), !u32i loc(#loc529)
          %6 = cir.call @usleep(%5) : (!u32i) -> !s32i loc(#loc530)
          %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc531)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc531)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc532)
          cir.break loc(#loc533)
        } loc(#loc528)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc535)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc535)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc536)
          cir.break loc(#loc537)
        } loc(#loc534)
        cir.yield loc(#loc525)
      } loc(#loc525)
    } loc(#loc749)
    cir.return loc(#loc508)
  } loc(#loc744)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc751)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc542)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc543)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc752)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc547)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.const #cir.int<20> : !s32i loc(#loc549)
          cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc754)
          cir.break loc(#loc551)
        } loc(#loc548)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc553)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc553)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc554)
          cir.break loc(#loc555)
        } loc(#loc552)
        cir.yield loc(#loc545)
      } loc(#loc545)
    } loc(#loc753)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc558)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc560)
          %5 = cir.cast(integral, %4 : !s32i), !u32i loc(#loc560)
          %6 = cir.call @usleep(%5) : (!u32i) -> !s32i loc(#loc561)
          %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc562)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc562)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc563)
          cir.break loc(#loc564)
        } loc(#loc559)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc566)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc566)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc567)
          cir.break loc(#loc568)
        } loc(#loc565)
        cir.yield loc(#loc556)
      } loc(#loc556)
    } loc(#loc755)
    cir.return loc(#loc539)
  } loc(#loc750)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":145:1)
#loc12 = loc("/usr/include/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc19 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":130:19)
#loc20 = loc("/usr/include/unistd.h":480:1)
#loc21 = loc("/usr/include/unistd.h":480:43)
#loc22 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":138:19)
#loc23 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":50:1)
#loc24 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":145:1)
#loc25 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":52:5)
#loc26 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":52:9)
#loc27 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":54:14)
#loc28 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":54:13)
#loc29 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":54:5)
#loc30 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":55:5)
#loc31 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":132:5)
#loc32 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":55:12)
#loc33 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":57:5)
#loc34 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":58:5)
#loc35 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":126:5)
#loc36 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":63:9)
#loc37 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":63:13)
#loc38 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":64:9)
#loc39 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":64:28)
#loc40 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":65:9)
#loc41 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":65:31)
#loc42 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":66:9)
#loc43 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":66:31)
#loc44 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":67:9)
#loc45 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":67:41)
#loc46 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":68:9)
#loc47 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":111:17)
#loc48 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":78:35)
#loc49 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":78:44)
#loc50 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":78:57)
#loc51 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":78:28)
#loc52 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":78:13)
#loc53 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":78:68)
#loc54 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":79:13)
#loc55 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":82:13)
#loc56 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":79:17)
#loc57 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":79:33)
#loc58 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":80:13)
#loc59 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":81:17)
#loc60 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":83:20)
#loc61 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":83:21)
#loc62 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":83:30)
#loc63 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":83:33)
#loc64 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":83:47)
#loc65 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":83:13)
#loc66 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":83:48)
#loc67 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":84:34)
#loc68 = loc("/usr/include/netinet/in.h":249:5)
#loc69 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":84:13)
#loc70 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":85:39)
#loc71 = loc("/usr/include/netinet/in.h":251:20)
#loc72 = loc("/usr/include/netinet/in.h":33:15)
#loc73 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":85:13)
#loc74 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":86:38)
#loc75 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":86:32)
#loc76 = loc("/usr/include/netinet/in.h":250:15)
#loc77 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":86:13)
#loc78 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":86:46)
#loc79 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":87:13)
#loc80 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":90:13)
#loc81 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":87:22)
#loc82 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":87:54)
#loc83 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":87:55)
#loc84 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":87:64)
#loc85 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":87:78)
#loc86 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":87:17)
#loc87 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":87:84)
#loc88 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":88:13)
#loc89 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":89:17)
#loc90 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":91:13)
#loc91 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":94:13)
#loc92 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":91:24)
#loc93 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":91:38)
#loc94 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":91:17)
#loc95 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":91:57)
#loc96 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":92:13)
#loc97 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":93:17)
#loc98 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":95:35)
#loc99 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":95:49)
#loc100 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":95:55)
#loc101 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":95:28)
#loc102 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":95:13)
#loc103 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":95:59)
#loc104 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":96:13)
#loc105 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":99:13)
#loc106 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":96:17)
#loc107 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":96:33)
#loc108 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":97:13)
#loc109 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":98:17)
#loc110 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":101:31)
#loc111 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":101:45)
#loc112 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":101:58)
#loc113 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":101:76)
#loc114 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":101:79)
#loc115 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":101:26)
#loc116 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":101:13)
#loc117 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":101:80)
#loc118 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":102:13)
#loc119 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":105:13)
#loc120 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":102:17)
#loc121 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":102:31)
#loc122 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":102:44)
#loc123 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":102:47)
#loc124 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":102:61)
#loc125 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":103:13)
#loc126 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":104:17)
#loc127 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":107:39)
#loc128 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":107:25)
#loc129 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":107:13)
#loc130 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":109:26)
#loc131 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":109:21)
#loc132 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":109:13)
#loc133 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":109:37)
#loc134 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":111:16)
#loc135 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":112:9)
#loc136 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":115:9)
#loc137 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":112:13)
#loc138 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":112:29)
#loc139 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":113:9)
#loc140 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":114:26)
#loc141 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":114:13)
#loc142 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":116:9)
#loc143 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":119:9)
#loc144 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":116:13)
#loc145 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":116:29)
#loc146 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":117:9)
#loc147 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":118:26)
#loc148 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":118:13)
#loc149 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":127:5)
#loc150 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":128:5)
#loc151 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":130:9)
#loc152 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":131:9)
#loc153 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":133:5)
#loc154 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":144:5)
#loc155 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":133:12)
#loc156 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":135:5)
#loc157 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":137:15)
#loc158 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":137:9)
#loc159 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":138:9)
#loc160 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":139:9)
#loc161 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":140:5)
#loc162 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":142:19)
#loc163 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":142:9)
#loc164 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":143:9)
#loc165 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":423:1)
#loc166 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":429:1)
#loc167 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":425:5)
#loc168 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":425:14)
#loc169 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":426:5)
#loc170 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":426:14)
#loc171 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":427:5)
#loc172 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":427:14)
#loc173 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":428:5)
#loc174 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":428:14)
#loc175 = loc("/usr/include/stdlib.h":575:1)
#loc176 = loc("/usr/include/stdlib.h":575:41)
#loc177 = loc("/usr/include/time.h":76:1)
#loc178 = loc("/usr/include/time.h":76:38)
#loc179 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":445:15)
#loc180 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":447:15)
#loc181 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":450:15)
#loc182 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":452:15)
#loc183 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":440:1)
#loc184 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":455:1)
#loc189 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":441:1)
#loc190 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":443:27)
#loc191 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":443:22)
#loc192 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":443:5)
#loc193 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":445:5)
#loc194 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":446:5)
#loc195 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":446:61)
#loc196 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":447:5)
#loc197 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":450:5)
#loc198 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":451:5)
#loc199 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":451:60)
#loc200 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":452:5)
#loc201 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":454:12)
#loc202 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":454:5)
#loc203 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":246:23)
#loc204 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":250:23)
#loc205 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":152:1)
#loc206 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":254:1)
#loc207 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":154:5)
#loc208 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":154:9)
#loc209 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":156:14)
#loc210 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":156:13)
#loc211 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":156:5)
#loc212 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":157:5)
#loc213 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":234:5)
#loc214 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":157:12)
#loc215 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":159:5)
#loc216 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":160:5)
#loc217 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":228:5)
#loc218 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":165:9)
#loc219 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":165:13)
#loc220 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":166:9)
#loc221 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":166:28)
#loc222 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":167:9)
#loc223 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":167:31)
#loc224 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":168:9)
#loc225 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":168:31)
#loc226 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":169:9)
#loc227 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":169:41)
#loc228 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":170:9)
#loc229 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":213:17)
#loc230 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":180:35)
#loc231 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":180:44)
#loc232 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":180:57)
#loc233 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":180:28)
#loc234 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":180:13)
#loc235 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":180:68)
#loc236 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":181:13)
#loc237 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":184:13)
#loc238 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":181:17)
#loc239 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":181:33)
#loc240 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":182:13)
#loc241 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":183:17)
#loc242 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":185:20)
#loc243 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":185:21)
#loc244 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":185:30)
#loc245 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":185:33)
#loc246 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":185:47)
#loc247 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":185:13)
#loc248 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":185:48)
#loc249 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":186:34)
#loc250 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":186:13)
#loc251 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":187:39)
#loc252 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":187:13)
#loc253 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":188:38)
#loc254 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":188:32)
#loc255 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":188:13)
#loc256 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":188:46)
#loc257 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":189:13)
#loc258 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":192:13)
#loc259 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":189:22)
#loc260 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":189:54)
#loc261 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":189:55)
#loc262 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":189:64)
#loc263 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":189:78)
#loc264 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":189:17)
#loc265 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":189:84)
#loc266 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":190:13)
#loc267 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":191:17)
#loc268 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":193:13)
#loc269 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":196:13)
#loc270 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":193:24)
#loc271 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":193:38)
#loc272 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":193:17)
#loc273 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":193:57)
#loc274 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":194:13)
#loc275 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":195:17)
#loc276 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":197:35)
#loc277 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":197:49)
#loc278 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":197:55)
#loc279 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":197:28)
#loc280 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":197:13)
#loc281 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":197:59)
#loc282 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":198:13)
#loc283 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":201:13)
#loc284 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":198:17)
#loc285 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":198:33)
#loc286 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":199:13)
#loc287 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":200:17)
#loc288 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":203:31)
#loc289 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":203:45)
#loc290 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":203:58)
#loc291 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":203:76)
#loc292 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":203:79)
#loc293 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":203:26)
#loc294 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":203:13)
#loc295 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":203:80)
#loc296 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":204:13)
#loc297 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":207:13)
#loc298 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":204:17)
#loc299 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":204:31)
#loc300 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":204:44)
#loc301 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":204:47)
#loc302 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":204:61)
#loc303 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":205:13)
#loc304 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":206:17)
#loc305 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":209:39)
#loc306 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":209:25)
#loc307 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":209:13)
#loc308 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":211:26)
#loc309 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":211:21)
#loc310 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":211:13)
#loc311 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":211:37)
#loc312 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":213:16)
#loc313 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":214:9)
#loc314 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":217:9)
#loc315 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":214:13)
#loc316 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":214:29)
#loc317 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":215:9)
#loc318 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":216:26)
#loc319 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":216:13)
#loc320 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":218:9)
#loc321 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":221:9)
#loc322 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":218:13)
#loc323 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":218:29)
#loc324 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":219:9)
#loc325 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":220:26)
#loc326 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":220:13)
#loc327 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":229:5)
#loc328 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":230:5)
#loc329 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":232:19)
#loc330 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":232:9)
#loc331 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":233:9)
#loc332 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":235:5)
#loc333 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":253:5)
#loc334 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":235:12)
#loc335 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":237:5)
#loc336 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":239:19)
#loc337 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":239:9)
#loc338 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":240:9)
#loc339 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":241:5)
#loc340 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":243:9)
#loc341 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":251:9)
#loc342 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":243:13)
#loc343 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":243:21)
#loc344 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":243:23)
#loc345 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":243:26)
#loc346 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":243:35)
#loc347 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":244:9)
#loc348 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":247:9)
#loc349 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":249:9)
#loc350 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":245:19)
#loc351 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":245:13)
#loc352 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":246:13)
#loc353 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":250:13)
#loc354 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":252:9)
#loc355 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":257:1)
#loc356 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":359:1)
#loc357 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":259:5)
#loc358 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":259:9)
#loc359 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":261:14)
#loc360 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":261:13)
#loc361 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":261:5)
#loc362 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":262:5)
#loc363 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":339:5)
#loc364 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":262:12)
#loc365 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":264:5)
#loc366 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":265:5)
#loc367 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":333:5)
#loc368 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":270:9)
#loc369 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":270:13)
#loc370 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":271:9)
#loc371 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":271:28)
#loc372 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":272:9)
#loc373 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":272:31)
#loc374 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":273:9)
#loc375 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":273:31)
#loc376 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":274:9)
#loc377 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":274:41)
#loc378 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":275:9)
#loc379 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":318:17)
#loc380 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":285:35)
#loc381 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":285:44)
#loc382 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":285:57)
#loc383 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":285:28)
#loc384 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":285:13)
#loc385 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":285:68)
#loc386 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":286:13)
#loc387 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":289:13)
#loc388 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":286:17)
#loc389 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":286:33)
#loc390 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":287:13)
#loc391 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":288:17)
#loc392 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":290:20)
#loc393 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":290:21)
#loc394 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":290:30)
#loc395 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":290:33)
#loc396 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":290:47)
#loc397 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":290:13)
#loc398 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":290:48)
#loc399 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":291:34)
#loc400 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":291:13)
#loc401 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":292:39)
#loc402 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":292:13)
#loc403 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":293:38)
#loc404 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":293:32)
#loc405 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":293:13)
#loc406 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":293:46)
#loc407 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":294:13)
#loc408 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":297:13)
#loc409 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":294:22)
#loc410 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":294:54)
#loc411 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":294:55)
#loc412 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":294:64)
#loc413 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":294:78)
#loc414 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":294:17)
#loc415 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":294:84)
#loc416 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":295:13)
#loc417 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":296:17)
#loc418 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":298:13)
#loc419 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":301:13)
#loc420 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":298:24)
#loc421 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":298:38)
#loc422 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":298:17)
#loc423 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":298:57)
#loc424 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":299:13)
#loc425 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":300:17)
#loc426 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":302:35)
#loc427 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":302:49)
#loc428 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":302:55)
#loc429 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":302:28)
#loc430 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":302:13)
#loc431 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":302:59)
#loc432 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":303:13)
#loc433 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":306:13)
#loc434 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":303:17)
#loc435 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":303:33)
#loc436 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":304:13)
#loc437 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":305:17)
#loc438 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":308:31)
#loc439 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":308:45)
#loc440 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":308:58)
#loc441 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":308:76)
#loc442 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":308:79)
#loc443 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":308:26)
#loc444 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":308:13)
#loc445 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":308:80)
#loc446 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":309:13)
#loc447 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":312:13)
#loc448 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":309:17)
#loc449 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":309:31)
#loc450 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":309:44)
#loc451 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":309:47)
#loc452 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":309:61)
#loc453 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":310:13)
#loc454 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":311:17)
#loc455 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":314:39)
#loc456 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":314:25)
#loc457 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":314:13)
#loc458 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":316:26)
#loc459 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":316:21)
#loc460 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":316:13)
#loc461 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":316:37)
#loc462 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":318:16)
#loc463 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":319:9)
#loc464 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":322:9)
#loc465 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":319:13)
#loc466 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":319:29)
#loc467 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":320:9)
#loc468 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":321:26)
#loc469 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":321:13)
#loc470 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":323:9)
#loc471 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":326:9)
#loc472 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":323:13)
#loc473 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":323:29)
#loc474 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":324:9)
#loc475 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":325:26)
#loc476 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":325:13)
#loc477 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":334:5)
#loc478 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":335:5)
#loc479 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":337:19)
#loc480 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":337:9)
#loc481 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":338:9)
#loc482 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":340:5)
#loc483 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":358:5)
#loc484 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":340:12)
#loc485 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":342:5)
#loc486 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":344:9)
#loc487 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":352:9)
#loc488 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":344:13)
#loc489 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":344:21)
#loc490 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":344:23)
#loc491 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":344:26)
#loc492 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":344:35)
#loc493 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":345:9)
#loc494 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":348:9)
#loc495 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":350:9)
#loc496 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":346:19)
#loc497 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":346:13)
#loc498 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":347:23)
#loc499 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":347:13)
#loc500 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":351:23)
#loc501 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":351:13)
#loc502 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":353:9)
#loc503 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":354:5)
#loc504 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":356:19)
#loc505 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":356:9)
#loc506 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":357:9)
#loc507 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":362:1)
#loc508 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":390:1)
#loc509 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":364:5)
#loc510 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":364:9)
#loc511 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":366:14)
#loc512 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":366:13)
#loc513 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":366:5)
#loc514 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":367:5)
#loc515 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":377:5)
#loc516 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":367:12)
#loc517 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":369:5)
#loc518 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":371:19)
#loc519 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":371:9)
#loc520 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":372:9)
#loc521 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":373:5)
#loc522 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":375:17)
#loc523 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":375:9)
#loc524 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":376:9)
#loc525 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":378:5)
#loc526 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":389:5)
#loc527 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":378:12)
#loc528 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":380:5)
#loc529 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":382:15)
#loc530 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":382:9)
#loc531 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":383:19)
#loc532 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":383:9)
#loc533 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":384:9)
#loc534 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":385:5)
#loc535 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":387:19)
#loc536 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":387:9)
#loc537 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":388:9)
#loc538 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":393:1)
#loc539 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":421:1)
#loc540 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":395:5)
#loc541 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":395:9)
#loc542 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":397:14)
#loc543 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":397:13)
#loc544 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":397:5)
#loc545 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":398:5)
#loc546 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":408:5)
#loc547 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":398:12)
#loc548 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":400:5)
#loc549 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":402:17)
#loc550 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":402:9)
#loc551 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":403:9)
#loc552 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":404:5)
#loc553 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":406:19)
#loc554 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":406:9)
#loc555 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":407:9)
#loc556 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":409:5)
#loc557 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":420:5)
#loc558 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":409:12)
#loc559 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":411:5)
#loc560 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":413:15)
#loc561 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":413:9)
#loc562 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":414:19)
#loc563 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":414:9)
#loc564 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":415:9)
#loc565 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":416:5)
#loc566 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":418:19)
#loc567 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":418:9)
#loc568 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_15.c":419:9)
#loc569 = loc(fused[#loc1, #loc2])
#loc570 = loc(fused[#loc3, #loc4])
#loc571 = loc(fused[#loc5, #loc6])
#loc572 = loc(fused[#loc7, #loc8])
#loc573 = loc(fused[#loc9, #loc10])
#loc574 = loc(fused[#loc11, #loc12])
#loc575 = loc(fused[#loc13, #loc14])
#loc576 = loc(fused[#loc15, #loc16])
#loc577 = loc(fused[#loc17, #loc18])
#loc578 = loc(fused[#loc20, #loc21])
#loc579 = loc(fused[#loc23, #loc24])
#loc580 = loc(fused[#loc25, #loc26])
#loc581 = loc(fused[#loc29, #loc27])
#loc582 = loc(fused[#loc30, #loc31])
#loc583 = loc(fused[#loc34, #loc35])
#loc584 = loc(fused[#loc36, #loc37])
#loc585 = loc(fused[#loc38, #loc39])
#loc586 = loc(fused[#loc40, #loc41])
#loc587 = loc(fused[#loc42, #loc43])
#loc588 = loc(fused[#loc44, #loc45])
#loc589 = loc(fused[#loc46, #loc47])
#loc590 = loc(fused[#loc52, #loc53])
#loc591 = loc(fused[#loc54, #loc55])
#loc592 = loc(fused[#loc56, #loc57])
#loc593 = loc(fused[#loc58, #loc55])
#loc594 = loc(fused[#loc60, #loc61])
#loc595 = loc(fused[#loc63, #loc64])
#loc596 = loc(fused[#loc65, #loc66])
#loc597 = loc(fused[#loc69, #loc67])
#loc598 = loc(fused[#loc73, #loc70])
#loc599 = loc(fused[#loc77, #loc78])
#loc600 = loc(fused[#loc79, #loc80])
#loc601 = loc(fused[#loc82, #loc83])
#loc602 = loc(fused[#loc84, #loc85])
#loc603 = loc(fused[#loc86, #loc87])
#loc604 = loc(fused[#loc88, #loc80])
#loc605 = loc(fused[#loc90, #loc91])
#loc606 = loc(fused[#loc94, #loc95])
#loc607 = loc(fused[#loc96, #loc91])
#loc608 = loc(fused[#loc102, #loc103])
#loc609 = loc(fused[#loc104, #loc105])
#loc610 = loc(fused[#loc106, #loc107])
#loc611 = loc(fused[#loc108, #loc105])
#loc612 = loc(fused[#loc112, #loc113])
#loc613 = loc(fused[#loc116, #loc117])
#loc614 = loc(fused[#loc118, #loc119])
#loc615 = loc(fused[#loc120, #loc121])
#loc616 = loc(fused[#loc123, #loc124])
#loc617 = loc(fused[#loc125, #loc119])
#loc618 = loc(fused[#loc129, #loc127])
#loc619 = loc(fused[#loc132, #loc133])
#loc620 = loc(fused[#loc135, #loc136])
#loc621 = loc(fused[#loc137, #loc138])
#loc622 = loc(fused[#loc139, #loc136])
#loc623 = loc(fused[#loc142, #loc143])
#loc624 = loc(fused[#loc144, #loc145])
#loc625 = loc(fused[#loc146, #loc143])
#loc626 = loc(fused[#loc153, #loc154])
#loc627 = loc(fused[#loc165, #loc166])
#loc628 = loc(fused[#loc167, #loc168])
#loc629 = loc(fused[#loc169, #loc170])
#loc630 = loc(fused[#loc171, #loc172])
#loc631 = loc(fused[#loc173, #loc174])
#loc632 = loc(fused[#loc175, #loc176])
#loc633 = loc(fused[#loc177, #loc178])
#loc634 = loc(fused[#loc183, #loc184])
#loc637 = loc(fused[#loc194, #loc195])
#loc638 = loc(fused[#loc198, #loc199])
#loc639 = loc(fused[#loc202, #loc201])
#loc640 = loc(fused[#loc205, #loc206])
#loc641 = loc(fused[#loc207, #loc208])
#loc642 = loc(fused[#loc211, #loc209])
#loc643 = loc(fused[#loc212, #loc213])
#loc644 = loc(fused[#loc216, #loc217])
#loc645 = loc(fused[#loc218, #loc219])
#loc646 = loc(fused[#loc220, #loc221])
#loc647 = loc(fused[#loc222, #loc223])
#loc648 = loc(fused[#loc224, #loc225])
#loc649 = loc(fused[#loc226, #loc227])
#loc650 = loc(fused[#loc228, #loc229])
#loc651 = loc(fused[#loc234, #loc235])
#loc652 = loc(fused[#loc236, #loc237])
#loc653 = loc(fused[#loc238, #loc239])
#loc654 = loc(fused[#loc240, #loc237])
#loc655 = loc(fused[#loc242, #loc243])
#loc656 = loc(fused[#loc245, #loc246])
#loc657 = loc(fused[#loc247, #loc248])
#loc658 = loc(fused[#loc250, #loc249])
#loc659 = loc(fused[#loc252, #loc251])
#loc660 = loc(fused[#loc255, #loc256])
#loc661 = loc(fused[#loc257, #loc258])
#loc662 = loc(fused[#loc260, #loc261])
#loc663 = loc(fused[#loc262, #loc263])
#loc664 = loc(fused[#loc264, #loc265])
#loc665 = loc(fused[#loc266, #loc258])
#loc666 = loc(fused[#loc268, #loc269])
#loc667 = loc(fused[#loc272, #loc273])
#loc668 = loc(fused[#loc274, #loc269])
#loc669 = loc(fused[#loc280, #loc281])
#loc670 = loc(fused[#loc282, #loc283])
#loc671 = loc(fused[#loc284, #loc285])
#loc672 = loc(fused[#loc286, #loc283])
#loc673 = loc(fused[#loc290, #loc291])
#loc674 = loc(fused[#loc294, #loc295])
#loc675 = loc(fused[#loc296, #loc297])
#loc676 = loc(fused[#loc298, #loc299])
#loc677 = loc(fused[#loc301, #loc302])
#loc678 = loc(fused[#loc303, #loc297])
#loc679 = loc(fused[#loc307, #loc305])
#loc680 = loc(fused[#loc310, #loc311])
#loc681 = loc(fused[#loc313, #loc314])
#loc682 = loc(fused[#loc315, #loc316])
#loc683 = loc(fused[#loc317, #loc314])
#loc684 = loc(fused[#loc320, #loc321])
#loc685 = loc(fused[#loc322, #loc323])
#loc686 = loc(fused[#loc324, #loc321])
#loc687 = loc(fused[#loc332, #loc333])
#loc688 = loc(fused[#loc340, #loc341])
#loc689 = loc(fused[#loc342, #loc343])
#loc690 = loc(fused[#loc345, #loc346])
#loc691 = loc(fused[#loc347, #loc348, #loc349, #loc341])
#loc692 = loc(fused[#loc355, #loc356])
#loc693 = loc(fused[#loc357, #loc358])
#loc694 = loc(fused[#loc361, #loc359])
#loc695 = loc(fused[#loc362, #loc363])
#loc696 = loc(fused[#loc366, #loc367])
#loc697 = loc(fused[#loc368, #loc369])
#loc698 = loc(fused[#loc370, #loc371])
#loc699 = loc(fused[#loc372, #loc373])
#loc700 = loc(fused[#loc374, #loc375])
#loc701 = loc(fused[#loc376, #loc377])
#loc702 = loc(fused[#loc378, #loc379])
#loc703 = loc(fused[#loc384, #loc385])
#loc704 = loc(fused[#loc386, #loc387])
#loc705 = loc(fused[#loc388, #loc389])
#loc706 = loc(fused[#loc390, #loc387])
#loc707 = loc(fused[#loc392, #loc393])
#loc708 = loc(fused[#loc395, #loc396])
#loc709 = loc(fused[#loc397, #loc398])
#loc710 = loc(fused[#loc400, #loc399])
#loc711 = loc(fused[#loc402, #loc401])
#loc712 = loc(fused[#loc405, #loc406])
#loc713 = loc(fused[#loc407, #loc408])
#loc714 = loc(fused[#loc410, #loc411])
#loc715 = loc(fused[#loc412, #loc413])
#loc716 = loc(fused[#loc414, #loc415])
#loc717 = loc(fused[#loc416, #loc408])
#loc718 = loc(fused[#loc418, #loc419])
#loc719 = loc(fused[#loc422, #loc423])
#loc720 = loc(fused[#loc424, #loc419])
#loc721 = loc(fused[#loc430, #loc431])
#loc722 = loc(fused[#loc432, #loc433])
#loc723 = loc(fused[#loc434, #loc435])
#loc724 = loc(fused[#loc436, #loc433])
#loc725 = loc(fused[#loc440, #loc441])
#loc726 = loc(fused[#loc444, #loc445])
#loc727 = loc(fused[#loc446, #loc447])
#loc728 = loc(fused[#loc448, #loc449])
#loc729 = loc(fused[#loc451, #loc452])
#loc730 = loc(fused[#loc453, #loc447])
#loc731 = loc(fused[#loc457, #loc455])
#loc732 = loc(fused[#loc460, #loc461])
#loc733 = loc(fused[#loc463, #loc464])
#loc734 = loc(fused[#loc465, #loc466])
#loc735 = loc(fused[#loc467, #loc464])
#loc736 = loc(fused[#loc470, #loc471])
#loc737 = loc(fused[#loc472, #loc473])
#loc738 = loc(fused[#loc474, #loc471])
#loc739 = loc(fused[#loc482, #loc483])
#loc740 = loc(fused[#loc486, #loc487])
#loc741 = loc(fused[#loc488, #loc489])
#loc742 = loc(fused[#loc491, #loc492])
#loc743 = loc(fused[#loc493, #loc494, #loc495, #loc487])
#loc744 = loc(fused[#loc507, #loc508])
#loc745 = loc(fused[#loc509, #loc510])
#loc746 = loc(fused[#loc513, #loc511])
#loc747 = loc(fused[#loc514, #loc515])
#loc748 = loc(fused[#loc523, #loc522])
#loc749 = loc(fused[#loc525, #loc526])
#loc750 = loc(fused[#loc538, #loc539])
#loc751 = loc(fused[#loc540, #loc541])
#loc752 = loc(fused[#loc544, #loc542])
#loc753 = loc(fused[#loc545, #loc546])
#loc754 = loc(fused[#loc550, #loc549])
#loc755 = loc(fused[#loc556, #loc557])
