!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc76 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":163:10)
#loc77 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":163:14)
#loc78 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":163:20)
#loc79 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":163:32)
#loc221 = loc(fused[#loc76, #loc77])
#loc222 = loc(fused[#loc78, #loc79])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fscanf_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc192)
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc193)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc194)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%f\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printIntLine(!s32i) loc(#loc195)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc196)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc12)
  cir.func no_proto @CWE369_Divide_by_Zero__float_fscanf_12_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc198)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc199)
    %2 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc200)
    %3 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc21)
    cir.store %3, %2 : !cir.float, !cir.ptr<!cir.float> loc(#loc201)
    cir.br ^bb1 loc(#loc202)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc203)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc203)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc25)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc25)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc204)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc30)
    %9 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc194)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc31)
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc7)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc7)
    %13 = cir.call @__isoc99_fscanf(%10, %12, %2) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!cir.float>) -> !s32i loc(#loc30)
    cir.br ^bb4 loc(#loc28)
  ^bb3:  // pred: ^bb1
    %14 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc32)
    cir.store %14, %2 : !cir.float, !cir.ptr<!cir.float> loc(#loc205)
    cir.br ^bb4 loc(#loc24)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc24)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc206)
  ^bb6:  // pred: ^bb5
    %15 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc207)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc207)
    %17 = cir.call %16() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc36)
    %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc36)
    cir.brcond %18 ^bb7, ^bb10 loc(#loc208)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc209)
  ^bb8:  // pred: ^bb7
    %19 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc43)
    %20 = cir.load %2 : !cir.ptr<!cir.float>, !cir.float loc(#loc44)
    %21 = cir.cast(floating, %20 : !cir.float), !cir.double loc(#loc44)
    %22 = cir.binop(div, %19, %21) : !cir.double loc(#loc210)
    %23 = cir.cast(float_to_int, %22 : !cir.double), !s32i loc(#loc210)
    cir.store %23, %0 : !s32i, !cir.ptr<!s32i> loc(#loc198)
    %24 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc45)
    cir.call @printIntLine(%24) : (!s32i) -> () loc(#loc46)
    cir.br ^bb9 loc(#loc42)
  ^bb9:  // pred: ^bb8
    cir.br ^bb16 loc(#loc39)
  ^bb10:  // pred: ^bb6
    cir.br ^bb11 loc(#loc211)
  ^bb11:  // pred: ^bb10
    %25 = cir.load %2 : !cir.ptr<!cir.float>, !cir.float loc(#loc49)
    %26 = cir.cast(floating, %25 : !cir.float), !cir.double loc(#loc49)
    %27 = cir.fabs %26 : !cir.double loc(#loc49)
    %28 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc50)
    %29 = cir.cmp(gt, %27, %28) : !cir.double, !cir.bool loc(#loc212)
    cir.brcond %29 ^bb12, ^bb13 loc(#loc213)
  ^bb12:  // pred: ^bb11
    %30 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc55)
    %31 = cir.load %2 : !cir.ptr<!cir.float>, !cir.float loc(#loc56)
    %32 = cir.cast(floating, %31 : !cir.float), !cir.double loc(#loc56)
    %33 = cir.binop(div, %30, %32) : !cir.double loc(#loc214)
    %34 = cir.cast(float_to_int, %33 : !cir.double), !s32i loc(#loc214)
    cir.store %34, %1 : !s32i, !cir.ptr<!s32i> loc(#loc199)
    %35 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc57)
    cir.call @printIntLine(%35) : (!s32i) -> () loc(#loc58)
    cir.br ^bb14 loc(#loc53)
  ^bb13:  // pred: ^bb11
    %36 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc12)
    %37 = cir.cast(array_to_ptrdecay, %36 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc12)
    cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    cir.br ^bb14 loc(#loc48)
  ^bb14:  // 2 preds: ^bb12, ^bb13
    cir.br ^bb15 loc(#loc48)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc35)
  ^bb16:  // 2 preds: ^bb9, ^bb15
    cir.br ^bb17 loc(#loc35)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc14)
  } loc(#loc197)
  cir.func no_proto @CWE369_Divide_by_Zero__float_fscanf_12_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc216)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc62)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc217)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc64)
    cir.return loc(#loc61)
  } loc(#loc215)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc218)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc219)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc70)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc71)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc72)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc73)
  cir.func @main(%arg0: !s32i loc(fused[#loc76, #loc77]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc78, #loc79])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc221)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc222)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc75)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc80)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc80)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc81)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc82)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc82)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc83)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc70)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    %8 = cir.get_global @CWE369_Divide_by_Zero__float_fscanf_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc223)
    cir.call @CWE369_Divide_by_Zero__float_fscanf_12_good() : () -> () loc(#loc85)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc71)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc72)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc72)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    %13 = cir.get_global @CWE369_Divide_by_Zero__float_fscanf_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc224)
    cir.call @CWE369_Divide_by_Zero__float_fscanf_12_bad() : () -> () loc(#loc89)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc73)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc92)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc225)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc225)
    cir.return %17 : !s32i loc(#loc225)
  } loc(#loc220)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc227)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc228)
    %2 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc229)
    %3 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc102)
    cir.store %3, %2 : !cir.float, !cir.ptr<!cir.float> loc(#loc230)
    cir.br ^bb1 loc(#loc231)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc232)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc232)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc106)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc106)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc233)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc111)
    %9 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc194)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc112)
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc113)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc113)
    %13 = cir.call @__isoc99_fscanf(%10, %12, %2) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!cir.float>) -> !s32i loc(#loc111)
    cir.br ^bb4 loc(#loc109)
  ^bb3:  // pred: ^bb1
    %14 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc114)
    %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc194)
    %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc115)
    %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc116)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc116)
    %19 = cir.call @__isoc99_fscanf(%16, %18, %2) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!cir.float>) -> !s32i loc(#loc114)
    cir.br ^bb4 loc(#loc105)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc105)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc234)
  ^bb6:  // pred: ^bb5
    %20 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc235)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc235)
    %22 = cir.call %21() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc119)
    %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc119)
    cir.brcond %23 ^bb7, ^bb13 loc(#loc236)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc237)
  ^bb8:  // pred: ^bb7
    %24 = cir.load %2 : !cir.ptr<!cir.float>, !cir.float loc(#loc126)
    %25 = cir.cast(floating, %24 : !cir.float), !cir.double loc(#loc126)
    %26 = cir.fabs %25 : !cir.double loc(#loc126)
    %27 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc127)
    %28 = cir.cmp(gt, %26, %27) : !cir.double, !cir.bool loc(#loc238)
    cir.brcond %28 ^bb9, ^bb10 loc(#loc239)
  ^bb9:  // pred: ^bb8
    %29 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc132)
    %30 = cir.load %2 : !cir.ptr<!cir.float>, !cir.float loc(#loc133)
    %31 = cir.cast(floating, %30 : !cir.float), !cir.double loc(#loc133)
    %32 = cir.binop(div, %29, %31) : !cir.double loc(#loc240)
    %33 = cir.cast(float_to_int, %32 : !cir.double), !s32i loc(#loc240)
    cir.store %33, %0 : !s32i, !cir.ptr<!s32i> loc(#loc227)
    %34 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc134)
    cir.call @printIntLine(%34) : (!s32i) -> () loc(#loc135)
    cir.br ^bb11 loc(#loc130)
  ^bb10:  // pred: ^bb8
    %35 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc136)
    %36 = cir.cast(array_to_ptrdecay, %35 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc136)
    cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc137)
    cir.br ^bb11 loc(#loc125)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc125)
  ^bb12:  // pred: ^bb11
    cir.br ^bb19 loc(#loc122)
  ^bb13:  // pred: ^bb6
    cir.br ^bb14 loc(#loc241)
  ^bb14:  // pred: ^bb13
    %37 = cir.load %2 : !cir.ptr<!cir.float>, !cir.float loc(#loc140)
    %38 = cir.cast(floating, %37 : !cir.float), !cir.double loc(#loc140)
    %39 = cir.fabs %38 : !cir.double loc(#loc140)
    %40 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc141)
    %41 = cir.cmp(gt, %39, %40) : !cir.double, !cir.bool loc(#loc242)
    cir.brcond %41 ^bb15, ^bb16 loc(#loc243)
  ^bb15:  // pred: ^bb14
    %42 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc146)
    %43 = cir.load %2 : !cir.ptr<!cir.float>, !cir.float loc(#loc147)
    %44 = cir.cast(floating, %43 : !cir.float), !cir.double loc(#loc147)
    %45 = cir.binop(div, %42, %44) : !cir.double loc(#loc244)
    %46 = cir.cast(float_to_int, %45 : !cir.double), !s32i loc(#loc244)
    cir.store %46, %1 : !s32i, !cir.ptr<!s32i> loc(#loc228)
    %47 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc148)
    cir.call @printIntLine(%47) : (!s32i) -> () loc(#loc149)
    cir.br ^bb17 loc(#loc144)
  ^bb16:  // pred: ^bb14
    %48 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc150)
    %49 = cir.cast(array_to_ptrdecay, %48 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc150)
    cir.call @printLine(%49) : (!cir.ptr<!s8i>) -> () loc(#loc151)
    cir.br ^bb17 loc(#loc139)
  ^bb17:  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc139)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc118)
  ^bb19:  // 2 preds: ^bb12, ^bb18
    cir.br ^bb20 loc(#loc118)
  ^bb20:  // pred: ^bb19
    cir.return loc(#loc95)
  } loc(#loc226)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc246)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc247)
    %2 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc248)
    %3 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc160)
    cir.store %3, %2 : !cir.float, !cir.ptr<!cir.float> loc(#loc249)
    cir.br ^bb1 loc(#loc250)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc251)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc251)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc164)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc164)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc252)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc169)
    cir.store %8, %2 : !cir.float, !cir.ptr<!cir.float> loc(#loc253)
    cir.br ^bb4 loc(#loc167)
  ^bb3:  // pred: ^bb1
    %9 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc171)
    cir.store %9, %2 : !cir.float, !cir.ptr<!cir.float> loc(#loc254)
    cir.br ^bb4 loc(#loc163)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc163)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc255)
  ^bb6:  // pred: ^bb5
    %10 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc256)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc256)
    %12 = cir.call %11() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc175)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc175)
    cir.brcond %13 ^bb7, ^bb10 loc(#loc257)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc258)
  ^bb8:  // pred: ^bb7
    %14 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc182)
    %15 = cir.load %2 : !cir.ptr<!cir.float>, !cir.float loc(#loc183)
    %16 = cir.cast(floating, %15 : !cir.float), !cir.double loc(#loc183)
    %17 = cir.binop(div, %14, %16) : !cir.double loc(#loc259)
    %18 = cir.cast(float_to_int, %17 : !cir.double), !s32i loc(#loc259)
    cir.store %18, %0 : !s32i, !cir.ptr<!s32i> loc(#loc246)
    %19 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc184)
    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc185)
    cir.br ^bb9 loc(#loc181)
  ^bb9:  // pred: ^bb8
    cir.br ^bb13 loc(#loc178)
  ^bb10:  // pred: ^bb6
    cir.br ^bb11 loc(#loc260)
  ^bb11:  // pred: ^bb10
    %20 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc188)
    %21 = cir.load %2 : !cir.ptr<!cir.float>, !cir.float loc(#loc189)
    %22 = cir.cast(floating, %21 : !cir.float), !cir.double loc(#loc189)
    %23 = cir.binop(div, %20, %22) : !cir.double loc(#loc261)
    %24 = cir.cast(float_to_int, %23 : !cir.double), !s32i loc(#loc261)
    cir.store %24, %1 : !s32i, !cir.ptr<!s32i> loc(#loc247)
    %25 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc190)
    cir.call @printIntLine(%25) : (!s32i) -> () loc(#loc191)
    cir.br ^bb12 loc(#loc187)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc174)
  ^bb13:  // 2 preds: ^bb9, ^bb12
    cir.br ^bb14 loc(#loc174)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc153)
  } loc(#loc245)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fscanf_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":463:1)
#loc4 = loc("/usr/include/stdio.h":465:33)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":32:24)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc12 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":57:23)
#loc13 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":24:1)
#loc14 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":60:1)
#loc15 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":43:13)
#loc16 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":43:44)
#loc17 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":52:13)
#loc18 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":52:44)
#loc19 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":26:5)
#loc20 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":26:11)
#loc21 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":28:12)
#loc22 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":28:5)
#loc23 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":29:5)
#loc24 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":38:5)
#loc25 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":29:8)
#loc26 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":29:33)
#loc27 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":30:5)
#loc28 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":33:5)
#loc29 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":35:5)
#loc30 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":32:9)
#loc31 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":32:17)
#loc32 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":37:16)
#loc33 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":37:9)
#loc34 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":39:5)
#loc35 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":59:5)
#loc36 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":39:8)
#loc37 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":39:33)
#loc38 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":40:5)
#loc39 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":46:5)
#loc40 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":48:5)
#loc41 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":41:9)
#loc42 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":45:9)
#loc43 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":43:32)
#loc44 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":43:40)
#loc45 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":44:26)
#loc46 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":44:13)
#loc47 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":50:9)
#loc48 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":58:9)
#loc49 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":50:17)
#loc50 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":50:25)
#loc51 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":50:12)
#loc52 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":51:9)
#loc53 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":54:9)
#loc54 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":56:9)
#loc55 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":52:32)
#loc56 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":52:40)
#loc57 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":53:26)
#loc58 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":53:13)
#loc59 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":57:13)
#loc60 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":148:1)
#loc61 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":152:1)
#loc62 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":150:5)
#loc63 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":150:13)
#loc64 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":151:5)
#loc65 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":151:13)
#loc66 = loc("/usr/include/stdlib.h":575:1)
#loc67 = loc("/usr/include/stdlib.h":575:41)
#loc68 = loc("/usr/include/time.h":76:1)
#loc69 = loc("/usr/include/time.h":76:38)
#loc70 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":168:15)
#loc71 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":170:15)
#loc72 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":173:15)
#loc73 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":175:15)
#loc74 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":163:1)
#loc75 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":178:1)
#loc80 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":164:1)
#loc81 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":166:27)
#loc82 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":166:22)
#loc83 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":166:5)
#loc84 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":168:5)
#loc85 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":169:5)
#loc86 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":169:49)
#loc87 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":170:5)
#loc88 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":173:5)
#loc89 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":174:5)
#loc90 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":174:48)
#loc91 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":175:5)
#loc92 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":177:12)
#loc93 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":177:5)
#loc94 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":69:1)
#loc95 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":110:1)
#loc96 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":89:13)
#loc97 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":89:44)
#loc98 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":102:13)
#loc99 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":102:44)
#loc100 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":71:5)
#loc101 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":71:11)
#loc102 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":73:12)
#loc103 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":73:5)
#loc104 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":74:5)
#loc105 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":83:5)
#loc106 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":74:8)
#loc107 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":74:33)
#loc108 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":75:5)
#loc109 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":78:5)
#loc110 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":80:5)
#loc111 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":77:9)
#loc112 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":77:17)
#loc113 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":77:24)
#loc114 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":82:9)
#loc115 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":82:17)
#loc116 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":82:24)
#loc117 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":84:5)
#loc118 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":109:5)
#loc119 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":84:8)
#loc120 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":84:33)
#loc121 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":85:5)
#loc122 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":96:5)
#loc123 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":98:5)
#loc124 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":87:9)
#loc125 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":95:9)
#loc126 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":87:17)
#loc127 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":87:25)
#loc128 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":87:12)
#loc129 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":88:9)
#loc130 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":91:9)
#loc131 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":93:9)
#loc132 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":89:32)
#loc133 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":89:40)
#loc134 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":90:26)
#loc135 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":90:13)
#loc136 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":94:23)
#loc137 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":94:13)
#loc138 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":100:9)
#loc139 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":108:9)
#loc140 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":100:17)
#loc141 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":100:25)
#loc142 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":100:12)
#loc143 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":101:9)
#loc144 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":104:9)
#loc145 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":106:9)
#loc146 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":102:32)
#loc147 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":102:40)
#loc148 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":103:26)
#loc149 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":103:13)
#loc150 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":107:23)
#loc151 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":107:13)
#loc152 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":115:1)
#loc153 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":146:1)
#loc154 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":134:13)
#loc155 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":134:44)
#loc156 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":142:13)
#loc157 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":142:44)
#loc158 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":117:5)
#loc159 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":117:11)
#loc160 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":119:12)
#loc161 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":119:5)
#loc162 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":120:5)
#loc163 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":129:5)
#loc164 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":120:8)
#loc165 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":120:33)
#loc166 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":121:5)
#loc167 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":124:5)
#loc168 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":126:5)
#loc169 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":123:16)
#loc170 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":123:9)
#loc171 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":128:16)
#loc172 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":128:9)
#loc173 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":130:5)
#loc174 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":145:5)
#loc175 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":130:8)
#loc176 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":130:33)
#loc177 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":131:5)
#loc178 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":137:5)
#loc179 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":139:5)
#loc180 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":132:9)
#loc181 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":136:9)
#loc182 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":134:32)
#loc183 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":134:40)
#loc184 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":135:26)
#loc185 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":135:13)
#loc186 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":140:9)
#loc187 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":144:9)
#loc188 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":142:32)
#loc189 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":142:40)
#loc190 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":143:26)
#loc191 = loc("CWE369_Divide_by_Zero__float_fscanf_12.c":143:13)
#loc192 = loc(fused[#loc1, #loc2])
#loc193 = loc(fused[#loc3, #loc4])
#loc194 = loc(fused[#loc5, #loc6])
#loc195 = loc(fused[#loc8, #loc9])
#loc196 = loc(fused[#loc10, #loc11])
#loc197 = loc(fused[#loc13, #loc14])
#loc198 = loc(fused[#loc15, #loc16])
#loc199 = loc(fused[#loc17, #loc18])
#loc200 = loc(fused[#loc19, #loc20])
#loc201 = loc(fused[#loc22, #loc21])
#loc202 = loc(fused[#loc23, #loc24])
#loc203 = loc(fused[#loc25, #loc26])
#loc204 = loc(fused[#loc27, #loc28, #loc29, #loc24])
#loc205 = loc(fused[#loc33, #loc32])
#loc206 = loc(fused[#loc34, #loc35])
#loc207 = loc(fused[#loc36, #loc37])
#loc208 = loc(fused[#loc38, #loc39, #loc40, #loc35])
#loc209 = loc(fused[#loc41, #loc42])
#loc210 = loc(fused[#loc43, #loc44])
#loc211 = loc(fused[#loc47, #loc48])
#loc212 = loc(fused[#loc51, #loc50])
#loc213 = loc(fused[#loc52, #loc53, #loc54, #loc48])
#loc214 = loc(fused[#loc55, #loc56])
#loc215 = loc(fused[#loc60, #loc61])
#loc216 = loc(fused[#loc62, #loc63])
#loc217 = loc(fused[#loc64, #loc65])
#loc218 = loc(fused[#loc66, #loc67])
#loc219 = loc(fused[#loc68, #loc69])
#loc220 = loc(fused[#loc74, #loc75])
#loc223 = loc(fused[#loc85, #loc86])
#loc224 = loc(fused[#loc89, #loc90])
#loc225 = loc(fused[#loc93, #loc92])
#loc226 = loc(fused[#loc94, #loc95])
#loc227 = loc(fused[#loc96, #loc97])
#loc228 = loc(fused[#loc98, #loc99])
#loc229 = loc(fused[#loc100, #loc101])
#loc230 = loc(fused[#loc103, #loc102])
#loc231 = loc(fused[#loc104, #loc105])
#loc232 = loc(fused[#loc106, #loc107])
#loc233 = loc(fused[#loc108, #loc109, #loc110, #loc105])
#loc234 = loc(fused[#loc117, #loc118])
#loc235 = loc(fused[#loc119, #loc120])
#loc236 = loc(fused[#loc121, #loc122, #loc123, #loc118])
#loc237 = loc(fused[#loc124, #loc125])
#loc238 = loc(fused[#loc128, #loc127])
#loc239 = loc(fused[#loc129, #loc130, #loc131, #loc125])
#loc240 = loc(fused[#loc132, #loc133])
#loc241 = loc(fused[#loc138, #loc139])
#loc242 = loc(fused[#loc142, #loc141])
#loc243 = loc(fused[#loc143, #loc144, #loc145, #loc139])
#loc244 = loc(fused[#loc146, #loc147])
#loc245 = loc(fused[#loc152, #loc153])
#loc246 = loc(fused[#loc154, #loc155])
#loc247 = loc(fused[#loc156, #loc157])
#loc248 = loc(fused[#loc158, #loc159])
#loc249 = loc(fused[#loc161, #loc160])
#loc250 = loc(fused[#loc162, #loc163])
#loc251 = loc(fused[#loc164, #loc165])
#loc252 = loc(fused[#loc166, #loc167, #loc168, #loc163])
#loc253 = loc(fused[#loc170, #loc169])
#loc254 = loc(fused[#loc172, #loc171])
#loc255 = loc(fused[#loc173, #loc174])
#loc256 = loc(fused[#loc175, #loc176])
#loc257 = loc(fused[#loc177, #loc178, #loc179, #loc174])
#loc258 = loc(fused[#loc180, #loc181])
#loc259 = loc(fused[#loc182, #loc183])
#loc260 = loc(fused[#loc186, #loc187])
#loc261 = loc(fused[#loc188, #loc189])
