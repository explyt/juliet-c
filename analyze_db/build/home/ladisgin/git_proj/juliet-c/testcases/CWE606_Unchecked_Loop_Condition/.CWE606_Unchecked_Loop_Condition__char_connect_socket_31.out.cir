!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc206 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":283:10)
#loc207 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":283:14)
#loc208 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":283:20)
#loc209 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":283:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc525 = loc(fused[#loc206, #loc207])
#loc526 = loc(fused[#loc208, #loc209])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc440)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc441)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc442)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc7)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc443)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc444)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc445)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc446)
  cir.func private @close(!s32i) -> !s32i loc(#loc447)
  cir.func private @__isoc99_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc448)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc20)
  cir.func private @printIntLine(!s32i) loc(#loc449)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_connect_socket_31_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc451)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc452)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc452)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc452)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc29)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc453)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc455)
      %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc456)
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc457)
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc458)
      %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc459)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc40)
      %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc40)
      cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc458)
      %11 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc43)
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
      %13 = cir.call @strlen(%12) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc43)
      cir.store %13, %8 : !u64i, !cir.ptr<!u64i> loc(#loc459)
      cir.scope {
        cir.do {
          %14 = cir.const #cir.int<2> : !s32i loc(#loc47)
          %15 = cir.const #cir.int<1> : !s32i loc(#loc48)
          %16 = cir.const #cir.int<6> : !s32i loc(#loc49)
          %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc50)
          cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc461)
          cir.scope {
            %68 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc55)
            %69 = cir.const #cir.int<1> : !s32i loc(#loc56)
            %70 = cir.unary(minus, %69) : !s32i, !s32i loc(#loc56)
            %71 = cir.cmp(eq, %68, %70) : !s32i, !cir.bool loc(#loc463)
            cir.if %71 {
              cir.break loc(#loc58)
            } loc(#loc464)
          } loc(#loc462)
          %18 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc465)
          %19 = cir.const #cir.int<0> : !s32i loc(#loc61)
          %20 = cir.const #cir.int<16> : !u64i loc(#loc466)
          cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc467)
          %21 = cir.const #cir.int<2> : !s32i loc(#loc66)
          %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc66)
          %23 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
          cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc468)
          %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc7)
          %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc7)
          %26 = cir.call @inet_addr(%25) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc69)
          %27 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc70)
          %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc71)
          cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc469)
          %29 = cir.const #cir.int<27015> : !s32i loc(#loc74)
          %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc74)
          %31 = cir.call @htons(%30) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc75)
          %32 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
          cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc470)
          cir.scope {
            %68 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc81)
            %69 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc472)
            %70 = cir.const #cir.int<16> : !u64i loc(#loc473)
            %71 = cir.cast(integral, %70 : !u64i), !u32i loc(#loc473)
            %72 = cir.call @connect(%68, %69, %71) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc86)
            %73 = cir.const #cir.int<1> : !s32i loc(#loc87)
            %74 = cir.unary(minus, %73) : !s32i, !s32i loc(#loc87)
            %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc474)
            cir.if %75 {
              cir.break loc(#loc89)
            } loc(#loc475)
          } loc(#loc471)
          %33 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc90)
          %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
          %35 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc92)
          %36 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %35 : !u64i), !cir.ptr<!s8i> loc(#loc93)
          %37 = cir.cast(bitcast, %36 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc476)
          %38 = cir.const #cir.int<1> : !u64i loc(#loc477)
          %39 = cir.const #cir.int<100> : !s32i loc(#loc98)
          %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc98)
          %41 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc99)
          %42 = cir.binop(sub, %40, %41) : !u64i loc(#loc478)
          %43 = cir.const #cir.int<1> : !s32i loc(#loc100)
          %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc100)
          %45 = cir.binop(sub, %42, %44) : !u64i loc(#loc479)
          %46 = cir.binop(mul, %38, %45) : !u64i loc(#loc480)
          %47 = cir.const #cir.int<0> : !s32i loc(#loc102)
          %48 = cir.call @recv(%33, %37, %46, %47) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc103)
          %49 = cir.cast(integral, %48 : !s64i), !s32i loc(#loc103)
          cir.store %49, %4 : !s32i, !cir.ptr<!s32i> loc(#loc481)
          cir.scope {
            %68 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc108)
            %69 = cir.const #cir.int<1> : !s32i loc(#loc109)
            %70 = cir.unary(minus, %69) : !s32i, !s32i loc(#loc109)
            %71 = cir.cmp(eq, %68, %70) : !s32i, !cir.bool loc(#loc483)
            %72 = cir.ternary(%71, true {
              %73 = cir.const #true loc(#loc110)
              cir.yield %73 : !cir.bool loc(#loc110)
            }, false {
              %73 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc111)
              %74 = cir.const #cir.int<0> : !s32i loc(#loc112)
              %75 = cir.cmp(eq, %73, %74) : !s32i, !cir.bool loc(#loc484)
              %76 = cir.ternary(%75, true {
                %77 = cir.const #true loc(#loc110)
                cir.yield %77 : !cir.bool loc(#loc110)
              }, false {
                %77 = cir.const #false loc(#loc110)
                cir.yield %77 : !cir.bool loc(#loc110)
              }) : (!cir.bool) -> !cir.bool loc(#loc110)
              cir.yield %76 : !cir.bool loc(#loc110)
            }) : (!cir.bool) -> !cir.bool loc(#loc110)
            cir.if %72 {
              cir.break loc(#loc114)
            } loc(#loc485)
          } loc(#loc482)
          %50 = cir.const #cir.int<0> : !s32i loc(#loc115)
          %51 = cir.cast(integral, %50 : !s32i), !s8i loc(#loc115)
          %52 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
          %53 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc117)
          %54 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc118)
          %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc118)
          %56 = cir.const #cir.int<1> : !u64i loc(#loc486)
          %57 = cir.binop(div, %55, %56) : !u64i loc(#loc487)
          %58 = cir.binop(add, %53, %57) : !u64i loc(#loc488)
          %59 = cir.ptr_stride(%52 : !cir.ptr<!s8i>, %58 : !u64i), !cir.ptr<!s8i> loc(#loc121)
          cir.store %51, %59 : !s8i, !cir.ptr<!s8i> loc(#loc489)
          %60 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc122)
          %61 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
          %62 = cir.const #cir.int<13> : !s32i loc(#loc124)
          %63 = cir.call @strchr(%61, %62) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc122)
          cir.store %63, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc490)
          cir.scope {
            %68 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
            %69 = cir.cast(ptr_to_bool, %68 : !cir.ptr<!s8i>), !cir.bool loc(#loc129)
            cir.if %69 {
              %70 = cir.const #cir.int<0> : !s32i loc(#loc131)
              %71 = cir.cast(integral, %70 : !s32i), !s8i loc(#loc131)
              %72 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
              cir.store %71, %72 : !s8i, !cir.ptr<!s8i> loc(#loc493)
            } loc(#loc492)
          } loc(#loc491)
          %64 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc134)
          %65 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
          %66 = cir.const #cir.int<10> : !s32i loc(#loc136)
          %67 = cir.call @strchr(%65, %66) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc134)
          cir.store %67, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc494)
          cir.scope {
            %68 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc141)
            %69 = cir.cast(ptr_to_bool, %68 : !cir.ptr<!s8i>), !cir.bool loc(#loc141)
            cir.if %69 {
              %70 = cir.const #cir.int<0> : !s32i loc(#loc143)
              %71 = cir.cast(integral, %70 : !s32i), !s8i loc(#loc143)
              %72 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
              cir.store %71, %72 : !s8i, !cir.ptr<!s8i> loc(#loc497)
            } loc(#loc496)
          } loc(#loc495)
          cir.yield loc(#loc46)
        } while {
          %14 = cir.const #cir.int<0> : !s32i loc(#loc146)
          %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc146)
          cir.condition(%15) loc(#loc146)
        } loc(#loc460)
      } loc(#loc460)
      cir.scope {
        %14 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc149)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc150)
        %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc150)
        %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc499)
        cir.if %17 {
          %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc152)
          %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc153)
        } loc(#loc500)
      } loc(#loc498)
    } loc(#loc454)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc502)
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc503)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
      cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc502)
      %7 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc159)
      cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc503)
      cir.scope {
        %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc505)
        %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc506)
        %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc507)
        cir.scope {
          %11 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc168)
          %12 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
          %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc20)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc20)
          %15 = cir.call @__isoc99_sscanf(%12, %14, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc168)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc170)
          %17 = cir.cmp(eq, %15, %16) : !s32i, !cir.bool loc(#loc509)
          cir.if %17 {
            %18 = cir.const #cir.int<0> : !s32i loc(#loc172)
            cir.store %18, %10 : !s32i, !cir.ptr<!s32i> loc(#loc511)
            cir.scope {
              %20 = cir.const #cir.int<0> : !s32i loc(#loc176)
              cir.store %20, %8 : !s32i, !cir.ptr<!s32i> loc(#loc513)
              cir.for : cond {
                %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc178)
                %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc179)
                %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc514)
                cir.condition(%23) loc(#loc180)
              } body {
                cir.scope {
                  %21 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc182)
                  %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc183)
                  cir.store %22, %10 : !s32i, !cir.ptr<!s32i> loc(#loc516)
                } loc(#loc515)
                cir.yield loc(#loc175)
              } step {
                %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc184)
                %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc185)
                cir.store %22, %8 : !s32i, !cir.ptr<!s32i> loc(#loc517)
                cir.yield loc(#loc512)
              } loc(#loc512)
            } loc(#loc512)
            %19 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc186)
            cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc187)
          } loc(#loc510)
        } loc(#loc508)
      } loc(#loc504)
    } loc(#loc501)
    cir.return loc(#loc24)
  } loc(#loc450)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_connect_socket_31_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc519)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc190)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc520)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc192)
    cir.return loc(#loc189)
  } loc(#loc518)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc521)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc522)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc523)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc200)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc201)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc202)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc203)
  cir.func @main(%arg0: !s32i loc(fused[#loc206, #loc207]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc208, #loc209])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc525)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc526)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc205)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc210)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc210)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc211)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc212)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc212)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc213)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc200)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc200)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc214)
    %8 = cir.get_global @CWE606_Unchecked_Loop_Condition__char_connect_socket_31_good : !cir.ptr<!cir.func<!void ()>> loc(#loc527)
    cir.call @CWE606_Unchecked_Loop_Condition__char_connect_socket_31_good() : () -> () loc(#loc215)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc201)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc201)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc217)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc202)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc202)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc218)
    %13 = cir.get_global @CWE606_Unchecked_Loop_Condition__char_connect_socket_31_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc528)
    cir.call @CWE606_Unchecked_Loop_Condition__char_connect_socket_31_bad() : () -> () loc(#loc219)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc203)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc203)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc221)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc222)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc529)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc529)
    cir.return %17 : !s32i loc(#loc529)
  } loc(#loc524)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc530)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"15\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc226)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc532)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc533)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc533)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc533)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc233)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc534)
    %4 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc235)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc236)
    %6 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc226)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc226)
    %8 = cir.call @strcpy(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc235)
    cir.scope {
      %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc536)
      %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc537)
      %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc240)
      cir.store %11, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc536)
      %12 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc242)
      cir.store %12, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc537)
      cir.scope {
        %13 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc539)
        %14 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc540)
        %15 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc541)
        cir.scope {
          %16 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc251)
          %17 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc252)
          %18 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc253)
          %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc253)
          %20 = cir.call @__isoc99_sscanf(%17, %19, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc251)
          %21 = cir.const #cir.int<1> : !s32i loc(#loc254)
          %22 = cir.cmp(eq, %20, %21) : !s32i, !cir.bool loc(#loc543)
          cir.if %22 {
            %23 = cir.const #cir.int<0> : !s32i loc(#loc256)
            cir.store %23, %15 : !s32i, !cir.ptr<!s32i> loc(#loc545)
            cir.scope {
              %25 = cir.const #cir.int<0> : !s32i loc(#loc260)
              cir.store %25, %13 : !s32i, !cir.ptr<!s32i> loc(#loc547)
              cir.for : cond {
                %26 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc262)
                %27 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc263)
                %28 = cir.cmp(lt, %26, %27) : !s32i, !cir.bool loc(#loc548)
                cir.condition(%28) loc(#loc264)
              } body {
                cir.scope {
                  %26 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc266)
                  %27 = cir.unary(inc, %26) : !s32i, !s32i loc(#loc267)
                  cir.store %27, %15 : !s32i, !cir.ptr<!s32i> loc(#loc550)
                } loc(#loc549)
                cir.yield loc(#loc259)
              } step {
                %26 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc268)
                %27 = cir.unary(inc, %26) : !s32i, !s32i loc(#loc269)
                cir.store %27, %13 : !s32i, !cir.ptr<!s32i> loc(#loc551)
                cir.yield loc(#loc546)
              } loc(#loc546)
            } loc(#loc546)
            %24 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc270)
            cir.call @printIntLine(%24) : (!s32i) -> () loc(#loc271)
          } loc(#loc544)
        } loc(#loc542)
      } loc(#loc538)
    } loc(#loc535)
    cir.return loc(#loc228)
  } loc(#loc531)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc553)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc554)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc554)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc554)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc278)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc555)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc557)
      %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc558)
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc559)
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc560)
      %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc561)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc289)
      %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc289)
      cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc560)
      %11 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc292)
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc293)
      %13 = cir.call @strlen(%12) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc292)
      cir.store %13, %8 : !u64i, !cir.ptr<!u64i> loc(#loc561)
      cir.scope {
        cir.do {
          %14 = cir.const #cir.int<2> : !s32i loc(#loc296)
          %15 = cir.const #cir.int<1> : !s32i loc(#loc297)
          %16 = cir.const #cir.int<6> : !s32i loc(#loc298)
          %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc299)
          cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc563)
          cir.scope {
            %68 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc304)
            %69 = cir.const #cir.int<1> : !s32i loc(#loc305)
            %70 = cir.unary(minus, %69) : !s32i, !s32i loc(#loc305)
            %71 = cir.cmp(eq, %68, %70) : !s32i, !cir.bool loc(#loc565)
            cir.if %71 {
              cir.break loc(#loc307)
            } loc(#loc566)
          } loc(#loc564)
          %18 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc567)
          %19 = cir.const #cir.int<0> : !s32i loc(#loc310)
          %20 = cir.const #cir.int<16> : !u64i loc(#loc568)
          cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc569)
          %21 = cir.const #cir.int<2> : !s32i loc(#loc315)
          %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc315)
          %23 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
          cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc570)
          %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc317)
          %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc317)
          %26 = cir.call @inet_addr(%25) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc318)
          %27 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc70)
          %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc71)
          cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc571)
          %29 = cir.const #cir.int<27015> : !s32i loc(#loc321)
          %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc321)
          %31 = cir.call @htons(%30) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc322)
          %32 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
          cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc572)
          cir.scope {
            %68 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc327)
            %69 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc574)
            %70 = cir.const #cir.int<16> : !u64i loc(#loc575)
            %71 = cir.cast(integral, %70 : !u64i), !u32i loc(#loc575)
            %72 = cir.call @connect(%68, %69, %71) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc332)
            %73 = cir.const #cir.int<1> : !s32i loc(#loc333)
            %74 = cir.unary(minus, %73) : !s32i, !s32i loc(#loc333)
            %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc576)
            cir.if %75 {
              cir.break loc(#loc335)
            } loc(#loc577)
          } loc(#loc573)
          %33 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc336)
          %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc337)
          %35 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc338)
          %36 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %35 : !u64i), !cir.ptr<!s8i> loc(#loc339)
          %37 = cir.cast(bitcast, %36 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc578)
          %38 = cir.const #cir.int<1> : !u64i loc(#loc579)
          %39 = cir.const #cir.int<100> : !s32i loc(#loc344)
          %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc344)
          %41 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc345)
          %42 = cir.binop(sub, %40, %41) : !u64i loc(#loc580)
          %43 = cir.const #cir.int<1> : !s32i loc(#loc346)
          %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc346)
          %45 = cir.binop(sub, %42, %44) : !u64i loc(#loc581)
          %46 = cir.binop(mul, %38, %45) : !u64i loc(#loc582)
          %47 = cir.const #cir.int<0> : !s32i loc(#loc348)
          %48 = cir.call @recv(%33, %37, %46, %47) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc349)
          %49 = cir.cast(integral, %48 : !s64i), !s32i loc(#loc349)
          cir.store %49, %4 : !s32i, !cir.ptr<!s32i> loc(#loc583)
          cir.scope {
            %68 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc354)
            %69 = cir.const #cir.int<1> : !s32i loc(#loc355)
            %70 = cir.unary(minus, %69) : !s32i, !s32i loc(#loc355)
            %71 = cir.cmp(eq, %68, %70) : !s32i, !cir.bool loc(#loc585)
            %72 = cir.ternary(%71, true {
              %73 = cir.const #true loc(#loc356)
              cir.yield %73 : !cir.bool loc(#loc356)
            }, false {
              %73 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc357)
              %74 = cir.const #cir.int<0> : !s32i loc(#loc358)
              %75 = cir.cmp(eq, %73, %74) : !s32i, !cir.bool loc(#loc586)
              %76 = cir.ternary(%75, true {
                %77 = cir.const #true loc(#loc356)
                cir.yield %77 : !cir.bool loc(#loc356)
              }, false {
                %77 = cir.const #false loc(#loc356)
                cir.yield %77 : !cir.bool loc(#loc356)
              }) : (!cir.bool) -> !cir.bool loc(#loc356)
              cir.yield %76 : !cir.bool loc(#loc356)
            }) : (!cir.bool) -> !cir.bool loc(#loc356)
            cir.if %72 {
              cir.break loc(#loc360)
            } loc(#loc587)
          } loc(#loc584)
          %50 = cir.const #cir.int<0> : !s32i loc(#loc361)
          %51 = cir.cast(integral, %50 : !s32i), !s8i loc(#loc361)
          %52 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc362)
          %53 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc363)
          %54 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc364)
          %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc364)
          %56 = cir.const #cir.int<1> : !u64i loc(#loc588)
          %57 = cir.binop(div, %55, %56) : !u64i loc(#loc589)
          %58 = cir.binop(add, %53, %57) : !u64i loc(#loc590)
          %59 = cir.ptr_stride(%52 : !cir.ptr<!s8i>, %58 : !u64i), !cir.ptr<!s8i> loc(#loc367)
          cir.store %51, %59 : !s8i, !cir.ptr<!s8i> loc(#loc591)
          %60 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc368)
          %61 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc369)
          %62 = cir.const #cir.int<13> : !s32i loc(#loc370)
          %63 = cir.call @strchr(%61, %62) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc368)
          cir.store %63, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc592)
          cir.scope {
            %68 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc375)
            %69 = cir.cast(ptr_to_bool, %68 : !cir.ptr<!s8i>), !cir.bool loc(#loc375)
            cir.if %69 {
              %70 = cir.const #cir.int<0> : !s32i loc(#loc377)
              %71 = cir.cast(integral, %70 : !s32i), !s8i loc(#loc377)
              %72 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc378)
              cir.store %71, %72 : !s8i, !cir.ptr<!s8i> loc(#loc595)
            } loc(#loc594)
          } loc(#loc593)
          %64 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc380)
          %65 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc381)
          %66 = cir.const #cir.int<10> : !s32i loc(#loc382)
          %67 = cir.call @strchr(%65, %66) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc380)
          cir.store %67, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc596)
          cir.scope {
            %68 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc387)
            %69 = cir.cast(ptr_to_bool, %68 : !cir.ptr<!s8i>), !cir.bool loc(#loc387)
            cir.if %69 {
              %70 = cir.const #cir.int<0> : !s32i loc(#loc389)
              %71 = cir.cast(integral, %70 : !s32i), !s8i loc(#loc389)
              %72 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc390)
              cir.store %71, %72 : !s8i, !cir.ptr<!s8i> loc(#loc599)
            } loc(#loc598)
          } loc(#loc597)
          cir.yield loc(#loc295)
        } while {
          %14 = cir.const #cir.int<0> : !s32i loc(#loc392)
          %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc392)
          cir.condition(%15) loc(#loc392)
        } loc(#loc562)
      } loc(#loc562)
      cir.scope {
        %14 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc395)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc396)
        %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc396)
        %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc601)
        cir.if %17 {
          %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc398)
          %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc399)
        } loc(#loc602)
      } loc(#loc600)
    } loc(#loc556)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc604)
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc605)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc403)
      cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc604)
      %7 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc405)
      cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc605)
      cir.scope {
        %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc607)
        %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc608)
        %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc609)
        cir.scope {
          %11 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc414)
          %12 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc415)
          %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc416)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc416)
          %15 = cir.call @__isoc99_sscanf(%12, %14, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc414)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc417)
          %17 = cir.cmp(eq, %15, %16) : !s32i, !cir.bool loc(#loc611)
          cir.if %17 {
            cir.scope {
              %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc421)
              %19 = cir.const #cir.int<10000> : !s32i loc(#loc422)
              %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc614)
              cir.if %20 {
                %21 = cir.const #cir.int<0> : !s32i loc(#loc424)
                cir.store %21, %10 : !s32i, !cir.ptr<!s32i> loc(#loc616)
                cir.scope {
                  %23 = cir.const #cir.int<0> : !s32i loc(#loc428)
                  cir.store %23, %8 : !s32i, !cir.ptr<!s32i> loc(#loc618)
                  cir.for : cond {
                    %24 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc430)
                    %25 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc431)
                    %26 = cir.cmp(lt, %24, %25) : !s32i, !cir.bool loc(#loc619)
                    cir.condition(%26) loc(#loc432)
                  } body {
                    cir.scope {
                      %24 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc434)
                      %25 = cir.unary(inc, %24) : !s32i, !s32i loc(#loc435)
                      cir.store %25, %10 : !s32i, !cir.ptr<!s32i> loc(#loc621)
                    } loc(#loc620)
                    cir.yield loc(#loc427)
                  } step {
                    %24 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc436)
                    %25 = cir.unary(inc, %24) : !s32i, !s32i loc(#loc437)
                    cir.store %25, %8 : !s32i, !cir.ptr<!s32i> loc(#loc622)
                    cir.yield loc(#loc617)
                  } loc(#loc617)
                } loc(#loc617)
                %22 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc438)
                cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc439)
              } loc(#loc615)
            } loc(#loc613)
          } loc(#loc612)
        } loc(#loc610)
      } loc(#loc606)
    } loc(#loc603)
    cir.return loc(#loc273)
  } loc(#loc552)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/sys/socket.h":102:1)
#loc4 = loc("/usr/include/sys/socket.h":102:62)
#loc5 = loc("/usr/include/arpa/inet.h":34:1)
#loc6 = loc("/usr/include/arpa/inet.h":34:47)
#loc7 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":81:49)
#loc8 = loc("/usr/include/netinet/in.h":404:1)
#loc9 = loc("/usr/include/netinet/in.h":405:40)
#loc10 = loc("/usr/include/sys/socket.h":126:1)
#loc11 = loc("/usr/include/sys/socket.h":126:75)
#loc12 = loc("/usr/include/sys/socket.h":145:1)
#loc13 = loc("/usr/include/sys/socket.h":145:68)
#loc14 = loc("/usr/include/string.h":246:1)
#loc15 = loc("/usr/include/string.h":247:33)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("/usr/include/stdio.h":468:1)
#loc19 = loc("/usr/include/stdio.h":468:12)
#loc20 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":126:30)
#loc21 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc22 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc23 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":49:1)
#loc24 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":139:1)
#loc25 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":51:5)
#loc26 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":51:12)
#loc27 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":52:5)
#loc28 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":52:28)
#loc29 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":53:12)
#loc30 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":53:5)
#loc31 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":54:5)
#loc32 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":120:5)
#loc33 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":59:9)
#loc34 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":59:13)
#loc35 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":60:9)
#loc36 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":60:28)
#loc37 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":61:9)
#loc38 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":61:15)
#loc39 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":62:9)
#loc40 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":62:32)
#loc41 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":63:9)
#loc42 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":63:37)
#loc43 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":63:26)
#loc44 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":63:33)
#loc45 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":64:9)
#loc46 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":109:17)
#loc47 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":74:36)
#loc48 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":74:45)
#loc49 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":74:58)
#loc50 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":74:29)
#loc51 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":74:13)
#loc52 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":74:69)
#loc53 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":75:13)
#loc54 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":78:13)
#loc55 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":75:17)
#loc56 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":75:34)
#loc57 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":76:13)
#loc58 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":77:17)
#loc59 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":79:20)
#loc60 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":79:21)
#loc61 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":79:30)
#loc62 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":79:33)
#loc63 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":79:47)
#loc64 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":79:13)
#loc65 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":79:48)
#loc66 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":80:34)
#loc67 = loc("/usr/include/netinet/in.h":249:5)
#loc68 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":80:13)
#loc69 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":81:39)
#loc70 = loc("/usr/include/netinet/in.h":251:20)
#loc71 = loc("/usr/include/netinet/in.h":33:15)
#loc72 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":81:13)
#loc73 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":81:59)
#loc74 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":82:38)
#loc75 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":82:32)
#loc76 = loc("/usr/include/netinet/in.h":250:15)
#loc77 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":82:13)
#loc78 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":82:46)
#loc79 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":83:13)
#loc80 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":86:13)
#loc81 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":83:25)
#loc82 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":83:58)
#loc83 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":83:59)
#loc84 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":83:68)
#loc85 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":83:82)
#loc86 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":83:17)
#loc87 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":83:88)
#loc88 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":84:13)
#loc89 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":85:17)
#loc90 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":90:31)
#loc91 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":90:55)
#loc92 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":90:62)
#loc93 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":90:60)
#loc94 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":90:46)
#loc95 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":90:69)
#loc96 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":90:72)
#loc97 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":90:83)
#loc98 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":90:88)
#loc99 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":90:94)
#loc100 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":90:104)
#loc101 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":90:105)
#loc102 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":90:108)
#loc103 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":90:26)
#loc104 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":90:13)
#loc105 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":90:109)
#loc106 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":91:13)
#loc107 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":94:13)
#loc108 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":91:17)
#loc109 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":91:31)
#loc110 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":91:44)
#loc111 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":91:47)
#loc112 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":91:61)
#loc113 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":92:13)
#loc114 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":93:17)
#loc115 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":96:57)
#loc116 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":96:13)
#loc117 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":96:18)
#loc118 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":96:28)
#loc119 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":96:41)
#loc120 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":96:52)
#loc121 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":96:53)
#loc122 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":98:23)
#loc123 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":98:30)
#loc124 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":98:36)
#loc125 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":98:13)
#loc126 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":98:40)
#loc127 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":99:13)
#loc128 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":102:13)
#loc129 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":99:17)
#loc130 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":100:13)
#loc131 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":101:28)
#loc132 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":101:18)
#loc133 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":101:17)
#loc134 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":103:23)
#loc135 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":103:30)
#loc136 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":103:36)
#loc137 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":103:13)
#loc138 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":103:40)
#loc139 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":104:13)
#loc140 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":107:13)
#loc141 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":104:17)
#loc142 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":105:13)
#loc143 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":106:28)
#loc144 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":106:18)
#loc145 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":106:17)
#loc146 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":109:16)
#loc147 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":110:9)
#loc148 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":113:9)
#loc149 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":110:13)
#loc150 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":110:30)
#loc151 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":111:9)
#loc152 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":112:26)
#loc153 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":112:13)
#loc154 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":121:5)
#loc155 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":138:5)
#loc156 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":122:9)
#loc157 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":122:27)
#loc158 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":123:9)
#loc159 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":123:23)
#loc160 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":124:9)
#loc161 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":137:9)
#loc162 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":125:13)
#loc163 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":125:17)
#loc164 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":125:20)
#loc165 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":125:23)
#loc166 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":126:13)
#loc167 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":136:13)
#loc168 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":126:17)
#loc169 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":126:24)
#loc170 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":126:43)
#loc171 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":127:13)
#loc172 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":129:31)
#loc173 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":129:17)
#loc174 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":130:17)
#loc175 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":134:17)
#loc176 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":130:26)
#loc177 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":130:22)
#loc178 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":130:29)
#loc179 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":130:33)
#loc180 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":130:31)
#loc181 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":131:17)
#loc182 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":133:32)
#loc183 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":133:21)
#loc184 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":130:37)
#loc185 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":130:36)
#loc186 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":135:30)
#loc187 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":135:17)
#loc188 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":269:1)
#loc189 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":273:1)
#loc190 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":271:5)
#loc191 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":271:13)
#loc192 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":272:5)
#loc193 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":272:13)
#loc194 = loc("/usr/include/stdlib.h":575:1)
#loc195 = loc("/usr/include/stdlib.h":575:41)
#loc196 = loc("/usr/include/time.h":76:1)
#loc197 = loc("/usr/include/time.h":76:38)
#loc198 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc199 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc200 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":288:15)
#loc201 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":290:15)
#loc202 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":293:15)
#loc203 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":295:15)
#loc204 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":283:1)
#loc205 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":298:1)
#loc210 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":284:1)
#loc211 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":286:27)
#loc212 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":286:22)
#loc213 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":286:5)
#loc214 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":288:5)
#loc215 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":289:5)
#loc216 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":289:66)
#loc217 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":290:5)
#loc218 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":293:5)
#loc219 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":294:5)
#loc220 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":294:65)
#loc221 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":295:5)
#loc222 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":297:12)
#loc223 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":297:5)
#loc224 = loc("/usr/include/string.h":141:1)
#loc225 = loc("/usr/include/string.h":142:14)
#loc226 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":152:18)
#loc227 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":146:1)
#loc228 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":171:1)
#loc229 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":148:5)
#loc230 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":148:12)
#loc231 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":149:5)
#loc232 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":149:28)
#loc233 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":150:12)
#loc234 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":150:5)
#loc235 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":152:5)
#loc236 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":152:12)
#loc237 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":153:5)
#loc238 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":170:5)
#loc239 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":154:9)
#loc240 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":154:27)
#loc241 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":155:9)
#loc242 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":155:23)
#loc243 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":156:9)
#loc244 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":169:9)
#loc245 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":157:13)
#loc246 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":157:17)
#loc247 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":157:20)
#loc248 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":157:23)
#loc249 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":158:13)
#loc250 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":168:13)
#loc251 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":158:17)
#loc252 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":158:24)
#loc253 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":158:30)
#loc254 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":158:43)
#loc255 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":159:13)
#loc256 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":161:31)
#loc257 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":161:17)
#loc258 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":162:17)
#loc259 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":166:17)
#loc260 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":162:26)
#loc261 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":162:22)
#loc262 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":162:29)
#loc263 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":162:33)
#loc264 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":162:31)
#loc265 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":163:17)
#loc266 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":165:32)
#loc267 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":165:21)
#loc268 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":162:37)
#loc269 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":162:36)
#loc270 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":167:30)
#loc271 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":167:17)
#loc272 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":174:1)
#loc273 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":267:1)
#loc274 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":176:5)
#loc275 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":176:12)
#loc276 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":177:5)
#loc277 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":177:28)
#loc278 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":178:12)
#loc279 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":178:5)
#loc280 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":179:5)
#loc281 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":245:5)
#loc282 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":184:9)
#loc283 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":184:13)
#loc284 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":185:9)
#loc285 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":185:28)
#loc286 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":186:9)
#loc287 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":186:15)
#loc288 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":187:9)
#loc289 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":187:32)
#loc290 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":188:9)
#loc291 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":188:37)
#loc292 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":188:26)
#loc293 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":188:33)
#loc294 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":189:9)
#loc295 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":234:17)
#loc296 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":199:36)
#loc297 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":199:45)
#loc298 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":199:58)
#loc299 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":199:29)
#loc300 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":199:13)
#loc301 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":199:69)
#loc302 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":200:13)
#loc303 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":203:13)
#loc304 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":200:17)
#loc305 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":200:34)
#loc306 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":201:13)
#loc307 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":202:17)
#loc308 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":204:20)
#loc309 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":204:21)
#loc310 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":204:30)
#loc311 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":204:33)
#loc312 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":204:47)
#loc313 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":204:13)
#loc314 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":204:48)
#loc315 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":205:34)
#loc316 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":205:13)
#loc317 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":206:49)
#loc318 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":206:39)
#loc319 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":206:13)
#loc320 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":206:59)
#loc321 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":207:38)
#loc322 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":207:32)
#loc323 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":207:13)
#loc324 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":207:46)
#loc325 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":208:13)
#loc326 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":211:13)
#loc327 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":208:25)
#loc328 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":208:58)
#loc329 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":208:59)
#loc330 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":208:68)
#loc331 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":208:82)
#loc332 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":208:17)
#loc333 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":208:88)
#loc334 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":209:13)
#loc335 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":210:17)
#loc336 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":215:31)
#loc337 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":215:55)
#loc338 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":215:62)
#loc339 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":215:60)
#loc340 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":215:46)
#loc341 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":215:69)
#loc342 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":215:72)
#loc343 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":215:83)
#loc344 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":215:88)
#loc345 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":215:94)
#loc346 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":215:104)
#loc347 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":215:105)
#loc348 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":215:108)
#loc349 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":215:26)
#loc350 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":215:13)
#loc351 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":215:109)
#loc352 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":216:13)
#loc353 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":219:13)
#loc354 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":216:17)
#loc355 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":216:31)
#loc356 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":216:44)
#loc357 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":216:47)
#loc358 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":216:61)
#loc359 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":217:13)
#loc360 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":218:17)
#loc361 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":221:57)
#loc362 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":221:13)
#loc363 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":221:18)
#loc364 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":221:28)
#loc365 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":221:41)
#loc366 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":221:52)
#loc367 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":221:53)
#loc368 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":223:23)
#loc369 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":223:30)
#loc370 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":223:36)
#loc371 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":223:13)
#loc372 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":223:40)
#loc373 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":224:13)
#loc374 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":227:13)
#loc375 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":224:17)
#loc376 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":225:13)
#loc377 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":226:28)
#loc378 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":226:18)
#loc379 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":226:17)
#loc380 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":228:23)
#loc381 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":228:30)
#loc382 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":228:36)
#loc383 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":228:13)
#loc384 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":228:40)
#loc385 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":229:13)
#loc386 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":232:13)
#loc387 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":229:17)
#loc388 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":230:13)
#loc389 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":231:28)
#loc390 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":231:18)
#loc391 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":231:17)
#loc392 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":234:16)
#loc393 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":235:9)
#loc394 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":238:9)
#loc395 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":235:13)
#loc396 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":235:30)
#loc397 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":236:9)
#loc398 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":237:26)
#loc399 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":237:13)
#loc400 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":246:5)
#loc401 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":266:5)
#loc402 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":247:9)
#loc403 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":247:27)
#loc404 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":248:9)
#loc405 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":248:23)
#loc406 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":249:9)
#loc407 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":265:9)
#loc408 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":250:13)
#loc409 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":250:17)
#loc410 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":250:20)
#loc411 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":250:23)
#loc412 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":251:13)
#loc413 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":264:13)
#loc414 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":251:17)
#loc415 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":251:24)
#loc416 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":251:30)
#loc417 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":251:43)
#loc418 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":252:13)
#loc419 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":254:17)
#loc420 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":263:17)
#loc421 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":254:21)
#loc422 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":254:25)
#loc423 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":255:17)
#loc424 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":256:35)
#loc425 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":256:21)
#loc426 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":257:21)
#loc427 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":261:21)
#loc428 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":257:30)
#loc429 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":257:26)
#loc430 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":257:33)
#loc431 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":257:37)
#loc432 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":257:35)
#loc433 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":258:21)
#loc434 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":260:36)
#loc435 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":260:25)
#loc436 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":257:41)
#loc437 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":257:40)
#loc438 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":262:34)
#loc439 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_31.c":262:21)
#loc440 = loc(fused[#loc1, #loc2])
#loc441 = loc(fused[#loc3, #loc4])
#loc442 = loc(fused[#loc5, #loc6])
#loc443 = loc(fused[#loc8, #loc9])
#loc444 = loc(fused[#loc10, #loc11])
#loc445 = loc(fused[#loc12, #loc13])
#loc446 = loc(fused[#loc14, #loc15])
#loc447 = loc(fused[#loc16, #loc17])
#loc448 = loc(fused[#loc18, #loc19])
#loc449 = loc(fused[#loc21, #loc22])
#loc450 = loc(fused[#loc23, #loc24])
#loc451 = loc(fused[#loc25, #loc26])
#loc452 = loc(fused[#loc27, #loc28])
#loc453 = loc(fused[#loc30, #loc29])
#loc454 = loc(fused[#loc31, #loc32])
#loc455 = loc(fused[#loc33, #loc34])
#loc456 = loc(fused[#loc35, #loc36])
#loc457 = loc(fused[#loc37, #loc38])
#loc458 = loc(fused[#loc39, #loc40])
#loc459 = loc(fused[#loc41, #loc42])
#loc460 = loc(fused[#loc45, #loc46])
#loc461 = loc(fused[#loc51, #loc52])
#loc462 = loc(fused[#loc53, #loc54])
#loc463 = loc(fused[#loc55, #loc56])
#loc464 = loc(fused[#loc57, #loc54])
#loc465 = loc(fused[#loc59, #loc60])
#loc466 = loc(fused[#loc62, #loc63])
#loc467 = loc(fused[#loc64, #loc65])
#loc468 = loc(fused[#loc68, #loc66])
#loc469 = loc(fused[#loc72, #loc73])
#loc470 = loc(fused[#loc77, #loc78])
#loc471 = loc(fused[#loc79, #loc80])
#loc472 = loc(fused[#loc82, #loc83])
#loc473 = loc(fused[#loc84, #loc85])
#loc474 = loc(fused[#loc86, #loc87])
#loc475 = loc(fused[#loc88, #loc80])
#loc476 = loc(fused[#loc94, #loc95])
#loc477 = loc(fused[#loc96, #loc97])
#loc478 = loc(fused[#loc98, #loc99])
#loc479 = loc(fused[#loc98, #loc100])
#loc480 = loc(fused[#loc96, #loc101])
#loc481 = loc(fused[#loc104, #loc105])
#loc482 = loc(fused[#loc106, #loc107])
#loc483 = loc(fused[#loc108, #loc109])
#loc484 = loc(fused[#loc111, #loc112])
#loc485 = loc(fused[#loc113, #loc107])
#loc486 = loc(fused[#loc119, #loc120])
#loc487 = loc(fused[#loc118, #loc120])
#loc488 = loc(fused[#loc117, #loc120])
#loc489 = loc(fused[#loc116, #loc115])
#loc490 = loc(fused[#loc125, #loc126])
#loc491 = loc(fused[#loc127, #loc128])
#loc492 = loc(fused[#loc130, #loc128])
#loc493 = loc(fused[#loc133, #loc131])
#loc494 = loc(fused[#loc137, #loc138])
#loc495 = loc(fused[#loc139, #loc140])
#loc496 = loc(fused[#loc142, #loc140])
#loc497 = loc(fused[#loc145, #loc143])
#loc498 = loc(fused[#loc147, #loc148])
#loc499 = loc(fused[#loc149, #loc150])
#loc500 = loc(fused[#loc151, #loc148])
#loc501 = loc(fused[#loc154, #loc155])
#loc502 = loc(fused[#loc156, #loc157])
#loc503 = loc(fused[#loc158, #loc159])
#loc504 = loc(fused[#loc160, #loc161])
#loc505 = loc(fused[#loc162, #loc163])
#loc506 = loc(fused[#loc162, #loc164])
#loc507 = loc(fused[#loc162, #loc165])
#loc508 = loc(fused[#loc166, #loc167])
#loc509 = loc(fused[#loc168, #loc170])
#loc510 = loc(fused[#loc171, #loc167])
#loc511 = loc(fused[#loc173, #loc172])
#loc512 = loc(fused[#loc174, #loc175])
#loc513 = loc(fused[#loc177, #loc176])
#loc514 = loc(fused[#loc178, #loc179])
#loc515 = loc(fused[#loc181, #loc175])
#loc516 = loc(fused[#loc183, #loc182])
#loc517 = loc(fused[#loc185, #loc184])
#loc518 = loc(fused[#loc188, #loc189])
#loc519 = loc(fused[#loc190, #loc191])
#loc520 = loc(fused[#loc192, #loc193])
#loc521 = loc(fused[#loc194, #loc195])
#loc522 = loc(fused[#loc196, #loc197])
#loc523 = loc(fused[#loc198, #loc199])
#loc524 = loc(fused[#loc204, #loc205])
#loc527 = loc(fused[#loc215, #loc216])
#loc528 = loc(fused[#loc219, #loc220])
#loc529 = loc(fused[#loc223, #loc222])
#loc530 = loc(fused[#loc224, #loc225])
#loc531 = loc(fused[#loc227, #loc228])
#loc532 = loc(fused[#loc229, #loc230])
#loc533 = loc(fused[#loc231, #loc232])
#loc534 = loc(fused[#loc234, #loc233])
#loc535 = loc(fused[#loc237, #loc238])
#loc536 = loc(fused[#loc239, #loc240])
#loc537 = loc(fused[#loc241, #loc242])
#loc538 = loc(fused[#loc243, #loc244])
#loc539 = loc(fused[#loc245, #loc246])
#loc540 = loc(fused[#loc245, #loc247])
#loc541 = loc(fused[#loc245, #loc248])
#loc542 = loc(fused[#loc249, #loc250])
#loc543 = loc(fused[#loc251, #loc254])
#loc544 = loc(fused[#loc255, #loc250])
#loc545 = loc(fused[#loc257, #loc256])
#loc546 = loc(fused[#loc258, #loc259])
#loc547 = loc(fused[#loc261, #loc260])
#loc548 = loc(fused[#loc262, #loc263])
#loc549 = loc(fused[#loc265, #loc259])
#loc550 = loc(fused[#loc267, #loc266])
#loc551 = loc(fused[#loc269, #loc268])
#loc552 = loc(fused[#loc272, #loc273])
#loc553 = loc(fused[#loc274, #loc275])
#loc554 = loc(fused[#loc276, #loc277])
#loc555 = loc(fused[#loc279, #loc278])
#loc556 = loc(fused[#loc280, #loc281])
#loc557 = loc(fused[#loc282, #loc283])
#loc558 = loc(fused[#loc284, #loc285])
#loc559 = loc(fused[#loc286, #loc287])
#loc560 = loc(fused[#loc288, #loc289])
#loc561 = loc(fused[#loc290, #loc291])
#loc562 = loc(fused[#loc294, #loc295])
#loc563 = loc(fused[#loc300, #loc301])
#loc564 = loc(fused[#loc302, #loc303])
#loc565 = loc(fused[#loc304, #loc305])
#loc566 = loc(fused[#loc306, #loc303])
#loc567 = loc(fused[#loc308, #loc309])
#loc568 = loc(fused[#loc311, #loc312])
#loc569 = loc(fused[#loc313, #loc314])
#loc570 = loc(fused[#loc316, #loc315])
#loc571 = loc(fused[#loc319, #loc320])
#loc572 = loc(fused[#loc323, #loc324])
#loc573 = loc(fused[#loc325, #loc326])
#loc574 = loc(fused[#loc328, #loc329])
#loc575 = loc(fused[#loc330, #loc331])
#loc576 = loc(fused[#loc332, #loc333])
#loc577 = loc(fused[#loc334, #loc326])
#loc578 = loc(fused[#loc340, #loc341])
#loc579 = loc(fused[#loc342, #loc343])
#loc580 = loc(fused[#loc344, #loc345])
#loc581 = loc(fused[#loc344, #loc346])
#loc582 = loc(fused[#loc342, #loc347])
#loc583 = loc(fused[#loc350, #loc351])
#loc584 = loc(fused[#loc352, #loc353])
#loc585 = loc(fused[#loc354, #loc355])
#loc586 = loc(fused[#loc357, #loc358])
#loc587 = loc(fused[#loc359, #loc353])
#loc588 = loc(fused[#loc365, #loc366])
#loc589 = loc(fused[#loc364, #loc366])
#loc590 = loc(fused[#loc363, #loc366])
#loc591 = loc(fused[#loc362, #loc361])
#loc592 = loc(fused[#loc371, #loc372])
#loc593 = loc(fused[#loc373, #loc374])
#loc594 = loc(fused[#loc376, #loc374])
#loc595 = loc(fused[#loc379, #loc377])
#loc596 = loc(fused[#loc383, #loc384])
#loc597 = loc(fused[#loc385, #loc386])
#loc598 = loc(fused[#loc388, #loc386])
#loc599 = loc(fused[#loc391, #loc389])
#loc600 = loc(fused[#loc393, #loc394])
#loc601 = loc(fused[#loc395, #loc396])
#loc602 = loc(fused[#loc397, #loc394])
#loc603 = loc(fused[#loc400, #loc401])
#loc604 = loc(fused[#loc402, #loc403])
#loc605 = loc(fused[#loc404, #loc405])
#loc606 = loc(fused[#loc406, #loc407])
#loc607 = loc(fused[#loc408, #loc409])
#loc608 = loc(fused[#loc408, #loc410])
#loc609 = loc(fused[#loc408, #loc411])
#loc610 = loc(fused[#loc412, #loc413])
#loc611 = loc(fused[#loc414, #loc417])
#loc612 = loc(fused[#loc418, #loc413])
#loc613 = loc(fused[#loc419, #loc420])
#loc614 = loc(fused[#loc421, #loc422])
#loc615 = loc(fused[#loc423, #loc420])
#loc616 = loc(fused[#loc425, #loc424])
#loc617 = loc(fused[#loc426, #loc427])
#loc618 = loc(fused[#loc429, #loc428])
#loc619 = loc(fused[#loc430, #loc431])
#loc620 = loc(fused[#loc433, #loc427])
#loc621 = loc(fused[#loc435, #loc434])
#loc622 = loc(fused[#loc437, #loc436])
