!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__malloc_char_loop_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc175)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc176)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc177)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc178)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc179)
  cir.func no_proto @CWE126_Buffer_Overread__malloc_char_loop_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc181)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc15)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc182)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc19)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc19)
        cir.condition(%3) loc(#loc19)
      } do {
        cir.scope {
          %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc21)
          %3 = cir.const #cir.int<50> : !s32i loc(#loc22)
          %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc22)
          %5 = cir.const #cir.int<1> : !u64i loc(#loc185)
          %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc186)
          %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc21)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc187)
          cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc188)
          cir.scope {
            %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
            %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc30)
            %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc30)
            %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc190)
            cir.if %26 {
              %27 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc32)
              %28 = cir.const #cir.int<1> : !s32i loc(#loc33)
              %29 = cir.unary(minus, %28) nsw : !s32i, !s32i loc(#loc34)
              cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc32)
            } loc(#loc191)
          } loc(#loc189)
          %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc35)
          %11 = cir.const #cir.int<65> : !s32i loc(#loc36)
          %12 = cir.const #cir.int<50> : !s32i loc(#loc37)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc38)
          %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc37)
          %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc37)
          cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc192)
          %16 = cir.const #cir.int<0> : !s32i loc(#loc41)
          %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc41)
          %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
          %19 = cir.const #cir.int<50> : !s32i loc(#loc43)
          %20 = cir.const #cir.int<1> : !s32i loc(#loc44)
          %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc43)
          %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc45)
          cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc193)
          cir.break loc(#loc46)
        } loc(#loc184)
        cir.yield loc(#loc18)
      } loc(#loc183)
    } loc(#loc183)
    cir.scope {
      %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc195)
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc196)
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc197)
      %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc54)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc54)
      %7 = cir.const #cir.int<67> : !s32i loc(#loc55)
      %8 = cir.const #cir.int<100> : !s32i loc(#loc56)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc57)
      %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc56)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc56)
      cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc198)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc60)
      %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc60)
      %14 = cir.const #cir.int<100> : !s32i loc(#loc61)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc62)
      %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc61)
      %17 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc63)
      %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc63)
      cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc199)
      %19 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc64)
      %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc65)
      %21 = cir.call @strlen(%20) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc64)
      cir.store %21, %3 : !u64i, !cir.ptr<!u64i> loc(#loc200)
      cir.scope {
        %33 = cir.const #cir.int<0> : !s32i loc(#loc70)
        %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc70)
        cir.store %34, %2 : !u64i, !cir.ptr<!u64i> loc(#loc202)
        cir.for : cond {
          %35 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc72)
          %36 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc73)
          %37 = cir.cmp(lt, %35, %36) : !u64i, !cir.bool loc(#loc203)
          cir.condition(%37) loc(#loc74)
        } body {
          cir.scope {
            %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
            %36 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc77)
            %37 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %36 : !u64i), !cir.ptr<!s8i> loc(#loc78)
            %38 = cir.load %37 : !cir.ptr<!s8i>, !s8i loc(#loc76)
            %39 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc79)
            %40 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc80)
            %41 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %39 : !u64i), !cir.ptr<!s8i> loc(#loc80)
            cir.store %38, %41 : !s8i, !cir.ptr<!s8i> loc(#loc205)
          } loc(#loc204)
          cir.yield loc(#loc69)
        } step {
          %35 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc81)
          %36 = cir.unary(inc, %35) : !u64i, !u64i loc(#loc82)
          cir.store %36, %2 : !u64i, !cir.ptr<!u64i> loc(#loc206)
          cir.yield loc(#loc201)
        } loc(#loc201)
      } loc(#loc201)
      %22 = cir.const #cir.int<0> : !s32i loc(#loc83)
      %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc83)
      %24 = cir.const #cir.int<100> : !s32i loc(#loc84)
      %25 = cir.const #cir.int<1> : !s32i loc(#loc85)
      %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc84)
      %27 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc86)
      %28 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc86)
      cir.store %23, %28 : !s8i, !cir.ptr<!s8i> loc(#loc207)
      %29 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc87)
      cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc88)
      %30 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc89)
      %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
      %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc90)
      cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc89)
    } loc(#loc194)
    cir.return loc(#loc12)
  } loc(#loc180)
  cir.func no_proto @CWE126_Buffer_Overread__malloc_char_loop_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc209)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc93)
    cir.return loc(#loc92)
  } loc(#loc208)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc211)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc99)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc212)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc103)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc103)
        cir.condition(%3) loc(#loc103)
      } do {
        cir.scope {
          %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc105)
          %3 = cir.const #cir.int<100> : !s32i loc(#loc106)
          %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc106)
          %5 = cir.const #cir.int<1> : !u64i loc(#loc215)
          %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc216)
          %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc105)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc217)
          cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc218)
          cir.scope {
            %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
            %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc114)
            %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc114)
            %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc220)
            cir.if %26 {
              %27 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc116)
              %28 = cir.const #cir.int<1> : !s32i loc(#loc117)
              %29 = cir.unary(minus, %28) nsw : !s32i, !s32i loc(#loc118)
              cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc116)
            } loc(#loc221)
          } loc(#loc219)
          %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc119)
          %11 = cir.const #cir.int<65> : !s32i loc(#loc120)
          %12 = cir.const #cir.int<100> : !s32i loc(#loc121)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc122)
          %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc121)
          %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc121)
          cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc222)
          %16 = cir.const #cir.int<0> : !s32i loc(#loc125)
          %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc125)
          %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
          %19 = cir.const #cir.int<100> : !s32i loc(#loc127)
          %20 = cir.const #cir.int<1> : !s32i loc(#loc128)
          %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc127)
          %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc129)
          cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc223)
          cir.break loc(#loc130)
        } loc(#loc214)
        cir.yield loc(#loc102)
      } loc(#loc213)
    } loc(#loc213)
    cir.scope {
      %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc225)
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc226)
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc227)
      %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc138)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc138)
      %7 = cir.const #cir.int<67> : !s32i loc(#loc139)
      %8 = cir.const #cir.int<100> : !s32i loc(#loc140)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc141)
      %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc140)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc140)
      cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc228)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc144)
      %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc144)
      %14 = cir.const #cir.int<100> : !s32i loc(#loc145)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc146)
      %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc145)
      %17 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc147)
      %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc147)
      cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc229)
      %19 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc148)
      %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc149)
      %21 = cir.call @strlen(%20) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc148)
      cir.store %21, %3 : !u64i, !cir.ptr<!u64i> loc(#loc230)
      cir.scope {
        %33 = cir.const #cir.int<0> : !s32i loc(#loc154)
        %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc154)
        cir.store %34, %2 : !u64i, !cir.ptr<!u64i> loc(#loc232)
        cir.for : cond {
          %35 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc156)
          %36 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc157)
          %37 = cir.cmp(lt, %35, %36) : !u64i, !cir.bool loc(#loc233)
          cir.condition(%37) loc(#loc158)
        } body {
          cir.scope {
            %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
            %36 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc161)
            %37 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %36 : !u64i), !cir.ptr<!s8i> loc(#loc162)
            %38 = cir.load %37 : !cir.ptr<!s8i>, !s8i loc(#loc160)
            %39 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc163)
            %40 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc164)
            %41 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %39 : !u64i), !cir.ptr<!s8i> loc(#loc164)
            cir.store %38, %41 : !s8i, !cir.ptr<!s8i> loc(#loc235)
          } loc(#loc234)
          cir.yield loc(#loc153)
        } step {
          %35 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc165)
          %36 = cir.unary(inc, %35) : !u64i, !u64i loc(#loc166)
          cir.store %36, %2 : !u64i, !cir.ptr<!u64i> loc(#loc236)
          cir.yield loc(#loc231)
        } loc(#loc231)
      } loc(#loc231)
      %22 = cir.const #cir.int<0> : !s32i loc(#loc167)
      %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc167)
      %24 = cir.const #cir.int<100> : !s32i loc(#loc168)
      %25 = cir.const #cir.int<1> : !s32i loc(#loc169)
      %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc168)
      %27 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc170)
      %28 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc170)
      cir.store %23, %28 : !s8i, !cir.ptr<!s8i> loc(#loc237)
      %29 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc171)
      cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc172)
      %30 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc173)
      %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc174)
      %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc174)
      cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc173)
    } loc(#loc224)
    cir.return loc(#loc96)
  } loc(#loc210)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__malloc_char_loop_16.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":23:1)
#loc12 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":52:1)
#loc13 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":25:5)
#loc14 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":25:12)
#loc15 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":26:12)
#loc16 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":26:5)
#loc17 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":27:5)
#loc18 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":35:5)
#loc19 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":27:11)
#loc20 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":28:5)
#loc21 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":30:24)
#loc22 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":30:31)
#loc23 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":30:34)
#loc24 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":30:45)
#loc25 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":30:46)
#loc26 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":30:9)
#loc27 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":31:9)
#loc28 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":31:37)
#loc29 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":31:13)
#loc30 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":31:21)
#loc31 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":31:27)
#loc32 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":31:28)
#loc33 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":31:34)
#loc34 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":31:33)
#loc35 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":32:16)
#loc36 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":32:22)
#loc37 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":32:27)
#loc38 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":32:30)
#loc39 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":32:9)
#loc40 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":32:31)
#loc41 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":33:22)
#loc42 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":33:9)
#loc43 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":33:14)
#loc44 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":33:17)
#loc45 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":33:18)
#loc46 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":34:9)
#loc47 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":36:5)
#loc48 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":51:5)
#loc49 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":37:9)
#loc50 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":37:16)
#loc51 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":37:19)
#loc52 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":38:9)
#loc53 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":38:22)
#loc54 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":39:16)
#loc55 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":39:22)
#loc56 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":39:27)
#loc57 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":39:31)
#loc58 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":39:9)
#loc59 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":39:32)
#loc60 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":40:23)
#loc61 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":40:14)
#loc62 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":40:18)
#loc63 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":40:9)
#loc64 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":41:19)
#loc65 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":41:26)
#loc66 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":41:9)
#loc67 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":41:30)
#loc68 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":44:9)
#loc69 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":47:9)
#loc70 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":44:18)
#loc71 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":44:14)
#loc72 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":44:21)
#loc73 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":44:25)
#loc74 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":44:23)
#loc75 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":45:9)
#loc76 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":46:23)
#loc77 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":46:28)
#loc78 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":46:29)
#loc79 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":46:18)
#loc80 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":46:13)
#loc81 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":44:35)
#loc82 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":44:34)
#loc83 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":48:23)
#loc84 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":48:14)
#loc85 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":48:18)
#loc86 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":48:9)
#loc87 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":49:19)
#loc88 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":49:9)
#loc89 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":50:9)
#loc90 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":50:14)
#loc91 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":90:1)
#loc92 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":93:1)
#loc93 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":92:5)
#loc94 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":92:13)
#loc95 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":59:1)
#loc96 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":88:1)
#loc97 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":61:5)
#loc98 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":61:12)
#loc99 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":62:12)
#loc100 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":62:5)
#loc101 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":63:5)
#loc102 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":71:5)
#loc103 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":63:11)
#loc104 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":64:5)
#loc105 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":66:24)
#loc106 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":66:31)
#loc107 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":66:35)
#loc108 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":66:46)
#loc109 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":66:47)
#loc110 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":66:9)
#loc111 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":67:9)
#loc112 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":67:37)
#loc113 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":67:13)
#loc114 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":67:21)
#loc115 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":67:27)
#loc116 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":67:28)
#loc117 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":67:34)
#loc118 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":67:33)
#loc119 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":68:16)
#loc120 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":68:22)
#loc121 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":68:27)
#loc122 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":68:31)
#loc123 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":68:9)
#loc124 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":68:32)
#loc125 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":69:23)
#loc126 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":69:9)
#loc127 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":69:14)
#loc128 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":69:18)
#loc129 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":69:19)
#loc130 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":70:9)
#loc131 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":72:5)
#loc132 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":87:5)
#loc133 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":73:9)
#loc134 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":73:16)
#loc135 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":73:19)
#loc136 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":74:9)
#loc137 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":74:22)
#loc138 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":75:16)
#loc139 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":75:22)
#loc140 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":75:27)
#loc141 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":75:31)
#loc142 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":75:9)
#loc143 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":75:32)
#loc144 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":76:23)
#loc145 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":76:14)
#loc146 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":76:18)
#loc147 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":76:9)
#loc148 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":77:19)
#loc149 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":77:26)
#loc150 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":77:9)
#loc151 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":77:30)
#loc152 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":80:9)
#loc153 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":83:9)
#loc154 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":80:18)
#loc155 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":80:14)
#loc156 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":80:21)
#loc157 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":80:25)
#loc158 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":80:23)
#loc159 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":81:9)
#loc160 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":82:23)
#loc161 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":82:28)
#loc162 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":82:29)
#loc163 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":82:18)
#loc164 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":82:13)
#loc165 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":80:35)
#loc166 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":80:34)
#loc167 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":84:23)
#loc168 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":84:14)
#loc169 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":84:18)
#loc170 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":84:9)
#loc171 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":85:19)
#loc172 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":85:9)
#loc173 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":86:9)
#loc174 = loc("CWE126_Buffer_Overread__malloc_char_loop_16.c":86:14)
#loc175 = loc(fused[#loc1, #loc2])
#loc176 = loc(fused[#loc3, #loc4])
#loc177 = loc(fused[#loc5, #loc6])
#loc178 = loc(fused[#loc7, #loc8])
#loc179 = loc(fused[#loc9, #loc10])
#loc180 = loc(fused[#loc11, #loc12])
#loc181 = loc(fused[#loc13, #loc14])
#loc182 = loc(fused[#loc16, #loc15])
#loc183 = loc(fused[#loc17, #loc18])
#loc184 = loc(fused[#loc20, #loc18])
#loc185 = loc(fused[#loc23, #loc24])
#loc186 = loc(fused[#loc22, #loc24])
#loc187 = loc(fused[#loc21, #loc25])
#loc188 = loc(fused[#loc26, #loc25])
#loc189 = loc(fused[#loc27, #loc28])
#loc190 = loc(fused[#loc29, #loc30])
#loc191 = loc(fused[#loc31, #loc28])
#loc192 = loc(fused[#loc39, #loc40])
#loc193 = loc(fused[#loc42, #loc41])
#loc194 = loc(fused[#loc47, #loc48])
#loc195 = loc(fused[#loc49, #loc50])
#loc196 = loc(fused[#loc49, #loc51])
#loc197 = loc(fused[#loc52, #loc53])
#loc198 = loc(fused[#loc58, #loc59])
#loc199 = loc(fused[#loc63, #loc60])
#loc200 = loc(fused[#loc66, #loc67])
#loc201 = loc(fused[#loc68, #loc69])
#loc202 = loc(fused[#loc71, #loc70])
#loc203 = loc(fused[#loc72, #loc73])
#loc204 = loc(fused[#loc75, #loc69])
#loc205 = loc(fused[#loc80, #loc78])
#loc206 = loc(fused[#loc82, #loc81])
#loc207 = loc(fused[#loc86, #loc83])
#loc208 = loc(fused[#loc91, #loc92])
#loc209 = loc(fused[#loc93, #loc94])
#loc210 = loc(fused[#loc95, #loc96])
#loc211 = loc(fused[#loc97, #loc98])
#loc212 = loc(fused[#loc100, #loc99])
#loc213 = loc(fused[#loc101, #loc102])
#loc214 = loc(fused[#loc104, #loc102])
#loc215 = loc(fused[#loc107, #loc108])
#loc216 = loc(fused[#loc106, #loc108])
#loc217 = loc(fused[#loc105, #loc109])
#loc218 = loc(fused[#loc110, #loc109])
#loc219 = loc(fused[#loc111, #loc112])
#loc220 = loc(fused[#loc113, #loc114])
#loc221 = loc(fused[#loc115, #loc112])
#loc222 = loc(fused[#loc123, #loc124])
#loc223 = loc(fused[#loc126, #loc125])
#loc224 = loc(fused[#loc131, #loc132])
#loc225 = loc(fused[#loc133, #loc134])
#loc226 = loc(fused[#loc133, #loc135])
#loc227 = loc(fused[#loc136, #loc137])
#loc228 = loc(fused[#loc142, #loc143])
#loc229 = loc(fused[#loc147, #loc144])
#loc230 = loc(fused[#loc150, #loc151])
#loc231 = loc(fused[#loc152, #loc153])
#loc232 = loc(fused[#loc155, #loc154])
#loc233 = loc(fused[#loc156, #loc157])
#loc234 = loc(fused[#loc159, #loc153])
#loc235 = loc(fused[#loc164, #loc162])
#loc236 = loc(fused[#loc166, #loc165])
#loc237 = loc(fused[#loc170, #loc167])
