!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc114)
  cir.func private @fread(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc115)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc116)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc117)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fread failed!\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc9)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc119)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc120)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc121)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc122)
    cir.br ^bb1 loc(#loc123)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc124)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc124)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc22)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc22)
    cir.brcond %7 ^bb2, ^bb9 loc(#loc125)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc126)
  ^bb3:  // pred: ^bb2
    %8 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc119)
    cir.store %8, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc119)
    %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc15)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc120)
    cir.br ^bb4 loc(#loc127)
  ^bb4:  // pred: ^bb3
    %10 = cir.get_global @fread : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc31)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc128)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc129)
    %14 = cir.const #cir.int<100> : !s32i loc(#loc36)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc37)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc36)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc36)
    %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc116)
    %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc38)
    %20 = cir.call @fread(%12, %13, %17, %19) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc31)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc39)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc39)
    %23 = cir.cmp(eq, %20, %22) : !u64i, !cir.bool loc(#loc130)
    cir.brcond %23 ^bb5, ^bb6 loc(#loc131)
  ^bb5:  // pred: ^bb4
    %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc9)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc41)
    cir.br ^bb6 loc(#loc30)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc30)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc28)
  ^bb8:  // pred: ^bb7
    cir.br ^bb16 loc(#loc25)
  ^bb9:  // pred: ^bb1
    cir.br ^bb10 loc(#loc132)
  ^bb10:  // pred: ^bb9
    %26 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc121)
    cir.store %26, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc121)
    %27 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc19)
    cir.store %27, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc122)
    cir.br ^bb11 loc(#loc133)
  ^bb11:  // pred: ^bb10
    %28 = cir.get_global @fread : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc46)
    %29 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
    %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc134)
    %31 = cir.const #cir.int<1> : !u64i loc(#loc135)
    %32 = cir.const #cir.int<100> : !s32i loc(#loc51)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc52)
    %34 = cir.binop(sub, %32, %33) nsw : !s32i loc(#loc51)
    %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc51)
    %36 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc116)
    %37 = cir.load %36 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc53)
    %38 = cir.call @fread(%30, %31, %35, %37) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc46)
    %39 = cir.const #cir.int<100> : !s32i loc(#loc54)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc55)
    %41 = cir.binop(sub, %39, %40) nsw : !s32i loc(#loc54)
    %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc54)
    %43 = cir.cmp(ne, %38, %42) : !u64i, !cir.bool loc(#loc136)
    cir.brcond %43 ^bb12, ^bb13 loc(#loc137)
  ^bb12:  // pred: ^bb11
    %44 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc57)
    %45 = cir.cast(array_to_ptrdecay, %44 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%45) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    cir.br ^bb13 loc(#loc45)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc45)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc43)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc21)
  ^bb16:  // 2 preds: ^bb8, ^bb15
    cir.br ^bb17 loc(#loc21)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc11)
  } loc(#loc118)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc139)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc61)
    cir.return loc(#loc60)
  } loc(#loc138)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc141)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc142)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc143)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc144)
    cir.br ^bb1 loc(#loc145)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc146)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc146)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc75)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc75)
    cir.brcond %7 ^bb2, ^bb9 loc(#loc147)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc148)
  ^bb3:  // pred: ^bb2
    %8 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc141)
    cir.store %8, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc141)
    %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc68)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc142)
    cir.br ^bb4 loc(#loc149)
  ^bb4:  // pred: ^bb3
    %10 = cir.get_global @fread : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc84)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc150)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc151)
    %14 = cir.const #cir.int<100> : !s32i loc(#loc89)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc90)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc89)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc89)
    %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc116)
    %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc91)
    %20 = cir.call @fread(%12, %13, %17, %19) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc84)
    %21 = cir.const #cir.int<100> : !s32i loc(#loc92)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc93)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc92)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc92)
    %25 = cir.cmp(ne, %20, %24) : !u64i, !cir.bool loc(#loc152)
    cir.brcond %25 ^bb5, ^bb6 loc(#loc153)
  ^bb5:  // pred: ^bb4
    %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc95)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc95)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    cir.br ^bb6 loc(#loc83)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc83)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc81)
  ^bb8:  // pred: ^bb7
    cir.br ^bb16 loc(#loc78)
  ^bb9:  // pred: ^bb1
    cir.br ^bb10 loc(#loc154)
  ^bb10:  // pred: ^bb9
    %28 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc143)
    cir.store %28, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc143)
    %29 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc72)
    cir.store %29, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc144)
    cir.br ^bb11 loc(#loc155)
  ^bb11:  // pred: ^bb10
    %30 = cir.get_global @fread : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc101)
    %31 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc156)
    %33 = cir.const #cir.int<1> : !u64i loc(#loc157)
    %34 = cir.const #cir.int<100> : !s32i loc(#loc106)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc107)
    %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc106)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc106)
    %38 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc116)
    %39 = cir.load %38 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc108)
    %40 = cir.call @fread(%32, %33, %37, %39) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc101)
    %41 = cir.const #cir.int<100> : !s32i loc(#loc109)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc110)
    %43 = cir.binop(sub, %41, %42) nsw : !s32i loc(#loc109)
    %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc109)
    %45 = cir.cmp(ne, %40, %44) : !u64i, !cir.bool loc(#loc158)
    cir.brcond %45 ^bb12, ^bb13 loc(#loc159)
  ^bb12:  // pred: ^bb11
    %46 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc112)
    %47 = cir.cast(array_to_ptrdecay, %46 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc112)
    cir.call @printLine(%47) : (!cir.ptr<!s8i>) -> () loc(#loc113)
    cir.br ^bb13 loc(#loc100)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc100)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc98)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc74)
  ^bb16:  // 2 preds: ^bb8, ^bb15
    cir.br ^bb17 loc(#loc74)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc64)
  } loc(#loc140)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":728:1)
#loc4 = loc("/usr/include/stdio.h":730:3)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":37:27)
#loc10 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":24:1)
#loc11 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":55:1)
#loc12 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":31:13)
#loc13 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":31:36)
#loc14 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":32:13)
#loc15 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":32:27)
#loc16 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":46:13)
#loc17 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":46:36)
#loc18 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":47:13)
#loc19 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":47:27)
#loc20 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":26:5)
#loc21 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":54:5)
#loc22 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":26:8)
#loc23 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":26:33)
#loc24 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":27:5)
#loc25 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":40:5)
#loc26 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":42:5)
#loc27 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":28:9)
#loc28 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":39:9)
#loc29 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":35:13)
#loc30 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":38:13)
#loc31 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":35:17)
#loc32 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":35:31)
#loc33 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":35:23)
#loc34 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":35:37)
#loc35 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":35:48)
#loc36 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":35:60)
#loc37 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":35:64)
#loc38 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":35:68)
#loc39 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":35:78)
#loc40 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":36:13)
#loc41 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":37:17)
#loc42 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":43:9)
#loc43 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":53:9)
#loc44 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":49:13)
#loc45 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":52:13)
#loc46 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":49:17)
#loc47 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":49:31)
#loc48 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":49:23)
#loc49 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":49:37)
#loc50 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":49:48)
#loc51 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":49:60)
#loc52 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":49:64)
#loc53 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":49:68)
#loc54 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":49:78)
#loc55 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":49:82)
#loc56 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":50:13)
#loc57 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":51:27)
#loc58 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":51:17)
#loc59 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":94:1)
#loc60 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":97:1)
#loc61 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":96:5)
#loc62 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":96:11)
#loc63 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":62:1)
#loc64 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":92:1)
#loc65 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":69:13)
#loc66 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":69:36)
#loc67 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":70:13)
#loc68 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":70:27)
#loc69 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":83:13)
#loc70 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":83:36)
#loc71 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":84:13)
#loc72 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":84:27)
#loc73 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":64:5)
#loc74 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":91:5)
#loc75 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":64:8)
#loc76 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":64:33)
#loc77 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":65:5)
#loc78 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":77:5)
#loc79 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":79:5)
#loc80 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":66:9)
#loc81 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":76:9)
#loc82 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":72:13)
#loc83 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":75:13)
#loc84 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":72:17)
#loc85 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":72:31)
#loc86 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":72:23)
#loc87 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":72:37)
#loc88 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":72:48)
#loc89 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":72:60)
#loc90 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":72:64)
#loc91 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":72:68)
#loc92 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":72:78)
#loc93 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":72:82)
#loc94 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":73:13)
#loc95 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":74:27)
#loc96 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":74:17)
#loc97 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":80:9)
#loc98 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":90:9)
#loc99 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":86:13)
#loc100 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":89:13)
#loc101 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":86:17)
#loc102 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":86:31)
#loc103 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":86:23)
#loc104 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":86:37)
#loc105 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":86:48)
#loc106 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":86:60)
#loc107 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":86:64)
#loc108 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":86:68)
#loc109 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":86:78)
#loc110 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":86:82)
#loc111 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":87:13)
#loc112 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":88:27)
#loc113 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":88:17)
#loc114 = loc(fused[#loc1, #loc2])
#loc115 = loc(fused[#loc3, #loc4])
#loc116 = loc(fused[#loc5, #loc6])
#loc117 = loc(fused[#loc7, #loc8])
#loc118 = loc(fused[#loc10, #loc11])
#loc119 = loc(fused[#loc12, #loc13])
#loc120 = loc(fused[#loc14, #loc15])
#loc121 = loc(fused[#loc16, #loc17])
#loc122 = loc(fused[#loc18, #loc19])
#loc123 = loc(fused[#loc20, #loc21])
#loc124 = loc(fused[#loc22, #loc23])
#loc125 = loc(fused[#loc24, #loc25, #loc26, #loc21])
#loc126 = loc(fused[#loc27, #loc28])
#loc127 = loc(fused[#loc29, #loc30])
#loc128 = loc(fused[#loc33, #loc32])
#loc129 = loc(fused[#loc34, #loc35])
#loc130 = loc(fused[#loc31, #loc39])
#loc131 = loc(fused[#loc40, #loc30])
#loc132 = loc(fused[#loc42, #loc43])
#loc133 = loc(fused[#loc44, #loc45])
#loc134 = loc(fused[#loc48, #loc47])
#loc135 = loc(fused[#loc49, #loc50])
#loc136 = loc(fused[#loc46, #loc55])
#loc137 = loc(fused[#loc56, #loc45])
#loc138 = loc(fused[#loc59, #loc60])
#loc139 = loc(fused[#loc61, #loc62])
#loc140 = loc(fused[#loc63, #loc64])
#loc141 = loc(fused[#loc65, #loc66])
#loc142 = loc(fused[#loc67, #loc68])
#loc143 = loc(fused[#loc69, #loc70])
#loc144 = loc(fused[#loc71, #loc72])
#loc145 = loc(fused[#loc73, #loc74])
#loc146 = loc(fused[#loc75, #loc76])
#loc147 = loc(fused[#loc77, #loc78, #loc79, #loc74])
#loc148 = loc(fused[#loc80, #loc81])
#loc149 = loc(fused[#loc82, #loc83])
#loc150 = loc(fused[#loc86, #loc85])
#loc151 = loc(fused[#loc87, #loc88])
#loc152 = loc(fused[#loc84, #loc93])
#loc153 = loc(fused[#loc94, #loc83])
#loc154 = loc(fused[#loc97, #loc98])
#loc155 = loc(fused[#loc99, #loc100])
#loc156 = loc(fused[#loc103, #loc102])
#loc157 = loc(fused[#loc104, #loc105])
#loc158 = loc(fused[#loc101, #loc110])
#loc159 = loc(fused[#loc111, #loc100])
