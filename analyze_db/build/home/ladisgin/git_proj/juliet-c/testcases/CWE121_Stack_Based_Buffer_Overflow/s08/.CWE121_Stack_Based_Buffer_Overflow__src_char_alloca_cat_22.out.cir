!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":103:10)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":103:14)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":103:20)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":103:32)
#loc140 = loc(fused[#loc52, #loc53])
#loc141 = loc(fused[#loc54, #loc55])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global external dsolocal @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22_badGlobal = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc120)
  cir.func private @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22_badSource(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc121)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc122)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc123)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc125)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc126)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc127)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc16)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc16)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc16)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc16)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc16)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc16)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc16)
    cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc127)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc17)
    cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc128)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %12 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22_badGlobal : !cir.ptr<!s32i> loc(#loc120)
    cir.store %11, %12 : !s32i, !cir.ptr<!s32i> loc(#loc129)
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
    %14 = cir.call @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22_badSource(%13) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc22)
    cir.store %14, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc130)
    cir.br ^bb1 loc(#loc131)
  ^bb1:  // pred: ^bb0
    %15 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc125)
    cir.store %15, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc125)
    %16 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc27)
    %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc28)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
    %19 = cir.call @strcat(%17, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc27)
    %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc31)
    cir.br ^bb2 loc(#loc26)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc10)
  } loc(#loc124)
  cir.global external dsolocal @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22_goodG2B1Global = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc132)
  cir.global external dsolocal @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22_goodG2B2Global = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc133)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc135)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc136)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    cir.return loc(#loc37)
  } loc(#loc134)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc137)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc138)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc46)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc47)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc48)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc49)
  cir.func @main(%arg0: !s32i loc(fused[#loc52, #loc53]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc54, #loc55])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc140)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc141)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc51)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc56)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc56)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc57)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc58)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc58)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc59)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc46)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22_good : !cir.ptr<!cir.func<!void ()>> loc(#loc142)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22_good() : () -> () loc(#loc61)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc47)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc48)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc143)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22_bad() : () -> () loc(#loc65)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc49)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc68)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc144)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc144)
    cir.return %17 : !s32i loc(#loc144)
  } loc(#loc139)
  cir.func private @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22_goodG2B1Source(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc145)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc147)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc148)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc149)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc79)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc79)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc79)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc79)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc79)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc79)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc79)
    cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc149)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
    cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc150)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc82)
    %12 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22_goodG2B1Global : !cir.ptr<!s32i> loc(#loc132)
    cir.store %11, %12 : !s32i, !cir.ptr<!s32i> loc(#loc151)
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
    %14 = cir.call @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22_goodG2B1Source(%13) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc85)
    cir.store %14, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc152)
    cir.br ^bb1 loc(#loc153)
  ^bb1:  // pred: ^bb0
    %15 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc147)
    cir.store %15, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc147)
    %16 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc90)
    %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc91)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
    %19 = cir.call @strcat(%17, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc90)
    %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    cir.br ^bb2 loc(#loc89)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc73)
  } loc(#loc146)
  cir.func private @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22_goodG2B2Source(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc154)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc156)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc157)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc158)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc104)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc104)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc104)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc104)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc104)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc104)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc104)
    cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc158)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
    cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc159)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc107)
    %12 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22_goodG2B2Global : !cir.ptr<!s32i> loc(#loc133)
    cir.store %11, %12 : !s32i, !cir.ptr<!s32i> loc(#loc160)
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
    %14 = cir.call @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22_goodG2B2Source(%13) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc110)
    cir.store %14, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc161)
    cir.br ^bb1 loc(#loc162)
  ^bb1:  // pred: ^bb0
    %15 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc156)
    cir.store %15, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc156)
    %16 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc115)
    %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc116)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
    %19 = cir.call @strcat(%17, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc115)
    %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc119)
    cir.br ^bb2 loc(#loc114)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc98)
  } loc(#loc155)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":24:1)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":24:76)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":26:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":26:88)
#loc5 = loc("/usr/include/string.h":149:1)
#loc6 = loc("/usr/include/string.h":150:14)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":28:1)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":41:1)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":36:9)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":36:25)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":30:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":30:12)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":31:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":31:33)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":32:12)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":32:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":33:76)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":33:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":34:81)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":34:12)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":34:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":34:85)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":35:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":40:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":38:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":38:16)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":38:22)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":39:19)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":39:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":48:1)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":48:81)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":49:1)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":49:81)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":87:1)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":91:1)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":89:5)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":89:14)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":90:5)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":90:14)
#loc42 = loc("/usr/include/stdlib.h":575:1)
#loc43 = loc("/usr/include/stdlib.h":575:41)
#loc44 = loc("/usr/include/time.h":76:1)
#loc45 = loc("/usr/include/time.h":76:38)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":108:15)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":110:15)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":113:15)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":115:15)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":103:1)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":118:1)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":104:1)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":106:27)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":106:22)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":106:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":108:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":109:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":109:69)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":110:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":113:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":114:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":114:68)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":115:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":117:12)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":117:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":52:1)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":52:93)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":54:1)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":67:1)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":62:9)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":62:25)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":56:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":56:12)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":57:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":57:33)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":58:12)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":58:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":59:81)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":59:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":60:86)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":60:12)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":60:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":60:90)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":61:5)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":66:5)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":64:9)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":64:16)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":64:22)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":65:19)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":65:9)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":70:1)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":70:93)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":72:1)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":85:1)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":80:9)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":80:25)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":74:5)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":74:12)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":75:5)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":75:33)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":76:12)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":76:5)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":77:81)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":77:5)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":78:86)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":78:12)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":78:5)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":78:90)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":79:5)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":84:5)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":82:9)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":82:16)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":82:22)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":83:19)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_22a.c":83:9)
#loc120 = loc(fused[#loc1, #loc2])
#loc121 = loc(fused[#loc3, #loc4])
#loc122 = loc(fused[#loc5, #loc6])
#loc123 = loc(fused[#loc7, #loc8])
#loc124 = loc(fused[#loc9, #loc10])
#loc125 = loc(fused[#loc11, #loc12])
#loc126 = loc(fused[#loc13, #loc14])
#loc127 = loc(fused[#loc15, #loc16])
#loc128 = loc(fused[#loc18, #loc17])
#loc129 = loc(fused[#loc20, #loc19])
#loc130 = loc(fused[#loc23, #loc24])
#loc131 = loc(fused[#loc25, #loc26])
#loc132 = loc(fused[#loc32, #loc33])
#loc133 = loc(fused[#loc34, #loc35])
#loc134 = loc(fused[#loc36, #loc37])
#loc135 = loc(fused[#loc38, #loc39])
#loc136 = loc(fused[#loc40, #loc41])
#loc137 = loc(fused[#loc42, #loc43])
#loc138 = loc(fused[#loc44, #loc45])
#loc139 = loc(fused[#loc50, #loc51])
#loc142 = loc(fused[#loc61, #loc62])
#loc143 = loc(fused[#loc65, #loc66])
#loc144 = loc(fused[#loc69, #loc68])
#loc145 = loc(fused[#loc70, #loc71])
#loc146 = loc(fused[#loc72, #loc73])
#loc147 = loc(fused[#loc74, #loc75])
#loc148 = loc(fused[#loc76, #loc77])
#loc149 = loc(fused[#loc78, #loc79])
#loc150 = loc(fused[#loc81, #loc80])
#loc151 = loc(fused[#loc83, #loc82])
#loc152 = loc(fused[#loc86, #loc87])
#loc153 = loc(fused[#loc88, #loc89])
#loc154 = loc(fused[#loc95, #loc96])
#loc155 = loc(fused[#loc97, #loc98])
#loc156 = loc(fused[#loc99, #loc100])
#loc157 = loc(fused[#loc101, #loc102])
#loc158 = loc(fused[#loc103, #loc104])
#loc159 = loc(fused[#loc106, #loc105])
#loc160 = loc(fused[#loc108, #loc107])
#loc161 = loc(fused[#loc111, #loc112])
#loc162 = loc(fused[#loc113, #loc114])
