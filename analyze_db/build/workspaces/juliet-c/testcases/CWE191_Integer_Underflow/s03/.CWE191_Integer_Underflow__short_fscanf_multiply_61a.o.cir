!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_fscanf_multiply_61a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @CWE191_Integer_Underflow__short_fscanf_multiply_61b_badSource(!s16i) -> !s16i loc(#loc88)
  cir.func private @printIntLine(!s32i) loc(#loc89)
  cir.func no_proto @CWE191_Integer_Underflow__short_fscanf_multiply_61_bad() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc91)
    %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc92)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc11)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc11)
    cir.store %3, %1 : !s16i, !cir.ptr<!s16i> loc(#loc93)
    %4 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc13)
    %5 = cir.call @CWE191_Integer_Underflow__short_fscanf_multiply_61b_badSource(%4) : (!s16i) -> !s16i loc(#loc14)
    cir.store %5, %1 : !s16i, !cir.ptr<!s16i> loc(#loc94)
    cir.br ^bb1 loc(#loc95)
  ^bb1:  // pred: ^bb0
    %6 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc19)
    %7 = cir.cast(integral, %6 : !s16i), !s32i loc(#loc19)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc20)
    %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc96)
    cir.brcond %9 ^bb2, ^bb3 loc(#loc97)
  ^bb2:  // pred: ^bb1
    %10 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc22)
    %11 = cir.cast(integral, %10 : !s16i), !s32i loc(#loc22)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc8)
    %13 = cir.binop(mul, %11, %12) nsw : !s32i loc(#loc22)
    %14 = cir.cast(integral, %13 : !s32i), !s16i loc(#loc22)
    cir.store %14, %0 : !s16i, !cir.ptr<!s16i> loc(#loc91)
    %15 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc23)
    %16 = cir.cast(integral, %15 : !s16i), !s32i loc(#loc23)
    cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc24)
    cir.br ^bb3 loc(#loc18)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc18)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc6)
  } loc(#loc90)
  cir.func no_proto @CWE191_Integer_Underflow__short_fscanf_multiply_61_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc99)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc27)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc100)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc29)
    cir.return loc(#loc26)
  } loc(#loc98)
  cir.func private @CWE191_Integer_Underflow__short_fscanf_multiply_61b_goodG2BSource(!s16i) -> !s16i loc(#loc101)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc103)
    %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc104)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc39)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc39)
    cir.store %3, %1 : !s16i, !cir.ptr<!s16i> loc(#loc105)
    %4 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc41)
    %5 = cir.call @CWE191_Integer_Underflow__short_fscanf_multiply_61b_goodG2BSource(%4) : (!s16i) -> !s16i loc(#loc42)
    cir.store %5, %1 : !s16i, !cir.ptr<!s16i> loc(#loc106)
    cir.br ^bb1 loc(#loc107)
  ^bb1:  // pred: ^bb0
    %6 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc47)
    %7 = cir.cast(integral, %6 : !s16i), !s32i loc(#loc47)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc48)
    %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc108)
    cir.brcond %9 ^bb2, ^bb3 loc(#loc109)
  ^bb2:  // pred: ^bb1
    %10 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc50)
    %11 = cir.cast(integral, %10 : !s16i), !s32i loc(#loc50)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc36)
    %13 = cir.binop(mul, %11, %12) nsw : !s32i loc(#loc50)
    %14 = cir.cast(integral, %13 : !s32i), !s16i loc(#loc50)
    cir.store %14, %0 : !s16i, !cir.ptr<!s16i> loc(#loc103)
    %15 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc51)
    %16 = cir.cast(integral, %15 : !s16i), !s32i loc(#loc51)
    cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc52)
    cir.br ^bb3 loc(#loc46)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc46)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc34)
  } loc(#loc102)
  cir.func private @CWE191_Integer_Underflow__short_fscanf_multiply_61b_goodB2GSource(!s16i) -> !s16i loc(#loc110)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc111)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc57)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc113)
    %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc114)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc64)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc64)
    cir.store %3, %1 : !s16i, !cir.ptr<!s16i> loc(#loc115)
    %4 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc66)
    %5 = cir.call @CWE191_Integer_Underflow__short_fscanf_multiply_61b_goodB2GSource(%4) : (!s16i) -> !s16i loc(#loc67)
    cir.store %5, %1 : !s16i, !cir.ptr<!s16i> loc(#loc116)
    cir.br ^bb1 loc(#loc117)
  ^bb1:  // pred: ^bb0
    %6 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc72)
    %7 = cir.cast(integral, %6 : !s16i), !s32i loc(#loc72)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc73)
    %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc118)
    cir.brcond %9 ^bb2, ^bb8 loc(#loc119)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc120)
  ^bb3:  // pred: ^bb2
    %10 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc77)
    %11 = cir.cast(integral, %10 : !s16i), !s32i loc(#loc77)
    %12 = cir.const #cir.int<32767> : !s32i loc(#loc78)
    %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc78)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc78)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc78)
    %16 = cir.const #cir.int<2> : !s32i loc(#loc79)
    %17 = cir.binop(div, %15, %16) : !s32i loc(#loc121)
    %18 = cir.cmp(gt, %11, %17) : !s32i, !cir.bool loc(#loc122)
    cir.brcond %18 ^bb4, ^bb5 loc(#loc123)
  ^bb4:  // pred: ^bb3
    %19 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc84)
    %20 = cir.cast(integral, %19 : !s16i), !s32i loc(#loc84)
    %21 = cir.const #cir.int<2> : !s32i loc(#loc61)
    %22 = cir.binop(mul, %20, %21) nsw : !s32i loc(#loc84)
    %23 = cir.cast(integral, %22 : !s32i), !s16i loc(#loc84)
    cir.store %23, %0 : !s16i, !cir.ptr<!s16i> loc(#loc113)
    %24 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc85)
    %25 = cir.cast(integral, %24 : !s16i), !s32i loc(#loc85)
    cir.call @printIntLine(%25) : (!s32i) -> () loc(#loc86)
    cir.br ^bb6 loc(#loc82)
  ^bb5:  // pred: ^bb3
    %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc57)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    cir.br ^bb6 loc(#loc76)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc76)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc71)
  ^bb8:  // 2 preds: ^bb1, ^bb7
    cir.br ^bb9 loc(#loc71)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc59)
  } loc(#loc112)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":0:0)
#loc1 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":23:1)
#loc2 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":23:79)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":25:1)
#loc6 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":36:1)
#loc7 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":33:9)
#loc8 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":33:31)
#loc9 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":27:5)
#loc10 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":27:11)
#loc11 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":28:12)
#loc12 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":28:5)
#loc13 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":29:74)
#loc14 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":29:12)
#loc15 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":29:5)
#loc16 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":29:78)
#loc17 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":30:5)
#loc18 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":35:5)
#loc19 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":30:8)
#loc20 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":30:15)
#loc21 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":31:5)
#loc22 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":33:24)
#loc23 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":34:22)
#loc24 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":34:9)
#loc25 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":81:1)
#loc26 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":85:1)
#loc27 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":83:5)
#loc28 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":83:13)
#loc29 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":84:5)
#loc30 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":84:13)
#loc31 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":43:1)
#loc32 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":43:83)
#loc33 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":45:1)
#loc34 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":56:1)
#loc35 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":53:9)
#loc36 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":53:31)
#loc37 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":47:5)
#loc38 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":47:11)
#loc39 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":48:12)
#loc40 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":48:5)
#loc41 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":49:78)
#loc42 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":49:12)
#loc43 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":49:5)
#loc44 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":49:82)
#loc45 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":50:5)
#loc46 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":55:5)
#loc47 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":50:8)
#loc48 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":50:15)
#loc49 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":51:5)
#loc50 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":53:24)
#loc51 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":54:22)
#loc52 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":54:9)
#loc53 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":59:1)
#loc54 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":59:83)
#loc55 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc56 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc57 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":76:23)
#loc58 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":61:1)
#loc59 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":79:1)
#loc60 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":71:13)
#loc61 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":71:35)
#loc62 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":63:5)
#loc63 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":63:11)
#loc64 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":64:12)
#loc65 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":64:5)
#loc66 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":65:78)
#loc67 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":65:12)
#loc68 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":65:5)
#loc69 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":65:82)
#loc70 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":66:5)
#loc71 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":78:5)
#loc72 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":66:8)
#loc73 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":66:15)
#loc74 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":67:5)
#loc75 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":69:9)
#loc76 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":77:9)
#loc77 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":69:13)
#loc78 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":69:21)
#loc79 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":69:30)
#loc80 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":69:31)
#loc81 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":70:9)
#loc82 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":73:9)
#loc83 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":75:9)
#loc84 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":71:28)
#loc85 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":72:26)
#loc86 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":72:13)
#loc87 = loc("CWE191_Integer_Underflow__short_fscanf_multiply_61a.c":76:13)
#loc88 = loc(fused[#loc1, #loc2])
#loc89 = loc(fused[#loc3, #loc4])
#loc90 = loc(fused[#loc5, #loc6])
#loc91 = loc(fused[#loc7, #loc8])
#loc92 = loc(fused[#loc9, #loc10])
#loc93 = loc(fused[#loc12, #loc11])
#loc94 = loc(fused[#loc15, #loc16])
#loc95 = loc(fused[#loc17, #loc18])
#loc96 = loc(fused[#loc19, #loc20])
#loc97 = loc(fused[#loc21, #loc18])
#loc98 = loc(fused[#loc25, #loc26])
#loc99 = loc(fused[#loc27, #loc28])
#loc100 = loc(fused[#loc29, #loc30])
#loc101 = loc(fused[#loc31, #loc32])
#loc102 = loc(fused[#loc33, #loc34])
#loc103 = loc(fused[#loc35, #loc36])
#loc104 = loc(fused[#loc37, #loc38])
#loc105 = loc(fused[#loc40, #loc39])
#loc106 = loc(fused[#loc43, #loc44])
#loc107 = loc(fused[#loc45, #loc46])
#loc108 = loc(fused[#loc47, #loc48])
#loc109 = loc(fused[#loc49, #loc46])
#loc110 = loc(fused[#loc53, #loc54])
#loc111 = loc(fused[#loc55, #loc56])
#loc112 = loc(fused[#loc58, #loc59])
#loc113 = loc(fused[#loc60, #loc61])
#loc114 = loc(fused[#loc62, #loc63])
#loc115 = loc(fused[#loc65, #loc64])
#loc116 = loc(fused[#loc68, #loc69])
#loc117 = loc(fused[#loc70, #loc71])
#loc118 = loc(fused[#loc72, #loc73])
#loc119 = loc(fused[#loc74, #loc71])
#loc120 = loc(fused[#loc75, #loc76])
#loc121 = loc(fused[#loc78, #loc79])
#loc122 = loc(fused[#loc77, #loc80])
#loc123 = loc(fused[#loc81, #loc82, #loc83, #loc76])
