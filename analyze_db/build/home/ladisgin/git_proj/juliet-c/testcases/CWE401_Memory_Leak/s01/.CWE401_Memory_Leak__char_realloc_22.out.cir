!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc5 = loc("CWE401_Memory_Leak__char_realloc_22b.c":27:50)
#loc6 = loc("CWE401_Memory_Leak__char_realloc_22b.c":27:57)
#loc21 = loc("CWE401_Memory_Leak__char_realloc_22b.c":46:55)
#loc22 = loc("CWE401_Memory_Leak__char_realloc_22b.c":46:62)
#loc37 = loc("CWE401_Memory_Leak__char_realloc_22b.c":61:55)
#loc38 = loc("CWE401_Memory_Leak__char_realloc_22b.c":61:62)
#loc50 = loc("CWE401_Memory_Leak__char_realloc_22b.c":71:54)
#loc51 = loc("CWE401_Memory_Leak__char_realloc_22b.c":71:61)
#loc59 = loc(fused[#loc5, #loc6])
#loc66 = loc(fused[#loc21, #loc22])
#loc71 = loc(fused[#loc37, #loc38])
#loc76 = loc(fused[#loc50, #loc51])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_22b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" external @CWE401_Memory_Leak__char_realloc_22_badGlobal : !s32i {alignment = 4 : i64} loc(#loc57)
  cir.func @CWE401_Memory_Leak__char_realloc_22_badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc59)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc7)
    cir.br ^bb1 loc(#loc60)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @CWE401_Memory_Leak__char_realloc_22_badGlobal : !cir.ptr<!s32i> loc(#loc57)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc10)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc10)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc61)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc9)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc9)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc4)
  } loc(#loc58)
  cir.global "private" external @CWE401_Memory_Leak__char_realloc_22_goodB2G1Global : !s32i {alignment = 4 : i64} loc(#loc62)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc63)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc16)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc64)
  cir.func @CWE401_Memory_Leak__char_realloc_22_goodB2G1Sink(%arg0: !cir.ptr<!s8i> loc(fused[#loc21, #loc22])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc66)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc23)
    cir.br ^bb1 loc(#loc67)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @CWE401_Memory_Leak__char_realloc_22_goodB2G1Global : !cir.ptr<!s32i> loc(#loc62)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc26)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc26)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc68)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc16)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc16)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc30)
    cir.br ^bb4 loc(#loc28)
  ^bb3:  // pred: ^bb1
    %6 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc31)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc32)
    cir.call @free(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc31)
    cir.br ^bb4 loc(#loc25)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc25)
  ^bb5:  // pred: ^bb4
    cir.return loc(#loc20)
  } loc(#loc65)
  cir.global "private" external @CWE401_Memory_Leak__char_realloc_22_goodB2G2Global : !s32i {alignment = 4 : i64} loc(#loc69)
  cir.func @CWE401_Memory_Leak__char_realloc_22_goodB2G2Sink(%arg0: !cir.ptr<!s8i> loc(fused[#loc37, #loc38])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc71)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc39)
    cir.br ^bb1 loc(#loc72)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @CWE401_Memory_Leak__char_realloc_22_goodB2G2Global : !cir.ptr<!s32i> loc(#loc69)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc42)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc42)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc73)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc44)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc45)
    cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc44)
    cir.br ^bb3 loc(#loc41)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc41)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc36)
  } loc(#loc70)
  cir.global "private" external @CWE401_Memory_Leak__char_realloc_22_goodG2BGlobal : !s32i {alignment = 4 : i64} loc(#loc74)
  cir.func @CWE401_Memory_Leak__char_realloc_22_goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc50, #loc51])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc76)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc52)
    cir.br ^bb1 loc(#loc77)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @CWE401_Memory_Leak__char_realloc_22_goodG2BGlobal : !cir.ptr<!s32i> loc(#loc74)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc55)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc55)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc78)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc54)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc54)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc49)
  } loc(#loc75)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_22b.c":0:0)
#loc1 = loc("CWE401_Memory_Leak__char_realloc_22b.c":25:1)
#loc2 = loc("CWE401_Memory_Leak__char_realloc_22b.c":25:12)
#loc3 = loc("CWE401_Memory_Leak__char_realloc_22b.c":27:1)
#loc4 = loc("CWE401_Memory_Leak__char_realloc_22b.c":34:1)
#loc7 = loc("CWE401_Memory_Leak__char_realloc_22b.c":28:1)
#loc8 = loc("CWE401_Memory_Leak__char_realloc_22b.c":29:5)
#loc9 = loc("CWE401_Memory_Leak__char_realloc_22b.c":33:5)
#loc10 = loc("CWE401_Memory_Leak__char_realloc_22b.c":29:8)
#loc11 = loc("CWE401_Memory_Leak__char_realloc_22b.c":30:5)
#loc12 = loc("CWE401_Memory_Leak__char_realloc_22b.c":41:1)
#loc13 = loc("CWE401_Memory_Leak__char_realloc_22b.c":41:12)
#loc14 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc16 = loc("CWE401_Memory_Leak__char_realloc_22b.c":51:19)
#loc17 = loc("/usr/include/stdlib.h":687:1)
#loc18 = loc("/usr/include/stdlib.h":687:32)
#loc19 = loc("CWE401_Memory_Leak__char_realloc_22b.c":46:1)
#loc20 = loc("CWE401_Memory_Leak__char_realloc_22b.c":58:1)
#loc23 = loc("CWE401_Memory_Leak__char_realloc_22b.c":47:1)
#loc24 = loc("CWE401_Memory_Leak__char_realloc_22b.c":48:5)
#loc25 = loc("CWE401_Memory_Leak__char_realloc_22b.c":57:5)
#loc26 = loc("CWE401_Memory_Leak__char_realloc_22b.c":48:8)
#loc27 = loc("CWE401_Memory_Leak__char_realloc_22b.c":49:5)
#loc28 = loc("CWE401_Memory_Leak__char_realloc_22b.c":52:5)
#loc29 = loc("CWE401_Memory_Leak__char_realloc_22b.c":54:5)
#loc30 = loc("CWE401_Memory_Leak__char_realloc_22b.c":51:9)
#loc31 = loc("CWE401_Memory_Leak__char_realloc_22b.c":56:9)
#loc32 = loc("CWE401_Memory_Leak__char_realloc_22b.c":56:14)
#loc33 = loc("CWE401_Memory_Leak__char_realloc_22b.c":42:1)
#loc34 = loc("CWE401_Memory_Leak__char_realloc_22b.c":42:12)
#loc35 = loc("CWE401_Memory_Leak__char_realloc_22b.c":61:1)
#loc36 = loc("CWE401_Memory_Leak__char_realloc_22b.c":68:1)
#loc39 = loc("CWE401_Memory_Leak__char_realloc_22b.c":62:1)
#loc40 = loc("CWE401_Memory_Leak__char_realloc_22b.c":63:5)
#loc41 = loc("CWE401_Memory_Leak__char_realloc_22b.c":67:5)
#loc42 = loc("CWE401_Memory_Leak__char_realloc_22b.c":63:8)
#loc43 = loc("CWE401_Memory_Leak__char_realloc_22b.c":64:5)
#loc44 = loc("CWE401_Memory_Leak__char_realloc_22b.c":66:9)
#loc45 = loc("CWE401_Memory_Leak__char_realloc_22b.c":66:14)
#loc46 = loc("CWE401_Memory_Leak__char_realloc_22b.c":43:1)
#loc47 = loc("CWE401_Memory_Leak__char_realloc_22b.c":43:12)
#loc48 = loc("CWE401_Memory_Leak__char_realloc_22b.c":71:1)
#loc49 = loc("CWE401_Memory_Leak__char_realloc_22b.c":78:1)
#loc52 = loc("CWE401_Memory_Leak__char_realloc_22b.c":72:1)
#loc53 = loc("CWE401_Memory_Leak__char_realloc_22b.c":73:5)
#loc54 = loc("CWE401_Memory_Leak__char_realloc_22b.c":77:5)
#loc55 = loc("CWE401_Memory_Leak__char_realloc_22b.c":73:8)
#loc56 = loc("CWE401_Memory_Leak__char_realloc_22b.c":74:5)
#loc57 = loc(fused[#loc1, #loc2])
#loc58 = loc(fused[#loc3, #loc4])
#loc60 = loc(fused[#loc8, #loc9])
#loc61 = loc(fused[#loc11, #loc9])
#loc62 = loc(fused[#loc12, #loc13])
#loc63 = loc(fused[#loc14, #loc15])
#loc64 = loc(fused[#loc17, #loc18])
#loc65 = loc(fused[#loc19, #loc20])
#loc67 = loc(fused[#loc24, #loc25])
#loc68 = loc(fused[#loc27, #loc28, #loc29, #loc25])
#loc69 = loc(fused[#loc33, #loc34])
#loc70 = loc(fused[#loc35, #loc36])
#loc72 = loc(fused[#loc40, #loc41])
#loc73 = loc(fused[#loc43, #loc41])
#loc74 = loc(fused[#loc46, #loc47])
#loc75 = loc(fused[#loc48, #loc49])
#loc77 = loc(fused[#loc53, #loc54])
#loc78 = loc(fused[#loc56, #loc54])
