!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE242_Use_of_Inherently_Dangerous_Function/CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @gets(...) -> !s32i loc(#loc)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc93)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Error Condition: alter control flow to indicate action taken\00" : !cir.array<!s8i x 61>> : !cir.array<!s8i x 61> {alignment = 1 : i64} loc(#loc3)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc94)
  cir.func no_proto @CWE242_Use_of_Inherently_Dangerous_Function__basic_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc96)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc12)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc98)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc14)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc15)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc99)
        cir.condition(%4) loc(#loc16)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dest"] {alignment = 1 : i64} loc(#loc102)
            %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["result"] {alignment = 8 : i64} loc(#loc103)
            %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc24)
            %5 = cir.get_global @gets : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc104)
            %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !s32i>> loc(#loc104)
            %7 = cir.call %6(%4) : (!cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !s32i>>, !cir.ptr<!s8i>) -> !s32i loc(#loc25)
            %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc25)
            %9 = cir.cast(int_to_ptr, %8 : !u64i), !cir.ptr<!s8i> loc(#loc25)
            cir.store %9, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc105)
            cir.scope {
              %18 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
              %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc31)
              %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc31)
              %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc107)
              cir.if %21 {
                %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 61>> loc(#loc3)
                %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 61>>), !cir.ptr<!s8i> loc(#loc3)
                cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc33)
                %24 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc34)
                %25 = cir.const #cir.int<1> : !s32i loc(#loc35)
                cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc34)
              } loc(#loc108)
            } loc(#loc106)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc36)
            %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc36)
            %12 = cir.const #cir.int<10> : !s32i loc(#loc37)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc38)
            %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc37)
            %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc39)
            %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc39)
            cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc109)
            %17 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc40)
            cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc41)
          } loc(#loc101)
        } loc(#loc100)
        cir.yield loc(#loc11)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc42)
        %3 = cir.unary(inc, %2) nsw : !s32i, !s32i loc(#loc43)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc110)
        cir.yield loc(#loc97)
      } loc(#loc97)
    } loc(#loc97)
    cir.return loc(#loc7)
  } loc(#loc95)
  cir.func no_proto @CWE242_Use_of_Inherently_Dangerous_Function__basic_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc112)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc46)
    cir.return loc(#loc45)
  } loc(#loc111)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc113)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc114)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc116)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc58)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc118)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc60)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc61)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc119)
        cir.condition(%4) loc(#loc62)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dest"] {alignment = 1 : i64} loc(#loc122)
            %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["result"] {alignment = 8 : i64} loc(#loc123)
            %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc70)
            %5 = cir.const #cir.int<10> : !s32i loc(#loc71)
            %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc114)
            %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc72)
            %8 = cir.call @fgets(%4, %5, %7) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc73)
            cir.store %8, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc124)
            cir.scope {
              %17 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
              %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc79)
              %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc79)
              %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc126)
              cir.if %20 {
                %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 61>> loc(#loc81)
                %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 61>>), !cir.ptr<!s8i> loc(#loc81)
                cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc82)
                %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc83)
                %24 = cir.const #cir.int<1> : !s32i loc(#loc84)
                cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc83)
              } loc(#loc127)
            } loc(#loc125)
            %9 = cir.const #cir.int<0> : !s32i loc(#loc85)
            %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc85)
            %11 = cir.const #cir.int<10> : !s32i loc(#loc86)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc87)
            %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc86)
            %14 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc88)
            %15 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %13 : !s32i), !cir.ptr<!s8i> loc(#loc88)
            cir.store %10, %15 : !s8i, !cir.ptr<!s8i> loc(#loc128)
            %16 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc89)
            cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc90)
          } loc(#loc121)
        } loc(#loc120)
        cir.yield loc(#loc57)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc91)
        %3 = cir.unary(inc, %2) nsw : !s32i, !s32i loc(#loc92)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc129)
        cir.yield loc(#loc117)
      } loc(#loc117)
    } loc(#loc117)
    cir.return loc(#loc53)
  } loc(#loc115)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE242_Use_of_Inherently_Dangerous_Function/CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":38:27)
#loc4 = loc("/usr/include/stdlib.h":756:1)
#loc5 = loc("/usr/include/stdlib.h":756:70)
#loc6 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":22:1)
#loc7 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":45:1)
#loc8 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":24:5)
#loc9 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":24:9)
#loc10 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":25:5)
#loc11 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":44:5)
#loc12 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":25:13)
#loc13 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":25:9)
#loc14 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":25:16)
#loc15 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":25:20)
#loc16 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":25:18)
#loc17 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":26:5)
#loc18 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":27:9)
#loc19 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":43:9)
#loc20 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":28:13)
#loc21 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":28:32)
#loc22 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":29:13)
#loc23 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":29:19)
#loc24 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":33:27)
#loc25 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":33:22)
#loc26 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":33:31)
#loc27 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":33:13)
#loc28 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":35:13)
#loc29 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":40:13)
#loc30 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":35:17)
#loc31 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":35:27)
#loc32 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":36:13)
#loc33 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":38:17)
#loc34 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":39:17)
#loc35 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":39:22)
#loc36 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":41:33)
#loc37 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":41:18)
#loc38 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":41:28)
#loc39 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":41:13)
#loc40 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":42:23)
#loc41 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":42:13)
#loc42 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":25:24)
#loc43 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":25:23)
#loc44 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":75:1)
#loc45 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":78:1)
#loc46 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":77:5)
#loc47 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":77:11)
#loc48 = loc("/usr/include/stdio.h":654:1)
#loc49 = loc("/usr/include/stdio.h":655:59)
#loc50 = loc("/usr/include/stdio.h":149:1)
#loc51 = loc("/usr/include/stdio.h":149:14)
#loc52 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":52:1)
#loc53 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":73:1)
#loc54 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":54:5)
#loc55 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":54:9)
#loc56 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":55:5)
#loc57 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":72:5)
#loc58 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":55:13)
#loc59 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":55:9)
#loc60 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":55:16)
#loc61 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":55:20)
#loc62 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":55:18)
#loc63 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":56:5)
#loc64 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":57:9)
#loc65 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":71:9)
#loc66 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":58:13)
#loc67 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":58:32)
#loc68 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":59:13)
#loc69 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":59:19)
#loc70 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":61:28)
#loc71 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":61:34)
#loc72 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":61:45)
#loc73 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":61:22)
#loc74 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":61:13)
#loc75 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":61:50)
#loc76 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":63:13)
#loc77 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":68:13)
#loc78 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":63:17)
#loc79 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":63:27)
#loc80 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":64:13)
#loc81 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":66:27)
#loc82 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":66:17)
#loc83 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":67:17)
#loc84 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":67:22)
#loc85 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":69:33)
#loc86 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":69:18)
#loc87 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":69:28)
#loc88 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":69:13)
#loc89 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":70:23)
#loc90 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":70:13)
#loc91 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":55:24)
#loc92 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":55:23)
#loc93 = loc(fused[#loc1, #loc2])
#loc94 = loc(fused[#loc4, #loc5])
#loc95 = loc(fused[#loc6, #loc7])
#loc96 = loc(fused[#loc8, #loc9])
#loc97 = loc(fused[#loc10, #loc11])
#loc98 = loc(fused[#loc13, #loc12])
#loc99 = loc(fused[#loc14, #loc15])
#loc100 = loc(fused[#loc17, #loc11])
#loc101 = loc(fused[#loc18, #loc19])
#loc102 = loc(fused[#loc20, #loc21])
#loc103 = loc(fused[#loc22, #loc23])
#loc104 = loc(fused[#loc25, #loc26])
#loc105 = loc(fused[#loc27, #loc26])
#loc106 = loc(fused[#loc28, #loc29])
#loc107 = loc(fused[#loc30, #loc31])
#loc108 = loc(fused[#loc32, #loc29])
#loc109 = loc(fused[#loc39, #loc36])
#loc110 = loc(fused[#loc43, #loc42])
#loc111 = loc(fused[#loc44, #loc45])
#loc112 = loc(fused[#loc46, #loc47])
#loc113 = loc(fused[#loc48, #loc49])
#loc114 = loc(fused[#loc50, #loc51])
#loc115 = loc(fused[#loc52, #loc53])
#loc116 = loc(fused[#loc54, #loc55])
#loc117 = loc(fused[#loc56, #loc57])
#loc118 = loc(fused[#loc59, #loc58])
#loc119 = loc(fused[#loc60, #loc61])
#loc120 = loc(fused[#loc63, #loc57])
#loc121 = loc(fused[#loc64, #loc65])
#loc122 = loc(fused[#loc66, #loc67])
#loc123 = loc(fused[#loc68, #loc69])
#loc124 = loc(fused[#loc74, #loc75])
#loc125 = loc(fused[#loc76, #loc77])
#loc126 = loc(fused[#loc78, #loc79])
#loc127 = loc(fused[#loc80, #loc77])
#loc128 = loc(fused[#loc88, #loc85])
#loc129 = loc(fused[#loc92, #loc91])
