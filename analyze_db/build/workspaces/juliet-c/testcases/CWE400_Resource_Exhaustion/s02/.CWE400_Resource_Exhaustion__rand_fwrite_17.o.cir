!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_fwrite_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc273)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"output_bad.txt\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc3)
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc274)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"w+\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc6)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc275)
  cir.func private @fwrite(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc276)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"This is the sentence we are printing to the file. \00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc11)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc277)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_fwrite_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc279)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc280)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc281)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc22)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc282)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc26)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc284)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc28)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc29)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc285)
        cir.condition(%8) loc(#loc30)
      } body {
        cir.scope {
          %6 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc32)
          %7 = cir.const #cir.int<1> : !s32i loc(#loc32)
          %8 = cir.binop(and, %6, %7) : !s32i loc(#loc32)
          %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc32)
          %10 = cir.ternary(%9, true {
            %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc32)
            %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc32)
            %14 = cir.const #cir.int<30> : !s32i loc(#loc32)
            %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc32)
            %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc32)
            %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc32)
            %18 = cir.const #cir.int<15> : !s32i loc(#loc32)
            %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc32)
            %20 = cir.binop(xor, %15, %19) : !u32i loc(#loc32)
            %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc32)
            %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc32)
            %23 = cir.binop(xor, %20, %22) : !u32i loc(#loc32)
            cir.yield %23 : !u32i loc(#loc32)
          }, false {
            %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc32)
            %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc32)
            %14 = cir.const #cir.int<30> : !s32i loc(#loc32)
            %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc32)
            %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc32)
            %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc32)
            %18 = cir.const #cir.int<15> : !s32i loc(#loc32)
            %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc32)
            %20 = cir.binop(xor, %15, %19) : !u32i loc(#loc32)
            %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc32)
            %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc32)
            %23 = cir.binop(xor, %20, %22) : !u32i loc(#loc32)
            %24 = cir.unary(minus, %23) : !u32i, !u32i loc(#loc32)
            %25 = cir.const #cir.int<1> : !s32i loc(#loc32)
            %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc32)
            %27 = cir.binop(sub, %24, %26) : !u32i loc(#loc32)
            cir.yield %27 : !u32i loc(#loc32)
          }) : (!cir.bool) -> !u32i loc(#loc32)
          %11 = cir.cast(integral, %10 : !u32i), !s32i loc(#loc32)
          cir.store %11, %2 : !s32i, !cir.ptr<!s32i> loc(#loc287)
        } loc(#loc286)
        cir.yield loc(#loc25)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc34)
        %7 = cir.unary(inc, %6) nsw : !s32i, !s32i loc(#loc35)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc288)
        cir.yield loc(#loc283)
      } loc(#loc283)
    } loc(#loc283)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc38)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc290)
      cir.for : cond {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc40)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc41)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc291)
        cir.condition(%8) loc(#loc42)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc294)
            %7 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc295)
            %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc296)
            %9 = cir.const #cir.int<0> : !s32i loc(#loc47)
            %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc47)
            cir.store %10, %6 : !u64i, !cir.ptr<!u64i> loc(#loc294)
            %11 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc49)
            cir.store %11, %7 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc295)
            %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc3)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc3)
            cir.store %13, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc296)
            %14 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc51)
            %15 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
            %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc6)
            %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc6)
            %18 = cir.call @fopen(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc51)
            cir.store %18, %7 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc297)
            cir.scope {
              %19 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc57)
              %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc58)
              %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc58)
              %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc299)
              cir.if %22 {
                %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc60)
                %24 = cir.const #cir.int<1> : !s32i loc(#loc61)
                cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc60)
              } loc(#loc300)
            } loc(#loc298)
            cir.scope {
              %19 = cir.const #cir.int<0> : !s32i loc(#loc64)
              %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc64)
              cir.store %20, %6 : !u64i, !cir.ptr<!u64i> loc(#loc302)
              cir.for : cond {
                %21 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc66)
                %22 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc67)
                %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc67)
                %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc303)
                cir.condition(%24) loc(#loc68)
              } body {
                cir.scope {
                  cir.scope {
                    %21 = cir.const #cir.int<50> : !u64i loc(#loc306)
                    %22 = cir.get_global @fwrite : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc74)
                    %23 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc11)
                    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc11)
                    %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc11)
                    %26 = cir.const #cir.int<1> : !u64i loc(#loc307)
                    %27 = cir.const #cir.int<50> : !u64i loc(#loc308)
                    %28 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc79)
                    %29 = cir.call @fwrite(%25, %26, %27, %28) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc74)
                    %30 = cir.cmp(ne, %21, %29) : !u64i, !cir.bool loc(#loc309)
                    cir.if %30 {
                      %31 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc82)
                      %32 = cir.const #cir.int<1> : !s32i loc(#loc83)
                      cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc82)
                    } loc(#loc310)
                  } loc(#loc305)
                } loc(#loc304)
                cir.yield loc(#loc63)
              } step {
                %21 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc84)
                %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc85)
                cir.store %22, %6 : !u64i, !cir.ptr<!u64i> loc(#loc311)
                cir.yield loc(#loc301)
              } loc(#loc301)
            } loc(#loc301)
            cir.scope {
              %19 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc88)
              %20 = cir.cast(ptr_to_bool, %19 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc88)
              cir.if %20 {
                %21 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc90)
                %22 = cir.call @fclose(%21) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc91)
              } loc(#loc313)
            } loc(#loc312)
          } loc(#loc293)
        } loc(#loc292)
        cir.yield loc(#loc37)
      } step {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc92)
        %7 = cir.unary(inc, %6) nsw : !s32i, !s32i loc(#loc93)
        cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc314)
        cir.yield loc(#loc289)
      } loc(#loc289)
    } loc(#loc289)
    cir.return loc(#loc15)
  } loc(#loc278)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_fwrite_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc316)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc96)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc317)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc98)
    cir.return loc(#loc95)
  } loc(#loc315)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"output_good.txt\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc100)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc319)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc320)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc321)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc108)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc109)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc322)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc113)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc324)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc115)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc116)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc325)
        cir.condition(%8) loc(#loc117)
      } body {
        cir.scope {
          %6 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc119)
          %7 = cir.const #cir.int<1> : !s32i loc(#loc119)
          %8 = cir.binop(and, %6, %7) : !s32i loc(#loc119)
          %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc119)
          %10 = cir.ternary(%9, true {
            %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc119)
            %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc119)
            %14 = cir.const #cir.int<30> : !s32i loc(#loc119)
            %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc119)
            %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc119)
            %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc119)
            %18 = cir.const #cir.int<15> : !s32i loc(#loc119)
            %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc119)
            %20 = cir.binop(xor, %15, %19) : !u32i loc(#loc119)
            %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc119)
            %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc119)
            %23 = cir.binop(xor, %20, %22) : !u32i loc(#loc119)
            cir.yield %23 : !u32i loc(#loc119)
          }, false {
            %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc119)
            %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc119)
            %14 = cir.const #cir.int<30> : !s32i loc(#loc119)
            %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc119)
            %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc119)
            %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc119)
            %18 = cir.const #cir.int<15> : !s32i loc(#loc119)
            %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc119)
            %20 = cir.binop(xor, %15, %19) : !u32i loc(#loc119)
            %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc119)
            %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc119)
            %23 = cir.binop(xor, %20, %22) : !u32i loc(#loc119)
            %24 = cir.unary(minus, %23) : !u32i, !u32i loc(#loc119)
            %25 = cir.const #cir.int<1> : !s32i loc(#loc119)
            %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc119)
            %27 = cir.binop(sub, %24, %26) : !u32i loc(#loc119)
            cir.yield %27 : !u32i loc(#loc119)
          }) : (!cir.bool) -> !u32i loc(#loc119)
          %11 = cir.cast(integral, %10 : !u32i), !s32i loc(#loc119)
          cir.store %11, %2 : !s32i, !cir.ptr<!s32i> loc(#loc327)
        } loc(#loc326)
        cir.yield loc(#loc112)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc121)
        %7 = cir.unary(inc, %6) nsw : !s32i, !s32i loc(#loc122)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc328)
        cir.yield loc(#loc323)
      } loc(#loc323)
    } loc(#loc323)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc125)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc330)
      cir.for : cond {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc127)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc128)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc331)
        cir.condition(%8) loc(#loc129)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc334)
            %7 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc335)
            %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc336)
            %9 = cir.const #cir.int<0> : !s32i loc(#loc134)
            %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc134)
            cir.store %10, %6 : !u64i, !cir.ptr<!u64i> loc(#loc334)
            %11 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc136)
            cir.store %11, %7 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc335)
            %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc100)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc100)
            cir.store %13, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc336)
            cir.scope {
              %14 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc140)
              %15 = cir.const #cir.int<0> : !s32i loc(#loc141)
              %16 = cir.cmp(gt, %14, %15) : !s32i, !cir.bool loc(#loc338)
              %17 = cir.ternary(%16, true {
                %18 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc143)
                %19 = cir.const #cir.int<20> : !s32i loc(#loc144)
                %20 = cir.cmp(le, %18, %19) : !s32i, !cir.bool loc(#loc339)
                %21 = cir.ternary(%20, true {
                  %22 = cir.const #true loc(#loc142)
                  cir.yield %22 : !cir.bool loc(#loc142)
                }, false {
                  %22 = cir.const #false loc(#loc142)
                  cir.yield %22 : !cir.bool loc(#loc142)
                }) : (!cir.bool) -> !cir.bool loc(#loc142)
                cir.yield %21 : !cir.bool loc(#loc142)
              }, false {
                %18 = cir.const #false loc(#loc142)
                cir.yield %18 : !cir.bool loc(#loc142)
              }) : (!cir.bool) -> !cir.bool loc(#loc142)
              cir.if %17 {
                %18 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc146)
                %19 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
                %20 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc148)
                %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc148)
                %22 = cir.call @fopen(%19, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc146)
                cir.store %22, %7 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc341)
                cir.scope {
                  %23 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc153)
                  %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc154)
                  %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc154)
                  %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc343)
                  cir.if %26 {
                    %27 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc156)
                    %28 = cir.const #cir.int<1> : !s32i loc(#loc157)
                    cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc156)
                  } loc(#loc344)
                } loc(#loc342)
                cir.scope {
                  %23 = cir.const #cir.int<0> : !s32i loc(#loc160)
                  %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc160)
                  cir.store %24, %6 : !u64i, !cir.ptr<!u64i> loc(#loc346)
                  cir.for : cond {
                    %25 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc162)
                    %26 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc163)
                    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc163)
                    %28 = cir.cmp(lt, %25, %27) : !u64i, !cir.bool loc(#loc347)
                    cir.condition(%28) loc(#loc164)
                  } body {
                    cir.scope {
                      cir.scope {
                        %25 = cir.const #cir.int<50> : !u64i loc(#loc350)
                        %26 = cir.get_global @fwrite : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc170)
                        %27 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc171)
                        %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc171)
                        %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc171)
                        %30 = cir.const #cir.int<1> : !u64i loc(#loc351)
                        %31 = cir.const #cir.int<50> : !u64i loc(#loc352)
                        %32 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc176)
                        %33 = cir.call @fwrite(%29, %30, %31, %32) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc170)
                        %34 = cir.cmp(ne, %25, %33) : !u64i, !cir.bool loc(#loc353)
                        cir.if %34 {
                          %35 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc178)
                          %36 = cir.const #cir.int<1> : !s32i loc(#loc179)
                          cir.call @exit(%36) : (!s32i) -> () extra(#fn_attr) loc(#loc178)
                        } loc(#loc354)
                      } loc(#loc349)
                    } loc(#loc348)
                    cir.yield loc(#loc159)
                  } step {
                    %25 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc180)
                    %26 = cir.unary(inc, %25) : !u64i, !u64i loc(#loc181)
                    cir.store %26, %6 : !u64i, !cir.ptr<!u64i> loc(#loc355)
                    cir.yield loc(#loc345)
                  } loc(#loc345)
                } loc(#loc345)
                cir.scope {
                  %23 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc184)
                  %24 = cir.cast(ptr_to_bool, %23 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc184)
                  cir.if %24 {
                    %25 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc186)
                    %26 = cir.call @fclose(%25) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc187)
                  } loc(#loc357)
                } loc(#loc356)
              } loc(#loc340)
            } loc(#loc337)
          } loc(#loc333)
        } loc(#loc332)
        cir.yield loc(#loc124)
      } step {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc188)
        %7 = cir.unary(inc, %6) nsw : !s32i, !s32i loc(#loc189)
        cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc358)
        cir.yield loc(#loc329)
      } loc(#loc329)
    } loc(#loc329)
    cir.return loc(#loc102)
  } loc(#loc318)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc360)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc361)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc362)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc197)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc198)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc363)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc202)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc365)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc204)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc205)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc366)
        cir.condition(%8) loc(#loc206)
      } body {
        cir.scope {
          %6 = cir.const #cir.int<20> : !s32i loc(#loc208)
          cir.store %6, %2 : !s32i, !cir.ptr<!s32i> loc(#loc368)
        } loc(#loc367)
        cir.yield loc(#loc201)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc210)
        %7 = cir.unary(inc, %6) nsw : !s32i, !s32i loc(#loc211)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc369)
        cir.yield loc(#loc364)
      } loc(#loc364)
    } loc(#loc364)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc214)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc371)
      cir.for : cond {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc216)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc217)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc372)
        cir.condition(%8) loc(#loc218)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc375)
            %7 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc376)
            %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc377)
            %9 = cir.const #cir.int<0> : !s32i loc(#loc223)
            %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc223)
            cir.store %10, %6 : !u64i, !cir.ptr<!u64i> loc(#loc375)
            %11 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc225)
            cir.store %11, %7 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc376)
            %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc227)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc227)
            cir.store %13, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc377)
            %14 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc228)
            %15 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc229)
            %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc230)
            %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc230)
            %18 = cir.call @fopen(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc228)
            cir.store %18, %7 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc378)
            cir.scope {
              %19 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc235)
              %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc236)
              %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc236)
              %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc380)
              cir.if %22 {
                %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc238)
                %24 = cir.const #cir.int<1> : !s32i loc(#loc239)
                cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc238)
              } loc(#loc381)
            } loc(#loc379)
            cir.scope {
              %19 = cir.const #cir.int<0> : !s32i loc(#loc242)
              %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc242)
              cir.store %20, %6 : !u64i, !cir.ptr<!u64i> loc(#loc383)
              cir.for : cond {
                %21 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc244)
                %22 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc245)
                %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc245)
                %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc384)
                cir.condition(%24) loc(#loc246)
              } body {
                cir.scope {
                  cir.scope {
                    %21 = cir.const #cir.int<50> : !u64i loc(#loc387)
                    %22 = cir.get_global @fwrite : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc252)
                    %23 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc253)
                    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc253)
                    %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc253)
                    %26 = cir.const #cir.int<1> : !u64i loc(#loc388)
                    %27 = cir.const #cir.int<50> : !u64i loc(#loc389)
                    %28 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc258)
                    %29 = cir.call @fwrite(%25, %26, %27, %28) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc252)
                    %30 = cir.cmp(ne, %21, %29) : !u64i, !cir.bool loc(#loc390)
                    cir.if %30 {
                      %31 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc261)
                      %32 = cir.const #cir.int<1> : !s32i loc(#loc262)
                      cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc261)
                    } loc(#loc391)
                  } loc(#loc386)
                } loc(#loc385)
                cir.yield loc(#loc241)
              } step {
                %21 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc263)
                %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc264)
                cir.store %22, %6 : !u64i, !cir.ptr<!u64i> loc(#loc392)
                cir.yield loc(#loc382)
              } loc(#loc382)
            } loc(#loc382)
            cir.scope {
              %19 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc267)
              %20 = cir.cast(ptr_to_bool, %19 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc267)
              cir.if %20 {
                %21 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc269)
                %22 = cir.call @fclose(%21) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc270)
              } loc(#loc394)
            } loc(#loc393)
          } loc(#loc374)
        } loc(#loc373)
        cir.yield loc(#loc213)
      } step {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc271)
        %7 = cir.unary(inc, %6) nsw : !s32i, !s32i loc(#loc272)
        cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc395)
        cir.yield loc(#loc370)
      } loc(#loc370)
    } loc(#loc370)
    cir.return loc(#loc191)
  } loc(#loc359)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_fwrite_17.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":40:36)
#loc4 = loc("/usr/include/stdio.h":264:1)
#loc5 = loc("/usr/include/stdio.h":266:3)
#loc6 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":41:37)
#loc7 = loc("/usr/include/stdlib.h":756:1)
#loc8 = loc("/usr/include/stdlib.h":756:70)
#loc9 = loc("/usr/include/stdio.h":745:1)
#loc10 = loc("/usr/include/stdio.h":746:43)
#loc11 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":50:48)
#loc12 = loc("/usr/include/stdio.h":184:1)
#loc13 = loc("/usr/include/stdio.h":184:36)
#loc14 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":24:1)
#loc15 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":61:1)
#loc16 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":26:5)
#loc17 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":26:9)
#loc18 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":26:11)
#loc19 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":27:5)
#loc20 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":27:9)
#loc21 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":29:14)
#loc22 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":29:13)
#loc23 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":29:5)
#loc24 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":30:5)
#loc25 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":34:5)
#loc26 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":30:13)
#loc27 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":30:9)
#loc28 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":30:16)
#loc29 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":30:20)
#loc30 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":30:18)
#loc31 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":31:5)
#loc32 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":33:17)
#loc33 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":33:9)
#loc34 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":30:24)
#loc35 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":30:23)
#loc36 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":35:5)
#loc37 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":60:5)
#loc38 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":35:13)
#loc39 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":35:9)
#loc40 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":35:16)
#loc41 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":35:20)
#loc42 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":35:18)
#loc43 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":36:5)
#loc44 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":37:9)
#loc45 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":59:9)
#loc46 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":38:13)
#loc47 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":38:24)
#loc48 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":39:13)
#loc49 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":39:27)
#loc50 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":40:13)
#loc51 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":41:21)
#loc52 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":41:27)
#loc53 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":41:13)
#loc54 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":41:41)
#loc55 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":42:13)
#loc56 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":45:13)
#loc57 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":42:17)
#loc58 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":42:26)
#loc59 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":43:13)
#loc60 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":44:17)
#loc61 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":44:22)
#loc62 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":48:13)
#loc63 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":54:13)
#loc64 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":48:22)
#loc65 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":48:18)
#loc66 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":48:25)
#loc67 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":48:37)
#loc68 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":48:27)
#loc69 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":49:13)
#loc70 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":50:17)
#loc71 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":53:17)
#loc72 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":50:21)
#loc73 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":50:36)
#loc74 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":50:41)
#loc75 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":50:58)
#loc76 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":50:69)
#loc77 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":50:72)
#loc78 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":50:87)
#loc79 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":50:90)
#loc80 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":50:95)
#loc81 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":51:17)
#loc82 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":52:21)
#loc83 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":52:26)
#loc84 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":48:45)
#loc85 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":48:44)
#loc86 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":55:13)
#loc87 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":58:13)
#loc88 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":55:17)
#loc89 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":56:13)
#loc90 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":57:24)
#loc91 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":57:17)
#loc92 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":35:24)
#loc93 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":35:23)
#loc94 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":146:1)
#loc95 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":150:1)
#loc96 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":148:5)
#loc97 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":148:13)
#loc98 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":149:5)
#loc99 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":149:13)
#loc100 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":84:36)
#loc101 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":68:1)
#loc102 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":104:1)
#loc103 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":70:5)
#loc104 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":70:9)
#loc105 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":70:11)
#loc106 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":71:5)
#loc107 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":71:9)
#loc108 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":73:14)
#loc109 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":73:13)
#loc110 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":73:5)
#loc111 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":74:5)
#loc112 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":78:5)
#loc113 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":74:13)
#loc114 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":74:9)
#loc115 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":74:16)
#loc116 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":74:20)
#loc117 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":74:18)
#loc118 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":75:5)
#loc119 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":77:17)
#loc120 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":77:9)
#loc121 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":74:24)
#loc122 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":74:23)
#loc123 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":79:5)
#loc124 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":103:5)
#loc125 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":79:13)
#loc126 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":79:9)
#loc127 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":79:16)
#loc128 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":79:20)
#loc129 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":79:18)
#loc130 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":80:5)
#loc131 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":81:9)
#loc132 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":102:9)
#loc133 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":82:13)
#loc134 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":82:24)
#loc135 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":83:13)
#loc136 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":83:27)
#loc137 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":84:13)
#loc138 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":86:13)
#loc139 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":101:13)
#loc140 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":86:17)
#loc141 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":86:25)
#loc142 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":86:27)
#loc143 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":86:30)
#loc144 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":86:39)
#loc145 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":87:13)
#loc146 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":88:25)
#loc147 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":88:31)
#loc148 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":88:41)
#loc149 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":88:17)
#loc150 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":88:45)
#loc151 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":89:17)
#loc152 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":92:17)
#loc153 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":89:21)
#loc154 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":89:30)
#loc155 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":90:17)
#loc156 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":91:21)
#loc157 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":91:26)
#loc158 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":93:17)
#loc159 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":96:17)
#loc160 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":93:26)
#loc161 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":93:22)
#loc162 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":93:29)
#loc163 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":93:41)
#loc164 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":93:31)
#loc165 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":94:17)
#loc166 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":95:21)
#loc167 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":95:108)
#loc168 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":95:25)
#loc169 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":95:40)
#loc170 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":95:45)
#loc171 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":95:52)
#loc172 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":95:62)
#loc173 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":95:73)
#loc174 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":95:76)
#loc175 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":95:91)
#loc176 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":95:94)
#loc177 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":95:99)
#loc178 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":95:102)
#loc179 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":95:107)
#loc180 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":93:49)
#loc181 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":93:48)
#loc182 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":97:17)
#loc183 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":100:17)
#loc184 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":97:21)
#loc185 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":98:17)
#loc186 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":99:28)
#loc187 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":99:21)
#loc188 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":79:24)
#loc189 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":79:23)
#loc190 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":107:1)
#loc191 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":144:1)
#loc192 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":109:5)
#loc193 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":109:9)
#loc194 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":109:11)
#loc195 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":110:5)
#loc196 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":110:9)
#loc197 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":112:14)
#loc198 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":112:13)
#loc199 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":112:5)
#loc200 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":113:5)
#loc201 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":117:5)
#loc202 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":113:13)
#loc203 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":113:9)
#loc204 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":113:16)
#loc205 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":113:20)
#loc206 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":113:18)
#loc207 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":114:5)
#loc208 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":116:17)
#loc209 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":116:9)
#loc210 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":113:24)
#loc211 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":113:23)
#loc212 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":118:5)
#loc213 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":143:5)
#loc214 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":118:13)
#loc215 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":118:9)
#loc216 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":118:16)
#loc217 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":118:20)
#loc218 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":118:18)
#loc219 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":119:5)
#loc220 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":120:9)
#loc221 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":142:9)
#loc222 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":121:13)
#loc223 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":121:24)
#loc224 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":122:13)
#loc225 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":122:27)
#loc226 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":123:13)
#loc227 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":123:36)
#loc228 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":124:21)
#loc229 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":124:27)
#loc230 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":124:37)
#loc231 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":124:13)
#loc232 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":124:41)
#loc233 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":125:13)
#loc234 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":128:13)
#loc235 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":125:17)
#loc236 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":125:26)
#loc237 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":126:13)
#loc238 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":127:17)
#loc239 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":127:22)
#loc240 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":131:13)
#loc241 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":137:13)
#loc242 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":131:22)
#loc243 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":131:18)
#loc244 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":131:25)
#loc245 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":131:37)
#loc246 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":131:27)
#loc247 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":132:13)
#loc248 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":133:17)
#loc249 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":136:17)
#loc250 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":133:21)
#loc251 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":133:36)
#loc252 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":133:41)
#loc253 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":133:48)
#loc254 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":133:58)
#loc255 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":133:69)
#loc256 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":133:72)
#loc257 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":133:87)
#loc258 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":133:90)
#loc259 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":133:95)
#loc260 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":134:17)
#loc261 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":135:21)
#loc262 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":135:26)
#loc263 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":131:45)
#loc264 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":131:44)
#loc265 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":138:13)
#loc266 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":141:13)
#loc267 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":138:17)
#loc268 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":139:13)
#loc269 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":140:24)
#loc270 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":140:17)
#loc271 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":118:24)
#loc272 = loc("CWE400_Resource_Exhaustion__rand_fwrite_17.c":118:23)
#loc273 = loc(fused[#loc1, #loc2])
#loc274 = loc(fused[#loc4, #loc5])
#loc275 = loc(fused[#loc7, #loc8])
#loc276 = loc(fused[#loc9, #loc10])
#loc277 = loc(fused[#loc12, #loc13])
#loc278 = loc(fused[#loc14, #loc15])
#loc279 = loc(fused[#loc16, #loc17])
#loc280 = loc(fused[#loc16, #loc18])
#loc281 = loc(fused[#loc19, #loc20])
#loc282 = loc(fused[#loc23, #loc21])
#loc283 = loc(fused[#loc24, #loc25])
#loc284 = loc(fused[#loc27, #loc26])
#loc285 = loc(fused[#loc28, #loc29])
#loc286 = loc(fused[#loc31, #loc25])
#loc287 = loc(fused[#loc33, #loc32])
#loc288 = loc(fused[#loc35, #loc34])
#loc289 = loc(fused[#loc36, #loc37])
#loc290 = loc(fused[#loc39, #loc38])
#loc291 = loc(fused[#loc40, #loc41])
#loc292 = loc(fused[#loc43, #loc37])
#loc293 = loc(fused[#loc44, #loc45])
#loc294 = loc(fused[#loc46, #loc47])
#loc295 = loc(fused[#loc48, #loc49])
#loc296 = loc(fused[#loc50, #loc3])
#loc297 = loc(fused[#loc53, #loc54])
#loc298 = loc(fused[#loc55, #loc56])
#loc299 = loc(fused[#loc57, #loc58])
#loc300 = loc(fused[#loc59, #loc56])
#loc301 = loc(fused[#loc62, #loc63])
#loc302 = loc(fused[#loc65, #loc64])
#loc303 = loc(fused[#loc66, #loc67])
#loc304 = loc(fused[#loc69, #loc63])
#loc305 = loc(fused[#loc70, #loc71])
#loc306 = loc(fused[#loc72, #loc73])
#loc307 = loc(fused[#loc75, #loc76])
#loc308 = loc(fused[#loc77, #loc78])
#loc309 = loc(fused[#loc72, #loc80])
#loc310 = loc(fused[#loc81, #loc71])
#loc311 = loc(fused[#loc85, #loc84])
#loc312 = loc(fused[#loc86, #loc87])
#loc313 = loc(fused[#loc89, #loc87])
#loc314 = loc(fused[#loc93, #loc92])
#loc315 = loc(fused[#loc94, #loc95])
#loc316 = loc(fused[#loc96, #loc97])
#loc317 = loc(fused[#loc98, #loc99])
#loc318 = loc(fused[#loc101, #loc102])
#loc319 = loc(fused[#loc103, #loc104])
#loc320 = loc(fused[#loc103, #loc105])
#loc321 = loc(fused[#loc106, #loc107])
#loc322 = loc(fused[#loc110, #loc108])
#loc323 = loc(fused[#loc111, #loc112])
#loc324 = loc(fused[#loc114, #loc113])
#loc325 = loc(fused[#loc115, #loc116])
#loc326 = loc(fused[#loc118, #loc112])
#loc327 = loc(fused[#loc120, #loc119])
#loc328 = loc(fused[#loc122, #loc121])
#loc329 = loc(fused[#loc123, #loc124])
#loc330 = loc(fused[#loc126, #loc125])
#loc331 = loc(fused[#loc127, #loc128])
#loc332 = loc(fused[#loc130, #loc124])
#loc333 = loc(fused[#loc131, #loc132])
#loc334 = loc(fused[#loc133, #loc134])
#loc335 = loc(fused[#loc135, #loc136])
#loc336 = loc(fused[#loc137, #loc100])
#loc337 = loc(fused[#loc138, #loc139])
#loc338 = loc(fused[#loc140, #loc141])
#loc339 = loc(fused[#loc143, #loc144])
#loc340 = loc(fused[#loc145, #loc139])
#loc341 = loc(fused[#loc149, #loc150])
#loc342 = loc(fused[#loc151, #loc152])
#loc343 = loc(fused[#loc153, #loc154])
#loc344 = loc(fused[#loc155, #loc152])
#loc345 = loc(fused[#loc158, #loc159])
#loc346 = loc(fused[#loc161, #loc160])
#loc347 = loc(fused[#loc162, #loc163])
#loc348 = loc(fused[#loc165, #loc159])
#loc349 = loc(fused[#loc166, #loc167])
#loc350 = loc(fused[#loc168, #loc169])
#loc351 = loc(fused[#loc172, #loc173])
#loc352 = loc(fused[#loc174, #loc175])
#loc353 = loc(fused[#loc168, #loc177])
#loc354 = loc(fused[#loc178, #loc167])
#loc355 = loc(fused[#loc181, #loc180])
#loc356 = loc(fused[#loc182, #loc183])
#loc357 = loc(fused[#loc185, #loc183])
#loc358 = loc(fused[#loc189, #loc188])
#loc359 = loc(fused[#loc190, #loc191])
#loc360 = loc(fused[#loc192, #loc193])
#loc361 = loc(fused[#loc192, #loc194])
#loc362 = loc(fused[#loc195, #loc196])
#loc363 = loc(fused[#loc199, #loc197])
#loc364 = loc(fused[#loc200, #loc201])
#loc365 = loc(fused[#loc203, #loc202])
#loc366 = loc(fused[#loc204, #loc205])
#loc367 = loc(fused[#loc207, #loc201])
#loc368 = loc(fused[#loc209, #loc208])
#loc369 = loc(fused[#loc211, #loc210])
#loc370 = loc(fused[#loc212, #loc213])
#loc371 = loc(fused[#loc215, #loc214])
#loc372 = loc(fused[#loc216, #loc217])
#loc373 = loc(fused[#loc219, #loc213])
#loc374 = loc(fused[#loc220, #loc221])
#loc375 = loc(fused[#loc222, #loc223])
#loc376 = loc(fused[#loc224, #loc225])
#loc377 = loc(fused[#loc226, #loc227])
#loc378 = loc(fused[#loc231, #loc232])
#loc379 = loc(fused[#loc233, #loc234])
#loc380 = loc(fused[#loc235, #loc236])
#loc381 = loc(fused[#loc237, #loc234])
#loc382 = loc(fused[#loc240, #loc241])
#loc383 = loc(fused[#loc243, #loc242])
#loc384 = loc(fused[#loc244, #loc245])
#loc385 = loc(fused[#loc247, #loc241])
#loc386 = loc(fused[#loc248, #loc249])
#loc387 = loc(fused[#loc250, #loc251])
#loc388 = loc(fused[#loc254, #loc255])
#loc389 = loc(fused[#loc256, #loc257])
#loc390 = loc(fused[#loc250, #loc259])
#loc391 = loc(fused[#loc260, #loc249])
#loc392 = loc(fused[#loc264, #loc263])
#loc393 = loc(fused[#loc265, #loc266])
#loc394 = loc(fused[#loc268, #loc266])
#loc395 = loc(fused[#loc272, #loc271])
