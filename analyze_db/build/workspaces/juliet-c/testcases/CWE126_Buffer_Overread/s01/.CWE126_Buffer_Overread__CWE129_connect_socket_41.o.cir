!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc23 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":44:21)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":44:25)
#loc148 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":159:25)
#loc149 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":159:29)
#loc267 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":130:25)
#loc268 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":130:29)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc307 = loc(fused[#loc23, #loc24])
#loc353 = loc(fused[#loc148, #loc149])
#loc397 = loc(fused[#loc267, #loc268])
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_connect_socket_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc297)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc298)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc299)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc300)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc301)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc302)
  cir.func private @close(!s32i) -> !s32i loc(#loc303)
  cir.func private @printIntLine(!s32i) loc(#loc304)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc305)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc20)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc23, #loc24])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc307)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc25)
    cir.scope {
      %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc309)
      %2 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc309)
      cir.store %2, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc309)
      cir.scope {
        %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc32)
        %4 = cir.const #cir.int<0> : !s32i loc(#loc33)
        %5 = cir.cmp(ge, %3, %4) : !s32i, !cir.bool loc(#loc311)
        cir.if %5 {
          %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc37)
          %7 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc38)
          %8 = cir.ptr_stride(%7 : !cir.ptr<!s32i>, %6 : !s32i), !cir.ptr<!s32i> loc(#loc38)
          %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc38)
          cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc39)
        } else {
          %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc20)
          %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc20)
          cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc40)
        } loc(#loc312)
      } loc(#loc310)
    } loc(#loc308)
    cir.return loc(#loc22)
  } loc(#loc306)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_connect_socket_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc314)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc45)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc46)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc315)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc317)
      %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc318)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc319)
      %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc320)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc55)
      %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc55)
      cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc319)
      cir.scope {
        cir.do {
          cir.scope {
            %10 = cir.const #cir.int<2> : !s32i loc(#loc62)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc63)
            %12 = cir.const #cir.int<6> : !s32i loc(#loc64)
            %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc65)
            cir.store %13, %6 : !s32i, !cir.ptr<!s32i> loc(#loc323)
            cir.scope {
              %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc70)
              %53 = cir.const #cir.int<1> : !s32i loc(#loc71)
              %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc71)
              %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc325)
              cir.if %55 {
                cir.break loc(#loc73)
              } loc(#loc326)
            } loc(#loc324)
            %14 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc327)
            %15 = cir.const #cir.int<0> : !s32i loc(#loc76)
            %16 = cir.const #cir.int<16> : !u64i loc(#loc328)
            cir.libc.memset %16 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc329)
            %17 = cir.const #cir.int<2> : !s32i loc(#loc81)
            %18 = cir.cast(integral, %17 : !s32i), !u16i loc(#loc81)
            %19 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
            cir.store %18, %19 : !u16i, !cir.ptr<!u16i> loc(#loc330)
            %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
            %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
            %22 = cir.call @inet_addr(%21) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc84)
            %23 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc85)
            %24 = cir.get_member %23[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc86)
            cir.store %22, %24 : !u32i, !cir.ptr<!u32i> loc(#loc331)
            %25 = cir.const #cir.int<27015> : !s32i loc(#loc89)
            %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc89)
            %27 = cir.call @htons(%26) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc90)
            %28 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc91)
            cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc332)
            cir.scope {
              %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc96)
              %53 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc334)
              %54 = cir.const #cir.int<16> : !u64i loc(#loc335)
              %55 = cir.cast(integral, %54 : !u64i), !u32i loc(#loc335)
              %56 = cir.call @connect(%52, %53, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc101)
              %57 = cir.const #cir.int<1> : !s32i loc(#loc102)
              %58 = cir.unary(minus, %57) nsw : !s32i, !s32i loc(#loc102)
              %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc336)
              cir.if %59 {
                cir.break loc(#loc104)
              } loc(#loc337)
            } loc(#loc333)
            %29 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc105)
            %30 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc106)
            %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc106)
            %32 = cir.const #cir.int<3> : !s32i loc(#loc107)
            %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc107)
            %34 = cir.const #cir.int<4> : !u64i loc(#loc107)
            %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc107)
            %36 = cir.const #cir.int<2> : !s32i loc(#loc107)
            %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc107)
            %38 = cir.binop(add, %35, %37) : !u64i loc(#loc107)
            %39 = cir.const #cir.int<1> : !s32i loc(#loc108)
            %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc108)
            %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc338)
            %42 = cir.const #cir.int<0> : !s32i loc(#loc109)
            %43 = cir.call @recv(%29, %31, %41, %42) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc110)
            %44 = cir.cast(integral, %43 : !s64i), !s32i loc(#loc110)
            cir.store %44, %4 : !s32i, !cir.ptr<!s32i> loc(#loc339)
            cir.scope {
              %52 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc115)
              %53 = cir.const #cir.int<1> : !s32i loc(#loc116)
              %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc116)
              %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc341)
              %56 = cir.ternary(%55, true {
                %57 = cir.const #true loc(#loc117)
                cir.yield %57 : !cir.bool loc(#loc117)
              }, false {
                %57 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc118)
                %58 = cir.const #cir.int<0> : !s32i loc(#loc119)
                %59 = cir.cmp(eq, %57, %58) : !s32i, !cir.bool loc(#loc342)
                %60 = cir.ternary(%59, true {
                  %61 = cir.const #true loc(#loc117)
                  cir.yield %61 : !cir.bool loc(#loc117)
                }, false {
                  %61 = cir.const #false loc(#loc117)
                  cir.yield %61 : !cir.bool loc(#loc117)
                }) : (!cir.bool) -> !cir.bool loc(#loc117)
                cir.yield %60 : !cir.bool loc(#loc117)
              }) : (!cir.bool) -> !cir.bool loc(#loc117)
              cir.if %56 {
                cir.break loc(#loc121)
              } loc(#loc343)
            } loc(#loc340)
            %45 = cir.const #cir.int<0> : !s32i loc(#loc122)
            %46 = cir.cast(integral, %45 : !s32i), !s8i loc(#loc122)
            %47 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc123)
            %48 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc124)
            %49 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc124)
            cir.store %46, %49 : !s8i, !cir.ptr<!s8i> loc(#loc344)
            %50 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc125)
            %51 = cir.call @atoi(%50) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc126)
            cir.store %51, %0 : !s32i, !cir.ptr<!s32i> loc(#loc345)
          } loc(#loc322)
          cir.yield loc(#loc59)
        } while {
          %10 = cir.const #cir.int<0> : !s32i loc(#loc129)
          %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc129)
          cir.condition(%11) loc(#loc129)
        } loc(#loc321)
      } loc(#loc321)
      cir.scope {
        %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc132)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc133)
        %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc133)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc347)
        cir.if %13 {
          %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc135)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc136)
        } loc(#loc348)
      } loc(#loc346)
    } loc(#loc316)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc137)
    cir.call @badSink(%3) : (!s32i) -> () loc(#loc138)
    cir.return loc(#loc42)
  } loc(#loc313)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_connect_socket_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc350)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc141)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc351)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc143)
    cir.return loc(#loc140)
  } loc(#loc349)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc145)
  cir.func internal private @goodB2GSink(%arg0: !s32i loc(fused[#loc148, #loc149])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc353)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc150)
    cir.scope {
      %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc355)
      %2 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc355)
      cir.store %2, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc355)
      cir.scope {
        %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc157)
        %4 = cir.const #cir.int<0> : !s32i loc(#loc158)
        %5 = cir.cmp(ge, %3, %4) : !s32i, !cir.bool loc(#loc357)
        %6 = cir.ternary(%5, true {
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc160)
          %8 = cir.const #cir.int<10> : !s32i loc(#loc161)
          %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc358)
          %10 = cir.ternary(%9, true {
            %11 = cir.const #true loc(#loc159)
            cir.yield %11 : !cir.bool loc(#loc159)
          }, false {
            %11 = cir.const #false loc(#loc159)
            cir.yield %11 : !cir.bool loc(#loc159)
          }) : (!cir.bool) -> !cir.bool loc(#loc159)
          cir.yield %10 : !cir.bool loc(#loc159)
        }, false {
          %7 = cir.const #false loc(#loc159)
          cir.yield %7 : !cir.bool loc(#loc159)
        }) : (!cir.bool) -> !cir.bool loc(#loc159)
        cir.if %6 {
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc166)
          %8 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc167)
          %9 = cir.ptr_stride(%8 : !cir.ptr<!s32i>, %7 : !s32i), !cir.ptr<!s32i> loc(#loc167)
          %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc167)
          cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc168)
        } else {
          %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc145)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc145)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc169)
        } loc(#loc359)
      } loc(#loc356)
    } loc(#loc354)
    cir.return loc(#loc147)
  } loc(#loc352)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc361)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc174)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc175)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc362)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc364)
      %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc365)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc366)
      %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc367)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc184)
      %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc184)
      cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc366)
      cir.scope {
        cir.do {
          cir.scope {
            %10 = cir.const #cir.int<2> : !s32i loc(#loc191)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc192)
            %12 = cir.const #cir.int<6> : !s32i loc(#loc193)
            %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc194)
            cir.store %13, %6 : !s32i, !cir.ptr<!s32i> loc(#loc370)
            cir.scope {
              %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc199)
              %53 = cir.const #cir.int<1> : !s32i loc(#loc200)
              %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc200)
              %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc372)
              cir.if %55 {
                cir.break loc(#loc202)
              } loc(#loc373)
            } loc(#loc371)
            %14 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc374)
            %15 = cir.const #cir.int<0> : !s32i loc(#loc205)
            %16 = cir.const #cir.int<16> : !u64i loc(#loc375)
            cir.libc.memset %16 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc376)
            %17 = cir.const #cir.int<2> : !s32i loc(#loc210)
            %18 = cir.cast(integral, %17 : !s32i), !u16i loc(#loc210)
            %19 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
            cir.store %18, %19 : !u16i, !cir.ptr<!u16i> loc(#loc377)
            %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc212)
            %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc212)
            %22 = cir.call @inet_addr(%21) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc213)
            %23 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc85)
            %24 = cir.get_member %23[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc86)
            cir.store %22, %24 : !u32i, !cir.ptr<!u32i> loc(#loc378)
            %25 = cir.const #cir.int<27015> : !s32i loc(#loc216)
            %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc216)
            %27 = cir.call @htons(%26) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc217)
            %28 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc91)
            cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc379)
            cir.scope {
              %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc222)
              %53 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc381)
              %54 = cir.const #cir.int<16> : !u64i loc(#loc382)
              %55 = cir.cast(integral, %54 : !u64i), !u32i loc(#loc382)
              %56 = cir.call @connect(%52, %53, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc227)
              %57 = cir.const #cir.int<1> : !s32i loc(#loc228)
              %58 = cir.unary(minus, %57) nsw : !s32i, !s32i loc(#loc228)
              %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc383)
              cir.if %59 {
                cir.break loc(#loc230)
              } loc(#loc384)
            } loc(#loc380)
            %29 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc231)
            %30 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc232)
            %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc232)
            %32 = cir.const #cir.int<3> : !s32i loc(#loc233)
            %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc233)
            %34 = cir.const #cir.int<4> : !u64i loc(#loc233)
            %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc233)
            %36 = cir.const #cir.int<2> : !s32i loc(#loc233)
            %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc233)
            %38 = cir.binop(add, %35, %37) : !u64i loc(#loc233)
            %39 = cir.const #cir.int<1> : !s32i loc(#loc234)
            %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc234)
            %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc385)
            %42 = cir.const #cir.int<0> : !s32i loc(#loc235)
            %43 = cir.call @recv(%29, %31, %41, %42) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc236)
            %44 = cir.cast(integral, %43 : !s64i), !s32i loc(#loc236)
            cir.store %44, %4 : !s32i, !cir.ptr<!s32i> loc(#loc386)
            cir.scope {
              %52 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc241)
              %53 = cir.const #cir.int<1> : !s32i loc(#loc242)
              %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc242)
              %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc388)
              %56 = cir.ternary(%55, true {
                %57 = cir.const #true loc(#loc243)
                cir.yield %57 : !cir.bool loc(#loc243)
              }, false {
                %57 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc244)
                %58 = cir.const #cir.int<0> : !s32i loc(#loc245)
                %59 = cir.cmp(eq, %57, %58) : !s32i, !cir.bool loc(#loc389)
                %60 = cir.ternary(%59, true {
                  %61 = cir.const #true loc(#loc243)
                  cir.yield %61 : !cir.bool loc(#loc243)
                }, false {
                  %61 = cir.const #false loc(#loc243)
                  cir.yield %61 : !cir.bool loc(#loc243)
                }) : (!cir.bool) -> !cir.bool loc(#loc243)
                cir.yield %60 : !cir.bool loc(#loc243)
              }) : (!cir.bool) -> !cir.bool loc(#loc243)
              cir.if %56 {
                cir.break loc(#loc247)
              } loc(#loc390)
            } loc(#loc387)
            %45 = cir.const #cir.int<0> : !s32i loc(#loc248)
            %46 = cir.cast(integral, %45 : !s32i), !s8i loc(#loc248)
            %47 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc249)
            %48 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc250)
            %49 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc250)
            cir.store %46, %49 : !s8i, !cir.ptr<!s8i> loc(#loc391)
            %50 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc251)
            %51 = cir.call @atoi(%50) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc252)
            cir.store %51, %0 : !s32i, !cir.ptr<!s32i> loc(#loc392)
          } loc(#loc369)
          cir.yield loc(#loc188)
        } while {
          %10 = cir.const #cir.int<0> : !s32i loc(#loc255)
          %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc255)
          cir.condition(%11) loc(#loc255)
        } loc(#loc368)
      } loc(#loc368)
      cir.scope {
        %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc258)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc259)
        %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc259)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc394)
        cir.if %13 {
          %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc261)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc262)
        } loc(#loc395)
      } loc(#loc393)
    } loc(#loc363)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc263)
    cir.call @goodB2GSink(%3) : (!s32i) -> () loc(#loc264)
    cir.return loc(#loc171)
  } loc(#loc360)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc267, #loc268])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc397)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc269)
    cir.scope {
      %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc399)
      %2 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc399)
      cir.store %2, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc399)
      cir.scope {
        %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc276)
        %4 = cir.const #cir.int<0> : !s32i loc(#loc277)
        %5 = cir.cmp(ge, %3, %4) : !s32i, !cir.bool loc(#loc401)
        cir.if %5 {
          %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc281)
          %7 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc282)
          %8 = cir.ptr_stride(%7 : !cir.ptr<!s32i>, %6 : !s32i), !cir.ptr<!s32i> loc(#loc282)
          %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc282)
          cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc283)
        } else {
          %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc284)
          %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc284)
          cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc285)
        } loc(#loc402)
      } loc(#loc400)
    } loc(#loc398)
    cir.return loc(#loc266)
  } loc(#loc396)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc404)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc290)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc291)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc405)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc293)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc406)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc295)
    cir.call @goodG2BSink(%4) : (!s32i) -> () loc(#loc296)
    cir.return loc(#loc287)
  } loc(#loc403)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_connect_socket_41.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":92:49)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc20 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":56:23)
#loc21 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":44:1)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":59:1)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":45:1)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":46:5)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":58:5)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":47:9)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":47:30)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":50:9)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":57:9)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":50:13)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":50:21)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":51:9)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":53:9)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":55:9)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":52:33)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":52:26)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":52:13)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":56:13)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":61:1)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":123:1)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":63:5)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":63:9)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":65:13)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":65:12)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":65:5)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":66:5)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":121:5)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":71:9)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":71:13)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":72:9)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":72:28)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":73:9)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":73:32)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":74:9)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":74:41)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":75:9)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":110:17)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":76:9)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":109:9)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":85:36)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":85:45)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":85:58)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":85:29)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":85:13)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":85:69)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":86:13)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":89:13)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":86:17)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":86:34)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":87:13)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":88:17)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":90:20)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":90:21)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":90:30)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":90:33)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":90:47)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":90:13)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":90:48)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":91:34)
#loc82 = loc("/usr/include/netinet/in.h":249:5)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":91:13)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":92:39)
#loc85 = loc("/usr/include/netinet/in.h":251:20)
#loc86 = loc("/usr/include/netinet/in.h":33:15)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":92:13)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":92:59)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":93:38)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":93:32)
#loc91 = loc("/usr/include/netinet/in.h":250:15)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":93:13)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":93:46)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":94:13)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":97:13)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":94:25)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":94:58)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":94:59)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":94:68)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":94:82)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":94:17)
#loc102 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":94:88)
#loc103 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":95:13)
#loc104 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":96:17)
#loc105 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":100:31)
#loc106 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":100:46)
#loc107 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":100:59)
#loc108 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":100:77)
#loc109 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":100:80)
#loc110 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":100:26)
#loc111 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":100:13)
#loc112 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":100:81)
#loc113 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":101:13)
#loc114 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":104:13)
#loc115 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":101:17)
#loc116 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":101:31)
#loc117 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":101:44)
#loc118 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":101:47)
#loc119 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":101:61)
#loc120 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":102:13)
#loc121 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":103:17)
#loc122 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":106:39)
#loc123 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":106:25)
#loc124 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":106:13)
#loc125 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":108:25)
#loc126 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":108:20)
#loc127 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":108:13)
#loc128 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":108:36)
#loc129 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":110:16)
#loc130 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":111:9)
#loc131 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":114:9)
#loc132 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":111:13)
#loc133 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":111:30)
#loc134 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":112:9)
#loc135 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":113:26)
#loc136 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":113:13)
#loc137 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":122:13)
#loc138 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":122:5)
#loc139 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":239:1)
#loc140 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":243:1)
#loc141 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":241:5)
#loc142 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":241:13)
#loc143 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":242:5)
#loc144 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":242:13)
#loc145 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":170:23)
#loc146 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":159:1)
#loc147 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":173:1)
#loc150 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":160:1)
#loc151 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":161:5)
#loc152 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":172:5)
#loc153 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":162:9)
#loc154 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":162:30)
#loc155 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":164:9)
#loc156 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":171:9)
#loc157 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":164:13)
#loc158 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":164:21)
#loc159 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":164:23)
#loc160 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":164:26)
#loc161 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":164:34)
#loc162 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":164:36)
#loc163 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":165:9)
#loc164 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":167:9)
#loc165 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":169:9)
#loc166 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":166:33)
#loc167 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":166:26)
#loc168 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":166:13)
#loc169 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":170:13)
#loc170 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":175:1)
#loc171 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":237:1)
#loc172 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":177:5)
#loc173 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":177:9)
#loc174 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":179:13)
#loc175 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":179:12)
#loc176 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":179:5)
#loc177 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":180:5)
#loc178 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":235:5)
#loc179 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":185:9)
#loc180 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":185:13)
#loc181 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":186:9)
#loc182 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":186:28)
#loc183 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":187:9)
#loc184 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":187:32)
#loc185 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":188:9)
#loc186 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":188:41)
#loc187 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":189:9)
#loc188 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":224:17)
#loc189 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":190:9)
#loc190 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":223:9)
#loc191 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":199:36)
#loc192 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":199:45)
#loc193 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":199:58)
#loc194 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":199:29)
#loc195 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":199:13)
#loc196 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":199:69)
#loc197 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":200:13)
#loc198 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":203:13)
#loc199 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":200:17)
#loc200 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":200:34)
#loc201 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":201:13)
#loc202 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":202:17)
#loc203 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":204:20)
#loc204 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":204:21)
#loc205 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":204:30)
#loc206 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":204:33)
#loc207 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":204:47)
#loc208 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":204:13)
#loc209 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":204:48)
#loc210 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":205:34)
#loc211 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":205:13)
#loc212 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":206:49)
#loc213 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":206:39)
#loc214 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":206:13)
#loc215 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":206:59)
#loc216 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":207:38)
#loc217 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":207:32)
#loc218 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":207:13)
#loc219 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":207:46)
#loc220 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":208:13)
#loc221 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":211:13)
#loc222 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":208:25)
#loc223 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":208:58)
#loc224 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":208:59)
#loc225 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":208:68)
#loc226 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":208:82)
#loc227 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":208:17)
#loc228 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":208:88)
#loc229 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":209:13)
#loc230 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":210:17)
#loc231 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":214:31)
#loc232 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":214:46)
#loc233 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":214:59)
#loc234 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":214:77)
#loc235 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":214:80)
#loc236 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":214:26)
#loc237 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":214:13)
#loc238 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":214:81)
#loc239 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":215:13)
#loc240 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":218:13)
#loc241 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":215:17)
#loc242 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":215:31)
#loc243 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":215:44)
#loc244 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":215:47)
#loc245 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":215:61)
#loc246 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":216:13)
#loc247 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":217:17)
#loc248 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":220:39)
#loc249 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":220:25)
#loc250 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":220:13)
#loc251 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":222:25)
#loc252 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":222:20)
#loc253 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":222:13)
#loc254 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":222:36)
#loc255 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":224:16)
#loc256 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":225:9)
#loc257 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":228:9)
#loc258 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":225:13)
#loc259 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":225:30)
#loc260 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":226:9)
#loc261 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":227:26)
#loc262 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":227:13)
#loc263 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":236:17)
#loc264 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":236:5)
#loc265 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":130:1)
#loc266 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":145:1)
#loc269 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":131:1)
#loc270 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":132:5)
#loc271 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":144:5)
#loc272 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":133:9)
#loc273 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":133:30)
#loc274 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":136:9)
#loc275 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":143:9)
#loc276 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":136:13)
#loc277 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":136:21)
#loc278 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":137:9)
#loc279 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":139:9)
#loc280 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":141:9)
#loc281 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":138:33)
#loc282 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":138:26)
#loc283 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":138:13)
#loc284 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":142:23)
#loc285 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":142:13)
#loc286 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":147:1)
#loc287 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":156:1)
#loc288 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":149:5)
#loc289 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":149:9)
#loc290 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":151:13)
#loc291 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":151:12)
#loc292 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":151:5)
#loc293 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":154:12)
#loc294 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":154:5)
#loc295 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":155:17)
#loc296 = loc("CWE126_Buffer_Overread__CWE129_connect_socket_41.c":155:5)
#loc297 = loc(fused[#loc1, #loc2])
#loc298 = loc(fused[#loc3, #loc4])
#loc299 = loc(fused[#loc6, #loc7])
#loc300 = loc(fused[#loc8, #loc9])
#loc301 = loc(fused[#loc10, #loc11])
#loc302 = loc(fused[#loc12, #loc13])
#loc303 = loc(fused[#loc14, #loc15])
#loc304 = loc(fused[#loc16, #loc17])
#loc305 = loc(fused[#loc18, #loc19])
#loc306 = loc(fused[#loc21, #loc22])
#loc308 = loc(fused[#loc26, #loc27])
#loc309 = loc(fused[#loc28, #loc29])
#loc310 = loc(fused[#loc30, #loc31])
#loc311 = loc(fused[#loc32, #loc33])
#loc312 = loc(fused[#loc34, #loc35, #loc36, #loc31])
#loc313 = loc(fused[#loc41, #loc42])
#loc314 = loc(fused[#loc43, #loc44])
#loc315 = loc(fused[#loc47, #loc45])
#loc316 = loc(fused[#loc48, #loc49])
#loc317 = loc(fused[#loc50, #loc51])
#loc318 = loc(fused[#loc52, #loc53])
#loc319 = loc(fused[#loc54, #loc55])
#loc320 = loc(fused[#loc56, #loc57])
#loc321 = loc(fused[#loc58, #loc59])
#loc322 = loc(fused[#loc60, #loc61])
#loc323 = loc(fused[#loc66, #loc67])
#loc324 = loc(fused[#loc68, #loc69])
#loc325 = loc(fused[#loc70, #loc71])
#loc326 = loc(fused[#loc72, #loc69])
#loc327 = loc(fused[#loc74, #loc75])
#loc328 = loc(fused[#loc77, #loc78])
#loc329 = loc(fused[#loc79, #loc80])
#loc330 = loc(fused[#loc83, #loc81])
#loc331 = loc(fused[#loc87, #loc88])
#loc332 = loc(fused[#loc92, #loc93])
#loc333 = loc(fused[#loc94, #loc95])
#loc334 = loc(fused[#loc97, #loc98])
#loc335 = loc(fused[#loc99, #loc100])
#loc336 = loc(fused[#loc101, #loc102])
#loc337 = loc(fused[#loc103, #loc95])
#loc338 = loc(fused[#loc107, #loc108])
#loc339 = loc(fused[#loc111, #loc112])
#loc340 = loc(fused[#loc113, #loc114])
#loc341 = loc(fused[#loc115, #loc116])
#loc342 = loc(fused[#loc118, #loc119])
#loc343 = loc(fused[#loc120, #loc114])
#loc344 = loc(fused[#loc124, #loc122])
#loc345 = loc(fused[#loc127, #loc128])
#loc346 = loc(fused[#loc130, #loc131])
#loc347 = loc(fused[#loc132, #loc133])
#loc348 = loc(fused[#loc134, #loc131])
#loc349 = loc(fused[#loc139, #loc140])
#loc350 = loc(fused[#loc141, #loc142])
#loc351 = loc(fused[#loc143, #loc144])
#loc352 = loc(fused[#loc146, #loc147])
#loc354 = loc(fused[#loc151, #loc152])
#loc355 = loc(fused[#loc153, #loc154])
#loc356 = loc(fused[#loc155, #loc156])
#loc357 = loc(fused[#loc157, #loc158])
#loc358 = loc(fused[#loc160, #loc162])
#loc359 = loc(fused[#loc163, #loc164, #loc165, #loc156])
#loc360 = loc(fused[#loc170, #loc171])
#loc361 = loc(fused[#loc172, #loc173])
#loc362 = loc(fused[#loc176, #loc174])
#loc363 = loc(fused[#loc177, #loc178])
#loc364 = loc(fused[#loc179, #loc180])
#loc365 = loc(fused[#loc181, #loc182])
#loc366 = loc(fused[#loc183, #loc184])
#loc367 = loc(fused[#loc185, #loc186])
#loc368 = loc(fused[#loc187, #loc188])
#loc369 = loc(fused[#loc189, #loc190])
#loc370 = loc(fused[#loc195, #loc196])
#loc371 = loc(fused[#loc197, #loc198])
#loc372 = loc(fused[#loc199, #loc200])
#loc373 = loc(fused[#loc201, #loc198])
#loc374 = loc(fused[#loc203, #loc204])
#loc375 = loc(fused[#loc206, #loc207])
#loc376 = loc(fused[#loc208, #loc209])
#loc377 = loc(fused[#loc211, #loc210])
#loc378 = loc(fused[#loc214, #loc215])
#loc379 = loc(fused[#loc218, #loc219])
#loc380 = loc(fused[#loc220, #loc221])
#loc381 = loc(fused[#loc223, #loc224])
#loc382 = loc(fused[#loc225, #loc226])
#loc383 = loc(fused[#loc227, #loc228])
#loc384 = loc(fused[#loc229, #loc221])
#loc385 = loc(fused[#loc233, #loc234])
#loc386 = loc(fused[#loc237, #loc238])
#loc387 = loc(fused[#loc239, #loc240])
#loc388 = loc(fused[#loc241, #loc242])
#loc389 = loc(fused[#loc244, #loc245])
#loc390 = loc(fused[#loc246, #loc240])
#loc391 = loc(fused[#loc250, #loc248])
#loc392 = loc(fused[#loc253, #loc254])
#loc393 = loc(fused[#loc256, #loc257])
#loc394 = loc(fused[#loc258, #loc259])
#loc395 = loc(fused[#loc260, #loc257])
#loc396 = loc(fused[#loc265, #loc266])
#loc398 = loc(fused[#loc270, #loc271])
#loc399 = loc(fused[#loc272, #loc273])
#loc400 = loc(fused[#loc274, #loc275])
#loc401 = loc(fused[#loc276, #loc277])
#loc402 = loc(fused[#loc278, #loc279, #loc280, #loc275])
#loc403 = loc(fused[#loc286, #loc287])
#loc404 = loc(fused[#loc288, #loc289])
#loc405 = loc(fused[#loc292, #loc290])
#loc406 = loc(fused[#loc294, #loc293])
