!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc54 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath":234:8)
#loc55 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath":234:14)
#loc120 = loc(fused[#loc54, #loc55])
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fscanf_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @__isoc23_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc97)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc98)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%f\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printIntLine(!s32i) loc(#loc99)
  cir.func @_ZN38CWE369_Divide_by_Zero__float_fscanf_333badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc101)
    %1 = cir.alloca !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc102)
    cir.store %0, %1 : !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>> loc(#loc13)
    %2 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc14)
    cir.store %2, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc103)
    %3 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc16)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc98)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc17)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %8 = cir.call @__isoc23_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!cir.float>) -> !s32i loc(#loc16)
    cir.scope {
      %9 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc105)
      %10 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.float>>, !cir.ptr<!cir.float> loc(#loc21)
      %11 = cir.load %10 : !cir.ptr<!cir.float>, !cir.float loc(#loc21)
      cir.store %11, %9 : !cir.float, !cir.ptr<!cir.float> loc(#loc105)
      cir.scope {
        %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc107)
        %13 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc26)
        %14 = cir.load %9 : !cir.ptr<!cir.float>, !cir.float loc(#loc27)
        %15 = cir.cast(floating, %14 : !cir.float), !cir.double loc(#loc27)
        %16 = cir.binop(div, %13, %15) : !cir.double loc(#loc108)
        %17 = cir.cast(float_to_int, %16 : !cir.double), !s32i loc(#loc108)
        cir.store %17, %12 : !s32i, !cir.ptr<!s32i> loc(#loc107)
        %18 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc28)
        cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc29)
      } loc(#loc106)
    } loc(#loc104)
    cir.return loc(#loc9)
  } loc(#loc100)
  cir.func internal private @_ZN38CWE369_Divide_by_Zero__float_fscanf_33L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc110)
    %1 = cir.alloca !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc111)
    cir.store %0, %1 : !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>> loc(#loc35)
    %2 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc36)
    cir.store %2, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc112)
    %3 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc38)
    cir.store %3, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc113)
    cir.scope {
      %4 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc115)
      %5 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.float>>, !cir.ptr<!cir.float> loc(#loc43)
      %6 = cir.load %5 : !cir.ptr<!cir.float>, !cir.float loc(#loc43)
      cir.store %6, %4 : !cir.float, !cir.ptr<!cir.float> loc(#loc115)
      cir.scope {
        %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc117)
        %8 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc48)
        %9 = cir.load %4 : !cir.ptr<!cir.float>, !cir.float loc(#loc49)
        %10 = cir.cast(floating, %9 : !cir.float), !cir.double loc(#loc49)
        %11 = cir.binop(div, %8, %10) : !cir.double loc(#loc118)
        %12 = cir.cast(float_to_int, %11 : !cir.double), !s32i loc(#loc118)
        cir.store %12, %7 : !s32i, !cir.ptr<!s32i> loc(#loc117)
        %13 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc50)
        cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc51)
      } loc(#loc116)
    } loc(#loc114)
    cir.return loc(#loc31)
  } loc(#loc109)
  cir.func linkonce_odr @_ZSt4fabsf(%arg0: !cir.float loc(fused[#loc54, #loc55])) -> !cir.float extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["__x", init] {alignment = 4 : i64} loc(#loc120)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["__retval"] {alignment = 4 : i64} loc(#loc53)
    cir.store %arg0, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc56)
    %2 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc57)
    %3 = cir.fabs %2 : !cir.float loc(#loc57)
    cir.store %3, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc121)
    %4 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc121)
    cir.return %4 : !cir.float loc(#loc121)
  } loc(#loc119)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc122)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc62)
  cir.func internal private @_ZN38CWE369_Divide_by_Zero__float_fscanf_33L7goodB2GEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc124)
    %1 = cir.alloca !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc125)
    cir.store %0, %1 : !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>> loc(#loc68)
    %2 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc69)
    cir.store %2, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc126)
    %3 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc71)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc98)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc72)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc73)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc73)
    %8 = cir.call @__isoc23_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!cir.float>) -> !s32i loc(#loc71)
    cir.scope {
      %9 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc128)
      %10 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.float>>, !cir.ptr<!cir.float> loc(#loc77)
      %11 = cir.load %10 : !cir.ptr<!cir.float>, !cir.float loc(#loc77)
      cir.store %11, %9 : !cir.float, !cir.ptr<!cir.float> loc(#loc128)
      cir.scope {
        %12 = cir.load %9 : !cir.ptr<!cir.float>, !cir.float loc(#loc80)
        %13 = cir.call @_ZSt4fabsf(%12) : (!cir.float) -> !cir.float loc(#loc81)
        %14 = cir.cast(floating, %13 : !cir.float), !cir.double loc(#loc81)
        %15 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc82)
        %16 = cir.cmp(gt, %14, %15) : !cir.double, !cir.bool loc(#loc130)
        cir.if %16 {
          %17 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc132)
          %18 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc88)
          %19 = cir.load %9 : !cir.ptr<!cir.float>, !cir.float loc(#loc89)
          %20 = cir.cast(floating, %19 : !cir.float), !cir.double loc(#loc89)
          %21 = cir.binop(div, %18, %20) : !cir.double loc(#loc133)
          %22 = cir.cast(float_to_int, %21 : !cir.double), !s32i loc(#loc133)
          cir.store %22, %17 : !s32i, !cir.ptr<!s32i> loc(#loc132)
          %23 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc90)
          cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc91)
        } else {
          %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc62)
          %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc62)
          cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc92)
        } loc(#loc131)
      } loc(#loc129)
    } loc(#loc127)
    cir.return loc(#loc64)
  } loc(#loc123)
  cir.func @_ZN38CWE369_Divide_by_Zero__float_fscanf_334goodEv() extra(#fn_attr) {
    cir.call @_ZN38CWE369_Divide_by_Zero__float_fscanf_33L7goodG2BEv() : () -> () loc(#loc95)
    cir.call @_ZN38CWE369_Divide_by_Zero__float_fscanf_33L7goodB2GEv() : () -> () loc(#loc96)
    cir.return loc(#loc94)
  } loc(#loc134)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fscanf_33.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":442:1)
#loc2 = loc("/usr/include/stdio.h":444:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":34:20)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc8 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":27:1)
#loc9 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":43:1)
#loc10 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":29:5)
#loc11 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":29:11)
#loc12 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":30:5)
#loc13 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":30:22)
#loc14 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":32:12)
#loc15 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":32:5)
#loc16 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":34:5)
#loc17 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":34:13)
#loc18 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":35:5)
#loc19 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":42:5)
#loc20 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":36:9)
#loc21 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":36:22)
#loc22 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":37:9)
#loc23 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":41:9)
#loc24 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":39:13)
#loc25 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":39:44)
#loc26 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":39:32)
#loc27 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":39:40)
#loc28 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":40:26)
#loc29 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":40:13)
#loc30 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":50:1)
#loc31 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":66:1)
#loc32 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":52:5)
#loc33 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":52:11)
#loc34 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":53:5)
#loc35 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":53:22)
#loc36 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":55:12)
#loc37 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":55:5)
#loc38 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":57:12)
#loc39 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":57:5)
#loc40 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":58:5)
#loc41 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":65:5)
#loc42 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":59:9)
#loc43 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":59:22)
#loc44 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":60:9)
#loc45 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":64:9)
#loc46 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":62:13)
#loc47 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":62:44)
#loc48 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":62:32)
#loc49 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":62:40)
#loc50 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":63:26)
#loc51 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":63:13)
#loc52 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath":233:3)
#loc53 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath":235:34)
#loc56 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath":235:3)
#loc57 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath":235:28)
#loc58 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath":235:5)
#loc59 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath":235:31)
#loc60 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc61 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc62 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":87:23)
#loc63 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":69:1)
#loc64 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":90:1)
#loc65 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":71:5)
#loc66 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":71:11)
#loc67 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":72:5)
#loc68 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":72:22)
#loc69 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":74:12)
#loc70 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":74:5)
#loc71 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":76:5)
#loc72 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":76:13)
#loc73 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":76:20)
#loc74 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":77:5)
#loc75 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":89:5)
#loc76 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":78:9)
#loc77 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":78:22)
#loc78 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":80:9)
#loc79 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":88:9)
#loc80 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":80:17)
#loc81 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":80:12)
#loc82 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":80:25)
#loc83 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":81:9)
#loc84 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":84:9)
#loc85 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":86:9)
#loc86 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":82:13)
#loc87 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":82:44)
#loc88 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":82:32)
#loc89 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":82:40)
#loc90 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":83:26)
#loc91 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":83:13)
#loc92 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":87:13)
#loc93 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":92:1)
#loc94 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":96:1)
#loc95 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":94:5)
#loc96 = loc("CWE369_Divide_by_Zero__float_fscanf_33.cpp":95:5)
#loc97 = loc(fused[#loc1, #loc2])
#loc98 = loc(fused[#loc3, #loc4])
#loc99 = loc(fused[#loc6, #loc7])
#loc100 = loc(fused[#loc8, #loc9])
#loc101 = loc(fused[#loc10, #loc11])
#loc102 = loc(fused[#loc12, #loc13])
#loc103 = loc(fused[#loc15, #loc14])
#loc104 = loc(fused[#loc18, #loc19])
#loc105 = loc(fused[#loc20, #loc21])
#loc106 = loc(fused[#loc22, #loc23])
#loc107 = loc(fused[#loc24, #loc25])
#loc108 = loc(fused[#loc26, #loc27])
#loc109 = loc(fused[#loc30, #loc31])
#loc110 = loc(fused[#loc32, #loc33])
#loc111 = loc(fused[#loc34, #loc35])
#loc112 = loc(fused[#loc37, #loc36])
#loc113 = loc(fused[#loc39, #loc38])
#loc114 = loc(fused[#loc40, #loc41])
#loc115 = loc(fused[#loc42, #loc43])
#loc116 = loc(fused[#loc44, #loc45])
#loc117 = loc(fused[#loc46, #loc47])
#loc118 = loc(fused[#loc48, #loc49])
#loc119 = loc(fused[#loc52, #loc53])
#loc121 = loc(fused[#loc58, #loc59])
#loc122 = loc(fused[#loc60, #loc61])
#loc123 = loc(fused[#loc63, #loc64])
#loc124 = loc(fused[#loc65, #loc66])
#loc125 = loc(fused[#loc67, #loc68])
#loc126 = loc(fused[#loc70, #loc69])
#loc127 = loc(fused[#loc74, #loc75])
#loc128 = loc(fused[#loc76, #loc77])
#loc129 = loc(fused[#loc78, #loc79])
#loc130 = loc(fused[#loc81, #loc82])
#loc131 = loc(fused[#loc83, #loc84, #loc85, #loc79])
#loc132 = loc(fused[#loc86, #loc87])
#loc133 = loc(fused[#loc88, #loc89])
#loc134 = loc(fused[#loc93, #loc94])
