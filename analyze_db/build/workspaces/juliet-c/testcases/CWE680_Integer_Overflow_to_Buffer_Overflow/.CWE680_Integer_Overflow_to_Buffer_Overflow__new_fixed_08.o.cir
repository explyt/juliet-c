!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func internal private @_ZL17staticReturnsTruev() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc2)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc3)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc170)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc170)
    cir.return %2 : !s32i loc(#loc170)
  } loc(#loc169)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc171)
  cir.func private @printIntLine(!s32i) loc(#loc172)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_083badEv() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc174)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc175)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc176)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc177)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc19)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc178)
    cir.br ^bb1 loc(#loc179)
  ^bb1:  // pred: ^bb0
    %6 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc23)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc180)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc181)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.int<2147483647> : !s32i loc(#loc26)
    %9 = cir.const #cir.int<2> : !s32i loc(#loc27)
    %10 = cir.binop(div, %8, %9) : !s32i loc(#loc182)
    %11 = cir.const #cir.int<2> : !s32i loc(#loc28)
    %12 = cir.binop(add, %10, %11) nsw : !s32i loc(#loc182)
    cir.store %12, %3 : !s32i, !cir.ptr<!s32i> loc(#loc183)
    cir.br ^bb3 loc(#loc22)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc22)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc184)
  ^bb5:  // pred: ^bb4
    %13 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc32)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc32)
    %15 = cir.const #cir.int<4> : !u64i loc(#loc185)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc186)
    cir.store %16, %0 : !u64i, !cir.ptr<!u64i> loc(#loc187)
    %17 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc36)
    %18 = cir.call @_Znam(%17) : (!u64i) -> !cir.ptr<!void> loc(#loc37)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc188)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc188)
    cir.store %20, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc189)
    cir.br ^bb6 loc(#loc190)
  ^bb6:  // pred: ^bb5
    %21 = cir.const #cir.int<0> : !s32i loc(#loc43)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc43)
    cir.store %22, %1 : !u64i, !cir.ptr<!u64i> loc(#loc191)
    cir.br ^bb7 loc(#loc190)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %23 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc45)
    %24 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc46)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc46)
    %26 = cir.cmp(lt, %23, %25) : !u64i, !cir.bool loc(#loc192)
    cir.brcond %26 ^bb8, ^bb12 loc(#loc192)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc193)
  ^bb9:  // pred: ^bb8
    %27 = cir.const #cir.int<0> : !s32i loc(#loc48)
    %28 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc49)
    %29 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc50)
    %30 = cir.ptr_stride(%28 : !cir.ptr<!s32i>, %29 : !u64i), !cir.ptr<!s32i> loc(#loc51)
    cir.store %27, %30 : !s32i, !cir.ptr<!s32i> loc(#loc194)
    cir.br ^bb10 loc(#loc42)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc42)
  ^bb11:  // pred: ^bb10
    %31 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc52)
    %32 = cir.unary(inc, %31) : !u64i, !u64i loc(#loc53)
    cir.store %32, %1 : !u64i, !cir.ptr<!u64i> loc(#loc195)
    cir.br ^bb7 loc(#loc190)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc42)
  ^bb13:  // pred: ^bb12
    %33 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc54)
    %34 = cir.const #cir.int<0> : !s32i loc(#loc55)
    %35 = cir.ptr_stride(%33 : !cir.ptr<!s32i>, %34 : !s32i), !cir.ptr<!s32i> loc(#loc56)
    %36 = cir.load %35 : !cir.ptr<!s32i>, !s32i loc(#loc54)
    cir.call @printIntLine(%36) : (!s32i) -> () loc(#loc57)
    %37 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc58)
    cir.delete.array %37 : <!s32i> loc(#loc58)
    cir.br ^bb14 loc(#loc31)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc10)
  } loc(#loc173)
  cir.func internal private @_ZL18staticReturnsFalsev() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc60)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc61)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc197)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc197)
    cir.return %2 : !s32i loc(#loc197)
  } loc(#loc196)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc198)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc65)
  cir.func internal private @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08L8goodG2B1Ev() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc200)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc201)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc202)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc203)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc75)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc76)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc204)
    cir.br ^bb1 loc(#loc205)
  ^bb1:  // pred: ^bb0
    %6 = cir.call @_ZL18staticReturnsFalsev() : () -> !s32i loc(#loc80)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc206)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc207)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc65)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    cir.br ^bb4 loc(#loc83)
  ^bb3:  // pred: ^bb1
    %10 = cir.const #cir.int<20> : !s32i loc(#loc86)
    cir.store %10, %3 : !s32i, !cir.ptr<!s32i> loc(#loc208)
    cir.br ^bb4 loc(#loc79)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc79)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc209)
  ^bb6:  // pred: ^bb5
    %11 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc90)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc90)
    %13 = cir.const #cir.int<4> : !u64i loc(#loc210)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc211)
    cir.store %14, %0 : !u64i, !cir.ptr<!u64i> loc(#loc212)
    %15 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc94)
    %16 = cir.call @_Znam(%15) : (!u64i) -> !cir.ptr<!void> loc(#loc95)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc213)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc213)
    cir.store %18, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc214)
    cir.br ^bb7 loc(#loc215)
  ^bb7:  // pred: ^bb6
    %19 = cir.const #cir.int<0> : !s32i loc(#loc101)
    %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc101)
    cir.store %20, %1 : !u64i, !cir.ptr<!u64i> loc(#loc216)
    cir.br ^bb8 loc(#loc215)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %21 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc103)
    %22 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc104)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc104)
    %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc217)
    cir.brcond %24 ^bb9, ^bb13 loc(#loc217)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc218)
  ^bb10:  // pred: ^bb9
    %25 = cir.const #cir.int<0> : !s32i loc(#loc106)
    %26 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc107)
    %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc108)
    %28 = cir.ptr_stride(%26 : !cir.ptr<!s32i>, %27 : !u64i), !cir.ptr<!s32i> loc(#loc109)
    cir.store %25, %28 : !s32i, !cir.ptr<!s32i> loc(#loc219)
    cir.br ^bb11 loc(#loc100)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc100)
  ^bb12:  // pred: ^bb11
    %29 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc110)
    %30 = cir.unary(inc, %29) : !u64i, !u64i loc(#loc111)
    cir.store %30, %1 : !u64i, !cir.ptr<!u64i> loc(#loc220)
    cir.br ^bb8 loc(#loc215)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc100)
  ^bb14:  // pred: ^bb13
    %31 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc112)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc113)
    %33 = cir.ptr_stride(%31 : !cir.ptr<!s32i>, %32 : !s32i), !cir.ptr<!s32i> loc(#loc114)
    %34 = cir.load %33 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    cir.call @printIntLine(%34) : (!s32i) -> () loc(#loc115)
    %35 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc116)
    cir.delete.array %35 : <!s32i> loc(#loc116)
    cir.br ^bb15 loc(#loc89)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc67)
  } loc(#loc199)
  cir.func internal private @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08L8goodG2B2Ev() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc222)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc223)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc224)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc225)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc126)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc127)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc226)
    cir.br ^bb1 loc(#loc227)
  ^bb1:  // pred: ^bb0
    %6 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc131)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc228)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc229)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.int<20> : !s32i loc(#loc134)
    cir.store %8, %3 : !s32i, !cir.ptr<!s32i> loc(#loc230)
    cir.br ^bb3 loc(#loc130)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc130)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc231)
  ^bb5:  // pred: ^bb4
    %9 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc138)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc138)
    %11 = cir.const #cir.int<4> : !u64i loc(#loc232)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc233)
    cir.store %12, %0 : !u64i, !cir.ptr<!u64i> loc(#loc234)
    %13 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc142)
    %14 = cir.call @_Znam(%13) : (!u64i) -> !cir.ptr<!void> loc(#loc143)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc235)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc235)
    cir.store %16, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc236)
    cir.br ^bb6 loc(#loc237)
  ^bb6:  // pred: ^bb5
    %17 = cir.const #cir.int<0> : !s32i loc(#loc149)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc149)
    cir.store %18, %1 : !u64i, !cir.ptr<!u64i> loc(#loc238)
    cir.br ^bb7 loc(#loc237)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc151)
    %20 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc152)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc152)
    %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc239)
    cir.brcond %22 ^bb8, ^bb12 loc(#loc239)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc240)
  ^bb9:  // pred: ^bb8
    %23 = cir.const #cir.int<0> : !s32i loc(#loc154)
    %24 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc155)
    %25 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc156)
    %26 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %25 : !u64i), !cir.ptr<!s32i> loc(#loc157)
    cir.store %23, %26 : !s32i, !cir.ptr<!s32i> loc(#loc241)
    cir.br ^bb10 loc(#loc148)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc148)
  ^bb11:  // pred: ^bb10
    %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc158)
    %28 = cir.unary(inc, %27) : !u64i, !u64i loc(#loc159)
    cir.store %28, %1 : !u64i, !cir.ptr<!u64i> loc(#loc242)
    cir.br ^bb7 loc(#loc237)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc148)
  ^bb13:  // pred: ^bb12
    %29 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc160)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc161)
    %31 = cir.ptr_stride(%29 : !cir.ptr<!s32i>, %30 : !s32i), !cir.ptr<!s32i> loc(#loc162)
    %32 = cir.load %31 : !cir.ptr<!s32i>, !s32i loc(#loc160)
    cir.call @printIntLine(%32) : (!s32i) -> () loc(#loc163)
    %33 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc164)
    cir.delete.array %33 : <!s32i> loc(#loc164)
    cir.br ^bb14 loc(#loc137)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc118)
  } loc(#loc221)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_084goodEv() extra(#fn_attr) {
    cir.call @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08L8goodG2B1Ev() : () -> () loc(#loc167)
    cir.call @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08L8goodG2B2Ev() : () -> () loc(#loc168)
    cir.return loc(#loc166)
  } loc(#loc243)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":0:0)
#loc1 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":22:1)
#loc2 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":25:1)
#loc3 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":24:12)
#loc4 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":24:5)
#loc5 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc6 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":37:1)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":62:1)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":50:9)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":50:16)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":50:26)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":51:9)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":51:14)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":39:5)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":39:9)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":41:13)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":41:12)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":41:5)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":42:5)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":48:5)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":42:8)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":42:26)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":43:5)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":45:16)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":45:26)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":45:30)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":45:9)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":49:5)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":61:5)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":53:21)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":53:28)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":53:38)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":53:9)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":54:37)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":37:6)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":54:28)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":54:46)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":54:9)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":55:9)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":58:9)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":55:18)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":55:14)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":55:21)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":55:33)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":56:9)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":57:29)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":57:13)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":57:24)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":57:25)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":55:40)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":55:39)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":59:22)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":59:33)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":59:34)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":59:9)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":60:19)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":27:1)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":30:1)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":29:12)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":29:5)
#loc63 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc64 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":77:19)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":69:1)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":97:1)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":85:9)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":85:16)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":85:26)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":86:9)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":86:14)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":71:5)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":71:9)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":73:13)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":73:12)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":73:5)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":74:5)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":83:5)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":74:8)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":74:27)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":75:5)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":78:5)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":80:5)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":77:9)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":82:16)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":82:9)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":84:5)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":96:5)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":88:21)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":88:28)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":88:38)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":88:9)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":89:37)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":69:13)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":89:28)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":89:46)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":89:9)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":90:9)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":93:9)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":90:18)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":90:14)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":90:21)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":90:33)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":91:9)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":92:29)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":92:13)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":92:24)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":92:25)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":90:40)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":90:39)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":94:22)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":94:33)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":94:34)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":94:9)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":95:19)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":100:1)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":123:1)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":111:9)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":111:16)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":111:26)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":112:9)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":112:14)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":102:5)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":102:9)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":104:13)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":104:12)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":104:5)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":105:5)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":109:5)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":105:8)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":105:26)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":106:5)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":108:16)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":108:9)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":110:5)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":122:5)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":114:21)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":114:28)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":114:38)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":114:9)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":115:37)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":100:13)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":115:28)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":115:46)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":115:9)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":116:9)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":119:9)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":116:18)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":116:14)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":116:21)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":116:33)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":117:9)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":118:29)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":118:13)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":118:24)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":118:25)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":116:40)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":116:39)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":120:22)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":120:33)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":120:34)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":120:9)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":121:19)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":125:1)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":129:1)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":127:5)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_08.cpp":128:5)
#loc169 = loc(fused[#loc1, #loc2])
#loc170 = loc(fused[#loc4, #loc3])
#loc171 = loc(fused[#loc5, #loc6])
#loc172 = loc(fused[#loc7, #loc8])
#loc173 = loc(fused[#loc9, #loc10])
#loc174 = loc(fused[#loc11, #loc12])
#loc175 = loc(fused[#loc11, #loc13])
#loc176 = loc(fused[#loc14, #loc15])
#loc177 = loc(fused[#loc16, #loc17])
#loc178 = loc(fused[#loc20, #loc18])
#loc179 = loc(fused[#loc21, #loc22])
#loc180 = loc(fused[#loc23, #loc24])
#loc181 = loc(fused[#loc25, #loc22])
#loc182 = loc(fused[#loc26, #loc27])
#loc183 = loc(fused[#loc29, #loc28])
#loc184 = loc(fused[#loc30, #loc31])
#loc185 = loc(fused[#loc33, #loc34])
#loc186 = loc(fused[#loc32, #loc34])
#loc187 = loc(fused[#loc35, #loc34])
#loc188 = loc(fused[#loc38, #loc39])
#loc189 = loc(fused[#loc40, #loc39])
#loc190 = loc(fused[#loc41, #loc42])
#loc191 = loc(fused[#loc44, #loc43])
#loc192 = loc(fused[#loc45, #loc46])
#loc193 = loc(fused[#loc47, #loc42])
#loc194 = loc(fused[#loc49, #loc48])
#loc195 = loc(fused[#loc53, #loc52])
#loc196 = loc(fused[#loc59, #loc60])
#loc197 = loc(fused[#loc62, #loc61])
#loc198 = loc(fused[#loc63, #loc64])
#loc199 = loc(fused[#loc66, #loc67])
#loc200 = loc(fused[#loc68, #loc69])
#loc201 = loc(fused[#loc68, #loc70])
#loc202 = loc(fused[#loc71, #loc72])
#loc203 = loc(fused[#loc73, #loc74])
#loc204 = loc(fused[#loc77, #loc75])
#loc205 = loc(fused[#loc78, #loc79])
#loc206 = loc(fused[#loc80, #loc81])
#loc207 = loc(fused[#loc82, #loc83, #loc84, #loc79])
#loc208 = loc(fused[#loc87, #loc86])
#loc209 = loc(fused[#loc88, #loc89])
#loc210 = loc(fused[#loc91, #loc92])
#loc211 = loc(fused[#loc90, #loc92])
#loc212 = loc(fused[#loc93, #loc92])
#loc213 = loc(fused[#loc96, #loc97])
#loc214 = loc(fused[#loc98, #loc97])
#loc215 = loc(fused[#loc99, #loc100])
#loc216 = loc(fused[#loc102, #loc101])
#loc217 = loc(fused[#loc103, #loc104])
#loc218 = loc(fused[#loc105, #loc100])
#loc219 = loc(fused[#loc107, #loc106])
#loc220 = loc(fused[#loc111, #loc110])
#loc221 = loc(fused[#loc117, #loc118])
#loc222 = loc(fused[#loc119, #loc120])
#loc223 = loc(fused[#loc119, #loc121])
#loc224 = loc(fused[#loc122, #loc123])
#loc225 = loc(fused[#loc124, #loc125])
#loc226 = loc(fused[#loc128, #loc126])
#loc227 = loc(fused[#loc129, #loc130])
#loc228 = loc(fused[#loc131, #loc132])
#loc229 = loc(fused[#loc133, #loc130])
#loc230 = loc(fused[#loc135, #loc134])
#loc231 = loc(fused[#loc136, #loc137])
#loc232 = loc(fused[#loc139, #loc140])
#loc233 = loc(fused[#loc138, #loc140])
#loc234 = loc(fused[#loc141, #loc140])
#loc235 = loc(fused[#loc144, #loc145])
#loc236 = loc(fused[#loc146, #loc145])
#loc237 = loc(fused[#loc147, #loc148])
#loc238 = loc(fused[#loc150, #loc149])
#loc239 = loc(fused[#loc151, #loc152])
#loc240 = loc(fused[#loc153, #loc148])
#loc241 = loc(fused[#loc155, #loc154])
#loc242 = loc(fused[#loc159, #loc158])
#loc243 = loc(fused[#loc165, #loc166])
