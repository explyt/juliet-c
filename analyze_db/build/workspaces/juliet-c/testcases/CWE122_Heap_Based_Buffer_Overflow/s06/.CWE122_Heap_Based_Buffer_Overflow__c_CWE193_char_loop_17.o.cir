!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc145)
  cir.global "private" constant cir_private @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17_bad.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc146)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc147)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc148)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc149)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc150)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc151)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc146)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc153)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc154)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc155)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc156)
    %5 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc24)
    cir.store %5, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc157)
    cir.br ^bb1 loc(#loc158)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.int<0> : !s32i loc(#loc28)
    cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc159)
    cir.br ^bb2 loc(#loc158)
  ^bb2:  // 2 preds: ^bb1, ^bb10
    %7 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc30)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc160)
    cir.brcond %9 ^bb3, ^bb11 loc(#loc32)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc161)
  ^bb4:  // pred: ^bb3
    %10 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc34)
    %11 = cir.const #cir.int<10> : !s32i loc(#loc35)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc35)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc162)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc163)
    %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc34)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc164)
    cir.store %16, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc165)
    cir.br ^bb5 loc(#loc166)
  ^bb5:  // pred: ^bb4
    %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc43)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc43)
    %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc167)
    cir.brcond %20 ^bb6, ^bb7 loc(#loc168)
  ^bb6:  // pred: ^bb5
    %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc45)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc46)
    %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc47)
    cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc45)
    cir.br ^bb7 loc(#loc41)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc41)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc27)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc27)
  ^bb10:  // pred: ^bb9
    %24 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc48)
    %25 = cir.unary(inc, %24) nsw : !s32i, !s32i loc(#loc49)
    cir.store %25, %3 : !s32i, !cir.ptr<!s32i> loc(#loc169)
    cir.br ^bb2 loc(#loc158)
  ^bb11:  // pred: ^bb2
    cir.br ^bb12 loc(#loc27)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc170)
  ^bb13:  // pred: ^bb12
    %26 = cir.get_global @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17_bad.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc146)
    cir.copy %26 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc146)
    %27 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc52)
    %28 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc53)
    %29 = cir.call @strlen(%28) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc52)
    cir.store %29, %2 : !u64i, !cir.ptr<!u64i> loc(#loc171)
    cir.br ^bb14 loc(#loc172)
  ^bb14:  // pred: ^bb13
    %30 = cir.const #cir.int<0> : !s32i loc(#loc58)
    %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc58)
    cir.store %31, %1 : !u64i, !cir.ptr<!u64i> loc(#loc173)
    cir.br ^bb15 loc(#loc172)
  ^bb15:  // 2 preds: ^bb14, ^bb19
    %32 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc60)
    %33 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc61)
    %34 = cir.const #cir.int<1> : !s32i loc(#loc62)
    %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc62)
    %36 = cir.binop(add, %33, %35) : !u64i loc(#loc174)
    %37 = cir.cmp(lt, %32, %36) : !u64i, !cir.bool loc(#loc175)
    cir.brcond %37 ^bb16, ^bb20 loc(#loc63)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc176)
  ^bb17:  // pred: ^bb16
    %38 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc65)
    %39 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc66)
    %40 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %38 : !u64i), !cir.ptr<!s8i> loc(#loc66)
    %41 = cir.load %40 : !cir.ptr<!s8i>, !s8i loc(#loc66)
    %42 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
    %43 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc68)
    %44 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %43 : !u64i), !cir.ptr<!s8i> loc(#loc69)
    cir.store %41, %44 : !s8i, !cir.ptr<!s8i> loc(#loc177)
    cir.br ^bb18 loc(#loc57)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc57)
  ^bb19:  // pred: ^bb18
    %45 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc71)
    %46 = cir.unary(inc, %45) : !u64i, !u64i loc(#loc72)
    cir.store %46, %1 : !u64i, !cir.ptr<!u64i> loc(#loc178)
    cir.br ^bb15 loc(#loc172)
  ^bb20:  // pred: ^bb15
    cir.br ^bb21 loc(#loc57)
  ^bb21:  // pred: ^bb20
    %47 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%47) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    %48 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
    %49 = cir.cast(bitcast, %48 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc75)
    cir.call @free(%49) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc76)
    cir.br ^bb22 loc(#loc51)
  ^bb22:  // pred: ^bb21
    cir.return loc(#loc16)
  } loc(#loc152)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc180)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc79)
    cir.return loc(#loc78)
  } loc(#loc179)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc145)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc182)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc183)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc184)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc185)
    %5 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc90)
    cir.store %5, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc186)
    cir.br ^bb1 loc(#loc187)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.int<0> : !s32i loc(#loc94)
    cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc188)
    cir.br ^bb2 loc(#loc187)
  ^bb2:  // 2 preds: ^bb1, ^bb10
    %7 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc96)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc97)
    %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc189)
    cir.brcond %9 ^bb3, ^bb11 loc(#loc98)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc190)
  ^bb4:  // pred: ^bb3
    %10 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc100)
    %11 = cir.const #cir.int<10> : !s32i loc(#loc101)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc102)
    %13 = cir.binop(add, %11, %12) nsw : !s32i loc(#loc101)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc101)
    %15 = cir.const #cir.int<1> : !u64i loc(#loc191)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc192)
    %17 = cir.call @malloc(%16) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc100)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc193)
    cir.store %18, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc194)
    cir.br ^bb5 loc(#loc195)
  ^bb5:  // pred: ^bb4
    %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc111)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc111)
    %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc196)
    cir.brcond %22 ^bb6, ^bb7 loc(#loc197)
  ^bb6:  // pred: ^bb5
    %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc113)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc114)
    %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc115)
    cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc113)
    cir.br ^bb7 loc(#loc109)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc109)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc93)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc93)
  ^bb10:  // pred: ^bb9
    %26 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc116)
    %27 = cir.unary(inc, %26) nsw : !s32i, !s32i loc(#loc117)
    cir.store %27, %3 : !s32i, !cir.ptr<!s32i> loc(#loc198)
    cir.br ^bb2 loc(#loc187)
  ^bb11:  // pred: ^bb2
    cir.br ^bb12 loc(#loc93)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc199)
  ^bb13:  // pred: ^bb12
    %28 = cir.get_global @__const.goodG2B.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc145)
    cir.copy %28 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc145)
    %29 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc120)
    %30 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc121)
    %31 = cir.call @strlen(%30) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc120)
    cir.store %31, %2 : !u64i, !cir.ptr<!u64i> loc(#loc200)
    cir.br ^bb14 loc(#loc201)
  ^bb14:  // pred: ^bb13
    %32 = cir.const #cir.int<0> : !s32i loc(#loc126)
    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc126)
    cir.store %33, %1 : !u64i, !cir.ptr<!u64i> loc(#loc202)
    cir.br ^bb15 loc(#loc201)
  ^bb15:  // 2 preds: ^bb14, ^bb19
    %34 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc128)
    %35 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc129)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc130)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc130)
    %38 = cir.binop(add, %35, %37) : !u64i loc(#loc203)
    %39 = cir.cmp(lt, %34, %38) : !u64i, !cir.bool loc(#loc204)
    cir.brcond %39 ^bb16, ^bb20 loc(#loc131)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc205)
  ^bb17:  // pred: ^bb16
    %40 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc133)
    %41 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc134)
    %42 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %40 : !u64i), !cir.ptr<!s8i> loc(#loc134)
    %43 = cir.load %42 : !cir.ptr<!s8i>, !s8i loc(#loc134)
    %44 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
    %45 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc136)
    %46 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %45 : !u64i), !cir.ptr<!s8i> loc(#loc137)
    cir.store %43, %46 : !s8i, !cir.ptr<!s8i> loc(#loc206)
    cir.br ^bb18 loc(#loc125)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc125)
  ^bb19:  // pred: ^bb18
    %47 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc139)
    %48 = cir.unary(inc, %47) : !u64i, !u64i loc(#loc140)
    cir.store %48, %1 : !u64i, !cir.ptr<!u64i> loc(#loc207)
    cir.br ^bb15 loc(#loc201)
  ^bb20:  // pred: ^bb15
    cir.br ^bb21 loc(#loc125)
  ^bb21:  // pred: ^bb20
    %49 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc141)
    cir.call @printLine(%49) : (!cir.ptr<!s8i>) -> () loc(#loc142)
    %50 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc143)
    %51 = cir.cast(bitcast, %50 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc143)
    cir.call @free(%51) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc144)
    cir.br ^bb22 loc(#loc119)
  ^bb22:  // pred: ^bb21
    cir.return loc(#loc82)
  } loc(#loc181)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":71:9)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":71:29)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":40:9)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":40:29)
#loc5 = loc("/usr/include/stdlib.h":672:1)
#loc6 = loc("/usr/include/stdlib.h":672:45)
#loc7 = loc("/usr/include/stdlib.h":756:1)
#loc8 = loc("/usr/include/stdlib.h":756:70)
#loc9 = loc("/usr/include/string.h":407:1)
#loc10 = loc("/usr/include/string.h":408:33)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("/usr/include/stdlib.h":687:1)
#loc14 = loc("/usr/include/stdlib.h":687:32)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":28:1)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":52:1)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":41:9)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":41:16)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":41:19)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":30:5)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":30:9)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":31:5)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":31:12)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":32:12)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":32:5)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":33:5)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":38:5)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":33:13)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":33:9)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":33:16)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":33:20)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":33:18)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":34:5)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":36:24)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":36:31)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":36:34)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":36:45)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":36:46)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":36:9)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":37:9)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":37:37)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":37:13)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":37:21)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":37:27)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":37:28)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":37:34)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":37:33)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":33:24)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":33:23)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":39:5)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":51:5)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":42:21)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":42:28)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":42:9)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":42:34)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":45:9)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":48:9)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":45:18)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":45:14)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":45:21)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":45:25)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":45:37)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":45:23)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":46:9)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":47:30)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":47:23)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":47:13)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":47:18)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":47:19)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":47:31)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":45:41)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":45:40)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":49:19)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":49:9)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":50:14)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":50:9)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":85:1)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":88:1)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":87:5)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":87:13)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":59:1)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":83:1)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":72:9)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":72:16)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":72:19)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":61:5)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":61:9)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":62:5)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":62:12)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":63:12)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":63:5)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":64:5)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":69:5)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":64:13)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":64:9)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":64:16)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":64:20)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":64:18)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":65:5)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":67:24)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":67:32)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":67:35)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":67:38)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":67:49)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":67:31)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":67:50)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":67:9)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":68:9)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":68:37)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":68:13)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":68:21)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":68:27)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":68:28)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":68:34)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":68:33)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":64:24)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":64:23)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":70:5)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":82:5)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":73:21)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":73:28)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":73:9)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":73:34)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":76:9)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":79:9)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":76:18)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":76:14)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":76:21)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":76:25)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":76:37)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":76:23)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":77:9)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":78:30)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":78:23)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":78:13)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":78:18)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":78:19)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":78:31)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":76:41)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":76:40)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":80:19)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":80:9)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":81:14)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_17.c":81:9)
#loc145 = loc(fused[#loc1, #loc2])
#loc146 = loc(fused[#loc3, #loc4])
#loc147 = loc(fused[#loc5, #loc6])
#loc148 = loc(fused[#loc7, #loc8])
#loc149 = loc(fused[#loc9, #loc10])
#loc150 = loc(fused[#loc11, #loc12])
#loc151 = loc(fused[#loc13, #loc14])
#loc152 = loc(fused[#loc15, #loc16])
#loc153 = loc(fused[#loc17, #loc18])
#loc154 = loc(fused[#loc17, #loc19])
#loc155 = loc(fused[#loc20, #loc21])
#loc156 = loc(fused[#loc22, #loc23])
#loc157 = loc(fused[#loc25, #loc24])
#loc158 = loc(fused[#loc26, #loc27])
#loc159 = loc(fused[#loc29, #loc28])
#loc160 = loc(fused[#loc30, #loc31])
#loc161 = loc(fused[#loc33, #loc27])
#loc162 = loc(fused[#loc36, #loc37])
#loc163 = loc(fused[#loc35, #loc37])
#loc164 = loc(fused[#loc34, #loc38])
#loc165 = loc(fused[#loc39, #loc38])
#loc166 = loc(fused[#loc40, #loc41])
#loc167 = loc(fused[#loc42, #loc43])
#loc168 = loc(fused[#loc44, #loc41])
#loc169 = loc(fused[#loc49, #loc48])
#loc170 = loc(fused[#loc50, #loc51])
#loc171 = loc(fused[#loc54, #loc55])
#loc172 = loc(fused[#loc56, #loc57])
#loc173 = loc(fused[#loc59, #loc58])
#loc174 = loc(fused[#loc61, #loc62])
#loc175 = loc(fused[#loc60, #loc62])
#loc176 = loc(fused[#loc64, #loc57])
#loc177 = loc(fused[#loc67, #loc70])
#loc178 = loc(fused[#loc72, #loc71])
#loc179 = loc(fused[#loc77, #loc78])
#loc180 = loc(fused[#loc79, #loc80])
#loc181 = loc(fused[#loc81, #loc82])
#loc182 = loc(fused[#loc83, #loc84])
#loc183 = loc(fused[#loc83, #loc85])
#loc184 = loc(fused[#loc86, #loc87])
#loc185 = loc(fused[#loc88, #loc89])
#loc186 = loc(fused[#loc91, #loc90])
#loc187 = loc(fused[#loc92, #loc93])
#loc188 = loc(fused[#loc95, #loc94])
#loc189 = loc(fused[#loc96, #loc97])
#loc190 = loc(fused[#loc99, #loc93])
#loc191 = loc(fused[#loc103, #loc104])
#loc192 = loc(fused[#loc105, #loc104])
#loc193 = loc(fused[#loc100, #loc106])
#loc194 = loc(fused[#loc107, #loc106])
#loc195 = loc(fused[#loc108, #loc109])
#loc196 = loc(fused[#loc110, #loc111])
#loc197 = loc(fused[#loc112, #loc109])
#loc198 = loc(fused[#loc117, #loc116])
#loc199 = loc(fused[#loc118, #loc119])
#loc200 = loc(fused[#loc122, #loc123])
#loc201 = loc(fused[#loc124, #loc125])
#loc202 = loc(fused[#loc127, #loc126])
#loc203 = loc(fused[#loc129, #loc130])
#loc204 = loc(fused[#loc128, #loc130])
#loc205 = loc(fused[#loc132, #loc125])
#loc206 = loc(fused[#loc135, #loc138])
#loc207 = loc(fused[#loc140, #loc139])
