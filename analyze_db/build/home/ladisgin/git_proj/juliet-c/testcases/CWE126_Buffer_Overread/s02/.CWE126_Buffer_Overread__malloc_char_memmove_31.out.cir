!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc92 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":94:10)
#loc93 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":94:14)
#loc94 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":94:20)
#loc95 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":94:32)
#loc210 = loc(fused[#loc92, #loc93])
#loc211 = loc(fused[#loc94, #loc95])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__malloc_char_memmove_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc177)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc178)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc179)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc180)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc181)
  cir.func no_proto @CWE126_Buffer_Overread__malloc_char_memmove_31_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc183)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc15)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc184)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc17)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc18)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc18)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc185)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc186)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc17)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc187)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc188)
    cir.scope {
      %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
      %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc26)
      %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc26)
      %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc190)
      cir.if %26 {
        %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc28)
        %28 = cir.const #cir.int<1> : !s32i loc(#loc29)
        %29 = cir.unary(minus, %28) : !s32i, !s32i loc(#loc30)
        cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc28)
      } loc(#loc191)
    } loc(#loc189)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc31)
    %11 = cir.const #cir.int<65> : !s32i loc(#loc32)
    %12 = cir.const #cir.int<50> : !s32i loc(#loc33)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc33)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc33)
    cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc192)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc37)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc37)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
    %19 = cir.const #cir.int<50> : !s32i loc(#loc39)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc39)
    %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc41)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc193)
    cir.scope {
      %23 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc195)
      %24 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc196)
      %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
      cir.store %25, %23 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc195)
      %26 = cir.load %23 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
      cir.store %26, %24 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc196)
      cir.scope {
        %27 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc198)
        %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc52)
        %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc52)
        %30 = cir.const #cir.int<67> : !s32i loc(#loc53)
        %31 = cir.const #cir.int<100> : !s32i loc(#loc54)
        %32 = cir.const #cir.int<1> : !s32i loc(#loc55)
        %33 = cir.binop(sub, %31, %32) nsw : !s32i loc(#loc54)
        %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc54)
        cir.libc.memset %34 bytes from %29 set to %30 : !cir.ptr<!void>, !s32i, !u64i loc(#loc199)
        %35 = cir.const #cir.int<0> : !s32i loc(#loc58)
        %36 = cir.cast(integral, %35 : !s32i), !s8i loc(#loc58)
        %37 = cir.const #cir.int<100> : !s32i loc(#loc59)
        %38 = cir.const #cir.int<1> : !s32i loc(#loc60)
        %39 = cir.binop(sub, %37, %38) nsw : !s32i loc(#loc59)
        %40 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc61)
        %41 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %39 : !s32i), !cir.ptr<!s8i> loc(#loc61)
        cir.store %36, %41 : !s8i, !cir.ptr<!s8i> loc(#loc200)
        %42 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc62)
        %43 = cir.cast(bitcast, %42 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc62)
        %44 = cir.load %24 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
        %45 = cir.cast(bitcast, %44 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc63)
        %46 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc64)
        %47 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc65)
        %48 = cir.call @strlen(%47) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc64)
        %49 = cir.const #cir.int<1> : !u64i loc(#loc201)
        %50 = cir.binop(mul, %48, %49) : !u64i loc(#loc202)
        cir.libc.memmove %50 bytes from %45 to %43 : !cir.ptr<!void>, !u64i loc(#loc203)
        %51 = cir.const #cir.int<0> : !s32i loc(#loc70)
        %52 = cir.cast(integral, %51 : !s32i), !s8i loc(#loc70)
        %53 = cir.const #cir.int<100> : !s32i loc(#loc71)
        %54 = cir.const #cir.int<1> : !s32i loc(#loc72)
        %55 = cir.binop(sub, %53, %54) nsw : !s32i loc(#loc71)
        %56 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc73)
        %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc73)
        cir.store %52, %57 : !s8i, !cir.ptr<!s8i> loc(#loc204)
        %58 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc74)
        cir.call @printLine(%58) : (!cir.ptr<!s8i>) -> () loc(#loc75)
        %59 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc76)
        %60 = cir.load %24 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
        %61 = cir.cast(bitcast, %60 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc77)
        cir.call @free(%61) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc76)
      } loc(#loc197)
    } loc(#loc194)
    cir.return loc(#loc12)
  } loc(#loc182)
  cir.func no_proto @CWE126_Buffer_Overread__malloc_char_memmove_31_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc206)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc80)
    cir.return loc(#loc79)
  } loc(#loc205)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc207)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc208)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc86)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc87)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc88)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc89)
  cir.func @main(%arg0: !s32i loc(fused[#loc92, #loc93]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc94, #loc95])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc210)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc211)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc91)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc96)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc96)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc97)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc98)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc98)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc99)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc86)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc86)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc100)
    %8 = cir.get_global @CWE126_Buffer_Overread__malloc_char_memmove_31_good : !cir.ptr<!cir.func<!void ()>> loc(#loc212)
    cir.call @CWE126_Buffer_Overread__malloc_char_memmove_31_good() : () -> () loc(#loc101)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc87)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc87)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc103)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc88)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc88)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc104)
    %13 = cir.get_global @CWE126_Buffer_Overread__malloc_char_memmove_31_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc213)
    cir.call @CWE126_Buffer_Overread__malloc_char_memmove_31_bad() : () -> () loc(#loc105)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc89)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc89)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc107)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc108)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc214)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc214)
    cir.return %17 : !s32i loc(#loc214)
  } loc(#loc209)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc216)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc114)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc217)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc116)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc117)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc117)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc218)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc219)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc116)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc220)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc221)
    cir.scope {
      %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc124)
      %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc125)
      %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc125)
      %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc223)
      cir.if %26 {
        %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc127)
        %28 = cir.const #cir.int<1> : !s32i loc(#loc128)
        %29 = cir.unary(minus, %28) : !s32i, !s32i loc(#loc129)
        cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc127)
      } loc(#loc224)
    } loc(#loc222)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc130)
    %11 = cir.const #cir.int<65> : !s32i loc(#loc131)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc132)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc133)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc132)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc132)
    cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc225)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc136)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc136)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc137)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc138)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc139)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc138)
    %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc140)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc226)
    cir.scope {
      %23 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc228)
      %24 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc229)
      %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
      cir.store %25, %23 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc228)
      %26 = cir.load %23 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
      cir.store %26, %24 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc229)
      cir.scope {
        %27 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc231)
        %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc151)
        %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc151)
        %30 = cir.const #cir.int<67> : !s32i loc(#loc152)
        %31 = cir.const #cir.int<100> : !s32i loc(#loc153)
        %32 = cir.const #cir.int<1> : !s32i loc(#loc154)
        %33 = cir.binop(sub, %31, %32) nsw : !s32i loc(#loc153)
        %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc153)
        cir.libc.memset %34 bytes from %29 set to %30 : !cir.ptr<!void>, !s32i, !u64i loc(#loc232)
        %35 = cir.const #cir.int<0> : !s32i loc(#loc157)
        %36 = cir.cast(integral, %35 : !s32i), !s8i loc(#loc157)
        %37 = cir.const #cir.int<100> : !s32i loc(#loc158)
        %38 = cir.const #cir.int<1> : !s32i loc(#loc159)
        %39 = cir.binop(sub, %37, %38) nsw : !s32i loc(#loc158)
        %40 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc160)
        %41 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %39 : !s32i), !cir.ptr<!s8i> loc(#loc160)
        cir.store %36, %41 : !s8i, !cir.ptr<!s8i> loc(#loc233)
        %42 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc161)
        %43 = cir.cast(bitcast, %42 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc161)
        %44 = cir.load %24 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc162)
        %45 = cir.cast(bitcast, %44 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc162)
        %46 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc163)
        %47 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc164)
        %48 = cir.call @strlen(%47) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc163)
        %49 = cir.const #cir.int<1> : !u64i loc(#loc234)
        %50 = cir.binop(mul, %48, %49) : !u64i loc(#loc235)
        cir.libc.memmove %50 bytes from %45 to %43 : !cir.ptr<!void>, !u64i loc(#loc236)
        %51 = cir.const #cir.int<0> : !s32i loc(#loc169)
        %52 = cir.cast(integral, %51 : !s32i), !s8i loc(#loc169)
        %53 = cir.const #cir.int<100> : !s32i loc(#loc170)
        %54 = cir.const #cir.int<1> : !s32i loc(#loc171)
        %55 = cir.binop(sub, %53, %54) nsw : !s32i loc(#loc170)
        %56 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc172)
        %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc172)
        cir.store %52, %57 : !s8i, !cir.ptr<!s8i> loc(#loc237)
        %58 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc173)
        cir.call @printLine(%58) : (!cir.ptr<!s8i>) -> () loc(#loc174)
        %59 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc175)
        %60 = cir.load %24 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc176)
        %61 = cir.cast(bitcast, %60 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc176)
        cir.call @free(%61) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc175)
      } loc(#loc230)
    } loc(#loc227)
    cir.return loc(#loc111)
  } loc(#loc215)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__malloc_char_memmove_31.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":23:1)
#loc12 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":47:1)
#loc13 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":25:5)
#loc14 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":25:12)
#loc15 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":26:12)
#loc16 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":26:5)
#loc17 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":28:20)
#loc18 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":28:27)
#loc19 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":28:30)
#loc20 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":28:41)
#loc21 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":28:42)
#loc22 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":28:5)
#loc23 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":29:5)
#loc24 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":29:33)
#loc25 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":29:9)
#loc26 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":29:17)
#loc27 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":29:23)
#loc28 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":29:24)
#loc29 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":29:30)
#loc30 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":29:29)
#loc31 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":30:12)
#loc32 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":30:18)
#loc33 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":30:23)
#loc34 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":30:26)
#loc35 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":30:5)
#loc36 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":30:27)
#loc37 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":31:18)
#loc38 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":31:5)
#loc39 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":31:10)
#loc40 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":31:13)
#loc41 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":31:14)
#loc42 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":32:5)
#loc43 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":46:5)
#loc44 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":33:9)
#loc45 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":33:27)
#loc46 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":34:9)
#loc47 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":34:23)
#loc48 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":35:9)
#loc49 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":45:9)
#loc50 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":36:13)
#loc51 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":36:26)
#loc52 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":37:20)
#loc53 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":37:26)
#loc54 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":37:31)
#loc55 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":37:35)
#loc56 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":37:13)
#loc57 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":37:36)
#loc58 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":38:27)
#loc59 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":38:18)
#loc60 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":38:22)
#loc61 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":38:13)
#loc62 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":41:21)
#loc63 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":41:27)
#loc64 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":41:33)
#loc65 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":41:40)
#loc66 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":41:46)
#loc67 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":41:57)
#loc68 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":41:13)
#loc69 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":41:58)
#loc70 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":42:27)
#loc71 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":42:18)
#loc72 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":42:22)
#loc73 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":42:13)
#loc74 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":43:23)
#loc75 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":43:13)
#loc76 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":44:13)
#loc77 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":44:18)
#loc78 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":80:1)
#loc79 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":83:1)
#loc80 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":82:5)
#loc81 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":82:13)
#loc82 = loc("/usr/include/stdlib.h":575:1)
#loc83 = loc("/usr/include/stdlib.h":575:41)
#loc84 = loc("/usr/include/time.h":76:1)
#loc85 = loc("/usr/include/time.h":76:38)
#loc86 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":99:15)
#loc87 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":101:15)
#loc88 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":104:15)
#loc89 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":106:15)
#loc90 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":94:1)
#loc91 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":109:1)
#loc96 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":95:1)
#loc97 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":97:27)
#loc98 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":97:22)
#loc99 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":97:5)
#loc100 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":99:5)
#loc101 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":100:5)
#loc102 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":100:57)
#loc103 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":101:5)
#loc104 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":104:5)
#loc105 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":105:5)
#loc106 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":105:56)
#loc107 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":106:5)
#loc108 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":108:12)
#loc109 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":108:5)
#loc110 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":54:1)
#loc111 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":78:1)
#loc112 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":56:5)
#loc113 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":56:12)
#loc114 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":57:12)
#loc115 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":57:5)
#loc116 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":59:20)
#loc117 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":59:27)
#loc118 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":59:31)
#loc119 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":59:42)
#loc120 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":59:43)
#loc121 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":59:5)
#loc122 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":60:5)
#loc123 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":60:33)
#loc124 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":60:9)
#loc125 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":60:17)
#loc126 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":60:23)
#loc127 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":60:24)
#loc128 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":60:30)
#loc129 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":60:29)
#loc130 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":61:12)
#loc131 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":61:18)
#loc132 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":61:23)
#loc133 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":61:27)
#loc134 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":61:5)
#loc135 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":61:28)
#loc136 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":62:19)
#loc137 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":62:5)
#loc138 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":62:10)
#loc139 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":62:14)
#loc140 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":62:15)
#loc141 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":63:5)
#loc142 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":77:5)
#loc143 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":64:9)
#loc144 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":64:27)
#loc145 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":65:9)
#loc146 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":65:23)
#loc147 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":66:9)
#loc148 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":76:9)
#loc149 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":67:13)
#loc150 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":67:26)
#loc151 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":68:20)
#loc152 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":68:26)
#loc153 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":68:31)
#loc154 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":68:35)
#loc155 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":68:13)
#loc156 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":68:36)
#loc157 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":69:27)
#loc158 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":69:18)
#loc159 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":69:22)
#loc160 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":69:13)
#loc161 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":72:21)
#loc162 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":72:27)
#loc163 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":72:33)
#loc164 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":72:40)
#loc165 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":72:46)
#loc166 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":72:57)
#loc167 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":72:13)
#loc168 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":72:58)
#loc169 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":73:27)
#loc170 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":73:18)
#loc171 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":73:22)
#loc172 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":73:13)
#loc173 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":74:23)
#loc174 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":74:13)
#loc175 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":75:13)
#loc176 = loc("CWE126_Buffer_Overread__malloc_char_memmove_31.c":75:18)
#loc177 = loc(fused[#loc1, #loc2])
#loc178 = loc(fused[#loc3, #loc4])
#loc179 = loc(fused[#loc5, #loc6])
#loc180 = loc(fused[#loc7, #loc8])
#loc181 = loc(fused[#loc9, #loc10])
#loc182 = loc(fused[#loc11, #loc12])
#loc183 = loc(fused[#loc13, #loc14])
#loc184 = loc(fused[#loc16, #loc15])
#loc185 = loc(fused[#loc19, #loc20])
#loc186 = loc(fused[#loc18, #loc20])
#loc187 = loc(fused[#loc17, #loc21])
#loc188 = loc(fused[#loc22, #loc21])
#loc189 = loc(fused[#loc23, #loc24])
#loc190 = loc(fused[#loc25, #loc26])
#loc191 = loc(fused[#loc27, #loc24])
#loc192 = loc(fused[#loc35, #loc36])
#loc193 = loc(fused[#loc38, #loc37])
#loc194 = loc(fused[#loc42, #loc43])
#loc195 = loc(fused[#loc44, #loc45])
#loc196 = loc(fused[#loc46, #loc47])
#loc197 = loc(fused[#loc48, #loc49])
#loc198 = loc(fused[#loc50, #loc51])
#loc199 = loc(fused[#loc56, #loc57])
#loc200 = loc(fused[#loc61, #loc58])
#loc201 = loc(fused[#loc66, #loc67])
#loc202 = loc(fused[#loc64, #loc67])
#loc203 = loc(fused[#loc68, #loc69])
#loc204 = loc(fused[#loc73, #loc70])
#loc205 = loc(fused[#loc78, #loc79])
#loc206 = loc(fused[#loc80, #loc81])
#loc207 = loc(fused[#loc82, #loc83])
#loc208 = loc(fused[#loc84, #loc85])
#loc209 = loc(fused[#loc90, #loc91])
#loc212 = loc(fused[#loc101, #loc102])
#loc213 = loc(fused[#loc105, #loc106])
#loc214 = loc(fused[#loc109, #loc108])
#loc215 = loc(fused[#loc110, #loc111])
#loc216 = loc(fused[#loc112, #loc113])
#loc217 = loc(fused[#loc115, #loc114])
#loc218 = loc(fused[#loc118, #loc119])
#loc219 = loc(fused[#loc117, #loc119])
#loc220 = loc(fused[#loc116, #loc120])
#loc221 = loc(fused[#loc121, #loc120])
#loc222 = loc(fused[#loc122, #loc123])
#loc223 = loc(fused[#loc124, #loc125])
#loc224 = loc(fused[#loc126, #loc123])
#loc225 = loc(fused[#loc134, #loc135])
#loc226 = loc(fused[#loc137, #loc136])
#loc227 = loc(fused[#loc141, #loc142])
#loc228 = loc(fused[#loc143, #loc144])
#loc229 = loc(fused[#loc145, #loc146])
#loc230 = loc(fused[#loc147, #loc148])
#loc231 = loc(fused[#loc149, #loc150])
#loc232 = loc(fused[#loc155, #loc156])
#loc233 = loc(fused[#loc160, #loc157])
#loc234 = loc(fused[#loc165, #loc166])
#loc235 = loc(fused[#loc163, #loc166])
#loc236 = loc(fused[#loc167, #loc168])
#loc237 = loc(fused[#loc172, #loc169])
