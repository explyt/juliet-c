!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
module @"/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" external @CWE124_Buffer_Underwrite__CWE839_connect_socket_68_badData : !s32i {alignment = 4 : i64} loc(#loc120)
  cir.func private @printIntLine(!s32i) loc(#loc121)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc122)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc7)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_connect_socket_68b_badSink() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc124)
    %1 = cir.get_global @CWE124_Buffer_Underwrite__CWE839_connect_socket_68_badData : !cir.ptr<!s32i> loc(#loc120)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc11)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc124)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc126)
      %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc127)
      %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc127)
      cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc127)
      cir.scope {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc20)
        %7 = cir.const #cir.int<10> : !s32i loc(#loc21)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc129)
        cir.if %8 {
          %9 = cir.const #cir.int<1> : !s32i loc(#loc25)
          %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc26)
          %11 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc27)
          %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc27)
          cir.store %9, %12 : !s32i, !cir.ptr<!s32i> loc(#loc131)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc30)
            cir.store %13, %3 : !s32i, !cir.ptr<!s32i> loc(#loc133)
            cir.for : cond {
              %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc32)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc33)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc134)
              cir.condition(%16) loc(#loc34)
            } body {
              cir.scope {
                %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc36)
                %15 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc37)
                %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc37)
                %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc37)
                cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc38)
              } loc(#loc135)
              cir.yield loc(#loc29)
            } step {
              %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc39)
              %15 = cir.unary(inc, %14) nsw : !s32i, !s32i loc(#loc40)
              cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc136)
              cir.yield loc(#loc132)
            } loc(#loc132)
          } loc(#loc132)
        } else {
          %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc7)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc7)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc41)
        } loc(#loc130)
      } loc(#loc128)
    } loc(#loc125)
    cir.return loc(#loc9)
  } loc(#loc123)
  cir.global "private" external @CWE124_Buffer_Underwrite__CWE839_connect_socket_68_goodG2BData : !s32i {alignment = 4 : i64} loc(#loc137)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_connect_socket_68b_goodG2BSink() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc139)
    %1 = cir.get_global @CWE124_Buffer_Underwrite__CWE839_connect_socket_68_goodG2BData : !cir.ptr<!s32i> loc(#loc137)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc47)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc139)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc141)
      %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc142)
      %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc142)
      cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc142)
      cir.scope {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc56)
        %7 = cir.const #cir.int<10> : !s32i loc(#loc57)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc144)
        cir.if %8 {
          %9 = cir.const #cir.int<1> : !s32i loc(#loc61)
          %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc62)
          %11 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc63)
          %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc63)
          cir.store %9, %12 : !s32i, !cir.ptr<!s32i> loc(#loc146)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc66)
            cir.store %13, %3 : !s32i, !cir.ptr<!s32i> loc(#loc148)
            cir.for : cond {
              %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc68)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc69)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc149)
              cir.condition(%16) loc(#loc70)
            } body {
              cir.scope {
                %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc72)
                %15 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc73)
                %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc73)
                %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc73)
                cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc74)
              } loc(#loc150)
              cir.yield loc(#loc65)
            } step {
              %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc75)
              %15 = cir.unary(inc, %14) nsw : !s32i, !s32i loc(#loc76)
              cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc151)
              cir.yield loc(#loc147)
            } loc(#loc147)
          } loc(#loc147)
        } else {
          %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc77)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc77)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc78)
        } loc(#loc145)
      } loc(#loc143)
    } loc(#loc140)
    cir.return loc(#loc45)
  } loc(#loc138)
  cir.global "private" external @CWE124_Buffer_Underwrite__CWE839_connect_socket_68_goodB2GData : !s32i {alignment = 4 : i64} loc(#loc152)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc81)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_connect_socket_68b_goodB2GSink() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc154)
    %1 = cir.get_global @CWE124_Buffer_Underwrite__CWE839_connect_socket_68_goodB2GData : !cir.ptr<!s32i> loc(#loc152)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc85)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc154)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc156)
      %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc157)
      %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc157)
      cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc157)
      cir.scope {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc94)
        %7 = cir.const #cir.int<0> : !s32i loc(#loc95)
        %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc159)
        %9 = cir.ternary(%8, true {
          %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc97)
          %11 = cir.const #cir.int<10> : !s32i loc(#loc98)
          %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc160)
          %13 = cir.ternary(%12, true {
            %14 = cir.const #true loc(#loc96)
            cir.yield %14 : !cir.bool loc(#loc96)
          }, false {
            %14 = cir.const #false loc(#loc96)
            cir.yield %14 : !cir.bool loc(#loc96)
          }) : (!cir.bool) -> !cir.bool loc(#loc96)
          cir.yield %13 : !cir.bool loc(#loc96)
        }, false {
          %10 = cir.const #false loc(#loc96)
          cir.yield %10 : !cir.bool loc(#loc96)
        }) : (!cir.bool) -> !cir.bool loc(#loc96)
        cir.if %9 {
          %10 = cir.const #cir.int<1> : !s32i loc(#loc103)
          %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc104)
          %12 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc105)
          %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc105)
          cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc162)
          cir.scope {
            %14 = cir.const #cir.int<0> : !s32i loc(#loc108)
            cir.store %14, %3 : !s32i, !cir.ptr<!s32i> loc(#loc164)
            cir.for : cond {
              %15 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc110)
              %16 = cir.const #cir.int<10> : !s32i loc(#loc111)
              %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc165)
              cir.condition(%17) loc(#loc112)
            } body {
              cir.scope {
                %15 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc114)
                %16 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc115)
                %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc115)
                %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc115)
                cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc116)
              } loc(#loc166)
              cir.yield loc(#loc107)
            } step {
              %15 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc117)
              %16 = cir.unary(inc, %15) nsw : !s32i, !s32i loc(#loc118)
              cir.store %16, %3 : !s32i, !cir.ptr<!s32i> loc(#loc167)
              cir.yield loc(#loc163)
            } loc(#loc163)
          } loc(#loc163)
        } else {
          %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc81)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc81)
          cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc119)
        } loc(#loc161)
      } loc(#loc158)
    } loc(#loc155)
    cir.return loc(#loc83)
  } loc(#loc153)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":0:0)
#loc1 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":42:1)
#loc2 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":42:12)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":67:23)
#loc8 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":48:1)
#loc9 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":70:1)
#loc10 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":50:5)
#loc11 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":50:16)
#loc12 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":51:5)
#loc13 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":69:5)
#loc14 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":52:9)
#loc15 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":52:13)
#loc16 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":53:9)
#loc17 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":53:30)
#loc18 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":56:9)
#loc19 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":68:9)
#loc20 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":56:13)
#loc21 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":56:20)
#loc22 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":57:9)
#loc23 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":64:9)
#loc24 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":66:9)
#loc25 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":58:28)
#loc26 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":58:20)
#loc27 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":58:13)
#loc28 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":60:13)
#loc29 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":63:13)
#loc30 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":60:21)
#loc31 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":60:17)
#loc32 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":60:24)
#loc33 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":60:28)
#loc34 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":60:26)
#loc35 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":61:13)
#loc36 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":62:37)
#loc37 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":62:30)
#loc38 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":62:17)
#loc39 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":60:33)
#loc40 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":60:32)
#loc41 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":67:13)
#loc42 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":43:1)
#loc43 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":43:12)
#loc44 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":77:1)
#loc45 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":99:1)
#loc46 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":79:5)
#loc47 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":79:16)
#loc48 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":80:5)
#loc49 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":98:5)
#loc50 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":81:9)
#loc51 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":81:13)
#loc52 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":82:9)
#loc53 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":82:30)
#loc54 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":85:9)
#loc55 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":97:9)
#loc56 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":85:13)
#loc57 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":85:20)
#loc58 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":86:9)
#loc59 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":93:9)
#loc60 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":95:9)
#loc61 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":87:28)
#loc62 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":87:20)
#loc63 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":87:13)
#loc64 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":89:13)
#loc65 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":92:13)
#loc66 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":89:21)
#loc67 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":89:17)
#loc68 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":89:24)
#loc69 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":89:28)
#loc70 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":89:26)
#loc71 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":90:13)
#loc72 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":91:37)
#loc73 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":91:30)
#loc74 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":91:17)
#loc75 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":89:33)
#loc76 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":89:32)
#loc77 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":96:23)
#loc78 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":96:13)
#loc79 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":44:1)
#loc80 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":44:12)
#loc81 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":120:23)
#loc82 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":102:1)
#loc83 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":123:1)
#loc84 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":104:5)
#loc85 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":104:16)
#loc86 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":105:5)
#loc87 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":122:5)
#loc88 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":106:9)
#loc89 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":106:13)
#loc90 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":107:9)
#loc91 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":107:30)
#loc92 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":109:9)
#loc93 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":121:9)
#loc94 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":109:13)
#loc95 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":109:21)
#loc96 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":109:23)
#loc97 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":109:26)
#loc98 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":109:34)
#loc99 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":109:36)
#loc100 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":110:9)
#loc101 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":117:9)
#loc102 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":119:9)
#loc103 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":111:28)
#loc104 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":111:20)
#loc105 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":111:13)
#loc106 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":113:13)
#loc107 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":116:13)
#loc108 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":113:21)
#loc109 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":113:17)
#loc110 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":113:24)
#loc111 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":113:28)
#loc112 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":113:26)
#loc113 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":114:13)
#loc114 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":115:37)
#loc115 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":115:30)
#loc116 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":115:17)
#loc117 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":113:33)
#loc118 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":113:32)
#loc119 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_68b.c":120:13)
#loc120 = loc(fused[#loc1, #loc2])
#loc121 = loc(fused[#loc3, #loc4])
#loc122 = loc(fused[#loc5, #loc6])
#loc123 = loc(fused[#loc8, #loc9])
#loc124 = loc(fused[#loc10, #loc11])
#loc125 = loc(fused[#loc12, #loc13])
#loc126 = loc(fused[#loc14, #loc15])
#loc127 = loc(fused[#loc16, #loc17])
#loc128 = loc(fused[#loc18, #loc19])
#loc129 = loc(fused[#loc20, #loc21])
#loc130 = loc(fused[#loc22, #loc23, #loc24, #loc19])
#loc131 = loc(fused[#loc27, #loc25])
#loc132 = loc(fused[#loc28, #loc29])
#loc133 = loc(fused[#loc31, #loc30])
#loc134 = loc(fused[#loc32, #loc33])
#loc135 = loc(fused[#loc35, #loc29])
#loc136 = loc(fused[#loc40, #loc39])
#loc137 = loc(fused[#loc42, #loc43])
#loc138 = loc(fused[#loc44, #loc45])
#loc139 = loc(fused[#loc46, #loc47])
#loc140 = loc(fused[#loc48, #loc49])
#loc141 = loc(fused[#loc50, #loc51])
#loc142 = loc(fused[#loc52, #loc53])
#loc143 = loc(fused[#loc54, #loc55])
#loc144 = loc(fused[#loc56, #loc57])
#loc145 = loc(fused[#loc58, #loc59, #loc60, #loc55])
#loc146 = loc(fused[#loc63, #loc61])
#loc147 = loc(fused[#loc64, #loc65])
#loc148 = loc(fused[#loc67, #loc66])
#loc149 = loc(fused[#loc68, #loc69])
#loc150 = loc(fused[#loc71, #loc65])
#loc151 = loc(fused[#loc76, #loc75])
#loc152 = loc(fused[#loc79, #loc80])
#loc153 = loc(fused[#loc82, #loc83])
#loc154 = loc(fused[#loc84, #loc85])
#loc155 = loc(fused[#loc86, #loc87])
#loc156 = loc(fused[#loc88, #loc89])
#loc157 = loc(fused[#loc90, #loc91])
#loc158 = loc(fused[#loc92, #loc93])
#loc159 = loc(fused[#loc94, #loc95])
#loc160 = loc(fused[#loc97, #loc99])
#loc161 = loc(fused[#loc100, #loc101, #loc102, #loc93])
#loc162 = loc(fused[#loc105, #loc103])
#loc163 = loc(fused[#loc106, #loc107])
#loc164 = loc(fused[#loc109, #loc108])
#loc165 = loc(fused[#loc110, #loc111])
#loc166 = loc(fused[#loc113, #loc107])
#loc167 = loc(fused[#loc118, #loc117])
