!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_alloca_memmove_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc139)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc140)
  cir.func no_proto @CWE126_Buffer_Overread__char_alloca_memmove_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc142)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc143)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc144)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc12)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc12)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc12)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc12)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc12)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc145)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc12)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc12)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc144)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc14)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc14)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc14)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc14)
    %15 = cir.alloca !u8i, !cir.ptr<!u8i>, %14 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc14)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc14)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc14)
    cir.store %17, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc145)
    %18 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc15)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc15)
    %20 = cir.const #cir.int<65> : !s32i loc(#loc16)
    %21 = cir.const #cir.int<50> : !s32i loc(#loc17)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc17)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc17)
    cir.libc.memset %24 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc146)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc21)
    %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc21)
    %27 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
    %28 = cir.const #cir.int<50> : !s32i loc(#loc23)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc23)
    %31 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc25)
    cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc147)
    %32 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc26)
    %34 = cir.const #cir.int<65> : !s32i loc(#loc27)
    %35 = cir.const #cir.int<100> : !s32i loc(#loc28)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %37 = cir.binop(sub, %35, %36) nsw : !s32i loc(#loc28)
    %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc28)
    cir.libc.memset %38 bytes from %33 set to %34 : !cir.ptr<!void>, !s32i, !u64i loc(#loc148)
    %39 = cir.const #cir.int<0> : !s32i loc(#loc32)
    %40 = cir.cast(integral, %39 : !s32i), !s8i loc(#loc32)
    %41 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
    %42 = cir.const #cir.int<100> : !s32i loc(#loc34)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %44 = cir.binop(sub, %42, %43) nsw : !s32i loc(#loc34)
    %45 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %44 : !s32i), !cir.ptr<!s8i> loc(#loc36)
    cir.store %40, %45 : !s8i, !cir.ptr<!s8i> loc(#loc149)
    cir.br ^bb1 loc(#loc150)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc150)
  ^bb2:  // 2 preds: ^bb1, ^bb5
    %46 = cir.const #cir.int<1> : !s32i loc(#loc39)
    %47 = cir.cast(int_to_bool, %46 : !s32i), !cir.bool loc(#loc39)
    cir.brcond %47 ^bb3, ^bb6 loc(#loc39)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc151)
  ^bb4:  // pred: ^bb3
    %48 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
    cir.store %48, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc152)
    cir.br ^bb6 loc(#loc43)
  ^bb5:  // no predecessors
    cir.br ^bb2 loc(#loc38)
  ^bb6:  // 2 preds: ^bb2, ^bb4
    cir.br ^bb7 loc(#loc38)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc153)
  ^bb8:  // pred: ^bb7
    %49 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc46)
    %50 = cir.cast(bitcast, %49 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc46)
    %51 = cir.const #cir.int<67> : !s32i loc(#loc47)
    %52 = cir.const #cir.int<100> : !s32i loc(#loc48)
    %53 = cir.const #cir.int<1> : !s32i loc(#loc49)
    %54 = cir.binop(sub, %52, %53) nsw : !s32i loc(#loc48)
    %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc48)
    cir.libc.memset %55 bytes from %50 set to %51 : !cir.ptr<!void>, !s32i, !u64i loc(#loc154)
    %56 = cir.const #cir.int<0> : !s32i loc(#loc52)
    %57 = cir.cast(integral, %56 : !s32i), !s8i loc(#loc52)
    %58 = cir.const #cir.int<100> : !s32i loc(#loc53)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc54)
    %60 = cir.binop(sub, %58, %59) nsw : !s32i loc(#loc53)
    %61 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc55)
    %62 = cir.ptr_stride(%61 : !cir.ptr<!s8i>, %60 : !s32i), !cir.ptr<!s8i> loc(#loc55)
    cir.store %57, %62 : !s8i, !cir.ptr<!s8i> loc(#loc155)
    %63 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc56)
    %64 = cir.cast(bitcast, %63 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc56)
    %65 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
    %66 = cir.cast(bitcast, %65 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc57)
    %67 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc58)
    %68 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc59)
    %69 = cir.call @strlen(%68) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc58)
    %70 = cir.const #cir.int<1> : !u64i loc(#loc156)
    %71 = cir.binop(mul, %69, %70) : !u64i loc(#loc157)
    cir.libc.memmove %71 bytes from %66 to %64 : !cir.ptr<!void>, !u64i loc(#loc158)
    %72 = cir.const #cir.int<0> : !s32i loc(#loc64)
    %73 = cir.cast(integral, %72 : !s32i), !s8i loc(#loc64)
    %74 = cir.const #cir.int<100> : !s32i loc(#loc65)
    %75 = cir.const #cir.int<1> : !s32i loc(#loc66)
    %76 = cir.binop(sub, %74, %75) nsw : !s32i loc(#loc65)
    %77 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc67)
    %78 = cir.ptr_stride(%77 : !cir.ptr<!s8i>, %76 : !s32i), !cir.ptr<!s8i> loc(#loc67)
    cir.store %73, %78 : !s8i, !cir.ptr<!s8i> loc(#loc159)
    %79 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%79) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    cir.br ^bb9 loc(#loc45)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc6)
  } loc(#loc141)
  cir.func no_proto @CWE126_Buffer_Overread__char_alloca_memmove_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc161)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc72)
    cir.return loc(#loc71)
  } loc(#loc160)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc163)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc164)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc165)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc81)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc81)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc81)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc81)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc81)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc166)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc81)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc81)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc165)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc83)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc83)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc83)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc83)
    %15 = cir.alloca !u8i, !cir.ptr<!u8i>, %14 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc83)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc83)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc83)
    cir.store %17, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc166)
    %18 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc84)
    %20 = cir.const #cir.int<65> : !s32i loc(#loc85)
    %21 = cir.const #cir.int<50> : !s32i loc(#loc86)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc87)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc86)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc86)
    cir.libc.memset %24 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc167)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc90)
    %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc90)
    %27 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
    %28 = cir.const #cir.int<50> : !s32i loc(#loc92)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc93)
    %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc92)
    %31 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc94)
    cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc168)
    %32 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc95)
    %34 = cir.const #cir.int<65> : !s32i loc(#loc96)
    %35 = cir.const #cir.int<100> : !s32i loc(#loc97)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc98)
    %37 = cir.binop(sub, %35, %36) nsw : !s32i loc(#loc97)
    %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc97)
    cir.libc.memset %38 bytes from %33 set to %34 : !cir.ptr<!void>, !s32i, !u64i loc(#loc169)
    %39 = cir.const #cir.int<0> : !s32i loc(#loc101)
    %40 = cir.cast(integral, %39 : !s32i), !s8i loc(#loc101)
    %41 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
    %42 = cir.const #cir.int<100> : !s32i loc(#loc103)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc104)
    %44 = cir.binop(sub, %42, %43) nsw : !s32i loc(#loc103)
    %45 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %44 : !s32i), !cir.ptr<!s8i> loc(#loc105)
    cir.store %40, %45 : !s8i, !cir.ptr<!s8i> loc(#loc170)
    cir.br ^bb1 loc(#loc171)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc171)
  ^bb2:  // 2 preds: ^bb1, ^bb5
    %46 = cir.const #cir.int<1> : !s32i loc(#loc108)
    %47 = cir.cast(int_to_bool, %46 : !s32i), !cir.bool loc(#loc108)
    cir.brcond %47 ^bb3, ^bb6 loc(#loc108)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc172)
  ^bb4:  // pred: ^bb3
    %48 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
    cir.store %48, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc173)
    cir.br ^bb6 loc(#loc112)
  ^bb5:  // no predecessors
    cir.br ^bb2 loc(#loc107)
  ^bb6:  // 2 preds: ^bb2, ^bb4
    cir.br ^bb7 loc(#loc107)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc174)
  ^bb8:  // pred: ^bb7
    %49 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc115)
    %50 = cir.cast(bitcast, %49 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc115)
    %51 = cir.const #cir.int<67> : !s32i loc(#loc116)
    %52 = cir.const #cir.int<100> : !s32i loc(#loc117)
    %53 = cir.const #cir.int<1> : !s32i loc(#loc118)
    %54 = cir.binop(sub, %52, %53) nsw : !s32i loc(#loc117)
    %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc117)
    cir.libc.memset %55 bytes from %50 set to %51 : !cir.ptr<!void>, !s32i, !u64i loc(#loc175)
    %56 = cir.const #cir.int<0> : !s32i loc(#loc121)
    %57 = cir.cast(integral, %56 : !s32i), !s8i loc(#loc121)
    %58 = cir.const #cir.int<100> : !s32i loc(#loc122)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc123)
    %60 = cir.binop(sub, %58, %59) nsw : !s32i loc(#loc122)
    %61 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc124)
    %62 = cir.ptr_stride(%61 : !cir.ptr<!s8i>, %60 : !s32i), !cir.ptr<!s8i> loc(#loc124)
    cir.store %57, %62 : !s8i, !cir.ptr<!s8i> loc(#loc176)
    %63 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc125)
    %64 = cir.cast(bitcast, %63 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc125)
    %65 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
    %66 = cir.cast(bitcast, %65 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc126)
    %67 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc127)
    %68 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc128)
    %69 = cir.call @strlen(%68) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc127)
    %70 = cir.const #cir.int<1> : !u64i loc(#loc177)
    %71 = cir.binop(mul, %69, %70) : !u64i loc(#loc178)
    cir.libc.memmove %71 bytes from %66 to %64 : !cir.ptr<!void>, !u64i loc(#loc179)
    %72 = cir.const #cir.int<0> : !s32i loc(#loc133)
    %73 = cir.cast(integral, %72 : !s32i), !s8i loc(#loc133)
    %74 = cir.const #cir.int<100> : !s32i loc(#loc134)
    %75 = cir.const #cir.int<1> : !s32i loc(#loc135)
    %76 = cir.binop(sub, %74, %75) nsw : !s32i loc(#loc134)
    %77 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc136)
    %78 = cir.ptr_stride(%77 : !cir.ptr<!s8i>, %76 : !s32i), !cir.ptr<!s8i> loc(#loc136)
    cir.store %73, %78 : !s8i, !cir.ptr<!s8i> loc(#loc180)
    %79 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc137)
    cir.call @printLine(%79) : (!cir.ptr<!s8i>) -> () loc(#loc138)
    cir.br ^bb9 loc(#loc114)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc75)
  } loc(#loc162)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_alloca_memmove_16.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":23:1)
#loc6 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":48:1)
#loc7 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":39:9)
#loc8 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":39:22)
#loc9 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":25:5)
#loc10 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":25:12)
#loc11 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":26:5)
#loc12 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":26:36)
#loc13 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":27:5)
#loc14 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":27:37)
#loc15 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":28:12)
#loc16 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":28:27)
#loc17 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":28:32)
#loc18 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":28:35)
#loc19 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":28:5)
#loc20 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":28:36)
#loc21 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":29:27)
#loc22 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":29:5)
#loc23 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":29:19)
#loc24 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":29:22)
#loc25 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":29:23)
#loc26 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":30:12)
#loc27 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":30:28)
#loc28 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":30:33)
#loc29 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":30:37)
#loc30 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":30:5)
#loc31 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":30:38)
#loc32 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":31:29)
#loc33 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":31:5)
#loc34 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":31:20)
#loc35 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":31:24)
#loc36 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":31:25)
#loc37 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":32:5)
#loc38 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":37:5)
#loc39 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":32:11)
#loc40 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":33:5)
#loc41 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":35:16)
#loc42 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":35:9)
#loc43 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":36:9)
#loc44 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":38:5)
#loc45 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":47:5)
#loc46 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":40:16)
#loc47 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":40:22)
#loc48 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":40:27)
#loc49 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":40:31)
#loc50 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":40:9)
#loc51 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":40:32)
#loc52 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":41:23)
#loc53 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":41:14)
#loc54 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":41:18)
#loc55 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":41:9)
#loc56 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":44:17)
#loc57 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":44:23)
#loc58 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":44:29)
#loc59 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":44:36)
#loc60 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":44:42)
#loc61 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":44:53)
#loc62 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":44:9)
#loc63 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":44:54)
#loc64 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":45:23)
#loc65 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":45:14)
#loc66 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":45:18)
#loc67 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":45:9)
#loc68 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":46:19)
#loc69 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":46:9)
#loc70 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":82:1)
#loc71 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":85:1)
#loc72 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":84:5)
#loc73 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":84:13)
#loc74 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":55:1)
#loc75 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":80:1)
#loc76 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":71:9)
#loc77 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":71:22)
#loc78 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":57:5)
#loc79 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":57:12)
#loc80 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":58:5)
#loc81 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":58:36)
#loc82 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":59:5)
#loc83 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":59:37)
#loc84 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":60:12)
#loc85 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":60:27)
#loc86 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":60:32)
#loc87 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":60:35)
#loc88 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":60:5)
#loc89 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":60:36)
#loc90 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":61:27)
#loc91 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":61:5)
#loc92 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":61:19)
#loc93 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":61:22)
#loc94 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":61:23)
#loc95 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":62:12)
#loc96 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":62:28)
#loc97 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":62:33)
#loc98 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":62:37)
#loc99 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":62:5)
#loc100 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":62:38)
#loc101 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":63:29)
#loc102 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":63:5)
#loc103 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":63:20)
#loc104 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":63:24)
#loc105 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":63:25)
#loc106 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":64:5)
#loc107 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":69:5)
#loc108 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":64:11)
#loc109 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":65:5)
#loc110 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":67:16)
#loc111 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":67:9)
#loc112 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":68:9)
#loc113 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":70:5)
#loc114 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":79:5)
#loc115 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":72:16)
#loc116 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":72:22)
#loc117 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":72:27)
#loc118 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":72:31)
#loc119 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":72:9)
#loc120 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":72:32)
#loc121 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":73:23)
#loc122 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":73:14)
#loc123 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":73:18)
#loc124 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":73:9)
#loc125 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":76:17)
#loc126 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":76:23)
#loc127 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":76:29)
#loc128 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":76:36)
#loc129 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":76:42)
#loc130 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":76:53)
#loc131 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":76:9)
#loc132 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":76:54)
#loc133 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":77:23)
#loc134 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":77:14)
#loc135 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":77:18)
#loc136 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":77:9)
#loc137 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":78:19)
#loc138 = loc("CWE126_Buffer_Overread__char_alloca_memmove_16.c":78:9)
#loc139 = loc(fused[#loc1, #loc2])
#loc140 = loc(fused[#loc3, #loc4])
#loc141 = loc(fused[#loc5, #loc6])
#loc142 = loc(fused[#loc7, #loc8])
#loc143 = loc(fused[#loc9, #loc10])
#loc144 = loc(fused[#loc11, #loc12])
#loc145 = loc(fused[#loc13, #loc14])
#loc146 = loc(fused[#loc19, #loc20])
#loc147 = loc(fused[#loc22, #loc21])
#loc148 = loc(fused[#loc30, #loc31])
#loc149 = loc(fused[#loc33, #loc32])
#loc150 = loc(fused[#loc37, #loc38])
#loc151 = loc(fused[#loc40, #loc38])
#loc152 = loc(fused[#loc42, #loc41])
#loc153 = loc(fused[#loc44, #loc45])
#loc154 = loc(fused[#loc50, #loc51])
#loc155 = loc(fused[#loc55, #loc52])
#loc156 = loc(fused[#loc60, #loc61])
#loc157 = loc(fused[#loc58, #loc61])
#loc158 = loc(fused[#loc62, #loc63])
#loc159 = loc(fused[#loc67, #loc64])
#loc160 = loc(fused[#loc70, #loc71])
#loc161 = loc(fused[#loc72, #loc73])
#loc162 = loc(fused[#loc74, #loc75])
#loc163 = loc(fused[#loc76, #loc77])
#loc164 = loc(fused[#loc78, #loc79])
#loc165 = loc(fused[#loc80, #loc81])
#loc166 = loc(fused[#loc82, #loc83])
#loc167 = loc(fused[#loc88, #loc89])
#loc168 = loc(fused[#loc91, #loc90])
#loc169 = loc(fused[#loc99, #loc100])
#loc170 = loc(fused[#loc102, #loc101])
#loc171 = loc(fused[#loc106, #loc107])
#loc172 = loc(fused[#loc109, #loc107])
#loc173 = loc(fused[#loc111, #loc110])
#loc174 = loc(fused[#loc113, #loc114])
#loc175 = loc(fused[#loc119, #loc120])
#loc176 = loc(fused[#loc124, #loc121])
#loc177 = loc(fused[#loc129, #loc130])
#loc178 = loc(fused[#loc127, #loc130])
#loc179 = loc(fused[#loc131, #loc132])
#loc180 = loc(fused[#loc136, #loc133])
