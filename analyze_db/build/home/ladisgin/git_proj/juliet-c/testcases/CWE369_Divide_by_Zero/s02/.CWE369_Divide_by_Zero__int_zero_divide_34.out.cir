!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc43 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":103:10)
#loc44 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":103:14)
#loc45 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":103:20)
#loc46 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":103:32)
!ty_CWE369_Divide_by_Zero__int_zero_divide_34_unionType = !cir.struct<union "CWE369_Divide_by_Zero__int_zero_divide_34_unionType" {!s32i, !s32i}>
#loc127 = loc(fused[#loc43, #loc44])
#loc128 = loc(fused[#loc45, #loc46])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_zero_divide_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc110)
  cir.func no_proto @CWE369_Divide_by_Zero__int_zero_divide_34_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc112)
    %1 = cir.alloca !ty_CWE369_Divide_by_Zero__int_zero_divide_34_unionType, !cir.ptr<!ty_CWE369_Divide_by_Zero__int_zero_divide_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc113)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc9)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc10)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc114)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc12)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc115)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc14)
    %6 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE369_Divide_by_Zero__int_zero_divide_34_unionType> -> !cir.ptr<!s32i> loc(#loc15)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc116)
    cir.scope {
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc118)
      %8 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE369_Divide_by_Zero__int_zero_divide_34_unionType> -> !cir.ptr<!s32i> loc(#loc21)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc20)
      cir.store %9, %7 : !s32i, !cir.ptr<!s32i> loc(#loc118)
      %10 = cir.const #cir.int<100> : !s32i loc(#loc22)
      %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc23)
      %12 = cir.binop(div, %10, %11) : !s32i loc(#loc119)
      cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc24)
    } loc(#loc117)
    cir.return loc(#loc4)
  } loc(#loc111)
  cir.func no_proto @CWE369_Divide_by_Zero__int_zero_divide_34_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc121)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc27)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc122)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc29)
    cir.return loc(#loc26)
  } loc(#loc120)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc123)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc124)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc125)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc37)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc38)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc39)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc40)
  cir.func @main(%arg0: !s32i loc(fused[#loc43, #loc44]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc45, #loc46])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc127)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc128)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc42)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc47)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc47)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc48)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc49)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc49)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc50)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc37)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc37)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc51)
    %8 = cir.get_global @CWE369_Divide_by_Zero__int_zero_divide_34_good : !cir.ptr<!cir.func<!void ()>> loc(#loc129)
    cir.call @CWE369_Divide_by_Zero__int_zero_divide_34_good() : () -> () loc(#loc52)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc38)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc38)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc54)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc39)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc39)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    %13 = cir.get_global @CWE369_Divide_by_Zero__int_zero_divide_34_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc130)
    cir.call @CWE369_Divide_by_Zero__int_zero_divide_34_bad() : () -> () loc(#loc56)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc40)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc40)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc59)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc131)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc131)
    cir.return %17 : !s32i loc(#loc131)
  } loc(#loc126)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc133)
    %1 = cir.alloca !ty_CWE369_Divide_by_Zero__int_zero_divide_34_unionType, !cir.ptr<!ty_CWE369_Divide_by_Zero__int_zero_divide_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc134)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc67)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc68)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc135)
    %4 = cir.const #cir.int<7> : !s32i loc(#loc70)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc136)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc72)
    %6 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE369_Divide_by_Zero__int_zero_divide_34_unionType> -> !cir.ptr<!s32i> loc(#loc15)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc137)
    cir.scope {
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc139)
      %8 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE369_Divide_by_Zero__int_zero_divide_34_unionType> -> !cir.ptr<!s32i> loc(#loc21)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc77)
      cir.store %9, %7 : !s32i, !cir.ptr<!s32i> loc(#loc139)
      %10 = cir.const #cir.int<100> : !s32i loc(#loc78)
      %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc79)
      %12 = cir.binop(div, %10, %11) : !s32i loc(#loc140)
      cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc80)
    } loc(#loc138)
    cir.return loc(#loc62)
  } loc(#loc132)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc81)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc142)
    %1 = cir.alloca !ty_CWE369_Divide_by_Zero__int_zero_divide_34_unionType, !cir.ptr<!ty_CWE369_Divide_by_Zero__int_zero_divide_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc143)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc88)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc89)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc144)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc91)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc145)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc93)
    %6 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE369_Divide_by_Zero__int_zero_divide_34_unionType> -> !cir.ptr<!s32i> loc(#loc15)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc146)
    cir.scope {
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc148)
      %8 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE369_Divide_by_Zero__int_zero_divide_34_unionType> -> !cir.ptr<!s32i> loc(#loc21)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc98)
      cir.store %9, %7 : !s32i, !cir.ptr<!s32i> loc(#loc148)
      cir.scope {
        %10 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc101)
        %11 = cir.const #cir.int<0> : !s32i loc(#loc102)
        %12 = cir.cmp(ne, %10, %11) : !s32i, !cir.bool loc(#loc150)
        cir.if %12 {
          %13 = cir.const #cir.int<100> : !s32i loc(#loc106)
          %14 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc107)
          %15 = cir.binop(div, %13, %14) : !s32i loc(#loc152)
          cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc108)
        } else {
          %13 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc81)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc81)
          cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc109)
        } loc(#loc151)
      } loc(#loc149)
    } loc(#loc147)
    cir.return loc(#loc83)
  } loc(#loc141)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_zero_divide_34.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":28:1)
#loc4 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":42:1)
#loc5 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":30:5)
#loc6 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":30:9)
#loc7 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":31:5)
#loc8 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":31:57)
#loc9 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":33:13)
#loc10 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":33:12)
#loc11 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":33:5)
#loc12 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":35:12)
#loc13 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":35:5)
#loc14 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":36:26)
#loc15 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":22:9)
#loc16 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":36:5)
#loc17 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":37:5)
#loc18 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":41:5)
#loc19 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":38:9)
#loc20 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":38:28)
#loc21 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":23:9)
#loc22 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":40:22)
#loc23 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":40:28)
#loc24 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":40:9)
#loc25 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":89:1)
#loc26 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":93:1)
#loc27 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":91:5)
#loc28 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":91:13)
#loc29 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":92:5)
#loc30 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":92:13)
#loc31 = loc("/usr/include/stdlib.h":575:1)
#loc32 = loc("/usr/include/stdlib.h":575:41)
#loc33 = loc("/usr/include/time.h":76:1)
#loc34 = loc("/usr/include/time.h":76:38)
#loc35 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc36 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc37 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":108:15)
#loc38 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":110:15)
#loc39 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":113:15)
#loc40 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":115:15)
#loc41 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":103:1)
#loc42 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":118:1)
#loc47 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":104:1)
#loc48 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":106:27)
#loc49 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":106:22)
#loc50 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":106:5)
#loc51 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":108:5)
#loc52 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":109:5)
#loc53 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":109:52)
#loc54 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":110:5)
#loc55 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":113:5)
#loc56 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":114:5)
#loc57 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":114:51)
#loc58 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":115:5)
#loc59 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":117:12)
#loc60 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":117:5)
#loc61 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":49:1)
#loc62 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":63:1)
#loc63 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":51:5)
#loc64 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":51:9)
#loc65 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":52:5)
#loc66 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":52:57)
#loc67 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":54:13)
#loc68 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":54:12)
#loc69 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":54:5)
#loc70 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":56:12)
#loc71 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":56:5)
#loc72 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":57:26)
#loc73 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":57:5)
#loc74 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":58:5)
#loc75 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":62:5)
#loc76 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":59:9)
#loc77 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":59:28)
#loc78 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":61:22)
#loc79 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":61:28)
#loc80 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":61:9)
#loc81 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":84:23)
#loc82 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":66:1)
#loc83 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":87:1)
#loc84 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":68:5)
#loc85 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":68:9)
#loc86 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":69:5)
#loc87 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":69:57)
#loc88 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":71:13)
#loc89 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":71:12)
#loc90 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":71:5)
#loc91 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":73:12)
#loc92 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":73:5)
#loc93 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":74:26)
#loc94 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":74:5)
#loc95 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":75:5)
#loc96 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":86:5)
#loc97 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":76:9)
#loc98 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":76:28)
#loc99 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":78:9)
#loc100 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":85:9)
#loc101 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":78:13)
#loc102 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":78:21)
#loc103 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":79:9)
#loc104 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":81:9)
#loc105 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":83:9)
#loc106 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":80:26)
#loc107 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":80:32)
#loc108 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":80:13)
#loc109 = loc("CWE369_Divide_by_Zero__int_zero_divide_34.c":84:13)
#loc110 = loc(fused[#loc1, #loc2])
#loc111 = loc(fused[#loc3, #loc4])
#loc112 = loc(fused[#loc5, #loc6])
#loc113 = loc(fused[#loc7, #loc8])
#loc114 = loc(fused[#loc11, #loc9])
#loc115 = loc(fused[#loc13, #loc12])
#loc116 = loc(fused[#loc16, #loc14])
#loc117 = loc(fused[#loc17, #loc18])
#loc118 = loc(fused[#loc19, #loc20])
#loc119 = loc(fused[#loc22, #loc23])
#loc120 = loc(fused[#loc25, #loc26])
#loc121 = loc(fused[#loc27, #loc28])
#loc122 = loc(fused[#loc29, #loc30])
#loc123 = loc(fused[#loc31, #loc32])
#loc124 = loc(fused[#loc33, #loc34])
#loc125 = loc(fused[#loc35, #loc36])
#loc126 = loc(fused[#loc41, #loc42])
#loc129 = loc(fused[#loc52, #loc53])
#loc130 = loc(fused[#loc56, #loc57])
#loc131 = loc(fused[#loc60, #loc59])
#loc132 = loc(fused[#loc61, #loc62])
#loc133 = loc(fused[#loc63, #loc64])
#loc134 = loc(fused[#loc65, #loc66])
#loc135 = loc(fused[#loc69, #loc67])
#loc136 = loc(fused[#loc71, #loc70])
#loc137 = loc(fused[#loc73, #loc72])
#loc138 = loc(fused[#loc74, #loc75])
#loc139 = loc(fused[#loc76, #loc77])
#loc140 = loc(fused[#loc78, #loc79])
#loc141 = loc(fused[#loc82, #loc83])
#loc142 = loc(fused[#loc84, #loc85])
#loc143 = loc(fused[#loc86, #loc87])
#loc144 = loc(fused[#loc90, #loc88])
#loc145 = loc(fused[#loc92, #loc91])
#loc146 = loc(fused[#loc94, #loc93])
#loc147 = loc(fused[#loc95, #loc96])
#loc148 = loc(fused[#loc97, #loc98])
#loc149 = loc(fused[#loc99, #loc100])
#loc150 = loc(fused[#loc101, #loc102])
#loc151 = loc(fused[#loc103, #loc104, #loc105, #loc100])
#loc152 = loc(fused[#loc106, #loc107])
