!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc1 = loc("../../../testcasesupport/std_testcase.h":96:16)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":24:70)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":24:77)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":24:93)
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc67 = loc(fused[#loc10, #loc11])
!ty_anon_struct = !cir.record<struct  {!cir.ptr<!u8i>, !cir.ptr<!u8i>}>
!ty_anon_struct1 = !cir.record<struct  {!cir.ptr<!u8i>, !cir.ptr<!u8i>, !cir.ptr<!u8i>}>
!ty_anon_struct2 = !cir.record<struct  {!cir.array<!cir.ptr<!u8i> x 3>}>
!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_813A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_base = !cir.record<class "CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81::CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_base" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>} #cir.record.decl.ast>
!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_813A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad = !cir.record<class "CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81::CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad" {!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_813A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_base} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func linkonce_odr @_ZN14_twoIntsStructaSERKS_(%arg0: !cir.ptr<!ty__twoIntsStruct> loc("../../../testcasesupport/std_testcase.h":96:16), %arg1: !cir.ptr<!ty__twoIntsStruct> loc("../../../testcasesupport/std_testcase.h":96:16)) -> !cir.ptr<!ty__twoIntsStruct> extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["this", init] {alignment = 8 : i64} loc(#loc1)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["", init, const] {alignment = 8 : i64} loc(#loc1)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["__retval"] {alignment = 8 : i64} loc(#loc1)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc1)
    cir.store %arg1, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc1)
    %3 = cir.load deref %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc1)
    %4 = cir.get_member %3[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc2)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc1)
    %6 = cir.get_member %5[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc2)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc1)
    %8 = cir.cast(bitcast, %4 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc2)
    %9 = cir.cast(bitcast, %6 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc2)
    cir.libc.memcpy %7 bytes from %9 to %8 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc1)
    cir.store %3, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc1)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc1)
    cir.return %10 : !cir.ptr<!ty__twoIntsStruct> loc(#loc1)
  } loc(#loc1)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc64)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc65)
  cir.func @_ZNK58CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_8162CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad6actionEP14_twoIntsStruct(%arg0: !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_813A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad> loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":24:70), %arg1: !cir.ptr<!ty__twoIntsStruct> loc(fused[#loc10, #loc11])) extra(#fn_attr2) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc68)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc69)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc70)
    %3 = cir.alloca !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_813A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad>, !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_813A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad>>, ["this", init] {alignment = 8 : i64} loc(#loc9)
    %4 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc67)
    cir.store %arg0, %3 : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_813A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad>, !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_813A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad>> loc(#loc18)
    cir.store %arg1, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc18)
    %5 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_813A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad>>, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_813A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad> loc(#loc9)
    cir.br ^bb1 loc(#loc71)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc72)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc73)
  ^bb3:  // pred: ^bb2
    %6 = cir.const #cir.int<0> : !s32i loc(#loc25)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc25)
    cir.store %7, %1 : !u64i, !cir.ptr<!u64i> loc(#loc74)
    cir.br ^bb4 loc(#loc73)
  ^bb4:  // 2 preds: ^bb3, ^bb8
    %8 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc27)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc28)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc28)
    %11 = cir.cmp(lt, %8, %10) : !u64i, !cir.bool loc(#loc75)
    cir.brcond %11 ^bb5, ^bb9 loc(#loc75)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc76)
  ^bb6:  // pred: ^bb5
    %12 = cir.const #cir.int<0> : !s32i loc(#loc30)
    %13 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc31)
    %14 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc32)
    %15 = cir.ptr_stride(%14 : !cir.ptr<!ty__twoIntsStruct>, %13 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc32)
    %16 = cir.get_member %15[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc2)
    cir.store %12, %16 : !s32i, !cir.ptr<!s32i> loc(#loc77)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc33)
    %18 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc34)
    %19 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc35)
    %20 = cir.ptr_stride(%19 : !cir.ptr<!ty__twoIntsStruct>, %18 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc35)
    %21 = cir.get_member %20[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc36)
    cir.store %17, %21 : !s32i, !cir.ptr<!s32i> loc(#loc78)
    cir.br ^bb7 loc(#loc24)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc24)
  ^bb8:  // pred: ^bb7
    %22 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc37)
    %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc38)
    cir.store %23, %1 : !u64i, !cir.ptr<!u64i> loc(#loc79)
    cir.br ^bb4 loc(#loc73)
  ^bb9:  // pred: ^bb4
    cir.br ^bb10 loc(#loc24)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc22)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc80)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc81)
  ^bb13:  // pred: ^bb12
    %24 = cir.const #cir.int<0> : !s32i loc(#loc43)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc43)
    cir.store %25, %2 : !u64i, !cir.ptr<!u64i> loc(#loc82)
    cir.br ^bb14 loc(#loc81)
  ^bb14:  // 2 preds: ^bb13, ^bb18
    %26 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc45)
    %27 = cir.const #cir.int<100> : !s32i loc(#loc46)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc46)
    %29 = cir.cmp(lt, %26, %28) : !u64i, !cir.bool loc(#loc83)
    cir.brcond %29 ^bb15, ^bb19 loc(#loc83)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc84)
  ^bb16:  // pred: ^bb15
    %30 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc48)
    %31 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc49)
    %32 = cir.ptr_stride(%31 : !cir.ptr<!ty__twoIntsStruct>, %30 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc49)
    %33 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc50)
    %34 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc51)
    %35 = cir.ptr_stride(%33 : !cir.ptr<!ty__twoIntsStruct>, %34 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc52)
    %36 = cir.call @_ZN14_twoIntsStructaSERKS_(%35, %32) : (!cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!ty__twoIntsStruct>) -> !cir.ptr<!ty__twoIntsStruct> extra(#fn_attr1) loc(#loc53)
    cir.br ^bb17 loc(#loc42)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc42)
  ^bb18:  // pred: ^bb17
    %37 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc54)
    %38 = cir.unary(inc, %37) : !u64i, !u64i loc(#loc55)
    cir.store %38, %2 : !u64i, !cir.ptr<!u64i> loc(#loc85)
    cir.br ^bb14 loc(#loc81)
  ^bb19:  // pred: ^bb14
    cir.br ^bb20 loc(#loc42)
  ^bb20:  // pred: ^bb19
    %39 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc56)
    %40 = cir.const #cir.int<0> : !s32i loc(#loc57)
    %41 = cir.ptr_stride(%39 : !cir.ptr<!ty__twoIntsStruct>, %40 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc58)
    cir.call @printStructLine(%41) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc59)
    %42 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc60)
    %43 = cir.cast(bitcast, %42 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc60)
    cir.call @free(%43) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc61)
    cir.br ^bb21 loc(#loc40)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc20)
  ^bb22:  // pred: ^bb21
    cir.return loc(#loc8)
  } loc(#loc66)
  cir.global external dsolocal @_ZTVN58CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_8162CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_badE = #cir.vtable<{#cir.const_array<[#cir.ptr<null> : !cir.ptr<!u8i>, #cir.global_view<@_ZTIN58CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_8162CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_badE> : !cir.ptr<!u8i>, #cir.global_view<@_ZNK58CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_8162CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad6actionEP14_twoIntsStruct> : !cir.ptr<!u8i>]> : !cir.array<!cir.ptr<!u8i> x 3>}> : !ty_anon_struct2 {alignment = 8 : i64} loc(#loc86)
  cir.global "private" external @_ZTVN10__cxxabiv120__si_class_type_infoE : !cir.ptr<!cir.ptr<!u8i>> loc(#loc62)
  cir.global external @_ZTSN58CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_8162CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_badE = #cir.const_array<"N58CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_8162CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_badE" : !cir.array<!s8i x 126>> : !cir.array<!s8i x 126> {alignment = 1 : i64} loc(#loc62)
  cir.global "private" external @_ZTVN10__cxxabiv117__class_type_infoE : !cir.ptr<!cir.ptr<!u8i>> loc(#loc62)
  cir.global linkonce_odr comdat @_ZTSN58CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_8163CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_baseE = #cir.const_array<"N58CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_8163CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_baseE" : !cir.array<!s8i x 127>> : !cir.array<!s8i x 127> {alignment = 1 : i64} loc(#loc62)
  cir.global constant external @_ZTIN58CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_8163CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_baseE = #cir.typeinfo<{#cir.global_view<@_ZTVN10__cxxabiv117__class_type_infoE, [2 : i32]> : !cir.ptr<!u8i>, #cir.global_view<@_ZTSN58CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_8163CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_baseE> : !cir.ptr<!u8i>}> : !ty_anon_struct {alignment = 8 : i64} loc(#loc62)
  cir.global constant external @_ZTIN58CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_8162CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_badE = #cir.typeinfo<{#cir.global_view<@_ZTVN10__cxxabiv120__si_class_type_infoE, [2 : i32]> : !cir.ptr<!u8i>, #cir.global_view<@_ZTSN58CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_8162CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_badE> : !cir.ptr<!u8i>, #cir.global_view<@_ZTIN58CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_8163CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_baseE> : !cir.ptr<!u8i>}> : !ty_anon_struct1 {alignment = 8 : i64} loc(#loc62)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":0:0)
#loc2 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":24:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":48:1)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":27:9)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":27:33)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":29:13)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":29:20)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":38:13)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":38:20)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":25:1)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":26:5)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":47:5)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":28:9)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":36:9)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":31:13)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":35:13)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":31:22)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":31:18)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":31:25)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":31:29)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":32:13)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":33:36)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":33:24)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":33:17)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":34:36)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":34:24)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":34:17)
#loc36 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":31:35)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":31:34)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":37:9)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":46:9)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":40:13)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":43:13)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":40:22)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":40:18)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":40:25)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":40:29)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":41:13)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":42:34)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":42:27)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":42:17)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":42:22)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":42:23)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":42:25)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":40:35)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":40:34)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":44:30)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":44:35)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":44:36)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":44:13)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":45:18)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81_bad.cpp":45:13)
#loc62 = loc("./CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81.h":31:1)
#loc63 = loc("./CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_81.h":35:1)
#loc64 = loc(fused[#loc3, #loc4])
#loc65 = loc(fused[#loc5, #loc6])
#loc66 = loc(fused[#loc7, #loc8])
#loc68 = loc(fused[#loc12, #loc13])
#loc69 = loc(fused[#loc14, #loc15])
#loc70 = loc(fused[#loc16, #loc17])
#loc71 = loc(fused[#loc19, #loc20])
#loc72 = loc(fused[#loc21, #loc22])
#loc73 = loc(fused[#loc23, #loc24])
#loc74 = loc(fused[#loc26, #loc25])
#loc75 = loc(fused[#loc27, #loc28])
#loc76 = loc(fused[#loc29, #loc24])
#loc77 = loc(fused[#loc32, #loc30])
#loc78 = loc(fused[#loc35, #loc33])
#loc79 = loc(fused[#loc38, #loc37])
#loc80 = loc(fused[#loc39, #loc40])
#loc81 = loc(fused[#loc41, #loc42])
#loc82 = loc(fused[#loc44, #loc43])
#loc83 = loc(fused[#loc45, #loc46])
#loc84 = loc(fused[#loc47, #loc42])
#loc85 = loc(fused[#loc55, #loc54])
#loc86 = loc(fused[#loc62, #loc63])
