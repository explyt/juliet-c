!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc188 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":184:10)
#loc189 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":184:14)
#loc190 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":184:20)
#loc191 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":184:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc310 = loc(fused[#loc188, #loc189])
#loc311 = loc(fused[#loc190, #loc191])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_popen_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc236)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_connect_socket_popen_18_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc237)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc238)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc239)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc240)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc11)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc241)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc242)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc243)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc244)
  cir.func private @close(!s32i) -> !s32i loc(#loc245)
  cir.func private @popen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc246)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc24)
  cir.func private @pclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc247)
  cir.func no_proto @CWE78_OS_Command_Injection__char_connect_socket_popen_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc249)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc237)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc250)
    %3 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc251)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc252)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc253)
    %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc254)
    %7 = cir.get_global @__const.CWE78_OS_Command_Injection__char_connect_socket_popen_18_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc237)
    cir.copy %7 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc237)
    %8 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc41)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc255)
    cir.goto "source" loc(#loc256)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc45)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc38)
    %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc38)
    cir.store %10, %5 : !s32i, !cir.ptr<!s32i> loc(#loc253)
    %11 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc46)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
    %13 = cir.call @strlen(%12) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc46)
    cir.store %13, %6 : !u64i, !cir.ptr<!u64i> loc(#loc254)
    cir.scope {
      cir.do {
        %14 = cir.const #cir.int<2> : !s32i loc(#loc50)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc51)
        %16 = cir.const #cir.int<6> : !s32i loc(#loc52)
        %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc53)
        cir.store %17, %5 : !s32i, !cir.ptr<!s32i> loc(#loc258)
        cir.scope {
          %68 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc58)
          %69 = cir.const #cir.int<1> : !s32i loc(#loc59)
          %70 = cir.unary(minus, %69) : !s32i, !s32i loc(#loc59)
          %71 = cir.cmp(eq, %68, %70) : !s32i, !cir.bool loc(#loc260)
          cir.if %71 {
            cir.break loc(#loc61)
          } loc(#loc261)
        } loc(#loc259)
        %18 = cir.cast(bitcast, %3 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc262)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc64)
        %20 = cir.const #cir.int<16> : !u64i loc(#loc263)
        cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc264)
        %21 = cir.const #cir.int<2> : !s32i loc(#loc69)
        %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc69)
        %23 = cir.get_member %3[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc70)
        cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc265)
        %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc11)
        %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc11)
        %26 = cir.call @inet_addr(%25) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc72)
        %27 = cir.get_member %3[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc73)
        %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc74)
        cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc266)
        %29 = cir.const #cir.int<27015> : !s32i loc(#loc77)
        %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc77)
        %31 = cir.call @htons(%30) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc78)
        %32 = cir.get_member %3[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc79)
        cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc267)
        cir.scope {
          %68 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc84)
          %69 = cir.cast(bitcast, %3 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc269)
          %70 = cir.const #cir.int<16> : !u64i loc(#loc270)
          %71 = cir.cast(integral, %70 : !u64i), !u32i loc(#loc270)
          %72 = cir.call @connect(%68, %69, %71) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc89)
          %73 = cir.const #cir.int<1> : !s32i loc(#loc90)
          %74 = cir.unary(minus, %73) : !s32i, !s32i loc(#loc90)
          %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc271)
          cir.if %75 {
            cir.break loc(#loc92)
          } loc(#loc272)
        } loc(#loc268)
        %33 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc93)
        %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
        %35 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc95)
        %36 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %35 : !u64i), !cir.ptr<!s8i> loc(#loc96)
        %37 = cir.cast(bitcast, %36 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc273)
        %38 = cir.const #cir.int<1> : !u64i loc(#loc274)
        %39 = cir.const #cir.int<100> : !s32i loc(#loc101)
        %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc101)
        %41 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc102)
        %42 = cir.binop(sub, %40, %41) : !u64i loc(#loc275)
        %43 = cir.const #cir.int<1> : !s32i loc(#loc103)
        %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc103)
        %45 = cir.binop(sub, %42, %44) : !u64i loc(#loc276)
        %46 = cir.binop(mul, %38, %45) : !u64i loc(#loc277)
        %47 = cir.const #cir.int<0> : !s32i loc(#loc105)
        %48 = cir.call @recv(%33, %37, %46, %47) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc106)
        %49 = cir.cast(integral, %48 : !s64i), !s32i loc(#loc106)
        cir.store %49, %2 : !s32i, !cir.ptr<!s32i> loc(#loc278)
        cir.scope {
          %68 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc111)
          %69 = cir.const #cir.int<1> : !s32i loc(#loc112)
          %70 = cir.unary(minus, %69) : !s32i, !s32i loc(#loc112)
          %71 = cir.cmp(eq, %68, %70) : !s32i, !cir.bool loc(#loc280)
          %72 = cir.ternary(%71, true {
            %73 = cir.const #true loc(#loc113)
            cir.yield %73 : !cir.bool loc(#loc113)
          }, false {
            %73 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc114)
            %74 = cir.const #cir.int<0> : !s32i loc(#loc115)
            %75 = cir.cmp(eq, %73, %74) : !s32i, !cir.bool loc(#loc281)
            %76 = cir.ternary(%75, true {
              %77 = cir.const #true loc(#loc113)
              cir.yield %77 : !cir.bool loc(#loc113)
            }, false {
              %77 = cir.const #false loc(#loc113)
              cir.yield %77 : !cir.bool loc(#loc113)
            }) : (!cir.bool) -> !cir.bool loc(#loc113)
            cir.yield %76 : !cir.bool loc(#loc113)
          }) : (!cir.bool) -> !cir.bool loc(#loc113)
          cir.if %72 {
            cir.break loc(#loc117)
          } loc(#loc282)
        } loc(#loc279)
        %50 = cir.const #cir.int<0> : !s32i loc(#loc118)
        %51 = cir.cast(integral, %50 : !s32i), !s8i loc(#loc118)
        %52 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
        %53 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc120)
        %54 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc121)
        %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc121)
        %56 = cir.const #cir.int<1> : !u64i loc(#loc283)
        %57 = cir.binop(div, %55, %56) : !u64i loc(#loc284)
        %58 = cir.binop(add, %53, %57) : !u64i loc(#loc285)
        %59 = cir.ptr_stride(%52 : !cir.ptr<!s8i>, %58 : !u64i), !cir.ptr<!s8i> loc(#loc124)
        cir.store %51, %59 : !s8i, !cir.ptr<!s8i> loc(#loc286)
        %60 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc125)
        %61 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
        %62 = cir.const #cir.int<13> : !s32i loc(#loc127)
        %63 = cir.call @strchr(%61, %62) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc125)
        cir.store %63, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc287)
        cir.scope {
          %68 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
          %69 = cir.cast(ptr_to_bool, %68 : !cir.ptr<!s8i>), !cir.bool loc(#loc132)
          cir.if %69 {
            %70 = cir.const #cir.int<0> : !s32i loc(#loc134)
            %71 = cir.cast(integral, %70 : !s32i), !s8i loc(#loc134)
            %72 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
            cir.store %71, %72 : !s8i, !cir.ptr<!s8i> loc(#loc290)
          } loc(#loc289)
        } loc(#loc288)
        %64 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc137)
        %65 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
        %66 = cir.const #cir.int<10> : !s32i loc(#loc139)
        %67 = cir.call @strchr(%65, %66) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc137)
        cir.store %67, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc291)
        cir.scope {
          %68 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
          %69 = cir.cast(ptr_to_bool, %68 : !cir.ptr<!s8i>), !cir.bool loc(#loc144)
          cir.if %69 {
            %70 = cir.const #cir.int<0> : !s32i loc(#loc146)
            %71 = cir.cast(integral, %70 : !s32i), !s8i loc(#loc146)
            %72 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
            cir.store %71, %72 : !s8i, !cir.ptr<!s8i> loc(#loc294)
          } loc(#loc293)
        } loc(#loc292)
        cir.yield loc(#loc49)
      } while {
        %14 = cir.const #cir.int<0> : !s32i loc(#loc149)
        %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc149)
        cir.condition(%15) loc(#loc149)
      } loc(#loc257)
    } loc(#loc257)
    cir.scope {
      %14 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc152)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc153)
      %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc153)
      %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc296)
      cir.if %17 {
        %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc155)
        %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc156)
      } loc(#loc297)
    } loc(#loc295)
    cir.scope {
      %14 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc299)
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
      %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc24)
      %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc24)
      %18 = cir.call @popen(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc162)
      cir.store %18, %14 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc300)
      cir.scope {
        %19 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc167)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc168)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc168)
        %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc302)
        cir.if %22 {
          %23 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc170)
          %24 = cir.call @pclose(%23) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc171)
        } loc(#loc303)
      } loc(#loc301)
    } loc(#loc298)
    cir.return loc(#loc28)
  } loc(#loc248)
  cir.func no_proto @CWE78_OS_Command_Injection__char_connect_socket_popen_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc305)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc174)
    cir.return loc(#loc173)
  } loc(#loc304)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc306)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc307)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc308)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc182)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc183)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc184)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc185)
  cir.func @main(%arg0: !s32i loc(fused[#loc188, #loc189]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc190, #loc191])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc310)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc311)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc187)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc192)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc192)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc193)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc194)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc194)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc195)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc182)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc182)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc196)
    %8 = cir.get_global @CWE78_OS_Command_Injection__char_connect_socket_popen_18_good : !cir.ptr<!cir.func<!void ()>> loc(#loc312)
    cir.call @CWE78_OS_Command_Injection__char_connect_socket_popen_18_good() : () -> () loc(#loc197)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc183)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc183)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc199)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc184)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc184)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc200)
    %13 = cir.get_global @CWE78_OS_Command_Injection__char_connect_socket_popen_18_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc313)
    cir.call @CWE78_OS_Command_Injection__char_connect_socket_popen_18_bad() : () -> () loc(#loc201)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc185)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc185)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc203)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc204)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc314)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc314)
    cir.return %17 : !s32i loc(#loc314)
  } loc(#loc309)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc315)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc208)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc317)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc236)
    %2 = cir.get_global @__const.goodG2B.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc236)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc236)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc213)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc318)
    cir.goto "source" loc(#loc319)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc217)
    %4 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc218)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc219)
    %6 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc208)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc208)
    %8 = cir.call @strcat(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc218)
    cir.scope {
      %9 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc321)
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc224)
      %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc225)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc225)
      %13 = cir.call @popen(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc226)
      cir.store %13, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc322)
      cir.scope {
        %14 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc231)
        %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc232)
        %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc232)
        %17 = cir.cmp(ne, %14, %16) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc324)
        cir.if %17 {
          %18 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc234)
          %19 = cir.call @pclose(%18) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc235)
        } loc(#loc325)
      } loc(#loc323)
    } loc(#loc320)
    cir.return loc(#loc210)
  } loc(#loc316)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":152:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":152:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":62:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":62:26)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/sys/socket.h":102:1)
#loc8 = loc("/usr/include/sys/socket.h":102:62)
#loc9 = loc("/usr/include/arpa/inet.h":34:1)
#loc10 = loc("/usr/include/arpa/inet.h":34:47)
#loc11 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":93:49)
#loc12 = loc("/usr/include/netinet/in.h":404:1)
#loc13 = loc("/usr/include/netinet/in.h":405:40)
#loc14 = loc("/usr/include/sys/socket.h":126:1)
#loc15 = loc("/usr/include/sys/socket.h":126:75)
#loc16 = loc("/usr/include/sys/socket.h":145:1)
#loc17 = loc("/usr/include/sys/socket.h":145:68)
#loc18 = loc("/usr/include/string.h":246:1)
#loc19 = loc("/usr/include/string.h":247:33)
#loc20 = loc("/usr/include/unistd.h":358:1)
#loc21 = loc("/usr/include/unistd.h":358:27)
#loc22 = loc("/usr/include/stdio.h":893:1)
#loc23 = loc("/usr/include/stdio.h":894:3)
#loc24 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":136:28)
#loc25 = loc("/usr/include/stdio.h":887:1)
#loc26 = loc("/usr/include/stdio.h":887:36)
#loc27 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":59:1)
#loc28 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":142:1)
#loc29 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":61:5)
#loc30 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":61:12)
#loc31 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":71:9)
#loc32 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":71:13)
#loc33 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":72:9)
#loc34 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":72:28)
#loc35 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":73:9)
#loc36 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":73:15)
#loc37 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":74:9)
#loc38 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":74:32)
#loc39 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":75:9)
#loc40 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":75:37)
#loc41 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":63:12)
#loc42 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":63:5)
#loc43 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":64:5)
#loc44 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":64:10)
#loc45 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":65:1)
#loc46 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":75:26)
#loc47 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":75:33)
#loc48 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":76:9)
#loc49 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":121:17)
#loc50 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":86:36)
#loc51 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":86:45)
#loc52 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":86:58)
#loc53 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":86:29)
#loc54 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":86:13)
#loc55 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":86:69)
#loc56 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":87:13)
#loc57 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":90:13)
#loc58 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":87:17)
#loc59 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":87:34)
#loc60 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":88:13)
#loc61 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":89:17)
#loc62 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":91:20)
#loc63 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":91:21)
#loc64 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":91:30)
#loc65 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":91:33)
#loc66 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":91:47)
#loc67 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":91:13)
#loc68 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":91:48)
#loc69 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":92:34)
#loc70 = loc("/usr/include/netinet/in.h":249:5)
#loc71 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":92:13)
#loc72 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":93:39)
#loc73 = loc("/usr/include/netinet/in.h":251:20)
#loc74 = loc("/usr/include/netinet/in.h":33:15)
#loc75 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":93:13)
#loc76 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":93:59)
#loc77 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":94:38)
#loc78 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":94:32)
#loc79 = loc("/usr/include/netinet/in.h":250:15)
#loc80 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":94:13)
#loc81 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":94:46)
#loc82 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":95:13)
#loc83 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":98:13)
#loc84 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":95:25)
#loc85 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":95:58)
#loc86 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":95:59)
#loc87 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":95:68)
#loc88 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":95:82)
#loc89 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":95:17)
#loc90 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":95:88)
#loc91 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":96:13)
#loc92 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":97:17)
#loc93 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":102:31)
#loc94 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":102:55)
#loc95 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":102:62)
#loc96 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":102:60)
#loc97 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":102:46)
#loc98 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":102:69)
#loc99 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":102:72)
#loc100 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":102:83)
#loc101 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":102:88)
#loc102 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":102:94)
#loc103 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":102:104)
#loc104 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":102:105)
#loc105 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":102:108)
#loc106 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":102:26)
#loc107 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":102:13)
#loc108 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":102:109)
#loc109 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":103:13)
#loc110 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":106:13)
#loc111 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":103:17)
#loc112 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":103:31)
#loc113 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":103:44)
#loc114 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":103:47)
#loc115 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":103:61)
#loc116 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":104:13)
#loc117 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":105:17)
#loc118 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":108:57)
#loc119 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":108:13)
#loc120 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":108:18)
#loc121 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":108:28)
#loc122 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":108:41)
#loc123 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":108:52)
#loc124 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":108:53)
#loc125 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":110:23)
#loc126 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":110:30)
#loc127 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":110:36)
#loc128 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":110:13)
#loc129 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":110:40)
#loc130 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":111:13)
#loc131 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":114:13)
#loc132 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":111:17)
#loc133 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":112:13)
#loc134 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":113:28)
#loc135 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":113:18)
#loc136 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":113:17)
#loc137 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":115:23)
#loc138 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":115:30)
#loc139 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":115:36)
#loc140 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":115:13)
#loc141 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":115:40)
#loc142 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":116:13)
#loc143 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":119:13)
#loc144 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":116:17)
#loc145 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":117:13)
#loc146 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":118:28)
#loc147 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":118:18)
#loc148 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":118:17)
#loc149 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":121:16)
#loc150 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":122:9)
#loc151 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":125:9)
#loc152 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":122:13)
#loc153 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":122:30)
#loc154 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":123:9)
#loc155 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":124:26)
#loc156 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":124:13)
#loc157 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":133:5)
#loc158 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":141:5)
#loc159 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":134:9)
#loc160 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":134:15)
#loc161 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":136:22)
#loc162 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":136:16)
#loc163 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":136:9)
#loc164 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":136:31)
#loc165 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":137:9)
#loc166 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":140:9)
#loc167 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":137:13)
#loc168 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":137:21)
#loc169 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":138:9)
#loc170 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":139:20)
#loc171 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":139:13)
#loc172 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":169:1)
#loc173 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":172:1)
#loc174 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":171:5)
#loc175 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":171:13)
#loc176 = loc("/usr/include/stdlib.h":575:1)
#loc177 = loc("/usr/include/stdlib.h":575:41)
#loc178 = loc("/usr/include/time.h":76:1)
#loc179 = loc("/usr/include/time.h":76:38)
#loc180 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc181 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc182 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":189:15)
#loc183 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":191:15)
#loc184 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":194:15)
#loc185 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":196:15)
#loc186 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":184:1)
#loc187 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":199:1)
#loc192 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":185:1)
#loc193 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":187:27)
#loc194 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":187:22)
#loc195 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":187:5)
#loc196 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":189:5)
#loc197 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":190:5)
#loc198 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":190:67)
#loc199 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":191:5)
#loc200 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":194:5)
#loc201 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":195:5)
#loc202 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":195:66)
#loc203 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":196:5)
#loc204 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":198:12)
#loc205 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":198:5)
#loc206 = loc("/usr/include/string.h":149:1)
#loc207 = loc("/usr/include/string.h":150:14)
#loc208 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":157:18)
#loc209 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":149:1)
#loc210 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":167:1)
#loc211 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":151:5)
#loc212 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":151:12)
#loc213 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":153:12)
#loc214 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":153:5)
#loc215 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":154:5)
#loc216 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":154:10)
#loc217 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":155:1)
#loc218 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":157:5)
#loc219 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":157:12)
#loc220 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":158:5)
#loc221 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":166:5)
#loc222 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":159:9)
#loc223 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":159:15)
#loc224 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":161:22)
#loc225 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":161:28)
#loc226 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":161:16)
#loc227 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":161:9)
#loc228 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":161:31)
#loc229 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":162:9)
#loc230 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":165:9)
#loc231 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":162:13)
#loc232 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":162:21)
#loc233 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":163:9)
#loc234 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":164:20)
#loc235 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_18.c":164:13)
#loc236 = loc(fused[#loc1, #loc2])
#loc237 = loc(fused[#loc3, #loc4])
#loc238 = loc(fused[#loc5, #loc6])
#loc239 = loc(fused[#loc7, #loc8])
#loc240 = loc(fused[#loc9, #loc10])
#loc241 = loc(fused[#loc12, #loc13])
#loc242 = loc(fused[#loc14, #loc15])
#loc243 = loc(fused[#loc16, #loc17])
#loc244 = loc(fused[#loc18, #loc19])
#loc245 = loc(fused[#loc20, #loc21])
#loc246 = loc(fused[#loc22, #loc23])
#loc247 = loc(fused[#loc25, #loc26])
#loc248 = loc(fused[#loc27, #loc28])
#loc249 = loc(fused[#loc29, #loc30])
#loc250 = loc(fused[#loc31, #loc32])
#loc251 = loc(fused[#loc33, #loc34])
#loc252 = loc(fused[#loc35, #loc36])
#loc253 = loc(fused[#loc37, #loc38])
#loc254 = loc(fused[#loc39, #loc40])
#loc255 = loc(fused[#loc42, #loc41])
#loc256 = loc(fused[#loc43, #loc44])
#loc257 = loc(fused[#loc48, #loc49])
#loc258 = loc(fused[#loc54, #loc55])
#loc259 = loc(fused[#loc56, #loc57])
#loc260 = loc(fused[#loc58, #loc59])
#loc261 = loc(fused[#loc60, #loc57])
#loc262 = loc(fused[#loc62, #loc63])
#loc263 = loc(fused[#loc65, #loc66])
#loc264 = loc(fused[#loc67, #loc68])
#loc265 = loc(fused[#loc71, #loc69])
#loc266 = loc(fused[#loc75, #loc76])
#loc267 = loc(fused[#loc80, #loc81])
#loc268 = loc(fused[#loc82, #loc83])
#loc269 = loc(fused[#loc85, #loc86])
#loc270 = loc(fused[#loc87, #loc88])
#loc271 = loc(fused[#loc89, #loc90])
#loc272 = loc(fused[#loc91, #loc83])
#loc273 = loc(fused[#loc97, #loc98])
#loc274 = loc(fused[#loc99, #loc100])
#loc275 = loc(fused[#loc101, #loc102])
#loc276 = loc(fused[#loc101, #loc103])
#loc277 = loc(fused[#loc99, #loc104])
#loc278 = loc(fused[#loc107, #loc108])
#loc279 = loc(fused[#loc109, #loc110])
#loc280 = loc(fused[#loc111, #loc112])
#loc281 = loc(fused[#loc114, #loc115])
#loc282 = loc(fused[#loc116, #loc110])
#loc283 = loc(fused[#loc122, #loc123])
#loc284 = loc(fused[#loc121, #loc123])
#loc285 = loc(fused[#loc120, #loc123])
#loc286 = loc(fused[#loc119, #loc118])
#loc287 = loc(fused[#loc128, #loc129])
#loc288 = loc(fused[#loc130, #loc131])
#loc289 = loc(fused[#loc133, #loc131])
#loc290 = loc(fused[#loc136, #loc134])
#loc291 = loc(fused[#loc140, #loc141])
#loc292 = loc(fused[#loc142, #loc143])
#loc293 = loc(fused[#loc145, #loc143])
#loc294 = loc(fused[#loc148, #loc146])
#loc295 = loc(fused[#loc150, #loc151])
#loc296 = loc(fused[#loc152, #loc153])
#loc297 = loc(fused[#loc154, #loc151])
#loc298 = loc(fused[#loc157, #loc158])
#loc299 = loc(fused[#loc159, #loc160])
#loc300 = loc(fused[#loc163, #loc164])
#loc301 = loc(fused[#loc165, #loc166])
#loc302 = loc(fused[#loc167, #loc168])
#loc303 = loc(fused[#loc169, #loc166])
#loc304 = loc(fused[#loc172, #loc173])
#loc305 = loc(fused[#loc174, #loc175])
#loc306 = loc(fused[#loc176, #loc177])
#loc307 = loc(fused[#loc178, #loc179])
#loc308 = loc(fused[#loc180, #loc181])
#loc309 = loc(fused[#loc186, #loc187])
#loc312 = loc(fused[#loc197, #loc198])
#loc313 = loc(fused[#loc201, #loc202])
#loc314 = loc(fused[#loc205, #loc204])
#loc315 = loc(fused[#loc206, #loc207])
#loc316 = loc(fused[#loc209, #loc210])
#loc317 = loc(fused[#loc211, #loc212])
#loc318 = loc(fused[#loc214, #loc213])
#loc319 = loc(fused[#loc215, #loc216])
#loc320 = loc(fused[#loc220, #loc221])
#loc321 = loc(fused[#loc222, #loc223])
#loc322 = loc(fused[#loc227, #loc228])
#loc323 = loc(fused[#loc229, #loc230])
#loc324 = loc(fused[#loc231, #loc232])
#loc325 = loc(fused[#loc233, #loc230])
