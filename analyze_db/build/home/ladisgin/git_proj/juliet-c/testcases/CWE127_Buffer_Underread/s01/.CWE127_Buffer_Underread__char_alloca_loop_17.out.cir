!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc87 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":99:10)
#loc88 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":99:14)
#loc89 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":99:20)
#loc90 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":99:32)
#loc203 = loc(fused[#loc87, #loc88])
#loc204 = loc(fused[#loc89, #loc90])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__char_alloca_loop_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc173)
  cir.func no_proto @CWE127_Buffer_Underread__char_alloca_loop_17_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc175)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc176)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc177)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc10)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc10)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc10)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc10)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc10)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc10)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc10)
    cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc177)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc11)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc11)
    %12 = cir.const #cir.int<65> : !s32i loc(#loc12)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc13)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc14)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc13)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc13)
    cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc178)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc17)
    %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc17)
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc19)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc19)
    %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc21)
    cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc179)
    cir.scope {
      %24 = cir.const #cir.int<0> : !s32i loc(#loc24)
      cir.store %24, %0 : !s32i, !cir.ptr<!s32i> loc(#loc181)
      cir.for : cond {
        %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc26)
        %26 = cir.const #cir.int<1> : !s32i loc(#loc27)
        %27 = cir.cmp(lt, %25, %26) : !s32i, !cir.bool loc(#loc182)
        cir.condition(%27) loc(#loc28)
      } body {
        cir.scope {
          %25 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
          %26 = cir.const #cir.int<8> : !s32i loc(#loc31)
          %27 = cir.unary(minus, %26) : !s32i, !s32i loc(#loc31)
          %28 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc32)
          cir.store %28, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc184)
        } loc(#loc183)
        cir.yield loc(#loc23)
      } step {
        %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc34)
        %26 = cir.unary(inc, %25) : !s32i, !s32i loc(#loc35)
        cir.store %26, %0 : !s32i, !cir.ptr<!s32i> loc(#loc185)
        cir.yield loc(#loc180)
      } loc(#loc180)
    } loc(#loc180)
    cir.scope {
      %24 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc187)
      %25 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc188)
      %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc42)
      %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc42)
      %28 = cir.const #cir.int<67> : !s32i loc(#loc43)
      %29 = cir.const #cir.int<100> : !s32i loc(#loc44)
      %30 = cir.const #cir.int<1> : !s32i loc(#loc45)
      %31 = cir.binop(sub, %29, %30) nsw : !s32i loc(#loc44)
      %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc44)
      cir.libc.memset %32 bytes from %27 set to %28 : !cir.ptr<!void>, !s32i, !u64i loc(#loc189)
      %33 = cir.const #cir.int<0> : !s32i loc(#loc48)
      %34 = cir.cast(integral, %33 : !s32i), !s8i loc(#loc48)
      %35 = cir.const #cir.int<100> : !s32i loc(#loc49)
      %36 = cir.const #cir.int<1> : !s32i loc(#loc50)
      %37 = cir.binop(sub, %35, %36) nsw : !s32i loc(#loc49)
      %38 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc51)
      %39 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %37 : !s32i), !cir.ptr<!s8i> loc(#loc51)
      cir.store %34, %39 : !s8i, !cir.ptr<!s8i> loc(#loc190)
      cir.scope {
        %48 = cir.const #cir.int<0> : !s32i loc(#loc54)
        %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc54)
        cir.store %49, %24 : !u64i, !cir.ptr<!u64i> loc(#loc192)
        cir.for : cond {
          %50 = cir.load %24 : !cir.ptr<!u64i>, !u64i loc(#loc56)
          %51 = cir.const #cir.int<100> : !s32i loc(#loc57)
          %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc57)
          %53 = cir.cmp(lt, %50, %52) : !u64i, !cir.bool loc(#loc193)
          cir.condition(%53) loc(#loc58)
        } body {
          cir.scope {
            %50 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
            %51 = cir.load %24 : !cir.ptr<!u64i>, !u64i loc(#loc61)
            %52 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %51 : !u64i), !cir.ptr<!s8i> loc(#loc62)
            %53 = cir.load %52 : !cir.ptr<!s8i>, !s8i loc(#loc60)
            %54 = cir.load %24 : !cir.ptr<!u64i>, !u64i loc(#loc63)
            %55 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc64)
            %56 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %54 : !u64i), !cir.ptr<!s8i> loc(#loc64)
            cir.store %53, %56 : !s8i, !cir.ptr<!s8i> loc(#loc195)
          } loc(#loc194)
          cir.yield loc(#loc53)
        } step {
          %50 = cir.load %24 : !cir.ptr<!u64i>, !u64i loc(#loc65)
          %51 = cir.unary(inc, %50) : !u64i, !u64i loc(#loc66)
          cir.store %51, %24 : !u64i, !cir.ptr<!u64i> loc(#loc196)
          cir.yield loc(#loc191)
        } loc(#loc191)
      } loc(#loc191)
      %40 = cir.const #cir.int<0> : !s32i loc(#loc67)
      %41 = cir.cast(integral, %40 : !s32i), !s8i loc(#loc67)
      %42 = cir.const #cir.int<100> : !s32i loc(#loc68)
      %43 = cir.const #cir.int<1> : !s32i loc(#loc69)
      %44 = cir.binop(sub, %42, %43) nsw : !s32i loc(#loc68)
      %45 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc70)
      %46 = cir.ptr_stride(%45 : !cir.ptr<!s8i>, %44 : !s32i), !cir.ptr<!s8i> loc(#loc70)
      cir.store %41, %46 : !s8i, !cir.ptr<!s8i> loc(#loc197)
      %47 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc71)
      cir.call @printLine(%47) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    } loc(#loc186)
    cir.return loc(#loc4)
  } loc(#loc174)
  cir.func no_proto @CWE127_Buffer_Underread__char_alloca_loop_17_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc199)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc75)
    cir.return loc(#loc74)
  } loc(#loc198)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc200)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc201)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc81)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc82)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc83)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc84)
  cir.func @main(%arg0: !s32i loc(fused[#loc87, #loc88]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc89, #loc90])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc203)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc204)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc86)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc91)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc91)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc92)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc93)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc93)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc94)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc81)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc95)
    %8 = cir.get_global @CWE127_Buffer_Underread__char_alloca_loop_17_good : !cir.ptr<!cir.func<!void ()>> loc(#loc205)
    cir.call @CWE127_Buffer_Underread__char_alloca_loop_17_good() : () -> () loc(#loc96)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc82)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc82)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc83)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc83)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc99)
    %13 = cir.get_global @CWE127_Buffer_Underread__char_alloca_loop_17_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc206)
    cir.call @CWE127_Buffer_Underread__char_alloca_loop_17_bad() : () -> () loc(#loc100)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc84)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc84)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc102)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc103)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc207)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc207)
    cir.return %17 : !s32i loc(#loc207)
  } loc(#loc202)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc209)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc210)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc211)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc112)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc112)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc112)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc112)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc112)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc112)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc112)
    cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc211)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc113)
    %12 = cir.const #cir.int<65> : !s32i loc(#loc114)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc115)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc116)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc115)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc115)
    cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc212)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc119)
    %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc119)
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc120)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc121)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc122)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc121)
    %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc123)
    cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc213)
    cir.scope {
      %24 = cir.const #cir.int<0> : !s32i loc(#loc126)
      cir.store %24, %0 : !s32i, !cir.ptr<!s32i> loc(#loc215)
      cir.for : cond {
        %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc128)
        %26 = cir.const #cir.int<1> : !s32i loc(#loc129)
        %27 = cir.cmp(lt, %25, %26) : !s32i, !cir.bool loc(#loc216)
        cir.condition(%27) loc(#loc130)
      } body {
        cir.scope {
          %25 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
          cir.store %25, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc218)
        } loc(#loc217)
        cir.yield loc(#loc125)
      } step {
        %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc134)
        %26 = cir.unary(inc, %25) : !s32i, !s32i loc(#loc135)
        cir.store %26, %0 : !s32i, !cir.ptr<!s32i> loc(#loc219)
        cir.yield loc(#loc214)
      } loc(#loc214)
    } loc(#loc214)
    cir.scope {
      %24 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc221)
      %25 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc222)
      %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc142)
      %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc142)
      %28 = cir.const #cir.int<67> : !s32i loc(#loc143)
      %29 = cir.const #cir.int<100> : !s32i loc(#loc144)
      %30 = cir.const #cir.int<1> : !s32i loc(#loc145)
      %31 = cir.binop(sub, %29, %30) nsw : !s32i loc(#loc144)
      %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc144)
      cir.libc.memset %32 bytes from %27 set to %28 : !cir.ptr<!void>, !s32i, !u64i loc(#loc223)
      %33 = cir.const #cir.int<0> : !s32i loc(#loc148)
      %34 = cir.cast(integral, %33 : !s32i), !s8i loc(#loc148)
      %35 = cir.const #cir.int<100> : !s32i loc(#loc149)
      %36 = cir.const #cir.int<1> : !s32i loc(#loc150)
      %37 = cir.binop(sub, %35, %36) nsw : !s32i loc(#loc149)
      %38 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc151)
      %39 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %37 : !s32i), !cir.ptr<!s8i> loc(#loc151)
      cir.store %34, %39 : !s8i, !cir.ptr<!s8i> loc(#loc224)
      cir.scope {
        %48 = cir.const #cir.int<0> : !s32i loc(#loc154)
        %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc154)
        cir.store %49, %24 : !u64i, !cir.ptr<!u64i> loc(#loc226)
        cir.for : cond {
          %50 = cir.load %24 : !cir.ptr<!u64i>, !u64i loc(#loc156)
          %51 = cir.const #cir.int<100> : !s32i loc(#loc157)
          %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc157)
          %53 = cir.cmp(lt, %50, %52) : !u64i, !cir.bool loc(#loc227)
          cir.condition(%53) loc(#loc158)
        } body {
          cir.scope {
            %50 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
            %51 = cir.load %24 : !cir.ptr<!u64i>, !u64i loc(#loc161)
            %52 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %51 : !u64i), !cir.ptr<!s8i> loc(#loc162)
            %53 = cir.load %52 : !cir.ptr<!s8i>, !s8i loc(#loc160)
            %54 = cir.load %24 : !cir.ptr<!u64i>, !u64i loc(#loc163)
            %55 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc164)
            %56 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %54 : !u64i), !cir.ptr<!s8i> loc(#loc164)
            cir.store %53, %56 : !s8i, !cir.ptr<!s8i> loc(#loc229)
          } loc(#loc228)
          cir.yield loc(#loc153)
        } step {
          %50 = cir.load %24 : !cir.ptr<!u64i>, !u64i loc(#loc165)
          %51 = cir.unary(inc, %50) : !u64i, !u64i loc(#loc166)
          cir.store %51, %24 : !u64i, !cir.ptr<!u64i> loc(#loc230)
          cir.yield loc(#loc225)
        } loc(#loc225)
      } loc(#loc225)
      %40 = cir.const #cir.int<0> : !s32i loc(#loc167)
      %41 = cir.cast(integral, %40 : !s32i), !s8i loc(#loc167)
      %42 = cir.const #cir.int<100> : !s32i loc(#loc168)
      %43 = cir.const #cir.int<1> : !s32i loc(#loc169)
      %44 = cir.binop(sub, %42, %43) nsw : !s32i loc(#loc168)
      %45 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc170)
      %46 = cir.ptr_stride(%45 : !cir.ptr<!s8i>, %44 : !s32i), !cir.ptr<!s8i> loc(#loc170)
      cir.store %41, %46 : !s8i, !cir.ptr<!s8i> loc(#loc231)
      %47 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc171)
      cir.call @printLine(%47) : (!cir.ptr<!s8i>) -> () loc(#loc172)
    } loc(#loc220)
    cir.return loc(#loc106)
  } loc(#loc208)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__char_alloca_loop_17.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":23:1)
#loc4 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":49:1)
#loc5 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":25:5)
#loc6 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":25:9)
#loc7 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":26:5)
#loc8 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":26:12)
#loc9 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":27:5)
#loc10 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":27:33)
#loc11 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":28:12)
#loc12 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":28:24)
#loc13 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":28:29)
#loc14 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":28:33)
#loc15 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":28:5)
#loc16 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":28:34)
#loc17 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":29:25)
#loc18 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":29:5)
#loc19 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":29:16)
#loc20 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":29:20)
#loc21 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":29:21)
#loc22 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":30:5)
#loc23 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":34:5)
#loc24 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":30:13)
#loc25 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":30:9)
#loc26 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":30:16)
#loc27 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":30:20)
#loc28 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":30:18)
#loc29 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":31:5)
#loc30 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":33:16)
#loc31 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":33:29)
#loc32 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":33:27)
#loc33 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":33:9)
#loc34 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":30:24)
#loc35 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":30:23)
#loc36 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":35:5)
#loc37 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":48:5)
#loc38 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":36:9)
#loc39 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":36:16)
#loc40 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":37:9)
#loc41 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":37:22)
#loc42 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":38:16)
#loc43 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":38:22)
#loc44 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":38:27)
#loc45 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":38:31)
#loc46 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":38:9)
#loc47 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":38:32)
#loc48 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":39:23)
#loc49 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":39:14)
#loc50 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":39:18)
#loc51 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":39:9)
#loc52 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":41:9)
#loc53 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":44:9)
#loc54 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":41:18)
#loc55 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":41:14)
#loc56 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":41:21)
#loc57 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":41:25)
#loc58 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":41:23)
#loc59 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":42:9)
#loc60 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":43:23)
#loc61 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":43:28)
#loc62 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":43:29)
#loc63 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":43:18)
#loc64 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":43:13)
#loc65 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":41:31)
#loc66 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":41:30)
#loc67 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":46:23)
#loc68 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":46:14)
#loc69 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":46:18)
#loc70 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":46:9)
#loc71 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":47:19)
#loc72 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":47:9)
#loc73 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":84:1)
#loc74 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":87:1)
#loc75 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":86:5)
#loc76 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":86:13)
#loc77 = loc("/usr/include/stdlib.h":575:1)
#loc78 = loc("/usr/include/stdlib.h":575:41)
#loc79 = loc("/usr/include/time.h":76:1)
#loc80 = loc("/usr/include/time.h":76:38)
#loc81 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":104:15)
#loc82 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":106:15)
#loc83 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":109:15)
#loc84 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":111:15)
#loc85 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":99:1)
#loc86 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":114:1)
#loc91 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":100:1)
#loc92 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":102:27)
#loc93 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":102:22)
#loc94 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":102:5)
#loc95 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":104:5)
#loc96 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":105:5)
#loc97 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":105:55)
#loc98 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":106:5)
#loc99 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":109:5)
#loc100 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":110:5)
#loc101 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":110:54)
#loc102 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":111:5)
#loc103 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":113:12)
#loc104 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":113:5)
#loc105 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":56:1)
#loc106 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":82:1)
#loc107 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":58:5)
#loc108 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":58:9)
#loc109 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":59:5)
#loc110 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":59:12)
#loc111 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":60:5)
#loc112 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":60:33)
#loc113 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":61:12)
#loc114 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":61:24)
#loc115 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":61:29)
#loc116 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":61:33)
#loc117 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":61:5)
#loc118 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":61:34)
#loc119 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":62:25)
#loc120 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":62:5)
#loc121 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":62:16)
#loc122 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":62:20)
#loc123 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":62:21)
#loc124 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":63:5)
#loc125 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":67:5)
#loc126 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":63:13)
#loc127 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":63:9)
#loc128 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":63:16)
#loc129 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":63:20)
#loc130 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":63:18)
#loc131 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":64:5)
#loc132 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":66:16)
#loc133 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":66:9)
#loc134 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":63:24)
#loc135 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":63:23)
#loc136 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":68:5)
#loc137 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":81:5)
#loc138 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":69:9)
#loc139 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":69:16)
#loc140 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":70:9)
#loc141 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":70:22)
#loc142 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":71:16)
#loc143 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":71:22)
#loc144 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":71:27)
#loc145 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":71:31)
#loc146 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":71:9)
#loc147 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":71:32)
#loc148 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":72:23)
#loc149 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":72:14)
#loc150 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":72:18)
#loc151 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":72:9)
#loc152 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":74:9)
#loc153 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":77:9)
#loc154 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":74:18)
#loc155 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":74:14)
#loc156 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":74:21)
#loc157 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":74:25)
#loc158 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":74:23)
#loc159 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":75:9)
#loc160 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":76:23)
#loc161 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":76:28)
#loc162 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":76:29)
#loc163 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":76:18)
#loc164 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":76:13)
#loc165 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":74:31)
#loc166 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":74:30)
#loc167 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":79:23)
#loc168 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":79:14)
#loc169 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":79:18)
#loc170 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":79:9)
#loc171 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":80:19)
#loc172 = loc("CWE127_Buffer_Underread__char_alloca_loop_17.c":80:9)
#loc173 = loc(fused[#loc1, #loc2])
#loc174 = loc(fused[#loc3, #loc4])
#loc175 = loc(fused[#loc5, #loc6])
#loc176 = loc(fused[#loc7, #loc8])
#loc177 = loc(fused[#loc9, #loc10])
#loc178 = loc(fused[#loc15, #loc16])
#loc179 = loc(fused[#loc18, #loc17])
#loc180 = loc(fused[#loc22, #loc23])
#loc181 = loc(fused[#loc25, #loc24])
#loc182 = loc(fused[#loc26, #loc27])
#loc183 = loc(fused[#loc29, #loc23])
#loc184 = loc(fused[#loc33, #loc31])
#loc185 = loc(fused[#loc35, #loc34])
#loc186 = loc(fused[#loc36, #loc37])
#loc187 = loc(fused[#loc38, #loc39])
#loc188 = loc(fused[#loc40, #loc41])
#loc189 = loc(fused[#loc46, #loc47])
#loc190 = loc(fused[#loc51, #loc48])
#loc191 = loc(fused[#loc52, #loc53])
#loc192 = loc(fused[#loc55, #loc54])
#loc193 = loc(fused[#loc56, #loc57])
#loc194 = loc(fused[#loc59, #loc53])
#loc195 = loc(fused[#loc64, #loc62])
#loc196 = loc(fused[#loc66, #loc65])
#loc197 = loc(fused[#loc70, #loc67])
#loc198 = loc(fused[#loc73, #loc74])
#loc199 = loc(fused[#loc75, #loc76])
#loc200 = loc(fused[#loc77, #loc78])
#loc201 = loc(fused[#loc79, #loc80])
#loc202 = loc(fused[#loc85, #loc86])
#loc205 = loc(fused[#loc96, #loc97])
#loc206 = loc(fused[#loc100, #loc101])
#loc207 = loc(fused[#loc104, #loc103])
#loc208 = loc(fused[#loc105, #loc106])
#loc209 = loc(fused[#loc107, #loc108])
#loc210 = loc(fused[#loc109, #loc110])
#loc211 = loc(fused[#loc111, #loc112])
#loc212 = loc(fused[#loc117, #loc118])
#loc213 = loc(fused[#loc120, #loc119])
#loc214 = loc(fused[#loc124, #loc125])
#loc215 = loc(fused[#loc127, #loc126])
#loc216 = loc(fused[#loc128, #loc129])
#loc217 = loc(fused[#loc131, #loc125])
#loc218 = loc(fused[#loc133, #loc132])
#loc219 = loc(fused[#loc135, #loc134])
#loc220 = loc(fused[#loc136, #loc137])
#loc221 = loc(fused[#loc138, #loc139])
#loc222 = loc(fused[#loc140, #loc141])
#loc223 = loc(fused[#loc146, #loc147])
#loc224 = loc(fused[#loc151, #loc148])
#loc225 = loc(fused[#loc152, #loc153])
#loc226 = loc(fused[#loc155, #loc154])
#loc227 = loc(fused[#loc156, #loc157])
#loc228 = loc(fused[#loc159, #loc153])
#loc229 = loc(fused[#loc164, #loc162])
#loc230 = loc(fused[#loc166, #loc165])
#loc231 = loc(fused[#loc170, #loc167])
