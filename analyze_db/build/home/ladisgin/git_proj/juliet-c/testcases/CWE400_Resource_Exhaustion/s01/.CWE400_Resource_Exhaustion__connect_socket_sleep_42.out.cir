!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc18 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":50:22)
#loc19 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":50:26)
#loc145 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":240:10)
#loc146 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":240:14)
#loc147 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":240:20)
#loc148 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":240:32)
#loc165 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":146:26)
#loc166 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":146:30)
#loc283 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":127:26)
#loc284 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":127:30)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc313 = loc(fused[#loc18, #loc19])
#loc359 = loc(fused[#loc145, #loc146])
#loc360 = loc(fused[#loc147, #loc148])
#loc365 = loc(fused[#loc165, #loc166])
#loc408 = loc(fused[#loc283, #loc284])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__connect_socket_sleep_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc305)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc306)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc307)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc308)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc309)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc310)
  cir.func private @close(!s32i) -> !s32i loc(#loc311)
  cir.func internal private @badSource(%arg0: !s32i loc(fused[#loc18, #loc19])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc313)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc17)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc20)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc315)
      %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc316)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc317)
      %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc318)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc28)
      %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc28)
      cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc317)
      cir.scope {
        cir.do {
          %10 = cir.const #cir.int<2> : !s32i loc(#loc33)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc34)
          %12 = cir.const #cir.int<6> : !s32i loc(#loc35)
          %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc36)
          cir.store %13, %6 : !s32i, !cir.ptr<!s32i> loc(#loc320)
          cir.scope {
            %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc41)
            %53 = cir.const #cir.int<1> : !s32i loc(#loc42)
            %54 = cir.unary(minus, %53) : !s32i, !s32i loc(#loc42)
            %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc322)
            cir.if %55 {
              cir.break loc(#loc44)
            } loc(#loc323)
          } loc(#loc321)
          %14 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc324)
          %15 = cir.const #cir.int<0> : !s32i loc(#loc47)
          %16 = cir.const #cir.int<16> : !u64i loc(#loc325)
          cir.libc.memset %16 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc326)
          %17 = cir.const #cir.int<2> : !s32i loc(#loc52)
          %18 = cir.cast(integral, %17 : !s32i), !u16i loc(#loc52)
          %19 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc53)
          cir.store %18, %19 : !u16i, !cir.ptr<!u16i> loc(#loc327)
          %20 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
          %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
          %22 = cir.call @inet_addr(%21) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc55)
          %23 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc56)
          %24 = cir.get_member %23[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc57)
          cir.store %22, %24 : !u32i, !cir.ptr<!u32i> loc(#loc328)
          %25 = cir.const #cir.int<27015> : !s32i loc(#loc60)
          %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc60)
          %27 = cir.call @htons(%26) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc61)
          %28 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc62)
          cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc329)
          cir.scope {
            %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc67)
            %53 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc331)
            %54 = cir.const #cir.int<16> : !u64i loc(#loc332)
            %55 = cir.cast(integral, %54 : !u64i), !u32i loc(#loc332)
            %56 = cir.call @connect(%52, %53, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc72)
            %57 = cir.const #cir.int<1> : !s32i loc(#loc73)
            %58 = cir.unary(minus, %57) : !s32i, !s32i loc(#loc73)
            %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc333)
            cir.if %59 {
              cir.break loc(#loc75)
            } loc(#loc334)
          } loc(#loc330)
          %29 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc76)
          %30 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc77)
          %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc77)
          %32 = cir.const #cir.int<3> : !s32i loc(#loc78)
          %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc78)
          %34 = cir.const #cir.int<4> : !u64i loc(#loc78)
          %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc78)
          %36 = cir.const #cir.int<2> : !s32i loc(#loc78)
          %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc78)
          %38 = cir.binop(add, %35, %37) : !u64i loc(#loc78)
          %39 = cir.const #cir.int<1> : !s32i loc(#loc79)
          %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc79)
          %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc335)
          %42 = cir.const #cir.int<0> : !s32i loc(#loc80)
          %43 = cir.call @recv(%29, %31, %41, %42) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc81)
          %44 = cir.cast(integral, %43 : !s64i), !s32i loc(#loc81)
          cir.store %44, %4 : !s32i, !cir.ptr<!s32i> loc(#loc336)
          cir.scope {
            %52 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc86)
            %53 = cir.const #cir.int<1> : !s32i loc(#loc87)
            %54 = cir.unary(minus, %53) : !s32i, !s32i loc(#loc87)
            %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc338)
            %56 = cir.ternary(%55, true {
              %57 = cir.const #true loc(#loc88)
              cir.yield %57 : !cir.bool loc(#loc88)
            }, false {
              %57 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc89)
              %58 = cir.const #cir.int<0> : !s32i loc(#loc90)
              %59 = cir.cmp(eq, %57, %58) : !s32i, !cir.bool loc(#loc339)
              %60 = cir.ternary(%59, true {
                %61 = cir.const #true loc(#loc88)
                cir.yield %61 : !cir.bool loc(#loc88)
              }, false {
                %61 = cir.const #false loc(#loc88)
                cir.yield %61 : !cir.bool loc(#loc88)
              }) : (!cir.bool) -> !cir.bool loc(#loc88)
              cir.yield %60 : !cir.bool loc(#loc88)
            }) : (!cir.bool) -> !cir.bool loc(#loc88)
            cir.if %56 {
              cir.break loc(#loc92)
            } loc(#loc340)
          } loc(#loc337)
          %45 = cir.const #cir.int<0> : !s32i loc(#loc93)
          %46 = cir.cast(integral, %45 : !s32i), !s8i loc(#loc93)
          %47 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc94)
          %48 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc95)
          %49 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc95)
          cir.store %46, %49 : !s8i, !cir.ptr<!s8i> loc(#loc341)
          %50 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc96)
          %51 = cir.call @atoi(%50) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc97)
          cir.store %51, %0 : !s32i, !cir.ptr<!s32i> loc(#loc342)
          cir.yield loc(#loc32)
        } while {
          %10 = cir.const #cir.int<0> : !s32i loc(#loc100)
          %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc100)
          cir.condition(%11) loc(#loc100)
        } loc(#loc319)
      } loc(#loc319)
      cir.scope {
        %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc103)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc104)
        %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc104)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc344)
        cir.if %13 {
          %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc106)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc107)
        } loc(#loc345)
      } loc(#loc343)
    } loc(#loc314)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc108)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc346)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc346)
    cir.return %3 : !s32i loc(#loc346)
  } loc(#loc312)
  cir.func private @usleep(!u32i) -> !s32i loc(#loc347)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc348)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Sleep time possibly too long\00" : !cir.array<!s8i x 29>> : !cir.array<!s8i x 29> {alignment = 1 : i64} loc(#loc114)
  cir.func no_proto @CWE400_Resource_Exhaustion__connect_socket_sleep_42_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc350)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc119)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc120)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc351)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc122)
    %4 = cir.call @badSource(%3) : (!s32i) -> !s32i loc(#loc123)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc352)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc126)
    %6 = cir.cast(integral, %5 : !s32i), !u32i loc(#loc126)
    %7 = cir.call @usleep(%6) : (!u32i) -> !s32i loc(#loc127)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc114)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc114)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc128)
    cir.return loc(#loc116)
  } loc(#loc349)
  cir.func no_proto @CWE400_Resource_Exhaustion__connect_socket_sleep_42_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc354)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc131)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc355)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc133)
    cir.return loc(#loc130)
  } loc(#loc353)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc356)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc357)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc139)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc140)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc141)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc142)
  cir.func @main(%arg0: !s32i loc(fused[#loc145, #loc146]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc147, #loc148])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc359)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc360)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc144)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc149)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc149)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc150)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc151)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc151)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc152)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc139)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc139)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc153)
    %8 = cir.get_global @CWE400_Resource_Exhaustion__connect_socket_sleep_42_good : !cir.ptr<!cir.func<!void ()>> loc(#loc361)
    cir.call @CWE400_Resource_Exhaustion__connect_socket_sleep_42_good() : () -> () loc(#loc154)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc140)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc140)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc156)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc141)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc141)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc157)
    %13 = cir.get_global @CWE400_Resource_Exhaustion__connect_socket_sleep_42_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc362)
    cir.call @CWE400_Resource_Exhaustion__connect_socket_sleep_42_bad() : () -> () loc(#loc158)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc142)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc142)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc160)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc161)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc363)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc363)
    cir.return %17 : !s32i loc(#loc363)
  } loc(#loc358)
  cir.func internal private @goodB2GSource(%arg0: !s32i loc(fused[#loc165, #loc166])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc365)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc164)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc167)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc367)
      %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc368)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc369)
      %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc370)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc175)
      %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc175)
      cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc369)
      cir.scope {
        cir.do {
          %10 = cir.const #cir.int<2> : !s32i loc(#loc180)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc181)
          %12 = cir.const #cir.int<6> : !s32i loc(#loc182)
          %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc183)
          cir.store %13, %6 : !s32i, !cir.ptr<!s32i> loc(#loc372)
          cir.scope {
            %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc188)
            %53 = cir.const #cir.int<1> : !s32i loc(#loc189)
            %54 = cir.unary(minus, %53) : !s32i, !s32i loc(#loc189)
            %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc374)
            cir.if %55 {
              cir.break loc(#loc191)
            } loc(#loc375)
          } loc(#loc373)
          %14 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc376)
          %15 = cir.const #cir.int<0> : !s32i loc(#loc194)
          %16 = cir.const #cir.int<16> : !u64i loc(#loc377)
          cir.libc.memset %16 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc378)
          %17 = cir.const #cir.int<2> : !s32i loc(#loc199)
          %18 = cir.cast(integral, %17 : !s32i), !u16i loc(#loc199)
          %19 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc53)
          cir.store %18, %19 : !u16i, !cir.ptr<!u16i> loc(#loc379)
          %20 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc201)
          %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc201)
          %22 = cir.call @inet_addr(%21) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc202)
          %23 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc56)
          %24 = cir.get_member %23[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc57)
          cir.store %22, %24 : !u32i, !cir.ptr<!u32i> loc(#loc380)
          %25 = cir.const #cir.int<27015> : !s32i loc(#loc205)
          %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc205)
          %27 = cir.call @htons(%26) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc206)
          %28 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc62)
          cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc381)
          cir.scope {
            %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc211)
            %53 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc383)
            %54 = cir.const #cir.int<16> : !u64i loc(#loc384)
            %55 = cir.cast(integral, %54 : !u64i), !u32i loc(#loc384)
            %56 = cir.call @connect(%52, %53, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc216)
            %57 = cir.const #cir.int<1> : !s32i loc(#loc217)
            %58 = cir.unary(minus, %57) : !s32i, !s32i loc(#loc217)
            %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc385)
            cir.if %59 {
              cir.break loc(#loc219)
            } loc(#loc386)
          } loc(#loc382)
          %29 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc220)
          %30 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc221)
          %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc221)
          %32 = cir.const #cir.int<3> : !s32i loc(#loc222)
          %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc222)
          %34 = cir.const #cir.int<4> : !u64i loc(#loc222)
          %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc222)
          %36 = cir.const #cir.int<2> : !s32i loc(#loc222)
          %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc222)
          %38 = cir.binop(add, %35, %37) : !u64i loc(#loc222)
          %39 = cir.const #cir.int<1> : !s32i loc(#loc223)
          %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc223)
          %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc387)
          %42 = cir.const #cir.int<0> : !s32i loc(#loc224)
          %43 = cir.call @recv(%29, %31, %41, %42) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc225)
          %44 = cir.cast(integral, %43 : !s64i), !s32i loc(#loc225)
          cir.store %44, %4 : !s32i, !cir.ptr<!s32i> loc(#loc388)
          cir.scope {
            %52 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc230)
            %53 = cir.const #cir.int<1> : !s32i loc(#loc231)
            %54 = cir.unary(minus, %53) : !s32i, !s32i loc(#loc231)
            %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc390)
            %56 = cir.ternary(%55, true {
              %57 = cir.const #true loc(#loc232)
              cir.yield %57 : !cir.bool loc(#loc232)
            }, false {
              %57 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc233)
              %58 = cir.const #cir.int<0> : !s32i loc(#loc234)
              %59 = cir.cmp(eq, %57, %58) : !s32i, !cir.bool loc(#loc391)
              %60 = cir.ternary(%59, true {
                %61 = cir.const #true loc(#loc232)
                cir.yield %61 : !cir.bool loc(#loc232)
              }, false {
                %61 = cir.const #false loc(#loc232)
                cir.yield %61 : !cir.bool loc(#loc232)
              }) : (!cir.bool) -> !cir.bool loc(#loc232)
              cir.yield %60 : !cir.bool loc(#loc232)
            }) : (!cir.bool) -> !cir.bool loc(#loc232)
            cir.if %56 {
              cir.break loc(#loc236)
            } loc(#loc392)
          } loc(#loc389)
          %45 = cir.const #cir.int<0> : !s32i loc(#loc237)
          %46 = cir.cast(integral, %45 : !s32i), !s8i loc(#loc237)
          %47 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc238)
          %48 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc239)
          %49 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc239)
          cir.store %46, %49 : !s8i, !cir.ptr<!s8i> loc(#loc393)
          %50 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc240)
          %51 = cir.call @atoi(%50) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc241)
          cir.store %51, %0 : !s32i, !cir.ptr<!s32i> loc(#loc394)
          cir.yield loc(#loc179)
        } while {
          %10 = cir.const #cir.int<0> : !s32i loc(#loc244)
          %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc244)
          cir.condition(%11) loc(#loc244)
        } loc(#loc371)
      } loc(#loc371)
      cir.scope {
        %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc247)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc248)
        %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc248)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc396)
        cir.if %13 {
          %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc250)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc251)
        } loc(#loc397)
      } loc(#loc395)
    } loc(#loc366)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc252)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc398)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc398)
    cir.return %3 : !s32i loc(#loc398)
  } loc(#loc364)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Sleep time OK\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc254)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Sleep time too long\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc255)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc400)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc260)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc261)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc401)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc263)
    %4 = cir.call @goodB2GSource(%3) : (!s32i) -> !s32i loc(#loc264)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc402)
    cir.scope {
      %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc269)
      %6 = cir.const #cir.int<0> : !s32i loc(#loc270)
      %7 = cir.cmp(gt, %5, %6) : !s32i, !cir.bool loc(#loc404)
      %8 = cir.ternary(%7, true {
        %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc272)
        %10 = cir.const #cir.int<2000> : !s32i loc(#loc273)
        %11 = cir.cmp(le, %9, %10) : !s32i, !cir.bool loc(#loc405)
        %12 = cir.ternary(%11, true {
          %13 = cir.const #true loc(#loc271)
          cir.yield %13 : !cir.bool loc(#loc271)
        }, false {
          %13 = cir.const #false loc(#loc271)
          cir.yield %13 : !cir.bool loc(#loc271)
        }) : (!cir.bool) -> !cir.bool loc(#loc271)
        cir.yield %12 : !cir.bool loc(#loc271)
      }, false {
        %9 = cir.const #false loc(#loc271)
        cir.yield %9 : !cir.bool loc(#loc271)
      }) : (!cir.bool) -> !cir.bool loc(#loc271)
      cir.if %8 {
        %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc277)
        %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc277)
        %11 = cir.call @usleep(%10) : (!u32i) -> !s32i loc(#loc278)
        %12 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc254)
        %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc254)
        cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc279)
      } else {
        %9 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc255)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc255)
        cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc280)
      } loc(#loc406)
    } loc(#loc403)
    cir.return loc(#loc257)
  } loc(#loc399)
  cir.func internal private @goodG2BSource(%arg0: !s32i loc(fused[#loc283, #loc284])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc408)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc282)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc285)
    %2 = cir.const #cir.int<20> : !s32i loc(#loc286)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc409)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc288)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc410)
    %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc410)
    cir.return %4 : !s32i loc(#loc410)
  } loc(#loc407)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc412)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc294)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc295)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc413)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc297)
    %4 = cir.call @goodG2BSource(%3) : (!s32i) -> !s32i loc(#loc298)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc414)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc301)
    %6 = cir.cast(integral, %5 : !s32i), !u32i loc(#loc301)
    %7 = cir.call @usleep(%6) : (!u32i) -> !s32i loc(#loc302)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc303)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc303)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc304)
    cir.return loc(#loc291)
  } loc(#loc411)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":78:49)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":50:1)
#loc17 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":109:1)
#loc20 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":51:1)
#loc21 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":52:5)
#loc22 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":107:5)
#loc23 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":57:9)
#loc24 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":57:13)
#loc25 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":58:9)
#loc26 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":58:28)
#loc27 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":59:9)
#loc28 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":59:32)
#loc29 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":60:9)
#loc30 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":60:41)
#loc31 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":61:9)
#loc32 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":96:17)
#loc33 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":71:36)
#loc34 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":71:45)
#loc35 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":71:58)
#loc36 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":71:29)
#loc37 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":71:13)
#loc38 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":71:69)
#loc39 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":72:13)
#loc40 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":75:13)
#loc41 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":72:17)
#loc42 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":72:34)
#loc43 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":73:13)
#loc44 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":74:17)
#loc45 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":76:20)
#loc46 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":76:21)
#loc47 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":76:30)
#loc48 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":76:33)
#loc49 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":76:47)
#loc50 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":76:13)
#loc51 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":76:48)
#loc52 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":77:34)
#loc53 = loc("/usr/include/netinet/in.h":249:5)
#loc54 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":77:13)
#loc55 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":78:39)
#loc56 = loc("/usr/include/netinet/in.h":251:20)
#loc57 = loc("/usr/include/netinet/in.h":33:15)
#loc58 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":78:13)
#loc59 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":78:59)
#loc60 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":79:38)
#loc61 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":79:32)
#loc62 = loc("/usr/include/netinet/in.h":250:15)
#loc63 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":79:13)
#loc64 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":79:46)
#loc65 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":80:13)
#loc66 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":83:13)
#loc67 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":80:25)
#loc68 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":80:58)
#loc69 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":80:59)
#loc70 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":80:68)
#loc71 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":80:82)
#loc72 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":80:17)
#loc73 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":80:88)
#loc74 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":81:13)
#loc75 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":82:17)
#loc76 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":86:31)
#loc77 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":86:46)
#loc78 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":86:59)
#loc79 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":86:77)
#loc80 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":86:80)
#loc81 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":86:26)
#loc82 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":86:13)
#loc83 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":86:81)
#loc84 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":87:13)
#loc85 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":90:13)
#loc86 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":87:17)
#loc87 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":87:31)
#loc88 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":87:44)
#loc89 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":87:47)
#loc90 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":87:61)
#loc91 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":88:13)
#loc92 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":89:17)
#loc93 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":92:39)
#loc94 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":92:25)
#loc95 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":92:13)
#loc96 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":94:26)
#loc97 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":94:21)
#loc98 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":94:13)
#loc99 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":94:37)
#loc100 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":96:16)
#loc101 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":97:9)
#loc102 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":100:9)
#loc103 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":97:13)
#loc104 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":97:30)
#loc105 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":98:9)
#loc106 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":99:26)
#loc107 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":99:13)
#loc108 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":108:12)
#loc109 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":108:5)
#loc110 = loc("/usr/include/unistd.h":480:1)
#loc111 = loc("/usr/include/unistd.h":480:43)
#loc112 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc113 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc114 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":119:15)
#loc115 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":111:1)
#loc116 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":120:1)
#loc117 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":113:5)
#loc118 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":113:9)
#loc119 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":115:14)
#loc120 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":115:13)
#loc121 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":115:5)
#loc122 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":116:23)
#loc123 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":116:13)
#loc124 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":116:5)
#loc125 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":116:28)
#loc126 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":118:11)
#loc127 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":118:5)
#loc128 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":119:5)
#loc129 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":225:1)
#loc130 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":229:1)
#loc131 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":227:5)
#loc132 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":227:13)
#loc133 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":228:5)
#loc134 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":228:13)
#loc135 = loc("/usr/include/stdlib.h":575:1)
#loc136 = loc("/usr/include/stdlib.h":575:41)
#loc137 = loc("/usr/include/time.h":76:1)
#loc138 = loc("/usr/include/time.h":76:38)
#loc139 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":245:15)
#loc140 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":247:15)
#loc141 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":250:15)
#loc142 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":252:15)
#loc143 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":240:1)
#loc144 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":255:1)
#loc149 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":241:1)
#loc150 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":243:27)
#loc151 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":243:22)
#loc152 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":243:5)
#loc153 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":245:5)
#loc154 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":246:5)
#loc155 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":246:62)
#loc156 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":247:5)
#loc157 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":250:5)
#loc158 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":251:5)
#loc159 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":251:61)
#loc160 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":252:5)
#loc161 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":254:12)
#loc162 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":254:5)
#loc163 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":146:1)
#loc164 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":205:1)
#loc167 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":147:1)
#loc168 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":148:5)
#loc169 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":203:5)
#loc170 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":153:9)
#loc171 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":153:13)
#loc172 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":154:9)
#loc173 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":154:28)
#loc174 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":155:9)
#loc175 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":155:32)
#loc176 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":156:9)
#loc177 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":156:41)
#loc178 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":157:9)
#loc179 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":192:17)
#loc180 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":167:36)
#loc181 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":167:45)
#loc182 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":167:58)
#loc183 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":167:29)
#loc184 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":167:13)
#loc185 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":167:69)
#loc186 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":168:13)
#loc187 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":171:13)
#loc188 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":168:17)
#loc189 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":168:34)
#loc190 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":169:13)
#loc191 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":170:17)
#loc192 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":172:20)
#loc193 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":172:21)
#loc194 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":172:30)
#loc195 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":172:33)
#loc196 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":172:47)
#loc197 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":172:13)
#loc198 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":172:48)
#loc199 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":173:34)
#loc200 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":173:13)
#loc201 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":174:49)
#loc202 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":174:39)
#loc203 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":174:13)
#loc204 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":174:59)
#loc205 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":175:38)
#loc206 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":175:32)
#loc207 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":175:13)
#loc208 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":175:46)
#loc209 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":176:13)
#loc210 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":179:13)
#loc211 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":176:25)
#loc212 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":176:58)
#loc213 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":176:59)
#loc214 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":176:68)
#loc215 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":176:82)
#loc216 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":176:17)
#loc217 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":176:88)
#loc218 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":177:13)
#loc219 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":178:17)
#loc220 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":182:31)
#loc221 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":182:46)
#loc222 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":182:59)
#loc223 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":182:77)
#loc224 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":182:80)
#loc225 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":182:26)
#loc226 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":182:13)
#loc227 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":182:81)
#loc228 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":183:13)
#loc229 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":186:13)
#loc230 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":183:17)
#loc231 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":183:31)
#loc232 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":183:44)
#loc233 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":183:47)
#loc234 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":183:61)
#loc235 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":184:13)
#loc236 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":185:17)
#loc237 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":188:39)
#loc238 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":188:25)
#loc239 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":188:13)
#loc240 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":190:26)
#loc241 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":190:21)
#loc242 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":190:13)
#loc243 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":190:37)
#loc244 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":192:16)
#loc245 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":193:9)
#loc246 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":196:9)
#loc247 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":193:13)
#loc248 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":193:30)
#loc249 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":194:9)
#loc250 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":195:26)
#loc251 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":195:13)
#loc252 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":204:12)
#loc253 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":204:5)
#loc254 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":217:19)
#loc255 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":221:19)
#loc256 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":207:1)
#loc257 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":223:1)
#loc258 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":209:5)
#loc259 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":209:9)
#loc260 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":211:14)
#loc261 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":211:13)
#loc262 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":211:5)
#loc263 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":212:27)
#loc264 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":212:13)
#loc265 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":212:5)
#loc266 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":212:32)
#loc267 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":214:5)
#loc268 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":222:5)
#loc269 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":214:9)
#loc270 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":214:17)
#loc271 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":214:19)
#loc272 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":214:22)
#loc273 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":214:31)
#loc274 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":215:5)
#loc275 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":218:5)
#loc276 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":220:5)
#loc277 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":216:15)
#loc278 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":216:9)
#loc279 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":217:9)
#loc280 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":221:9)
#loc281 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":127:1)
#loc282 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":132:1)
#loc285 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":128:1)
#loc286 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":130:13)
#loc287 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":130:5)
#loc288 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":131:12)
#loc289 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":131:5)
#loc290 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":134:1)
#loc291 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":143:1)
#loc292 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":136:5)
#loc293 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":136:9)
#loc294 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":138:14)
#loc295 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":138:13)
#loc296 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":138:5)
#loc297 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":139:27)
#loc298 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":139:13)
#loc299 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":139:5)
#loc300 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":139:32)
#loc301 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":141:11)
#loc302 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":141:5)
#loc303 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":142:15)
#loc304 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_42.c":142:5)
#loc305 = loc(fused[#loc1, #loc2])
#loc306 = loc(fused[#loc3, #loc4])
#loc307 = loc(fused[#loc6, #loc7])
#loc308 = loc(fused[#loc8, #loc9])
#loc309 = loc(fused[#loc10, #loc11])
#loc310 = loc(fused[#loc12, #loc13])
#loc311 = loc(fused[#loc14, #loc15])
#loc312 = loc(fused[#loc16, #loc17])
#loc314 = loc(fused[#loc21, #loc22])
#loc315 = loc(fused[#loc23, #loc24])
#loc316 = loc(fused[#loc25, #loc26])
#loc317 = loc(fused[#loc27, #loc28])
#loc318 = loc(fused[#loc29, #loc30])
#loc319 = loc(fused[#loc31, #loc32])
#loc320 = loc(fused[#loc37, #loc38])
#loc321 = loc(fused[#loc39, #loc40])
#loc322 = loc(fused[#loc41, #loc42])
#loc323 = loc(fused[#loc43, #loc40])
#loc324 = loc(fused[#loc45, #loc46])
#loc325 = loc(fused[#loc48, #loc49])
#loc326 = loc(fused[#loc50, #loc51])
#loc327 = loc(fused[#loc54, #loc52])
#loc328 = loc(fused[#loc58, #loc59])
#loc329 = loc(fused[#loc63, #loc64])
#loc330 = loc(fused[#loc65, #loc66])
#loc331 = loc(fused[#loc68, #loc69])
#loc332 = loc(fused[#loc70, #loc71])
#loc333 = loc(fused[#loc72, #loc73])
#loc334 = loc(fused[#loc74, #loc66])
#loc335 = loc(fused[#loc78, #loc79])
#loc336 = loc(fused[#loc82, #loc83])
#loc337 = loc(fused[#loc84, #loc85])
#loc338 = loc(fused[#loc86, #loc87])
#loc339 = loc(fused[#loc89, #loc90])
#loc340 = loc(fused[#loc91, #loc85])
#loc341 = loc(fused[#loc95, #loc93])
#loc342 = loc(fused[#loc98, #loc99])
#loc343 = loc(fused[#loc101, #loc102])
#loc344 = loc(fused[#loc103, #loc104])
#loc345 = loc(fused[#loc105, #loc102])
#loc346 = loc(fused[#loc109, #loc108])
#loc347 = loc(fused[#loc110, #loc111])
#loc348 = loc(fused[#loc112, #loc113])
#loc349 = loc(fused[#loc115, #loc116])
#loc350 = loc(fused[#loc117, #loc118])
#loc351 = loc(fused[#loc121, #loc119])
#loc352 = loc(fused[#loc124, #loc125])
#loc353 = loc(fused[#loc129, #loc130])
#loc354 = loc(fused[#loc131, #loc132])
#loc355 = loc(fused[#loc133, #loc134])
#loc356 = loc(fused[#loc135, #loc136])
#loc357 = loc(fused[#loc137, #loc138])
#loc358 = loc(fused[#loc143, #loc144])
#loc361 = loc(fused[#loc154, #loc155])
#loc362 = loc(fused[#loc158, #loc159])
#loc363 = loc(fused[#loc162, #loc161])
#loc364 = loc(fused[#loc163, #loc164])
#loc366 = loc(fused[#loc168, #loc169])
#loc367 = loc(fused[#loc170, #loc171])
#loc368 = loc(fused[#loc172, #loc173])
#loc369 = loc(fused[#loc174, #loc175])
#loc370 = loc(fused[#loc176, #loc177])
#loc371 = loc(fused[#loc178, #loc179])
#loc372 = loc(fused[#loc184, #loc185])
#loc373 = loc(fused[#loc186, #loc187])
#loc374 = loc(fused[#loc188, #loc189])
#loc375 = loc(fused[#loc190, #loc187])
#loc376 = loc(fused[#loc192, #loc193])
#loc377 = loc(fused[#loc195, #loc196])
#loc378 = loc(fused[#loc197, #loc198])
#loc379 = loc(fused[#loc200, #loc199])
#loc380 = loc(fused[#loc203, #loc204])
#loc381 = loc(fused[#loc207, #loc208])
#loc382 = loc(fused[#loc209, #loc210])
#loc383 = loc(fused[#loc212, #loc213])
#loc384 = loc(fused[#loc214, #loc215])
#loc385 = loc(fused[#loc216, #loc217])
#loc386 = loc(fused[#loc218, #loc210])
#loc387 = loc(fused[#loc222, #loc223])
#loc388 = loc(fused[#loc226, #loc227])
#loc389 = loc(fused[#loc228, #loc229])
#loc390 = loc(fused[#loc230, #loc231])
#loc391 = loc(fused[#loc233, #loc234])
#loc392 = loc(fused[#loc235, #loc229])
#loc393 = loc(fused[#loc239, #loc237])
#loc394 = loc(fused[#loc242, #loc243])
#loc395 = loc(fused[#loc245, #loc246])
#loc396 = loc(fused[#loc247, #loc248])
#loc397 = loc(fused[#loc249, #loc246])
#loc398 = loc(fused[#loc253, #loc252])
#loc399 = loc(fused[#loc256, #loc257])
#loc400 = loc(fused[#loc258, #loc259])
#loc401 = loc(fused[#loc262, #loc260])
#loc402 = loc(fused[#loc265, #loc266])
#loc403 = loc(fused[#loc267, #loc268])
#loc404 = loc(fused[#loc269, #loc270])
#loc405 = loc(fused[#loc272, #loc273])
#loc406 = loc(fused[#loc274, #loc275, #loc276, #loc268])
#loc407 = loc(fused[#loc281, #loc282])
#loc409 = loc(fused[#loc287, #loc286])
#loc410 = loc(fused[#loc289, #loc288])
#loc411 = loc(fused[#loc290, #loc291])
#loc412 = loc(fused[#loc292, #loc293])
#loc413 = loc(fused[#loc296, #loc294])
#loc414 = loc(fused[#loc299, #loc300])
