!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc11 = loc("CWE401_Memory_Leak__strdup_char_61b.c":24:54)
#loc12 = loc("CWE401_Memory_Leak__strdup_char_61b.c":24:61)
#loc29 = loc("CWE401_Memory_Leak__strdup_char_61b.c":41:58)
#loc30 = loc("CWE401_Memory_Leak__strdup_char_61b.c":41:65)
#loc42 = loc("CWE401_Memory_Leak__strdup_char_61b.c":52:58)
#loc43 = loc("CWE401_Memory_Leak__strdup_char_61b.c":52:65)
#loc60 = loc(fused[#loc11, #loc12])
#loc66 = loc(fused[#loc29, #loc30])
#loc70 = loc(fused[#loc42, #loc43])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_61b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.CWE401_Memory_Leak__strdup_char_61b_goodB2GSource.myString = #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc55)
  cir.global "private" constant cir_private @__const.CWE401_Memory_Leak__strdup_char_61b_badSource.myString = #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc56)
  cir.func private @strdup(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc57)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc58)
  cir.func @CWE401_Memory_Leak__strdup_char_61b_badSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc11, #loc12])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc56)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc60)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc10)
    cir.store %arg0, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc13)
    cir.br ^bb1 loc(#loc61)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @__const.CWE401_Memory_Leak__strdup_char_61b_badSource.myString : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc56)
    cir.copy %3 to %0 : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc56)
    %4 = cir.get_global @strdup : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>)>> loc(#loc16)
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc17)
    %6 = cir.call @strdup(%5) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc16)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc62)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc21)
    cir.br ^bb2 loc(#loc15)
  ^bb2:  // pred: ^bb1
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
    cir.store %8, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc63)
    %9 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
    cir.return %9 : !cir.ptr<!s8i> loc(#loc63)
  } loc(#loc59)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc64)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"a string\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc26)
  cir.func @CWE401_Memory_Leak__strdup_char_61b_goodG2BSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc29, #loc30])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc66)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc28)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc31)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc32)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc32)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc32)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc32)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc32)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc32)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc32)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc67)
    %9 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc34)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc26)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc26)
    %13 = cir.call @strcpy(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc34)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc37)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
    cir.store %15, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc68)
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
    cir.return %16 : !cir.ptr<!s8i> loc(#loc68)
  } loc(#loc65)
  cir.func @CWE401_Memory_Leak__strdup_char_61b_goodB2GSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc42, #loc43])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc55)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc70)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc41)
    cir.store %arg0, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc44)
    cir.br ^bb1 loc(#loc71)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @__const.CWE401_Memory_Leak__strdup_char_61b_goodB2GSource.myString : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc55)
    cir.copy %3 to %0 : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc55)
    %4 = cir.get_global @strdup : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>)>> loc(#loc47)
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc48)
    %6 = cir.call @strdup(%5) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc47)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc72)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    cir.br ^bb2 loc(#loc46)
  ^bb2:  // pred: ^bb1
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
    cir.store %8, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc73)
    %9 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
    cir.return %9 : !cir.ptr<!s8i> loc(#loc73)
  } loc(#loc69)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_61b.c":0:0)
#loc1 = loc("CWE401_Memory_Leak__strdup_char_61b.c":55:9)
#loc2 = loc("CWE401_Memory_Leak__strdup_char_61b.c":55:27)
#loc3 = loc("CWE401_Memory_Leak__strdup_char_61b.c":27:9)
#loc4 = loc("CWE401_Memory_Leak__strdup_char_61b.c":27:27)
#loc5 = loc("/usr/include/string.h":187:1)
#loc6 = loc("/usr/include/string.h":188:35)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE401_Memory_Leak__strdup_char_61b.c":24:1)
#loc10 = loc("CWE401_Memory_Leak__strdup_char_61b.c":34:1)
#loc13 = loc("CWE401_Memory_Leak__strdup_char_61b.c":25:1)
#loc14 = loc("CWE401_Memory_Leak__strdup_char_61b.c":26:5)
#loc15 = loc("CWE401_Memory_Leak__strdup_char_61b.c":32:5)
#loc16 = loc("CWE401_Memory_Leak__strdup_char_61b.c":29:16)
#loc17 = loc("CWE401_Memory_Leak__strdup_char_61b.c":29:23)
#loc18 = loc("CWE401_Memory_Leak__strdup_char_61b.c":29:9)
#loc19 = loc("CWE401_Memory_Leak__strdup_char_61b.c":29:31)
#loc20 = loc("CWE401_Memory_Leak__strdup_char_61b.c":31:19)
#loc21 = loc("CWE401_Memory_Leak__strdup_char_61b.c":31:9)
#loc22 = loc("CWE401_Memory_Leak__strdup_char_61b.c":33:12)
#loc23 = loc("CWE401_Memory_Leak__strdup_char_61b.c":33:5)
#loc24 = loc("/usr/include/string.h":141:1)
#loc25 = loc("/usr/include/string.h":142:14)
#loc26 = loc("CWE401_Memory_Leak__strdup_char_61b.c":46:18)
#loc27 = loc("CWE401_Memory_Leak__strdup_char_61b.c":41:1)
#loc28 = loc("CWE401_Memory_Leak__strdup_char_61b.c":49:1)
#loc31 = loc("CWE401_Memory_Leak__strdup_char_61b.c":42:1)
#loc32 = loc("CWE401_Memory_Leak__strdup_char_61b.c":44:20)
#loc33 = loc("CWE401_Memory_Leak__strdup_char_61b.c":44:5)
#loc34 = loc("CWE401_Memory_Leak__strdup_char_61b.c":46:5)
#loc35 = loc("CWE401_Memory_Leak__strdup_char_61b.c":46:12)
#loc36 = loc("CWE401_Memory_Leak__strdup_char_61b.c":47:15)
#loc37 = loc("CWE401_Memory_Leak__strdup_char_61b.c":47:5)
#loc38 = loc("CWE401_Memory_Leak__strdup_char_61b.c":48:12)
#loc39 = loc("CWE401_Memory_Leak__strdup_char_61b.c":48:5)
#loc40 = loc("CWE401_Memory_Leak__strdup_char_61b.c":52:1)
#loc41 = loc("CWE401_Memory_Leak__strdup_char_61b.c":62:1)
#loc44 = loc("CWE401_Memory_Leak__strdup_char_61b.c":53:1)
#loc45 = loc("CWE401_Memory_Leak__strdup_char_61b.c":54:5)
#loc46 = loc("CWE401_Memory_Leak__strdup_char_61b.c":60:5)
#loc47 = loc("CWE401_Memory_Leak__strdup_char_61b.c":57:16)
#loc48 = loc("CWE401_Memory_Leak__strdup_char_61b.c":57:23)
#loc49 = loc("CWE401_Memory_Leak__strdup_char_61b.c":57:9)
#loc50 = loc("CWE401_Memory_Leak__strdup_char_61b.c":57:31)
#loc51 = loc("CWE401_Memory_Leak__strdup_char_61b.c":59:19)
#loc52 = loc("CWE401_Memory_Leak__strdup_char_61b.c":59:9)
#loc53 = loc("CWE401_Memory_Leak__strdup_char_61b.c":61:12)
#loc54 = loc("CWE401_Memory_Leak__strdup_char_61b.c":61:5)
#loc55 = loc(fused[#loc1, #loc2])
#loc56 = loc(fused[#loc3, #loc4])
#loc57 = loc(fused[#loc5, #loc6])
#loc58 = loc(fused[#loc7, #loc8])
#loc59 = loc(fused[#loc9, #loc10])
#loc61 = loc(fused[#loc14, #loc15])
#loc62 = loc(fused[#loc18, #loc19])
#loc63 = loc(fused[#loc23, #loc22])
#loc64 = loc(fused[#loc24, #loc25])
#loc65 = loc(fused[#loc27, #loc28])
#loc67 = loc(fused[#loc33, #loc32])
#loc68 = loc(fused[#loc39, #loc38])
#loc69 = loc(fused[#loc40, #loc41])
#loc71 = loc(fused[#loc45, #loc46])
#loc72 = loc(fused[#loc49, #loc50])
#loc73 = loc(fused[#loc54, #loc53])
