!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({nothrow = #cir.nothrow})>
#loc4 = loc("../../../testcasesupport/std_testcase.h":61:7)
#loc45 = loc("../../../testcasesupport/std_testcase.h":68:7)
!ty_OneIntClass = !cir.struct<class "OneIntClass" {!s32i} #cir.record.decl.ast>
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc197)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc3)
  cir.func linkonce_odr  @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc4)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc4)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc4)
    cir.return loc(#loc4)
  } loc(#loc4)
  cir.func private  @printIntLine(!s32i) loc(#loc198)
  cir.func  @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_153badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc200)
    %1 = cir.alloca !cir.array<!s8i x 4>, !cir.ptr<!cir.array<!s8i x 4>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc201)
    %2 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc202)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc17)
      cir.switch (%3 : !s32i) [
      case (equal, 6) {
        %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc18)
        cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc204)
        cir.break loc(#loc20)
      },
      case (default) {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc3)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc3)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc21)
        cir.break loc(#loc22)
      }
      ] loc(#loc15)
    } loc(#loc203)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc25)
      cir.switch (%3 : !s32i) [
      case (equal, 7) {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc207)
          %5 = cir.const #cir.int<8> : !u64i loc(#loc208)
          %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc31)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc208)
          cir.call @_ZN12TwoIntsClassC2Ev(%8) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc29)
          cir.store %8, %4 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc207)
          %9 = cir.const #cir.int<5> : !s32i loc(#loc32)
          %10 = cir.load %4 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc33)
          %11 = cir.get_member %10[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc34)
          cir.store %9, %11 : !s32i, !cir.ptr<!s32i> loc(#loc209)
          %12 = cir.const #cir.int<10> : !s32i loc(#loc35)
          %13 = cir.load %4 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc36)
          %14 = cir.get_member %13[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc37)
          cir.store %12, %14 : !s32i, !cir.ptr<!s32i> loc(#loc210)
          %15 = cir.load %4 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc38)
          %16 = cir.get_member %15[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc34)
          %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc39)
          cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc40)
        } loc(#loc206)
        cir.break loc(#loc41)
      },
      case (default) {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc42)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc42)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc43)
        cir.break loc(#loc44)
      }
      ] loc(#loc23)
    } loc(#loc205)
    cir.return loc(#loc8)
  } loc(#loc199)
  cir.func linkonce_odr  @_ZN11OneIntClassC2Ev(%arg0: !cir.ptr<!ty_OneIntClass> loc("../../../testcasesupport/std_testcase.h":68:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["this", init] {alignment = 8 : i64} loc(#loc45)
    cir.store %arg0, %0 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc45)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc45)
    cir.return loc(#loc45)
  } loc(#loc45)
  cir.func internal private  @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15L8goodB2G1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc212)
    %1 = cir.alloca !cir.array<!s8i x 4>, !cir.ptr<!cir.array<!s8i x 4>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc213)
    %2 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc214)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc56)
      cir.switch (%3 : !s32i) [
      case (equal, 6) {
        %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc57)
        cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc216)
        cir.break loc(#loc59)
      },
      case (default) {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc60)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc60)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc61)
        cir.break loc(#loc62)
      }
      ] loc(#loc54)
    } loc(#loc215)
    cir.scope {
      %3 = cir.const #cir.int<8> : !s32i loc(#loc65)
      cir.switch (%3 : !s32i) [
      case (equal, 7) {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc66)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc66)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc67)
        cir.break loc(#loc68)
      },
      case (default) {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["classOne", init] {alignment = 8 : i64} loc(#loc219)
          %5 = cir.const #cir.int<4> : !u64i loc(#loc220)
          %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc74)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty_OneIntClass> loc(#loc220)
          cir.call @_ZN11OneIntClassC2Ev(%8) : (!cir.ptr<!ty_OneIntClass>) -> () extra(#fn_attr2) loc(#loc72)
          cir.store %8, %4 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc219)
          %9 = cir.const #cir.int<5> : !s32i loc(#loc75)
          %10 = cir.load %4 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc76)
          %11 = cir.get_member %10[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc77)
          cir.store %9, %11 : !s32i, !cir.ptr<!s32i> loc(#loc221)
          %12 = cir.load %4 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc78)
          %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc77)
          %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc79)
          cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc80)
        } loc(#loc218)
        cir.break loc(#loc81)
      }
      ] loc(#loc63)
    } loc(#loc217)
    cir.return loc(#loc47)
  } loc(#loc211)
  cir.func internal private  @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15L8goodB2G2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc223)
    %1 = cir.alloca !cir.array<!s8i x 4>, !cir.ptr<!cir.array<!s8i x 4>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc224)
    %2 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc225)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc92)
      cir.switch (%3 : !s32i) [
      case (equal, 6) {
        %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc93)
        cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc227)
        cir.break loc(#loc95)
      },
      case (default) {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc96)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc96)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc97)
        cir.break loc(#loc98)
      }
      ] loc(#loc90)
    } loc(#loc226)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc101)
      cir.switch (%3 : !s32i) [
      case (equal, 7) {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["classOne", init] {alignment = 8 : i64} loc(#loc230)
          %5 = cir.const #cir.int<4> : !u64i loc(#loc231)
          %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc107)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty_OneIntClass> loc(#loc231)
          cir.call @_ZN11OneIntClassC2Ev(%8) : (!cir.ptr<!ty_OneIntClass>) -> () extra(#fn_attr2) loc(#loc105)
          cir.store %8, %4 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc230)
          %9 = cir.const #cir.int<5> : !s32i loc(#loc108)
          %10 = cir.load %4 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc109)
          %11 = cir.get_member %10[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc77)
          cir.store %9, %11 : !s32i, !cir.ptr<!s32i> loc(#loc232)
          %12 = cir.load %4 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc110)
          %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc77)
          %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc111)
          cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc112)
        } loc(#loc229)
        cir.break loc(#loc113)
      },
      case (default) {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc114)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc114)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc115)
        cir.break loc(#loc116)
      }
      ] loc(#loc99)
    } loc(#loc228)
    cir.return loc(#loc83)
  } loc(#loc222)
  cir.func internal private  @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc234)
    %1 = cir.alloca !cir.array<!s8i x 4>, !cir.ptr<!cir.array<!s8i x 4>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc235)
    %2 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc236)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc127)
      cir.switch (%3 : !s32i) [
      case (equal, 6) {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc128)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc128)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc129)
        cir.break loc(#loc130)
      },
      case (default) {
        %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc131)
        cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc238)
        cir.break loc(#loc133)
      }
      ] loc(#loc125)
    } loc(#loc237)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc136)
      cir.switch (%3 : !s32i) [
      case (equal, 7) {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc241)
          %5 = cir.const #cir.int<8> : !u64i loc(#loc242)
          %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc142)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc242)
          cir.call @_ZN12TwoIntsClassC2Ev(%8) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc140)
          cir.store %8, %4 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc241)
          %9 = cir.const #cir.int<5> : !s32i loc(#loc143)
          %10 = cir.load %4 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc144)
          %11 = cir.get_member %10[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc34)
          cir.store %9, %11 : !s32i, !cir.ptr<!s32i> loc(#loc243)
          %12 = cir.const #cir.int<10> : !s32i loc(#loc145)
          %13 = cir.load %4 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc146)
          %14 = cir.get_member %13[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc37)
          cir.store %12, %14 : !s32i, !cir.ptr<!s32i> loc(#loc244)
          %15 = cir.load %4 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc147)
          %16 = cir.get_member %15[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc34)
          %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc148)
          cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc149)
        } loc(#loc240)
        cir.break loc(#loc150)
      },
      case (default) {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc151)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc151)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc152)
        cir.break loc(#loc153)
      }
      ] loc(#loc134)
    } loc(#loc239)
    cir.return loc(#loc118)
  } loc(#loc233)
  cir.func internal private  @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc246)
    %1 = cir.alloca !cir.array<!s8i x 4>, !cir.ptr<!cir.array<!s8i x 4>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc247)
    %2 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc248)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc164)
      cir.switch (%3 : !s32i) [
      case (equal, 6) {
        %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc165)
        cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc250)
        cir.break loc(#loc167)
      },
      case (default) {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc168)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc168)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc169)
        cir.break loc(#loc170)
      }
      ] loc(#loc162)
    } loc(#loc249)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc173)
      cir.switch (%3 : !s32i) [
      case (equal, 7) {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc253)
          %5 = cir.const #cir.int<8> : !u64i loc(#loc254)
          %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc179)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc179)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc254)
          cir.call @_ZN12TwoIntsClassC2Ev(%8) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc177)
          cir.store %8, %4 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc253)
          %9 = cir.const #cir.int<5> : !s32i loc(#loc180)
          %10 = cir.load %4 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc181)
          %11 = cir.get_member %10[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc34)
          cir.store %9, %11 : !s32i, !cir.ptr<!s32i> loc(#loc255)
          %12 = cir.const #cir.int<10> : !s32i loc(#loc182)
          %13 = cir.load %4 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc183)
          %14 = cir.get_member %13[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc37)
          cir.store %12, %14 : !s32i, !cir.ptr<!s32i> loc(#loc256)
          %15 = cir.load %4 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc184)
          %16 = cir.get_member %15[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc34)
          %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc185)
          cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc186)
        } loc(#loc252)
        cir.break loc(#loc187)
      },
      case (default) {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc188)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc188)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc189)
        cir.break loc(#loc190)
      }
      ] loc(#loc171)
    } loc(#loc251)
    cir.return loc(#loc155)
  } loc(#loc245)
  cir.func  @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_154goodEv() extra(#fn_attr1) {
    cir.call @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15L8goodB2G1Ev() : () -> () loc(#loc193)
    cir.call @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15L8goodB2G2Ev() : () -> () loc(#loc194)
    cir.call @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15L8goodG2B1Ev() : () -> () loc(#loc195)
    cir.call @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15L8goodG2B2Ev() : () -> () loc(#loc196)
    cir.return loc(#loc192)
  } loc(#loc257)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":37:19)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":24:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":62:1)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":26:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":26:12)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":27:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":27:43)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":28:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":28:45)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":29:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":39:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":29:12)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":33:16)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":33:9)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":34:9)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":37:9)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":38:9)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":40:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":61:5)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":40:12)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":43:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":55:5)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":49:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":49:45)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":49:35)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":49:39)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":51:28)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":51:9)
#loc34 = loc("../../../testcasesupport/std_testcase.h":64:13)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":52:28)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":52:9)
#loc37 = loc("../../../testcasesupport/std_testcase.h":65:13)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":53:22)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":53:32)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":53:9)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":56:5)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":59:19)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":59:9)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":60:9)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":69:1)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":105:1)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":71:5)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":71:12)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":72:5)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":72:43)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":73:5)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":73:45)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":74:5)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":84:5)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":74:12)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":78:16)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":78:9)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":79:9)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":82:19)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":82:9)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":83:9)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":85:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":104:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":85:12)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":89:19)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":89:9)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":90:9)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":92:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":102:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":98:9)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":98:44)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":98:34)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":98:38)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":100:28)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":100:9)
#loc77 = loc("../../../testcasesupport/std_testcase.h":71:13)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":101:22)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":101:32)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":101:9)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":103:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":108:1)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":144:1)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":110:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":110:12)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":111:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":111:43)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":112:5)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":112:45)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":113:5)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":123:5)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":113:12)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":117:16)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":117:9)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":118:9)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":121:19)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":121:9)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":122:9)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":124:5)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":143:5)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":124:12)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":127:5)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":137:5)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":133:9)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":133:44)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":133:34)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":133:38)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":135:28)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":135:9)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":136:22)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":136:32)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":136:9)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":138:5)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":141:19)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":141:9)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":142:9)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":147:1)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":185:1)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":149:5)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":149:12)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":150:5)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":150:43)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":151:5)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":151:45)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":152:5)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":162:5)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":152:12)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":156:19)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":156:9)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":157:9)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":160:16)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":160:9)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":161:9)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":163:5)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":184:5)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":163:12)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":166:5)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":178:5)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":172:9)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":172:45)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":172:35)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":172:39)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":174:28)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":174:9)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":175:28)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":175:9)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":176:22)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":176:32)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":176:9)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":179:5)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":182:19)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":182:9)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":183:9)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":188:1)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":226:1)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":190:5)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":190:12)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":191:5)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":191:43)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":192:5)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":192:45)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":193:5)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":203:5)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":193:12)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":197:16)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":197:9)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":198:9)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":201:19)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":201:9)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":202:9)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":204:5)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":225:5)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":204:12)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":207:5)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":219:5)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":213:9)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":213:45)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":213:35)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":213:39)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":215:28)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":215:9)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":216:28)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":216:9)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":217:22)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":217:32)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":217:9)
#loc187 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":220:5)
#loc188 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":223:19)
#loc189 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":223:9)
#loc190 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":224:9)
#loc191 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":228:1)
#loc192 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":234:1)
#loc193 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":230:5)
#loc194 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":231:5)
#loc195 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":232:5)
#loc196 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_15.cpp":233:5)
#loc197 = loc(fused[#loc1, #loc2])
#loc198 = loc(fused[#loc5, #loc6])
#loc199 = loc(fused[#loc7, #loc8])
#loc200 = loc(fused[#loc9, #loc10])
#loc201 = loc(fused[#loc11, #loc12])
#loc202 = loc(fused[#loc13, #loc14])
#loc203 = loc(fused[#loc15, #loc16])
#loc204 = loc(fused[#loc19, #loc18])
#loc205 = loc(fused[#loc23, #loc24])
#loc206 = loc(fused[#loc26, #loc27])
#loc207 = loc(fused[#loc28, #loc29])
#loc208 = loc(fused[#loc30, #loc29])
#loc209 = loc(fused[#loc33, #loc32])
#loc210 = loc(fused[#loc36, #loc35])
#loc211 = loc(fused[#loc46, #loc47])
#loc212 = loc(fused[#loc48, #loc49])
#loc213 = loc(fused[#loc50, #loc51])
#loc214 = loc(fused[#loc52, #loc53])
#loc215 = loc(fused[#loc54, #loc55])
#loc216 = loc(fused[#loc58, #loc57])
#loc217 = loc(fused[#loc63, #loc64])
#loc218 = loc(fused[#loc69, #loc70])
#loc219 = loc(fused[#loc71, #loc72])
#loc220 = loc(fused[#loc73, #loc72])
#loc221 = loc(fused[#loc76, #loc75])
#loc222 = loc(fused[#loc82, #loc83])
#loc223 = loc(fused[#loc84, #loc85])
#loc224 = loc(fused[#loc86, #loc87])
#loc225 = loc(fused[#loc88, #loc89])
#loc226 = loc(fused[#loc90, #loc91])
#loc227 = loc(fused[#loc94, #loc93])
#loc228 = loc(fused[#loc99, #loc100])
#loc229 = loc(fused[#loc102, #loc103])
#loc230 = loc(fused[#loc104, #loc105])
#loc231 = loc(fused[#loc106, #loc105])
#loc232 = loc(fused[#loc109, #loc108])
#loc233 = loc(fused[#loc117, #loc118])
#loc234 = loc(fused[#loc119, #loc120])
#loc235 = loc(fused[#loc121, #loc122])
#loc236 = loc(fused[#loc123, #loc124])
#loc237 = loc(fused[#loc125, #loc126])
#loc238 = loc(fused[#loc132, #loc131])
#loc239 = loc(fused[#loc134, #loc135])
#loc240 = loc(fused[#loc137, #loc138])
#loc241 = loc(fused[#loc139, #loc140])
#loc242 = loc(fused[#loc141, #loc140])
#loc243 = loc(fused[#loc144, #loc143])
#loc244 = loc(fused[#loc146, #loc145])
#loc245 = loc(fused[#loc154, #loc155])
#loc246 = loc(fused[#loc156, #loc157])
#loc247 = loc(fused[#loc158, #loc159])
#loc248 = loc(fused[#loc160, #loc161])
#loc249 = loc(fused[#loc162, #loc163])
#loc250 = loc(fused[#loc166, #loc165])
#loc251 = loc(fused[#loc171, #loc172])
#loc252 = loc(fused[#loc174, #loc175])
#loc253 = loc(fused[#loc176, #loc177])
#loc254 = loc(fused[#loc178, #loc177])
#loc255 = loc(fused[#loc181, #loc180])
#loc256 = loc(fused[#loc183, #loc182])
#loc257 = loc(fused[#loc191, #loc192])
