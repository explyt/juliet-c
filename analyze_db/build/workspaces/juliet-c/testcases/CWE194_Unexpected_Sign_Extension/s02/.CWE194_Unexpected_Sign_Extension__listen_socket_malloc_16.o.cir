!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc252)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc253)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc254)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc255)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc256)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc257)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc258)
  cir.func private @close(!s32i) -> !s32i loc(#loc259)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc260)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc261)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc262)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc263)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc265)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc29)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc29)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc266)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc33)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc33)
        cir.condition(%4) loc(#loc33)
      } do {
        cir.scope {
          cir.scope {
            %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc270)
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["tempInt"] {alignment = 4 : i64} loc(#loc271)
            %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc272)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc273)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc274)
            %8 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc275)
            %9 = cir.const #cir.int<1> : !s32i loc(#loc44)
            %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc44)
            cir.store %10, %6 : !s32i, !cir.ptr<!s32i> loc(#loc273)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc46)
            %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc46)
            cir.store %12, %7 : !s32i, !cir.ptr<!s32i> loc(#loc274)
            cir.scope {
              cir.do {
                cir.scope {
                  %13 = cir.const #cir.int<2> : !s32i loc(#loc53)
                  %14 = cir.const #cir.int<1> : !s32i loc(#loc54)
                  %15 = cir.const #cir.int<6> : !s32i loc(#loc55)
                  %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc56)
                  cir.store %16, %6 : !s32i, !cir.ptr<!s32i> loc(#loc278)
                  cir.scope {
                    %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc61)
                    %53 = cir.const #cir.int<1> : !s32i loc(#loc62)
                    %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc62)
                    %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc280)
                    cir.if %55 {
                      cir.break loc(#loc64)
                    } loc(#loc281)
                  } loc(#loc279)
                  %17 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc282)
                  %18 = cir.const #cir.int<0> : !s32i loc(#loc67)
                  %19 = cir.const #cir.int<16> : !u64i loc(#loc283)
                  cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc284)
                  %20 = cir.const #cir.int<2> : !s32i loc(#loc72)
                  %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc72)
                  %22 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
                  cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc285)
                  %23 = cir.const #cir.int<0> : !s32i loc(#loc75)
                  %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc75)
                  %25 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc76)
                  %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc77)
                  cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc286)
                  %27 = cir.const #cir.int<27015> : !s32i loc(#loc79)
                  %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc79)
                  %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc80)
                  %30 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc81)
                  cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc287)
                  cir.scope {
                    %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc86)
                    %53 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc289)
                    %54 = cir.const #cir.int<16> : !u64i loc(#loc290)
                    %55 = cir.cast(integral, %54 : !u64i), !u32i loc(#loc290)
                    %56 = cir.call @bind(%52, %53, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc91)
                    %57 = cir.const #cir.int<1> : !s32i loc(#loc92)
                    %58 = cir.unary(minus, %57) nsw : !s32i, !s32i loc(#loc92)
                    %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc291)
                    cir.if %59 {
                      cir.break loc(#loc94)
                    } loc(#loc292)
                  } loc(#loc288)
                  cir.scope {
                    %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc97)
                    %53 = cir.const #cir.int<5> : !s32i loc(#loc98)
                    %54 = cir.call @listen(%52, %53) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc99)
                    %55 = cir.const #cir.int<1> : !s32i loc(#loc100)
                    %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc100)
                    %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc294)
                    cir.if %57 {
                      cir.break loc(#loc102)
                    } loc(#loc295)
                  } loc(#loc293)
                  %31 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc103)
                  %32 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc104)
                  %33 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc105)
                  %34 = cir.call @accept(%31, %32, %33) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc106)
                  cir.store %34, %7 : !s32i, !cir.ptr<!s32i> loc(#loc296)
                  cir.scope {
                    %52 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc111)
                    %53 = cir.const #cir.int<1> : !s32i loc(#loc112)
                    %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc112)
                    %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc298)
                    cir.if %55 {
                      cir.break loc(#loc114)
                    } loc(#loc299)
                  } loc(#loc297)
                  %35 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc115)
                  %36 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc116)
                  %37 = cir.cast(bitcast, %36 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc116)
                  %38 = cir.const #cir.int<8> : !s32i loc(#loc117)
                  %39 = cir.const #cir.int<1> : !s32i loc(#loc118)
                  %40 = cir.binop(sub, %38, %39) nsw : !s32i loc(#loc117)
                  %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc117)
                  %42 = cir.const #cir.int<0> : !s32i loc(#loc119)
                  %43 = cir.call @recv(%35, %37, %41, %42) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc120)
                  %44 = cir.cast(integral, %43 : !s64i), !s32i loc(#loc120)
                  cir.store %44, %3 : !s32i, !cir.ptr<!s32i> loc(#loc300)
                  cir.scope {
                    %52 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc125)
                    %53 = cir.const #cir.int<1> : !s32i loc(#loc126)
                    %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc126)
                    %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc302)
                    %56 = cir.ternary(%55, true {
                      %57 = cir.const #true loc(#loc127)
                      cir.yield %57 : !cir.bool loc(#loc127)
                    }, false {
                      %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc128)
                      %58 = cir.const #cir.int<0> : !s32i loc(#loc129)
                      %59 = cir.cmp(eq, %57, %58) : !s32i, !cir.bool loc(#loc303)
                      %60 = cir.ternary(%59, true {
                        %61 = cir.const #true loc(#loc127)
                        cir.yield %61 : !cir.bool loc(#loc127)
                      }, false {
                        %61 = cir.const #false loc(#loc127)
                        cir.yield %61 : !cir.bool loc(#loc127)
                      }) : (!cir.bool) -> !cir.bool loc(#loc127)
                      cir.yield %60 : !cir.bool loc(#loc127)
                    }) : (!cir.bool) -> !cir.bool loc(#loc127)
                    cir.if %56 {
                      cir.break loc(#loc131)
                    } loc(#loc304)
                  } loc(#loc301)
                  %45 = cir.const #cir.int<0> : !s32i loc(#loc132)
                  %46 = cir.cast(integral, %45 : !s32i), !s8i loc(#loc132)
                  %47 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc133)
                  %48 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc134)
                  %49 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc134)
                  cir.store %46, %49 : !s8i, !cir.ptr<!s8i> loc(#loc305)
                  %50 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc135)
                  %51 = cir.call @atoi(%50) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc136)
                  cir.store %51, %4 : !s32i, !cir.ptr<!s32i> loc(#loc306)
                  cir.scope {
                    %52 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc141)
                    %53 = cir.const #cir.int<32767> : !s32i loc(#loc142)
                    %54 = cir.cmp(gt, %52, %53) : !s32i, !cir.bool loc(#loc308)
                    %55 = cir.ternary(%54, true {
                      %56 = cir.const #true loc(#loc143)
                      cir.yield %56 : !cir.bool loc(#loc143)
                    }, false {
                      %56 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc144)
                      %57 = cir.const #cir.int<32767> : !s32i loc(#loc145)
                      %58 = cir.unary(minus, %57) nsw : !s32i, !s32i loc(#loc145)
                      %59 = cir.const #cir.int<1> : !s32i loc(#loc145)
                      %60 = cir.binop(sub, %58, %59) nsw : !s32i loc(#loc145)
                      %61 = cir.cmp(lt, %56, %60) : !s32i, !cir.bool loc(#loc309)
                      %62 = cir.ternary(%61, true {
                        %63 = cir.const #true loc(#loc143)
                        cir.yield %63 : !cir.bool loc(#loc143)
                      }, false {
                        %63 = cir.const #false loc(#loc143)
                        cir.yield %63 : !cir.bool loc(#loc143)
                      }) : (!cir.bool) -> !cir.bool loc(#loc143)
                      cir.yield %62 : !cir.bool loc(#loc143)
                    }) : (!cir.bool) -> !cir.bool loc(#loc143)
                    cir.if %55 {
                      %56 = cir.const #cir.int<1> : !s32i loc(#loc149)
                      %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc150)
                      %58 = cir.cast(integral, %57 : !s32i), !s16i loc(#loc150)
                      cir.store %58, %0 : !s16i, !cir.ptr<!s16i> loc(#loc311)
                    } else {
                      %56 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc152)
                      %57 = cir.cast(integral, %56 : !s32i), !s16i loc(#loc152)
                      cir.store %57, %0 : !s16i, !cir.ptr<!s16i> loc(#loc312)
                    } loc(#loc310)
                  } loc(#loc307)
                } loc(#loc277)
                cir.yield loc(#loc50)
              } while {
                %13 = cir.const #cir.int<0> : !s32i loc(#loc154)
                %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc154)
                cir.condition(%14) loc(#loc154)
              } loc(#loc276)
            } loc(#loc276)
            cir.scope {
              %13 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc157)
              %14 = cir.const #cir.int<1> : !s32i loc(#loc158)
              %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc158)
              %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc314)
              cir.if %16 {
                %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc160)
                %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc161)
              } loc(#loc315)
            } loc(#loc313)
            cir.scope {
              %13 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc164)
              %14 = cir.const #cir.int<1> : !s32i loc(#loc165)
              %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc165)
              %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc317)
              cir.if %16 {
                %17 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc167)
                %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc168)
              } loc(#loc318)
            } loc(#loc316)
          } loc(#loc269)
          cir.break loc(#loc169)
        } loc(#loc268)
        cir.yield loc(#loc32)
      } loc(#loc267)
    } loc(#loc267)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc172)
      %4 = cir.cast(integral, %3 : !s16i), !s32i loc(#loc172)
      %5 = cir.const #cir.int<100> : !s32i loc(#loc173)
      %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc320)
      cir.if %6 {
        %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc322)
        %8 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc177)
        %9 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc178)
        %10 = cir.cast(integral, %9 : !s16i), !u64i loc(#loc178)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc177)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc323)
        cir.store %12, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc322)
        cir.scope {
          %33 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc181)
          %34 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc182)
          %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc182)
          %36 = cir.cmp(eq, %33, %35) : !cir.ptr<!s8i>, !cir.bool loc(#loc325)
          cir.if %36 {
            %37 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc184)
            %38 = cir.const #cir.int<1> : !s32i loc(#loc185)
            %39 = cir.unary(minus, %38) nsw : !s32i, !s32i loc(#loc186)
            cir.call @exit(%39) : (!s32i) -> () extra(#fn_attr) loc(#loc184)
          } loc(#loc326)
        } loc(#loc324)
        %13 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc187)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc187)
        %15 = cir.const #cir.int<65> : !s32i loc(#loc188)
        %16 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc189)
        %17 = cir.cast(integral, %16 : !s16i), !s32i loc(#loc189)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc190)
        %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc189)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc189)
        cir.libc.memset %20 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc327)
        %21 = cir.const #cir.int<0> : !s32i loc(#loc193)
        %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc193)
        %23 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc194)
        %24 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc195)
        %25 = cir.cast(integral, %24 : !s16i), !s32i loc(#loc195)
        %26 = cir.const #cir.int<1> : !s32i loc(#loc196)
        %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc195)
        %28 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc197)
        cir.store %22, %28 : !s8i, !cir.ptr<!s8i> loc(#loc328)
        %29 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc198)
        cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc199)
        %30 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc200)
        %31 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc201)
        %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc201)
        cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc200)
      } loc(#loc321)
    } loc(#loc319)
    cir.return loc(#loc26)
  } loc(#loc264)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc330)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc204)
    cir.return loc(#loc203)
  } loc(#loc329)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc332)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc210)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc210)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc333)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc214)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc214)
        cir.condition(%4) loc(#loc214)
      } do {
        cir.scope {
          %3 = cir.const #cir.int<100> : !s32i loc(#loc216)
          %4 = cir.const #cir.int<1> : !s32i loc(#loc217)
          %5 = cir.binop(sub, %3, %4) nsw : !s32i loc(#loc216)
          %6 = cir.cast(integral, %5 : !s32i), !s16i loc(#loc216)
          cir.store %6, %0 : !s16i, !cir.ptr<!s16i> loc(#loc336)
          cir.break loc(#loc219)
        } loc(#loc335)
        cir.yield loc(#loc213)
      } loc(#loc334)
    } loc(#loc334)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc222)
      %4 = cir.cast(integral, %3 : !s16i), !s32i loc(#loc222)
      %5 = cir.const #cir.int<100> : !s32i loc(#loc223)
      %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc338)
      cir.if %6 {
        %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc340)
        %8 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc227)
        %9 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc228)
        %10 = cir.cast(integral, %9 : !s16i), !u64i loc(#loc228)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc227)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc341)
        cir.store %12, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc340)
        cir.scope {
          %33 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc231)
          %34 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc232)
          %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc232)
          %36 = cir.cmp(eq, %33, %35) : !cir.ptr<!s8i>, !cir.bool loc(#loc343)
          cir.if %36 {
            %37 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc234)
            %38 = cir.const #cir.int<1> : !s32i loc(#loc235)
            %39 = cir.unary(minus, %38) nsw : !s32i, !s32i loc(#loc236)
            cir.call @exit(%39) : (!s32i) -> () extra(#fn_attr) loc(#loc234)
          } loc(#loc344)
        } loc(#loc342)
        %13 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc237)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc237)
        %15 = cir.const #cir.int<65> : !s32i loc(#loc238)
        %16 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc239)
        %17 = cir.cast(integral, %16 : !s16i), !s32i loc(#loc239)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc240)
        %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc239)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc239)
        cir.libc.memset %20 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc345)
        %21 = cir.const #cir.int<0> : !s32i loc(#loc243)
        %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc243)
        %23 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc244)
        %24 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc245)
        %25 = cir.cast(integral, %24 : !s16i), !s32i loc(#loc245)
        %26 = cir.const #cir.int<1> : !s32i loc(#loc246)
        %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc245)
        %28 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc247)
        cir.store %22, %28 : !s8i, !cir.ptr<!s8i> loc(#loc346)
        %29 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc248)
        cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc249)
        %30 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc250)
        %31 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc251)
        %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc251)
        cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc250)
      } loc(#loc339)
    } loc(#loc337)
    cir.return loc(#loc207)
  } loc(#loc331)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":402:1)
#loc4 = loc("/usr/include/netinet/in.h":403:40)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("/usr/include/stdlib.h":672:1)
#loc18 = loc("/usr/include/stdlib.h":672:45)
#loc19 = loc("/usr/include/stdlib.h":756:1)
#loc20 = loc("/usr/include/stdlib.h":756:70)
#loc21 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc22 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc23 = loc("/usr/include/stdlib.h":687:1)
#loc24 = loc("/usr/include/stdlib.h":687:32)
#loc25 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":44:1)
#loc26 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":145:1)
#loc27 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":46:5)
#loc28 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":46:11)
#loc29 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":48:12)
#loc30 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":48:5)
#loc31 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":49:5)
#loc32 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":131:5)
#loc33 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":49:11)
#loc34 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":50:5)
#loc35 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":51:9)
#loc36 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":129:9)
#loc37 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":56:13)
#loc38 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":56:17)
#loc39 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":57:13)
#loc40 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":57:17)
#loc41 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":58:13)
#loc42 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":58:32)
#loc43 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":59:13)
#loc44 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":59:35)
#loc45 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":60:13)
#loc46 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":60:35)
#loc47 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":61:13)
#loc48 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":61:45)
#loc49 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":62:13)
#loc50 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":114:21)
#loc51 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":63:13)
#loc52 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":113:13)
#loc53 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":71:39)
#loc54 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":71:48)
#loc55 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":71:61)
#loc56 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":71:32)
#loc57 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":71:17)
#loc58 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":71:72)
#loc59 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":72:17)
#loc60 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":75:17)
#loc61 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":72:21)
#loc62 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":72:37)
#loc63 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":73:17)
#loc64 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":74:21)
#loc65 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":76:24)
#loc66 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":76:25)
#loc67 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":76:34)
#loc68 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":76:37)
#loc69 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":76:51)
#loc70 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":76:17)
#loc71 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":76:52)
#loc72 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":77:38)
#loc73 = loc("/usr/include/netinet/in.h":249:5)
#loc74 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":77:17)
#loc75 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":78:43)
#loc76 = loc("/usr/include/netinet/in.h":251:20)
#loc77 = loc("/usr/include/netinet/in.h":33:15)
#loc78 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":78:17)
#loc79 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":79:42)
#loc80 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":79:36)
#loc81 = loc("/usr/include/netinet/in.h":250:15)
#loc82 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":79:17)
#loc83 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":79:50)
#loc84 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":80:17)
#loc85 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":83:17)
#loc86 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":80:26)
#loc87 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":80:58)
#loc88 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":80:59)
#loc89 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":80:68)
#loc90 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":80:82)
#loc91 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":80:21)
#loc92 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":80:88)
#loc93 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":81:17)
#loc94 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":82:21)
#loc95 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":84:17)
#loc96 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":87:17)
#loc97 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":84:28)
#loc98 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":84:42)
#loc99 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":84:21)
#loc100 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":84:61)
#loc101 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":85:17)
#loc102 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":86:21)
#loc103 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":88:39)
#loc104 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":88:53)
#loc105 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":88:59)
#loc106 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":88:32)
#loc107 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":88:17)
#loc108 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":88:63)
#loc109 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":89:17)
#loc110 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":92:17)
#loc111 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":89:21)
#loc112 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":89:37)
#loc113 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":90:17)
#loc114 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":91:21)
#loc115 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":94:35)
#loc116 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":94:49)
#loc117 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":94:62)
#loc118 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":94:80)
#loc119 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":94:83)
#loc120 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":94:30)
#loc121 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":94:17)
#loc122 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":94:84)
#loc123 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":96:17)
#loc124 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":99:17)
#loc125 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":96:21)
#loc126 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":96:35)
#loc127 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":96:48)
#loc128 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":96:51)
#loc129 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":96:65)
#loc130 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":97:17)
#loc131 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":98:21)
#loc132 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":101:43)
#loc133 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":101:29)
#loc134 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":101:17)
#loc135 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":104:32)
#loc136 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":104:27)
#loc137 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":104:17)
#loc138 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":104:43)
#loc139 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":105:17)
#loc140 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":112:17)
#loc141 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":105:21)
#loc142 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":105:31)
#loc143 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":105:40)
#loc144 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":105:43)
#loc145 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":105:53)
#loc146 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":106:17)
#loc147 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":108:17)
#loc148 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":110:17)
#loc149 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":107:29)
#loc150 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":107:28)
#loc151 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":107:21)
#loc152 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":111:28)
#loc153 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":111:21)
#loc154 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":114:20)
#loc155 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":115:13)
#loc156 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":118:13)
#loc157 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":115:17)
#loc158 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":115:33)
#loc159 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":116:13)
#loc160 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":117:30)
#loc161 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":117:17)
#loc162 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":119:13)
#loc163 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":122:13)
#loc164 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":119:17)
#loc165 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":119:33)
#loc166 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":120:13)
#loc167 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":121:30)
#loc168 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":121:17)
#loc169 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":130:9)
#loc170 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":133:5)
#loc171 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":144:5)
#loc172 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":133:9)
#loc173 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":133:16)
#loc174 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":134:5)
#loc175 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":137:9)
#loc176 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":137:48)
#loc177 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":137:37)
#loc178 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":137:44)
#loc179 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":138:9)
#loc180 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":138:43)
#loc181 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":138:13)
#loc182 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":138:27)
#loc183 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":138:33)
#loc184 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":138:34)
#loc185 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":138:40)
#loc186 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":138:39)
#loc187 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":140:16)
#loc188 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":140:28)
#loc189 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":140:33)
#loc190 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":140:38)
#loc191 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":140:9)
#loc192 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":140:39)
#loc193 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":141:30)
#loc194 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":141:9)
#loc195 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":141:20)
#loc196 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":141:25)
#loc197 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":141:26)
#loc198 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":142:19)
#loc199 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":142:9)
#loc200 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":143:9)
#loc201 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":143:14)
#loc202 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":178:1)
#loc203 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":181:1)
#loc204 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":180:5)
#loc205 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":180:13)
#loc206 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":152:1)
#loc207 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":176:1)
#loc208 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":154:5)
#loc209 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":154:11)
#loc210 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":156:12)
#loc211 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":156:5)
#loc212 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":157:5)
#loc213 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":162:5)
#loc214 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":157:11)
#loc215 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":158:5)
#loc216 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":160:16)
#loc217 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":160:20)
#loc218 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":160:9)
#loc219 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":161:9)
#loc220 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":164:5)
#loc221 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":175:5)
#loc222 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":164:9)
#loc223 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":164:16)
#loc224 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":165:5)
#loc225 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":168:9)
#loc226 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":168:48)
#loc227 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":168:37)
#loc228 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":168:44)
#loc229 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":169:9)
#loc230 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":169:43)
#loc231 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":169:13)
#loc232 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":169:27)
#loc233 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":169:33)
#loc234 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":169:34)
#loc235 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":169:40)
#loc236 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":169:39)
#loc237 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":171:16)
#loc238 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":171:28)
#loc239 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":171:33)
#loc240 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":171:38)
#loc241 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":171:9)
#loc242 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":171:39)
#loc243 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":172:30)
#loc244 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":172:9)
#loc245 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":172:20)
#loc246 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":172:25)
#loc247 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":172:26)
#loc248 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":173:19)
#loc249 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":173:9)
#loc250 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":174:9)
#loc251 = loc("CWE194_Unexpected_Sign_Extension__listen_socket_malloc_16.c":174:14)
#loc252 = loc(fused[#loc1, #loc2])
#loc253 = loc(fused[#loc3, #loc4])
#loc254 = loc(fused[#loc5, #loc6])
#loc255 = loc(fused[#loc7, #loc8])
#loc256 = loc(fused[#loc9, #loc10])
#loc257 = loc(fused[#loc11, #loc12])
#loc258 = loc(fused[#loc13, #loc14])
#loc259 = loc(fused[#loc15, #loc16])
#loc260 = loc(fused[#loc17, #loc18])
#loc261 = loc(fused[#loc19, #loc20])
#loc262 = loc(fused[#loc21, #loc22])
#loc263 = loc(fused[#loc23, #loc24])
#loc264 = loc(fused[#loc25, #loc26])
#loc265 = loc(fused[#loc27, #loc28])
#loc266 = loc(fused[#loc30, #loc29])
#loc267 = loc(fused[#loc31, #loc32])
#loc268 = loc(fused[#loc34, #loc32])
#loc269 = loc(fused[#loc35, #loc36])
#loc270 = loc(fused[#loc37, #loc38])
#loc271 = loc(fused[#loc39, #loc40])
#loc272 = loc(fused[#loc41, #loc42])
#loc273 = loc(fused[#loc43, #loc44])
#loc274 = loc(fused[#loc45, #loc46])
#loc275 = loc(fused[#loc47, #loc48])
#loc276 = loc(fused[#loc49, #loc50])
#loc277 = loc(fused[#loc51, #loc52])
#loc278 = loc(fused[#loc57, #loc58])
#loc279 = loc(fused[#loc59, #loc60])
#loc280 = loc(fused[#loc61, #loc62])
#loc281 = loc(fused[#loc63, #loc60])
#loc282 = loc(fused[#loc65, #loc66])
#loc283 = loc(fused[#loc68, #loc69])
#loc284 = loc(fused[#loc70, #loc71])
#loc285 = loc(fused[#loc74, #loc72])
#loc286 = loc(fused[#loc78, #loc75])
#loc287 = loc(fused[#loc82, #loc83])
#loc288 = loc(fused[#loc84, #loc85])
#loc289 = loc(fused[#loc87, #loc88])
#loc290 = loc(fused[#loc89, #loc90])
#loc291 = loc(fused[#loc91, #loc92])
#loc292 = loc(fused[#loc93, #loc85])
#loc293 = loc(fused[#loc95, #loc96])
#loc294 = loc(fused[#loc99, #loc100])
#loc295 = loc(fused[#loc101, #loc96])
#loc296 = loc(fused[#loc107, #loc108])
#loc297 = loc(fused[#loc109, #loc110])
#loc298 = loc(fused[#loc111, #loc112])
#loc299 = loc(fused[#loc113, #loc110])
#loc300 = loc(fused[#loc121, #loc122])
#loc301 = loc(fused[#loc123, #loc124])
#loc302 = loc(fused[#loc125, #loc126])
#loc303 = loc(fused[#loc128, #loc129])
#loc304 = loc(fused[#loc130, #loc124])
#loc305 = loc(fused[#loc134, #loc132])
#loc306 = loc(fused[#loc137, #loc138])
#loc307 = loc(fused[#loc139, #loc140])
#loc308 = loc(fused[#loc141, #loc142])
#loc309 = loc(fused[#loc144, #loc145])
#loc310 = loc(fused[#loc146, #loc147, #loc148, #loc140])
#loc311 = loc(fused[#loc151, #loc149])
#loc312 = loc(fused[#loc153, #loc152])
#loc313 = loc(fused[#loc155, #loc156])
#loc314 = loc(fused[#loc157, #loc158])
#loc315 = loc(fused[#loc159, #loc156])
#loc316 = loc(fused[#loc162, #loc163])
#loc317 = loc(fused[#loc164, #loc165])
#loc318 = loc(fused[#loc166, #loc163])
#loc319 = loc(fused[#loc170, #loc171])
#loc320 = loc(fused[#loc172, #loc173])
#loc321 = loc(fused[#loc174, #loc171])
#loc322 = loc(fused[#loc175, #loc176])
#loc323 = loc(fused[#loc177, #loc176])
#loc324 = loc(fused[#loc179, #loc180])
#loc325 = loc(fused[#loc181, #loc182])
#loc326 = loc(fused[#loc183, #loc180])
#loc327 = loc(fused[#loc191, #loc192])
#loc328 = loc(fused[#loc194, #loc193])
#loc329 = loc(fused[#loc202, #loc203])
#loc330 = loc(fused[#loc204, #loc205])
#loc331 = loc(fused[#loc206, #loc207])
#loc332 = loc(fused[#loc208, #loc209])
#loc333 = loc(fused[#loc211, #loc210])
#loc334 = loc(fused[#loc212, #loc213])
#loc335 = loc(fused[#loc215, #loc213])
#loc336 = loc(fused[#loc218, #loc217])
#loc337 = loc(fused[#loc220, #loc221])
#loc338 = loc(fused[#loc222, #loc223])
#loc339 = loc(fused[#loc224, #loc221])
#loc340 = loc(fused[#loc225, #loc226])
#loc341 = loc(fused[#loc227, #loc226])
#loc342 = loc(fused[#loc229, #loc230])
#loc343 = loc(fused[#loc231, #loc232])
#loc344 = loc(fused[#loc233, #loc230])
#loc345 = loc(fused[#loc241, #loc242])
#loc346 = loc(fused[#loc244, #loc243])
