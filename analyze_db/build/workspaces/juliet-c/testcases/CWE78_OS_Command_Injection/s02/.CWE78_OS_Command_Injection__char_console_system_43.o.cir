!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc14 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":39:23)
#loc15 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":39:31)
#loc95 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":87:27)
#loc96 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":87:35)
#true = #cir.bool<true> : !cir.bool
#loc126 = loc(fused[#loc14, #loc15])
#loc157 = loc(fused[#loc95, #loc96])
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_system_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.global "private" constant cir_private @__const._ZN50CWE78_OS_Command_Injection__char_console_system_43L7goodG2BEv.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc120)
  cir.global "private" constant cir_private @__const._ZN50CWE78_OS_Command_Injection__char_console_system_433badEv.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc121)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc122)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc123)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc124)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc11)
  cir.func internal private @_ZN50CWE78_OS_Command_Injection__char_console_system_43L9badSourceERPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc14, #loc15])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc126)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc16)
    cir.scope {
      %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc128)
      %2 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc21)
      %3 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc22)
      %4 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
      %5 = cir.call @strlen(%4) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc21)
      cir.store %5, %1 : !u64i, !cir.ptr<!u64i> loc(#loc128)
      cir.scope {
        %6 = cir.const #cir.int<100> : !s32i loc(#loc25)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc25)
        %8 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc26)
        %9 = cir.binop(sub, %7, %8) : !u64i loc(#loc130)
        %10 = cir.const #cir.int<1> : !s32i loc(#loc27)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc27)
        %12 = cir.cmp(gt, %9, %11) : !u64i, !cir.bool loc(#loc131)
        cir.if %12 {
          cir.scope {
            %13 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc31)
            %14 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
            %15 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc32)
            %16 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %15 : !u64i), !cir.ptr<!s8i> loc(#loc33)
            %17 = cir.const #cir.int<100> : !s32i loc(#loc34)
            %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc34)
            %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc35)
            %20 = cir.binop(sub, %18, %19) : !u64i loc(#loc134)
            %21 = cir.cast(integral, %20 : !u64i), !s32i loc(#loc134)
            %22 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc124)
            %23 = cir.load %22 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc36)
            %24 = cir.call @fgets(%16, %21, %23) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc37)
            %25 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc38)
            %26 = cir.cmp(ne, %24, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc135)
            cir.if %26 {
              %27 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc42)
              %28 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc43)
              %29 = cir.load %28 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
              %30 = cir.call @strlen(%29) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc42)
              cir.store %30, %1 : !u64i, !cir.ptr<!u64i> loc(#loc137)
              cir.scope {
                %31 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc48)
                %32 = cir.const #cir.int<0> : !s32i loc(#loc49)
                %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc49)
                %34 = cir.cmp(gt, %31, %33) : !u64i, !cir.bool loc(#loc139)
                %35 = cir.ternary(%34, true {
                  %36 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc51)
                  %37 = cir.load %36 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
                  %38 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc52)
                  %39 = cir.const #cir.int<1> : !s32i loc(#loc53)
                  %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc53)
                  %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc140)
                  %42 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc54)
                  %43 = cir.load %42 : !cir.ptr<!s8i>, !s8i loc(#loc51)
                  %44 = cir.cast(integral, %43 : !s8i), !s32i loc(#loc51)
                  %45 = cir.const #cir.int<10> : !s8i loc(#loc55)
                  %46 = cir.cast(integral, %45 : !s8i), !s32i loc(#loc55)
                  %47 = cir.cmp(eq, %44, %46) : !s32i, !cir.bool loc(#loc141)
                  %48 = cir.ternary(%47, true {
                    %49 = cir.const #true loc(#loc50)
                    cir.yield %49 : !cir.bool loc(#loc50)
                  }, false {
                    %49 = cir.const #false loc(#loc50)
                    cir.yield %49 : !cir.bool loc(#loc50)
                  }) : (!cir.bool) -> !cir.bool loc(#loc50)
                  cir.yield %48 : !cir.bool loc(#loc50)
                }, false {
                  %36 = cir.const #false loc(#loc50)
                  cir.yield %36 : !cir.bool loc(#loc50)
                }) : (!cir.bool) -> !cir.bool loc(#loc50)
                cir.if %35 {
                  %36 = cir.const #cir.int<0> : !s8i loc(#loc57)
                  %37 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc58)
                  %38 = cir.load %37 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
                  %39 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc59)
                  %40 = cir.const #cir.int<1> : !s32i loc(#loc60)
                  %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc60)
                  %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc143)
                  %43 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc61)
                  cir.store %36, %43 : !s8i, !cir.ptr<!s8i> loc(#loc144)
                } loc(#loc142)
              } loc(#loc138)
            } else {
              %27 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc11)
              %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc11)
              cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc62)
              %29 = cir.const #cir.int<0> : !s8i loc(#loc63)
              %30 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc64)
              %31 = cir.load %30 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
              %32 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc65)
              %33 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %32 : !u64i), !cir.ptr<!s8i> loc(#loc66)
              cir.store %29, %33 : !s8i, !cir.ptr<!s8i> loc(#loc145)
            } loc(#loc136)
          } loc(#loc133)
        } loc(#loc132)
      } loc(#loc129)
    } loc(#loc127)
    cir.return loc(#loc13)
  } loc(#loc125)
  cir.func private @system(!cir.ptr<!s8i>) -> !s32i loc(#loc146)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc147)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"command execution failed!\00" : !cir.array<!s8i x 26>> : !cir.array<!s8i x 26> {alignment = 1 : i64} loc(#loc71)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc148)
  cir.func @_ZN50CWE78_OS_Command_Injection__char_console_system_433badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc150)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc121)
    %2 = cir.get_global @__const._ZN50CWE78_OS_Command_Injection__char_console_system_433badEv.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc121)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc121)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc78)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc151)
    cir.call @_ZN50CWE78_OS_Command_Injection__char_console_system_43L9badSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc80)
    cir.scope {
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
      %5 = cir.call @system(%4) : (!cir.ptr<!s8i>) -> !s32i loc(#loc84)
      %6 = cir.const #cir.int<0> : !s32i loc(#loc85)
      %7 = cir.cmp(ne, %5, %6) : !s32i, !cir.bool loc(#loc153)
      cir.if %7 {
        %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc71)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc71)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc87)
        %10 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc88)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc89)
        cir.call @exit(%11) : (!s32i) -> () extra(#fn_attr) loc(#loc88)
      } loc(#loc154)
    } loc(#loc152)
    cir.return loc(#loc75)
  } loc(#loc149)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc155)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc92)
  cir.func internal private @_ZN50CWE78_OS_Command_Injection__char_console_system_43L13goodG2BSourceERPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc95, #loc96])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc157)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc97)
    %1 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc98)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc99)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
    %4 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc92)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc92)
    %6 = cir.call @strcat(%3, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc98)
    cir.return loc(#loc94)
  } loc(#loc156)
  cir.func internal private @_ZN50CWE78_OS_Command_Injection__char_console_system_43L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc159)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc120)
    %2 = cir.get_global @__const._ZN50CWE78_OS_Command_Injection__char_console_system_43L7goodG2BEv.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc120)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc120)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc104)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc160)
    cir.call @_ZN50CWE78_OS_Command_Injection__char_console_system_43L13goodG2BSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc106)
    cir.scope {
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
      %5 = cir.call @system(%4) : (!cir.ptr<!s8i>) -> !s32i loc(#loc110)
      %6 = cir.const #cir.int<0> : !s32i loc(#loc111)
      %7 = cir.cmp(ne, %5, %6) : !s32i, !cir.bool loc(#loc162)
      cir.if %7 {
        %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc113)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc113)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc114)
        %10 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc115)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc116)
        cir.call @exit(%11) : (!s32i) -> () extra(#fn_attr) loc(#loc115)
      } loc(#loc163)
    } loc(#loc161)
    cir.return loc(#loc101)
  } loc(#loc158)
  cir.func @_ZN50CWE78_OS_Command_Injection__char_console_system_434goodEv() extra(#fn_attr1) {
    cir.call @_ZN50CWE78_OS_Command_Injection__char_console_system_43L7goodG2BEv() : () -> () loc(#loc119)
    cir.return loc(#loc118)
  } loc(#loc164)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_system_43.cpp":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":96:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":96:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":71:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":71:26)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/stdio.h":654:1)
#loc8 = loc("/usr/include/stdio.h":655:59)
#loc9 = loc("/usr/include/stdio.h":149:1)
#loc10 = loc("/usr/include/stdio.h":149:14)
#loc11 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":60:27)
#loc12 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":39:1)
#loc13 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":66:1)
#loc16 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":40:1)
#loc17 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":41:5)
#loc18 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":65:5)
#loc19 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":43:9)
#loc20 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":43:37)
#loc21 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":43:26)
#loc22 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":43:33)
#loc23 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":45:9)
#loc24 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":64:9)
#loc25 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":45:13)
#loc26 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":45:17)
#loc27 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":45:27)
#loc28 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":46:9)
#loc29 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":48:13)
#loc30 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":63:13)
#loc31 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":48:23)
#loc32 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":48:28)
#loc33 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":48:27)
#loc34 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":48:43)
#loc35 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":48:47)
#loc36 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":48:57)
#loc37 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":48:17)
#loc38 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":48:67)
#loc39 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":49:13)
#loc40 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":57:13)
#loc41 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":59:13)
#loc42 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":52:27)
#loc43 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":52:34)
#loc44 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":52:17)
#loc45 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":52:38)
#loc46 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":53:17)
#loc47 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":56:17)
#loc48 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":53:21)
#loc49 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":53:31)
#loc50 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":53:33)
#loc51 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":53:36)
#loc52 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":53:41)
#loc53 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":53:49)
#loc54 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":53:50)
#loc55 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":53:55)
#loc56 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":54:17)
#loc57 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":55:39)
#loc58 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":55:21)
#loc59 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":55:26)
#loc60 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":55:34)
#loc61 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":55:35)
#loc62 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":60:17)
#loc63 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":62:33)
#loc64 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":62:17)
#loc65 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":62:22)
#loc66 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":62:29)
#loc67 = loc("/usr/include/stdlib.h":923:1)
#loc68 = loc("/usr/include/stdlib.h":923:41)
#loc69 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc70 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc71 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":77:19)
#loc72 = loc("/usr/include/stdlib.h":756:1)
#loc73 = loc("/usr/include/stdlib.h":756:70)
#loc74 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":68:1)
#loc75 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":80:1)
#loc76 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":70:5)
#loc77 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":70:12)
#loc78 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":72:12)
#loc79 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":72:5)
#loc80 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":73:5)
#loc81 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":75:5)
#loc82 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":79:5)
#loc83 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":75:16)
#loc84 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":75:9)
#loc85 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":75:25)
#loc86 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":76:5)
#loc87 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":77:9)
#loc88 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":78:9)
#loc89 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":78:14)
#loc90 = loc("/usr/include/string.h":149:1)
#loc91 = loc("/usr/include/string.h":150:14)
#loc92 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":90:18)
#loc93 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":87:1)
#loc94 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":91:1)
#loc97 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":88:1)
#loc98 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":90:5)
#loc99 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":90:12)
#loc100 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":93:1)
#loc101 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":105:1)
#loc102 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":95:5)
#loc103 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":95:12)
#loc104 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":97:12)
#loc105 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":97:5)
#loc106 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":98:5)
#loc107 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":100:5)
#loc108 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":104:5)
#loc109 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":100:16)
#loc110 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":100:9)
#loc111 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":100:25)
#loc112 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":101:5)
#loc113 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":102:19)
#loc114 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":102:9)
#loc115 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":103:9)
#loc116 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":103:14)
#loc117 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":107:1)
#loc118 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":110:1)
#loc119 = loc("CWE78_OS_Command_Injection__char_console_system_43.cpp":109:5)
#loc120 = loc(fused[#loc1, #loc2])
#loc121 = loc(fused[#loc3, #loc4])
#loc122 = loc(fused[#loc5, #loc6])
#loc123 = loc(fused[#loc7, #loc8])
#loc124 = loc(fused[#loc9, #loc10])
#loc125 = loc(fused[#loc12, #loc13])
#loc127 = loc(fused[#loc17, #loc18])
#loc128 = loc(fused[#loc19, #loc20])
#loc129 = loc(fused[#loc23, #loc24])
#loc130 = loc(fused[#loc25, #loc26])
#loc131 = loc(fused[#loc25, #loc27])
#loc132 = loc(fused[#loc28, #loc24])
#loc133 = loc(fused[#loc29, #loc30])
#loc134 = loc(fused[#loc34, #loc35])
#loc135 = loc(fused[#loc37, #loc38])
#loc136 = loc(fused[#loc39, #loc40, #loc41, #loc30])
#loc137 = loc(fused[#loc44, #loc45])
#loc138 = loc(fused[#loc46, #loc47])
#loc139 = loc(fused[#loc48, #loc49])
#loc140 = loc(fused[#loc52, #loc53])
#loc141 = loc(fused[#loc51, #loc55])
#loc142 = loc(fused[#loc56, #loc47])
#loc143 = loc(fused[#loc59, #loc60])
#loc144 = loc(fused[#loc58, #loc57])
#loc145 = loc(fused[#loc64, #loc63])
#loc146 = loc(fused[#loc67, #loc68])
#loc147 = loc(fused[#loc69, #loc70])
#loc148 = loc(fused[#loc72, #loc73])
#loc149 = loc(fused[#loc74, #loc75])
#loc150 = loc(fused[#loc76, #loc77])
#loc151 = loc(fused[#loc79, #loc78])
#loc152 = loc(fused[#loc81, #loc82])
#loc153 = loc(fused[#loc84, #loc85])
#loc154 = loc(fused[#loc86, #loc82])
#loc155 = loc(fused[#loc90, #loc91])
#loc156 = loc(fused[#loc93, #loc94])
#loc158 = loc(fused[#loc100, #loc101])
#loc159 = loc(fused[#loc102, #loc103])
#loc160 = loc(fused[#loc105, #loc104])
#loc161 = loc(fused[#loc107, #loc108])
#loc162 = loc(fused[#loc110, #loc111])
#loc163 = loc(fused[#loc112, #loc108])
#loc164 = loc(fused[#loc117, #loc118])
