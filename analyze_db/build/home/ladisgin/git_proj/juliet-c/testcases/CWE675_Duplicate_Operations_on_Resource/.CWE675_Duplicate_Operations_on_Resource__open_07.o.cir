!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE675_Duplicate_Operations_on_Resource/CWE675_Duplicate_Operations_on_Resource__open_07.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @staticFive = #cir.int<5> : !s32i {alignment = 4 : i64} loc(#loc164)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc165)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"BadSource_open.txt\00" : !cir.array<!s8i x 19>> : !cir.array<!s8i x 19> {alignment = 1 : i64} loc(#loc5)
  cir.func private @close(!s32i) -> !s32i loc(#loc166)
  cir.func no_proto @CWE675_Duplicate_Operations_on_Resource__open_07_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc168)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc12)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc13)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc169)
    cir.br ^bb1 loc(#loc170)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc164)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc17)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc18)
    %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc171)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc172)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc5)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc5)
    %9 = cir.const #cir.int<2> : !s32i loc(#loc20)
    %10 = cir.const #cir.int<64> : !s32i loc(#loc21)
    %11 = cir.binop(or, %9, %10) : !s32i loc(#loc173)
    %12 = cir.const #cir.int<256> : !s32i loc(#loc22)
    %13 = cir.const #cir.int<128> : !s32i loc(#loc23)
    %14 = cir.binop(or, %12, %13) : !s32i loc(#loc174)
    %15 = cir.call @open(%8, %11, %14) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc24)
    cir.store %15, %0 : !s32i, !cir.ptr<!s32i> loc(#loc175)
    %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc27)
    %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc28)
    cir.br ^bb3 loc(#loc16)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc16)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc176)
  ^bb5:  // pred: ^bb4
    %18 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc164)
    %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc31)
    %20 = cir.const #cir.int<5> : !s32i loc(#loc32)
    %21 = cir.cmp(eq, %19, %20) : !s32i, !cir.bool loc(#loc177)
    cir.brcond %21 ^bb6, ^bb7 loc(#loc178)
  ^bb6:  // pred: ^bb5
    %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc34)
    %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc35)
    cir.br ^bb7 loc(#loc30)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc30)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc9)
  } loc(#loc167)
  cir.func no_proto @CWE675_Duplicate_Operations_on_Resource__open_07_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc180)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc181)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc182)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc42)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc183)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc44)
    cir.return loc(#loc37)
  } loc(#loc179)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc184)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc48)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc186)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc53)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc54)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc187)
    cir.br ^bb1 loc(#loc188)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc164)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc58)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc59)
    %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc189)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc190)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc61)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc61)
    %9 = cir.const #cir.int<2> : !s32i loc(#loc62)
    %10 = cir.const #cir.int<64> : !s32i loc(#loc63)
    %11 = cir.binop(or, %9, %10) : !s32i loc(#loc191)
    %12 = cir.const #cir.int<256> : !s32i loc(#loc64)
    %13 = cir.const #cir.int<128> : !s32i loc(#loc65)
    %14 = cir.binop(or, %12, %13) : !s32i loc(#loc192)
    %15 = cir.call @open(%8, %11, %14) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc66)
    cir.store %15, %0 : !s32i, !cir.ptr<!s32i> loc(#loc193)
    %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc69)
    %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc70)
    cir.br ^bb3 loc(#loc57)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc57)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc194)
  ^bb5:  // pred: ^bb4
    %18 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc164)
    %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc73)
    %20 = cir.const #cir.int<5> : !s32i loc(#loc74)
    %21 = cir.cmp(ne, %19, %20) : !s32i, !cir.bool loc(#loc195)
    cir.brcond %21 ^bb6, ^bb7 loc(#loc196)
  ^bb6:  // pred: ^bb5
    %22 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc48)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    cir.br ^bb8 loc(#loc76)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc72)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc72)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc50)
  } loc(#loc185)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc198)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc83)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc84)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc199)
    cir.br ^bb1 loc(#loc200)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc164)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc88)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc89)
    %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc201)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc202)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc91)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc91)
    %9 = cir.const #cir.int<2> : !s32i loc(#loc92)
    %10 = cir.const #cir.int<64> : !s32i loc(#loc93)
    %11 = cir.binop(or, %9, %10) : !s32i loc(#loc203)
    %12 = cir.const #cir.int<256> : !s32i loc(#loc94)
    %13 = cir.const #cir.int<128> : !s32i loc(#loc95)
    %14 = cir.binop(or, %12, %13) : !s32i loc(#loc204)
    %15 = cir.call @open(%8, %11, %14) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc96)
    cir.store %15, %0 : !s32i, !cir.ptr<!s32i> loc(#loc205)
    %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc99)
    %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc100)
    cir.br ^bb3 loc(#loc87)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc87)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc206)
  ^bb5:  // pred: ^bb4
    %18 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc164)
    %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    %20 = cir.const #cir.int<5> : !s32i loc(#loc104)
    %21 = cir.cmp(eq, %19, %20) : !s32i, !cir.bool loc(#loc207)
    cir.brcond %21 ^bb6, ^bb7 loc(#loc208)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc102)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc102)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc80)
  } loc(#loc197)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"GoodSource_open.txt\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc106)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc210)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc111)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc112)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc211)
    cir.br ^bb1 loc(#loc212)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc164)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc116)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc117)
    %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc213)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc214)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc121)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc121)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc122)
    cir.br ^bb4 loc(#loc119)
  ^bb3:  // pred: ^bb1
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc106)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc106)
    %11 = cir.const #cir.int<2> : !s32i loc(#loc123)
    %12 = cir.const #cir.int<64> : !s32i loc(#loc124)
    %13 = cir.binop(or, %11, %12) : !s32i loc(#loc215)
    %14 = cir.const #cir.int<256> : !s32i loc(#loc125)
    %15 = cir.const #cir.int<128> : !s32i loc(#loc126)
    %16 = cir.binop(or, %14, %15) : !s32i loc(#loc216)
    %17 = cir.call @open(%10, %13, %16) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc127)
    cir.store %17, %0 : !s32i, !cir.ptr<!s32i> loc(#loc217)
    cir.br ^bb4 loc(#loc115)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc115)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc218)
  ^bb6:  // pred: ^bb5
    %18 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc164)
    %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc132)
    %20 = cir.const #cir.int<5> : !s32i loc(#loc133)
    %21 = cir.cmp(eq, %19, %20) : !s32i, !cir.bool loc(#loc219)
    cir.brcond %21 ^bb7, ^bb8 loc(#loc220)
  ^bb7:  // pred: ^bb6
    %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc135)
    %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc136)
    cir.br ^bb8 loc(#loc131)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc131)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc108)
  } loc(#loc209)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc222)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc141)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc142)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc223)
    cir.br ^bb1 loc(#loc224)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc164)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc146)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc147)
    %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc225)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc226)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc149)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc149)
    %9 = cir.const #cir.int<2> : !s32i loc(#loc150)
    %10 = cir.const #cir.int<64> : !s32i loc(#loc151)
    %11 = cir.binop(or, %9, %10) : !s32i loc(#loc227)
    %12 = cir.const #cir.int<256> : !s32i loc(#loc152)
    %13 = cir.const #cir.int<128> : !s32i loc(#loc153)
    %14 = cir.binop(or, %12, %13) : !s32i loc(#loc228)
    %15 = cir.call @open(%8, %11, %14) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc154)
    cir.store %15, %0 : !s32i, !cir.ptr<!s32i> loc(#loc229)
    cir.br ^bb3 loc(#loc145)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc145)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc230)
  ^bb5:  // pred: ^bb4
    %16 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc164)
    %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc159)
    %18 = cir.const #cir.int<5> : !s32i loc(#loc160)
    %19 = cir.cmp(eq, %17, %18) : !s32i, !cir.bool loc(#loc231)
    cir.brcond %19 ^bb6, ^bb7 loc(#loc232)
  ^bb6:  // pred: ^bb5
    %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc162)
    %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc163)
    cir.br ^bb7 loc(#loc158)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc158)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc138)
  } loc(#loc221)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE675_Duplicate_Operations_on_Resource/CWE675_Duplicate_Operations_on_Resource__open_07.c":0:0)
#loc1 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":32:1)
#loc2 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":32:25)
#loc3 = loc("/usr/include/fcntl.h":209:1)
#loc4 = loc("/usr/include/fcntl.h":209:56)
#loc5 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":42:21)
#loc6 = loc("/usr/include/unistd.h":358:1)
#loc7 = loc("/usr/include/unistd.h":358:27)
#loc8 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":36:1)
#loc9 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":51:1)
#loc10 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":38:5)
#loc11 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":38:9)
#loc12 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":39:13)
#loc13 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":39:12)
#loc14 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":39:5)
#loc15 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":40:5)
#loc16 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":45:5)
#loc17 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":40:8)
#loc18 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":40:20)
#loc19 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":41:5)
#loc20 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":42:43)
#loc21 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":42:50)
#loc22 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":42:59)
#loc23 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":42:67)
#loc24 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":42:16)
#loc25 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":42:9)
#loc26 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":42:75)
#loc27 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":44:15)
#loc28 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":44:9)
#loc29 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":46:5)
#loc30 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":50:5)
#loc31 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":46:8)
#loc32 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":46:20)
#loc33 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":47:5)
#loc34 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":49:15)
#loc35 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":49:9)
#loc36 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":139:1)
#loc37 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":145:1)
#loc38 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":141:5)
#loc39 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":141:14)
#loc40 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":142:5)
#loc41 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":142:14)
#loc42 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":143:5)
#loc43 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":143:14)
#loc44 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":144:5)
#loc45 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":144:14)
#loc46 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc47 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc48 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":71:19)
#loc49 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":58:1)
#loc50 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":79:1)
#loc51 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":60:5)
#loc52 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":60:9)
#loc53 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":61:13)
#loc54 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":61:12)
#loc55 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":61:5)
#loc56 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":62:5)
#loc57 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":67:5)
#loc58 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":62:8)
#loc59 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":62:20)
#loc60 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":63:5)
#loc61 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":64:21)
#loc62 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":64:43)
#loc63 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":64:50)
#loc64 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":64:59)
#loc65 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":64:67)
#loc66 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":64:16)
#loc67 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":64:9)
#loc68 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":64:75)
#loc69 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":66:15)
#loc70 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":66:9)
#loc71 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":68:5)
#loc72 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":78:5)
#loc73 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":68:8)
#loc74 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":68:20)
#loc75 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":69:5)
#loc76 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":72:5)
#loc77 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":74:5)
#loc78 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":71:9)
#loc79 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":82:1)
#loc80 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":98:1)
#loc81 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":84:5)
#loc82 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":84:9)
#loc83 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":85:13)
#loc84 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":85:12)
#loc85 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":85:5)
#loc86 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":86:5)
#loc87 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":91:5)
#loc88 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":86:8)
#loc89 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":86:20)
#loc90 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":87:5)
#loc91 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":88:21)
#loc92 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":88:43)
#loc93 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":88:50)
#loc94 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":88:59)
#loc95 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":88:67)
#loc96 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":88:16)
#loc97 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":88:9)
#loc98 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":88:75)
#loc99 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":90:15)
#loc100 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":90:9)
#loc101 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":92:5)
#loc102 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":97:5)
#loc103 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":92:8)
#loc104 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":92:20)
#loc105 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":93:5)
#loc106 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":113:21)
#loc107 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":101:1)
#loc108 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":120:1)
#loc109 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":103:5)
#loc110 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":103:9)
#loc111 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":104:13)
#loc112 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":104:12)
#loc113 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":104:5)
#loc114 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":105:5)
#loc115 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":114:5)
#loc116 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":105:8)
#loc117 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":105:20)
#loc118 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":106:5)
#loc119 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":109:5)
#loc120 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":111:5)
#loc121 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":108:19)
#loc122 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":108:9)
#loc123 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":113:44)
#loc124 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":113:51)
#loc125 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":113:60)
#loc126 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":113:68)
#loc127 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":113:16)
#loc128 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":113:9)
#loc129 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":113:76)
#loc130 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":115:5)
#loc131 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":119:5)
#loc132 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":115:8)
#loc133 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":115:20)
#loc134 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":116:5)
#loc135 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":118:15)
#loc136 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":118:9)
#loc137 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":123:1)
#loc138 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":137:1)
#loc139 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":125:5)
#loc140 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":125:9)
#loc141 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":126:13)
#loc142 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":126:12)
#loc143 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":126:5)
#loc144 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":127:5)
#loc145 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":131:5)
#loc146 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":127:8)
#loc147 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":127:20)
#loc148 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":128:5)
#loc149 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":130:21)
#loc150 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":130:44)
#loc151 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":130:51)
#loc152 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":130:60)
#loc153 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":130:68)
#loc154 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":130:16)
#loc155 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":130:9)
#loc156 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":130:76)
#loc157 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":132:5)
#loc158 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":136:5)
#loc159 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":132:8)
#loc160 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":132:20)
#loc161 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":133:5)
#loc162 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":135:15)
#loc163 = loc("CWE675_Duplicate_Operations_on_Resource__open_07.c":135:9)
#loc164 = loc(fused[#loc1, #loc2])
#loc165 = loc(fused[#loc3, #loc4])
#loc166 = loc(fused[#loc6, #loc7])
#loc167 = loc(fused[#loc8, #loc9])
#loc168 = loc(fused[#loc10, #loc11])
#loc169 = loc(fused[#loc14, #loc12])
#loc170 = loc(fused[#loc15, #loc16])
#loc171 = loc(fused[#loc17, #loc18])
#loc172 = loc(fused[#loc19, #loc16])
#loc173 = loc(fused[#loc20, #loc21])
#loc174 = loc(fused[#loc22, #loc23])
#loc175 = loc(fused[#loc25, #loc26])
#loc176 = loc(fused[#loc29, #loc30])
#loc177 = loc(fused[#loc31, #loc32])
#loc178 = loc(fused[#loc33, #loc30])
#loc179 = loc(fused[#loc36, #loc37])
#loc180 = loc(fused[#loc38, #loc39])
#loc181 = loc(fused[#loc40, #loc41])
#loc182 = loc(fused[#loc42, #loc43])
#loc183 = loc(fused[#loc44, #loc45])
#loc184 = loc(fused[#loc46, #loc47])
#loc185 = loc(fused[#loc49, #loc50])
#loc186 = loc(fused[#loc51, #loc52])
#loc187 = loc(fused[#loc55, #loc53])
#loc188 = loc(fused[#loc56, #loc57])
#loc189 = loc(fused[#loc58, #loc59])
#loc190 = loc(fused[#loc60, #loc57])
#loc191 = loc(fused[#loc62, #loc63])
#loc192 = loc(fused[#loc64, #loc65])
#loc193 = loc(fused[#loc67, #loc68])
#loc194 = loc(fused[#loc71, #loc72])
#loc195 = loc(fused[#loc73, #loc74])
#loc196 = loc(fused[#loc75, #loc76, #loc77, #loc72])
#loc197 = loc(fused[#loc79, #loc80])
#loc198 = loc(fused[#loc81, #loc82])
#loc199 = loc(fused[#loc85, #loc83])
#loc200 = loc(fused[#loc86, #loc87])
#loc201 = loc(fused[#loc88, #loc89])
#loc202 = loc(fused[#loc90, #loc87])
#loc203 = loc(fused[#loc92, #loc93])
#loc204 = loc(fused[#loc94, #loc95])
#loc205 = loc(fused[#loc97, #loc98])
#loc206 = loc(fused[#loc101, #loc102])
#loc207 = loc(fused[#loc103, #loc104])
#loc208 = loc(fused[#loc105, #loc102])
#loc209 = loc(fused[#loc107, #loc108])
#loc210 = loc(fused[#loc109, #loc110])
#loc211 = loc(fused[#loc113, #loc111])
#loc212 = loc(fused[#loc114, #loc115])
#loc213 = loc(fused[#loc116, #loc117])
#loc214 = loc(fused[#loc118, #loc119, #loc120, #loc115])
#loc215 = loc(fused[#loc123, #loc124])
#loc216 = loc(fused[#loc125, #loc126])
#loc217 = loc(fused[#loc128, #loc129])
#loc218 = loc(fused[#loc130, #loc131])
#loc219 = loc(fused[#loc132, #loc133])
#loc220 = loc(fused[#loc134, #loc131])
#loc221 = loc(fused[#loc137, #loc138])
#loc222 = loc(fused[#loc139, #loc140])
#loc223 = loc(fused[#loc143, #loc141])
#loc224 = loc(fused[#loc144, #loc145])
#loc225 = loc(fused[#loc146, #loc147])
#loc226 = loc(fused[#loc148, #loc145])
#loc227 = loc(fused[#loc150, #loc151])
#loc228 = loc(fused[#loc152, #loc153])
#loc229 = loc(fused[#loc155, #loc156])
#loc230 = loc(fused[#loc157, #loc158])
#loc231 = loc(fused[#loc159, #loc160])
#loc232 = loc(fused[#loc161, #loc158])
