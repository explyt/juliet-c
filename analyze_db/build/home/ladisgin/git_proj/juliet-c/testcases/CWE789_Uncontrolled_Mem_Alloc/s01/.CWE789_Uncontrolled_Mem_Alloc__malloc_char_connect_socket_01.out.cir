!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":263:10)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":263:14)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":263:20)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":263:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc429 = loc(fused[#loc172, #loc173])
#loc430 = loc(fused[#loc174, #loc175])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc363)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc364)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc365)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc366)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc367)
  cir.func private @strtoul(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc368)
  cir.func private @close(!s32i) -> !s32i loc(#loc369)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc370)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc371)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc372)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc22)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc373)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc374)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc27)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc376)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc32)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc32)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc377)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc379)
      %4 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc380)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc381)
      %6 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc382)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc41)
      %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc41)
      cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc381)
      cir.scope {
        cir.do {
          %9 = cir.const #cir.int<2> : !s32i loc(#loc46)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc47)
          %11 = cir.const #cir.int<6> : !s32i loc(#loc48)
          %12 = cir.call @socket(%9, %10, %11) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc49)
          cir.store %12, %5 : !s32i, !cir.ptr<!s32i> loc(#loc384)
          cir.scope {
            %54 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc54)
            %55 = cir.const #cir.int<1> : !s32i loc(#loc55)
            %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc55)
            %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc386)
            cir.if %57 {
              cir.break loc(#loc57)
            } loc(#loc387)
          } loc(#loc385)
          %13 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc388)
          %14 = cir.const #cir.int<0> : !s32i loc(#loc60)
          %15 = cir.const #cir.int<16> : !u64i loc(#loc389)
          cir.libc.memset %15 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc390)
          %16 = cir.const #cir.int<2> : !s32i loc(#loc65)
          %17 = cir.cast(integral, %16 : !s32i), !u16i loc(#loc65)
          %18 = cir.get_member %4[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc66)
          cir.store %17, %18 : !u16i, !cir.ptr<!u16i> loc(#loc391)
          %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
          %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
          %21 = cir.call @inet_addr(%20) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc68)
          %22 = cir.get_member %4[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc69)
          %23 = cir.get_member %22[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc70)
          cir.store %21, %23 : !u32i, !cir.ptr<!u32i> loc(#loc392)
          %24 = cir.const #cir.int<27015> : !s32i loc(#loc73)
          %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc73)
          %26 = cir.call @htons(%25) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc74)
          %27 = cir.get_member %4[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
          cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc393)
          cir.scope {
            %54 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc80)
            %55 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc395)
            %56 = cir.const #cir.int<16> : !u64i loc(#loc396)
            %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc396)
            %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc85)
            %59 = cir.const #cir.int<1> : !s32i loc(#loc86)
            %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc86)
            %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc397)
            cir.if %61 {
              cir.break loc(#loc88)
            } loc(#loc398)
          } loc(#loc394)
          %28 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc89)
          %29 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc90)
          %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc90)
          %31 = cir.const #cir.int<3> : !s32i loc(#loc91)
          %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc91)
          %33 = cir.const #cir.int<8> : !u64i loc(#loc91)
          %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc91)
          %35 = cir.const #cir.int<2> : !s32i loc(#loc91)
          %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc91)
          %37 = cir.binop(add, %34, %36) : !u64i loc(#loc91)
          %38 = cir.const #cir.int<1> : !s32i loc(#loc92)
          %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc92)
          %40 = cir.binop(sub, %37, %39) : !u64i loc(#loc399)
          %41 = cir.const #cir.int<0> : !s32i loc(#loc93)
          %42 = cir.call @recv(%28, %30, %40, %41) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc94)
          %43 = cir.cast(integral, %42 : !s64i), !s32i loc(#loc94)
          cir.store %43, %3 : !s32i, !cir.ptr<!s32i> loc(#loc400)
          cir.scope {
            %54 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc99)
            %55 = cir.const #cir.int<1> : !s32i loc(#loc100)
            %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc100)
            %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc402)
            %58 = cir.ternary(%57, true {
              %59 = cir.const #true loc(#loc101)
              cir.yield %59 : !cir.bool loc(#loc101)
            }, false {
              %59 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc102)
              %60 = cir.const #cir.int<0> : !s32i loc(#loc103)
              %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc403)
              %62 = cir.ternary(%61, true {
                %63 = cir.const #true loc(#loc101)
                cir.yield %63 : !cir.bool loc(#loc101)
              }, false {
                %63 = cir.const #false loc(#loc101)
                cir.yield %63 : !cir.bool loc(#loc101)
              }) : (!cir.bool) -> !cir.bool loc(#loc101)
              cir.yield %62 : !cir.bool loc(#loc101)
            }) : (!cir.bool) -> !cir.bool loc(#loc101)
            cir.if %58 {
              cir.break loc(#loc105)
            } loc(#loc404)
          } loc(#loc401)
          %44 = cir.const #cir.int<0> : !s32i loc(#loc106)
          %45 = cir.cast(integral, %44 : !s32i), !s8i loc(#loc106)
          %46 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc107)
          %47 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc108)
          %48 = cir.ptr_stride(%47 : !cir.ptr<!s8i>, %46 : !s32i), !cir.ptr<!s8i> loc(#loc108)
          cir.store %45, %48 : !s8i, !cir.ptr<!s8i> loc(#loc405)
          %49 = cir.get_global @strtoul : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i)>> loc(#loc109)
          %50 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc110)
          %51 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc111)
          %52 = cir.const #cir.int<0> : !s32i loc(#loc112)
          %53 = cir.call @strtoul(%50, %51, %52) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc109)
          cir.store %53, %0 : !u64i, !cir.ptr<!u64i> loc(#loc406)
          cir.yield loc(#loc45)
        } while {
          %9 = cir.const #cir.int<0> : !s32i loc(#loc115)
          %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc115)
          cir.condition(%10) loc(#loc115)
        } loc(#loc383)
      } loc(#loc383)
      cir.scope {
        %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc118)
        %10 = cir.const #cir.int<1> : !s32i loc(#loc119)
        %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc119)
        %12 = cir.cmp(ne, %9, %11) : !s32i, !cir.bool loc(#loc408)
        cir.if %12 {
          %13 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc121)
          %14 = cir.call @close(%13) : (!s32i) -> !s32i loc(#loc122)
        } loc(#loc409)
      } loc(#loc407)
    } loc(#loc378)
    cir.scope {
      %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc411)
      cir.scope {
        %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc129)
        %5 = cir.const #cir.int<5> : !u64i loc(#loc413)
        %6 = cir.cmp(gt, %4, %5) : !u64i, !cir.bool loc(#loc414)
        cir.if %6 {
          %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc135)
          %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc136)
          %9 = cir.const #cir.int<1> : !u64i loc(#loc416)
          %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc417)
          %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc135)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc418)
          cir.store %12, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc419)
          cir.scope {
            %22 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc143)
            %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc144)
            %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc144)
            %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!s8i>, !cir.bool loc(#loc421)
            cir.if %25 {
              %26 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc146)
              %27 = cir.const #cir.int<1> : !s32i loc(#loc147)
              %28 = cir.unary(minus, %27) : !s32i, !s32i loc(#loc148)
              cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc146)
            } loc(#loc422)
          } loc(#loc420)
          %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc149)
          %14 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
          %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc22)
          %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc22)
          %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc149)
          %18 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
          cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc152)
          %19 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc153)
          %20 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
          %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc154)
          cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc153)
        } else {
          %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc27)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc27)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc155)
        } loc(#loc415)
      } loc(#loc412)
    } loc(#loc410)
    cir.return loc(#loc29)
  } loc(#loc375)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc424)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc158)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc425)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc160)
    cir.return loc(#loc157)
  } loc(#loc423)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc426)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc427)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc166)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc167)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc168)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc169)
  cir.func @main(%arg0: !s32i loc(fused[#loc172, #loc173]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc174, #loc175])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc429)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc430)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc171)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc176)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc176)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc177)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc178)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc178)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc179)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc166)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc166)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc180)
    %8 = cir.get_global @CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01_good : !cir.ptr<!cir.func<!void ()>> loc(#loc431)
    cir.call @CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01_good() : () -> () loc(#loc181)
    %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc167)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc167)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc183)
    %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc168)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc168)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc184)
    %13 = cir.get_global @CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc432)
    cir.call @CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01_bad() : () -> () loc(#loc185)
    %14 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc169)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc169)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc187)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc188)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc433)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc433)
    cir.return %17 : !s32i loc(#loc433)
  } loc(#loc428)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc435)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc194)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc194)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc436)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc196)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc196)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc437)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc439)
      cir.scope {
        %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc204)
        %7 = cir.const #cir.int<5> : !u64i loc(#loc441)
        %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc442)
        cir.if %8 {
          %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc210)
          %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc211)
          %11 = cir.const #cir.int<1> : !u64i loc(#loc444)
          %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc445)
          %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc210)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc446)
          cir.store %14, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc447)
          cir.scope {
            %24 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc218)
            %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc219)
            %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc219)
            %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!s8i>, !cir.bool loc(#loc449)
            cir.if %27 {
              %28 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc221)
              %29 = cir.const #cir.int<1> : !s32i loc(#loc222)
              %30 = cir.unary(minus, %29) : !s32i, !s32i loc(#loc223)
              cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc221)
            } loc(#loc450)
          } loc(#loc448)
          %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc224)
          %16 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc225)
          %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc226)
          %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc226)
          %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc224)
          %20 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc227)
          cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc228)
          %21 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc229)
          %22 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc230)
          %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc230)
          cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc229)
        } else {
          %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc231)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc231)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc232)
        } loc(#loc443)
      } loc(#loc440)
    } loc(#loc438)
    cir.return loc(#loc191)
  } loc(#loc434)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc233)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc452)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc238)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc238)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc453)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc455)
      %4 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc456)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc457)
      %6 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc458)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc247)
      %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc247)
      cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc457)
      cir.scope {
        cir.do {
          %9 = cir.const #cir.int<2> : !s32i loc(#loc252)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc253)
          %11 = cir.const #cir.int<6> : !s32i loc(#loc254)
          %12 = cir.call @socket(%9, %10, %11) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc255)
          cir.store %12, %5 : !s32i, !cir.ptr<!s32i> loc(#loc460)
          cir.scope {
            %54 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc260)
            %55 = cir.const #cir.int<1> : !s32i loc(#loc261)
            %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc261)
            %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc462)
            cir.if %57 {
              cir.break loc(#loc263)
            } loc(#loc463)
          } loc(#loc461)
          %13 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc464)
          %14 = cir.const #cir.int<0> : !s32i loc(#loc266)
          %15 = cir.const #cir.int<16> : !u64i loc(#loc465)
          cir.libc.memset %15 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc466)
          %16 = cir.const #cir.int<2> : !s32i loc(#loc271)
          %17 = cir.cast(integral, %16 : !s32i), !u16i loc(#loc271)
          %18 = cir.get_member %4[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc66)
          cir.store %17, %18 : !u16i, !cir.ptr<!u16i> loc(#loc467)
          %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc273)
          %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc273)
          %21 = cir.call @inet_addr(%20) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc274)
          %22 = cir.get_member %4[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc69)
          %23 = cir.get_member %22[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc70)
          cir.store %21, %23 : !u32i, !cir.ptr<!u32i> loc(#loc468)
          %24 = cir.const #cir.int<27015> : !s32i loc(#loc277)
          %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc277)
          %26 = cir.call @htons(%25) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc278)
          %27 = cir.get_member %4[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
          cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc469)
          cir.scope {
            %54 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc283)
            %55 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc471)
            %56 = cir.const #cir.int<16> : !u64i loc(#loc472)
            %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc472)
            %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc288)
            %59 = cir.const #cir.int<1> : !s32i loc(#loc289)
            %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc289)
            %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc473)
            cir.if %61 {
              cir.break loc(#loc291)
            } loc(#loc474)
          } loc(#loc470)
          %28 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc292)
          %29 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc293)
          %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc293)
          %31 = cir.const #cir.int<3> : !s32i loc(#loc294)
          %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc294)
          %33 = cir.const #cir.int<8> : !u64i loc(#loc294)
          %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc294)
          %35 = cir.const #cir.int<2> : !s32i loc(#loc294)
          %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc294)
          %37 = cir.binop(add, %34, %36) : !u64i loc(#loc294)
          %38 = cir.const #cir.int<1> : !s32i loc(#loc295)
          %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc295)
          %40 = cir.binop(sub, %37, %39) : !u64i loc(#loc475)
          %41 = cir.const #cir.int<0> : !s32i loc(#loc296)
          %42 = cir.call @recv(%28, %30, %40, %41) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc297)
          %43 = cir.cast(integral, %42 : !s64i), !s32i loc(#loc297)
          cir.store %43, %3 : !s32i, !cir.ptr<!s32i> loc(#loc476)
          cir.scope {
            %54 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc302)
            %55 = cir.const #cir.int<1> : !s32i loc(#loc303)
            %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc303)
            %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc478)
            %58 = cir.ternary(%57, true {
              %59 = cir.const #true loc(#loc304)
              cir.yield %59 : !cir.bool loc(#loc304)
            }, false {
              %59 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc305)
              %60 = cir.const #cir.int<0> : !s32i loc(#loc306)
              %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc479)
              %62 = cir.ternary(%61, true {
                %63 = cir.const #true loc(#loc304)
                cir.yield %63 : !cir.bool loc(#loc304)
              }, false {
                %63 = cir.const #false loc(#loc304)
                cir.yield %63 : !cir.bool loc(#loc304)
              }) : (!cir.bool) -> !cir.bool loc(#loc304)
              cir.yield %62 : !cir.bool loc(#loc304)
            }) : (!cir.bool) -> !cir.bool loc(#loc304)
            cir.if %58 {
              cir.break loc(#loc308)
            } loc(#loc480)
          } loc(#loc477)
          %44 = cir.const #cir.int<0> : !s32i loc(#loc309)
          %45 = cir.cast(integral, %44 : !s32i), !s8i loc(#loc309)
          %46 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc310)
          %47 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc311)
          %48 = cir.ptr_stride(%47 : !cir.ptr<!s8i>, %46 : !s32i), !cir.ptr<!s8i> loc(#loc311)
          cir.store %45, %48 : !s8i, !cir.ptr<!s8i> loc(#loc481)
          %49 = cir.get_global @strtoul : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i)>> loc(#loc312)
          %50 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc313)
          %51 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc314)
          %52 = cir.const #cir.int<0> : !s32i loc(#loc315)
          %53 = cir.call @strtoul(%50, %51, %52) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc312)
          cir.store %53, %0 : !u64i, !cir.ptr<!u64i> loc(#loc482)
          cir.yield loc(#loc251)
        } while {
          %9 = cir.const #cir.int<0> : !s32i loc(#loc318)
          %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc318)
          cir.condition(%10) loc(#loc318)
        } loc(#loc459)
      } loc(#loc459)
      cir.scope {
        %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc321)
        %10 = cir.const #cir.int<1> : !s32i loc(#loc322)
        %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc322)
        %12 = cir.cmp(ne, %9, %11) : !s32i, !cir.bool loc(#loc484)
        cir.if %12 {
          %13 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc324)
          %14 = cir.call @close(%13) : (!s32i) -> !s32i loc(#loc325)
        } loc(#loc485)
      } loc(#loc483)
    } loc(#loc454)
    cir.scope {
      %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc487)
      cir.scope {
        %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc332)
        %5 = cir.const #cir.int<5> : !u64i loc(#loc489)
        %6 = cir.cmp(gt, %4, %5) : !u64i, !cir.bool loc(#loc490)
        %7 = cir.ternary(%6, true {
          %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc336)
          %9 = cir.const #cir.int<100> : !s32i loc(#loc337)
          %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc337)
          %11 = cir.cmp(lt, %8, %10) : !u64i, !cir.bool loc(#loc491)
          %12 = cir.ternary(%11, true {
            %13 = cir.const #true loc(#loc335)
            cir.yield %13 : !cir.bool loc(#loc335)
          }, false {
            %13 = cir.const #false loc(#loc335)
            cir.yield %13 : !cir.bool loc(#loc335)
          }) : (!cir.bool) -> !cir.bool loc(#loc335)
          cir.yield %12 : !cir.bool loc(#loc335)
        }, false {
          %8 = cir.const #false loc(#loc335)
          cir.yield %8 : !cir.bool loc(#loc335)
        }) : (!cir.bool) -> !cir.bool loc(#loc335)
        cir.if %7 {
          %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc341)
          %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc342)
          %10 = cir.const #cir.int<1> : !u64i loc(#loc493)
          %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc494)
          %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc341)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc495)
          cir.store %13, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc496)
          cir.scope {
            %23 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc349)
            %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc350)
            %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc350)
            %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc498)
            cir.if %26 {
              %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc352)
              %28 = cir.const #cir.int<1> : !s32i loc(#loc353)
              %29 = cir.unary(minus, %28) : !s32i, !s32i loc(#loc354)
              cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc352)
            } loc(#loc499)
          } loc(#loc497)
          %14 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc355)
          %15 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc356)
          %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc357)
          %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc357)
          %18 = cir.call @strcpy(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc355)
          %19 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc358)
          cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc359)
          %20 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc360)
          %21 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc361)
          %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc361)
          cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc360)
        } else {
          %8 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc233)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc233)
          cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc362)
        } loc(#loc492)
      } loc(#loc488)
    } loc(#loc486)
    cir.return loc(#loc235)
  } loc(#loc451)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":81:49)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":181:1)
#loc13 = loc("/usr/include/stdlib.h":183:14)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("/usr/include/stdlib.h":672:1)
#loc17 = loc("/usr/include/stdlib.h":672:45)
#loc18 = loc("/usr/include/stdlib.h":756:1)
#loc19 = loc("/usr/include/stdlib.h":756:70)
#loc20 = loc("/usr/include/string.h":141:1)
#loc21 = loc("/usr/include/string.h":142:14)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":121:30)
#loc23 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc24 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc25 = loc("/usr/include/stdlib.h":687:1)
#loc26 = loc("/usr/include/stdlib.h":687:32)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":127:23)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":50:1)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":130:1)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":52:5)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":52:12)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":54:12)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":54:5)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":55:5)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":110:5)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":60:9)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":60:13)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":61:9)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":61:28)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":62:9)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":62:32)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":63:9)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":63:41)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":64:9)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":99:17)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":74:36)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":74:45)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":74:58)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":74:29)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":74:13)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":74:69)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":75:13)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":78:13)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":75:17)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":75:34)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":76:13)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":77:17)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":79:20)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":79:21)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":79:30)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":79:33)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":79:47)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":79:13)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":79:48)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":80:34)
#loc66 = loc("/usr/include/netinet/in.h":249:5)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":80:13)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":81:39)
#loc69 = loc("/usr/include/netinet/in.h":251:20)
#loc70 = loc("/usr/include/netinet/in.h":33:15)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":81:13)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":81:59)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":82:38)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":82:32)
#loc75 = loc("/usr/include/netinet/in.h":250:15)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":82:13)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":82:46)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":83:13)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":86:13)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":83:25)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":83:58)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":83:59)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":83:68)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":83:82)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":83:17)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":83:88)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":84:13)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":85:17)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":89:31)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":89:46)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":89:59)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":89:77)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":89:80)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":89:26)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":89:13)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":89:81)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":90:13)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":93:13)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":90:17)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":90:31)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":90:44)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":90:47)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":90:61)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":91:13)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":92:17)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":95:39)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":95:25)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":95:13)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":97:20)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":97:28)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":97:41)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":97:47)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":97:13)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":97:48)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":99:16)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":100:9)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":103:9)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":100:13)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":100:30)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":101:9)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":102:26)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":102:13)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":111:5)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":129:5)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":112:9)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":112:16)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":116:9)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":128:9)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":116:13)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":116:20)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":116:39)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":117:9)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":124:9)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":126:9)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":118:32)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":118:39)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":118:44)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":118:55)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":118:56)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":118:13)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":119:13)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":119:45)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":119:17)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":119:29)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":119:35)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":119:36)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":119:42)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":119:41)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":121:13)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":121:20)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":122:23)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":122:13)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":123:13)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":123:18)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":127:13)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":248:1)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":252:1)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":250:5)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":250:13)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":251:5)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":251:13)
#loc162 = loc("/usr/include/stdlib.h":575:1)
#loc163 = loc("/usr/include/stdlib.h":575:41)
#loc164 = loc("/usr/include/time.h":76:1)
#loc165 = loc("/usr/include/time.h":76:38)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":268:15)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":270:15)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":273:15)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":275:15)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":263:1)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":278:1)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":264:1)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":266:27)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":266:22)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":266:5)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":268:5)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":269:5)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":269:71)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":270:5)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":273:5)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":274:5)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":274:70)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":275:5)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":277:12)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":277:5)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":137:1)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":163:1)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":139:5)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":139:12)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":141:12)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":141:5)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":143:12)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":143:5)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":144:5)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":162:5)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":145:9)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":145:16)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":149:9)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":161:9)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":149:13)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":149:20)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":149:39)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":150:9)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":157:9)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":159:9)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":151:32)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":151:39)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":151:44)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":151:55)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":151:56)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":151:13)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":152:13)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":152:45)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":152:17)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":152:29)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":152:35)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":152:36)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":152:42)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":152:41)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":154:13)
#loc225 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":154:20)
#loc226 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":154:30)
#loc227 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":155:23)
#loc228 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":155:13)
#loc229 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":156:13)
#loc230 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":156:18)
#loc231 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":160:23)
#loc232 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":160:13)
#loc233 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":243:23)
#loc234 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":166:1)
#loc235 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":246:1)
#loc236 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":168:5)
#loc237 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":168:12)
#loc238 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":170:12)
#loc239 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":170:5)
#loc240 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":171:5)
#loc241 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":226:5)
#loc242 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":176:9)
#loc243 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":176:13)
#loc244 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":177:9)
#loc245 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":177:28)
#loc246 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":178:9)
#loc247 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":178:32)
#loc248 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":179:9)
#loc249 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":179:41)
#loc250 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":180:9)
#loc251 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":215:17)
#loc252 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":190:36)
#loc253 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":190:45)
#loc254 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":190:58)
#loc255 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":190:29)
#loc256 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":190:13)
#loc257 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":190:69)
#loc258 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":191:13)
#loc259 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":194:13)
#loc260 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":191:17)
#loc261 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":191:34)
#loc262 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":192:13)
#loc263 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":193:17)
#loc264 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":195:20)
#loc265 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":195:21)
#loc266 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":195:30)
#loc267 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":195:33)
#loc268 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":195:47)
#loc269 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":195:13)
#loc270 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":195:48)
#loc271 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":196:34)
#loc272 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":196:13)
#loc273 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":197:49)
#loc274 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":197:39)
#loc275 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":197:13)
#loc276 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":197:59)
#loc277 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":198:38)
#loc278 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":198:32)
#loc279 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":198:13)
#loc280 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":198:46)
#loc281 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":199:13)
#loc282 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":202:13)
#loc283 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":199:25)
#loc284 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":199:58)
#loc285 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":199:59)
#loc286 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":199:68)
#loc287 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":199:82)
#loc288 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":199:17)
#loc289 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":199:88)
#loc290 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":200:13)
#loc291 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":201:17)
#loc292 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":205:31)
#loc293 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":205:46)
#loc294 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":205:59)
#loc295 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":205:77)
#loc296 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":205:80)
#loc297 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":205:26)
#loc298 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":205:13)
#loc299 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":205:81)
#loc300 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":206:13)
#loc301 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":209:13)
#loc302 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":206:17)
#loc303 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":206:31)
#loc304 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":206:44)
#loc305 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":206:47)
#loc306 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":206:61)
#loc307 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":207:13)
#loc308 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":208:17)
#loc309 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":211:39)
#loc310 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":211:25)
#loc311 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":211:13)
#loc312 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":213:20)
#loc313 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":213:28)
#loc314 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":213:41)
#loc315 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":213:47)
#loc316 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":213:13)
#loc317 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":213:48)
#loc318 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":215:16)
#loc319 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":216:9)
#loc320 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":219:9)
#loc321 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":216:13)
#loc322 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":216:30)
#loc323 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":217:9)
#loc324 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":218:26)
#loc325 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":218:13)
#loc326 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":227:5)
#loc327 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":245:5)
#loc328 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":228:9)
#loc329 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":228:16)
#loc330 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":232:9)
#loc331 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":244:9)
#loc332 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":232:13)
#loc333 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":232:20)
#loc334 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":232:39)
#loc335 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":232:41)
#loc336 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":232:44)
#loc337 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":232:51)
#loc338 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":233:9)
#loc339 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":240:9)
#loc340 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":242:9)
#loc341 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":234:32)
#loc342 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":234:39)
#loc343 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":234:44)
#loc344 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":234:55)
#loc345 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":234:56)
#loc346 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":234:13)
#loc347 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":235:13)
#loc348 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":235:45)
#loc349 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":235:17)
#loc350 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":235:29)
#loc351 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":235:35)
#loc352 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":235:36)
#loc353 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":235:42)
#loc354 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":235:41)
#loc355 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":237:13)
#loc356 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":237:20)
#loc357 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":237:30)
#loc358 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":238:23)
#loc359 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":238:13)
#loc360 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":239:13)
#loc361 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":239:18)
#loc362 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_01.c":243:13)
#loc363 = loc(fused[#loc1, #loc2])
#loc364 = loc(fused[#loc3, #loc4])
#loc365 = loc(fused[#loc6, #loc7])
#loc366 = loc(fused[#loc8, #loc9])
#loc367 = loc(fused[#loc10, #loc11])
#loc368 = loc(fused[#loc12, #loc13])
#loc369 = loc(fused[#loc14, #loc15])
#loc370 = loc(fused[#loc16, #loc17])
#loc371 = loc(fused[#loc18, #loc19])
#loc372 = loc(fused[#loc20, #loc21])
#loc373 = loc(fused[#loc23, #loc24])
#loc374 = loc(fused[#loc25, #loc26])
#loc375 = loc(fused[#loc28, #loc29])
#loc376 = loc(fused[#loc30, #loc31])
#loc377 = loc(fused[#loc33, #loc32])
#loc378 = loc(fused[#loc34, #loc35])
#loc379 = loc(fused[#loc36, #loc37])
#loc380 = loc(fused[#loc38, #loc39])
#loc381 = loc(fused[#loc40, #loc41])
#loc382 = loc(fused[#loc42, #loc43])
#loc383 = loc(fused[#loc44, #loc45])
#loc384 = loc(fused[#loc50, #loc51])
#loc385 = loc(fused[#loc52, #loc53])
#loc386 = loc(fused[#loc54, #loc55])
#loc387 = loc(fused[#loc56, #loc53])
#loc388 = loc(fused[#loc58, #loc59])
#loc389 = loc(fused[#loc61, #loc62])
#loc390 = loc(fused[#loc63, #loc64])
#loc391 = loc(fused[#loc67, #loc65])
#loc392 = loc(fused[#loc71, #loc72])
#loc393 = loc(fused[#loc76, #loc77])
#loc394 = loc(fused[#loc78, #loc79])
#loc395 = loc(fused[#loc81, #loc82])
#loc396 = loc(fused[#loc83, #loc84])
#loc397 = loc(fused[#loc85, #loc86])
#loc398 = loc(fused[#loc87, #loc79])
#loc399 = loc(fused[#loc91, #loc92])
#loc400 = loc(fused[#loc95, #loc96])
#loc401 = loc(fused[#loc97, #loc98])
#loc402 = loc(fused[#loc99, #loc100])
#loc403 = loc(fused[#loc102, #loc103])
#loc404 = loc(fused[#loc104, #loc98])
#loc405 = loc(fused[#loc108, #loc106])
#loc406 = loc(fused[#loc113, #loc114])
#loc407 = loc(fused[#loc116, #loc117])
#loc408 = loc(fused[#loc118, #loc119])
#loc409 = loc(fused[#loc120, #loc117])
#loc410 = loc(fused[#loc123, #loc124])
#loc411 = loc(fused[#loc125, #loc126])
#loc412 = loc(fused[#loc127, #loc128])
#loc413 = loc(fused[#loc130, #loc131])
#loc414 = loc(fused[#loc129, #loc131])
#loc415 = loc(fused[#loc132, #loc133, #loc134, #loc128])
#loc416 = loc(fused[#loc137, #loc138])
#loc417 = loc(fused[#loc136, #loc138])
#loc418 = loc(fused[#loc135, #loc139])
#loc419 = loc(fused[#loc140, #loc139])
#loc420 = loc(fused[#loc141, #loc142])
#loc421 = loc(fused[#loc143, #loc144])
#loc422 = loc(fused[#loc145, #loc142])
#loc423 = loc(fused[#loc156, #loc157])
#loc424 = loc(fused[#loc158, #loc159])
#loc425 = loc(fused[#loc160, #loc161])
#loc426 = loc(fused[#loc162, #loc163])
#loc427 = loc(fused[#loc164, #loc165])
#loc428 = loc(fused[#loc170, #loc171])
#loc431 = loc(fused[#loc181, #loc182])
#loc432 = loc(fused[#loc185, #loc186])
#loc433 = loc(fused[#loc189, #loc188])
#loc434 = loc(fused[#loc190, #loc191])
#loc435 = loc(fused[#loc192, #loc193])
#loc436 = loc(fused[#loc195, #loc194])
#loc437 = loc(fused[#loc197, #loc196])
#loc438 = loc(fused[#loc198, #loc199])
#loc439 = loc(fused[#loc200, #loc201])
#loc440 = loc(fused[#loc202, #loc203])
#loc441 = loc(fused[#loc205, #loc206])
#loc442 = loc(fused[#loc204, #loc206])
#loc443 = loc(fused[#loc207, #loc208, #loc209, #loc203])
#loc444 = loc(fused[#loc212, #loc213])
#loc445 = loc(fused[#loc211, #loc213])
#loc446 = loc(fused[#loc210, #loc214])
#loc447 = loc(fused[#loc215, #loc214])
#loc448 = loc(fused[#loc216, #loc217])
#loc449 = loc(fused[#loc218, #loc219])
#loc450 = loc(fused[#loc220, #loc217])
#loc451 = loc(fused[#loc234, #loc235])
#loc452 = loc(fused[#loc236, #loc237])
#loc453 = loc(fused[#loc239, #loc238])
#loc454 = loc(fused[#loc240, #loc241])
#loc455 = loc(fused[#loc242, #loc243])
#loc456 = loc(fused[#loc244, #loc245])
#loc457 = loc(fused[#loc246, #loc247])
#loc458 = loc(fused[#loc248, #loc249])
#loc459 = loc(fused[#loc250, #loc251])
#loc460 = loc(fused[#loc256, #loc257])
#loc461 = loc(fused[#loc258, #loc259])
#loc462 = loc(fused[#loc260, #loc261])
#loc463 = loc(fused[#loc262, #loc259])
#loc464 = loc(fused[#loc264, #loc265])
#loc465 = loc(fused[#loc267, #loc268])
#loc466 = loc(fused[#loc269, #loc270])
#loc467 = loc(fused[#loc272, #loc271])
#loc468 = loc(fused[#loc275, #loc276])
#loc469 = loc(fused[#loc279, #loc280])
#loc470 = loc(fused[#loc281, #loc282])
#loc471 = loc(fused[#loc284, #loc285])
#loc472 = loc(fused[#loc286, #loc287])
#loc473 = loc(fused[#loc288, #loc289])
#loc474 = loc(fused[#loc290, #loc282])
#loc475 = loc(fused[#loc294, #loc295])
#loc476 = loc(fused[#loc298, #loc299])
#loc477 = loc(fused[#loc300, #loc301])
#loc478 = loc(fused[#loc302, #loc303])
#loc479 = loc(fused[#loc305, #loc306])
#loc480 = loc(fused[#loc307, #loc301])
#loc481 = loc(fused[#loc311, #loc309])
#loc482 = loc(fused[#loc316, #loc317])
#loc483 = loc(fused[#loc319, #loc320])
#loc484 = loc(fused[#loc321, #loc322])
#loc485 = loc(fused[#loc323, #loc320])
#loc486 = loc(fused[#loc326, #loc327])
#loc487 = loc(fused[#loc328, #loc329])
#loc488 = loc(fused[#loc330, #loc331])
#loc489 = loc(fused[#loc333, #loc334])
#loc490 = loc(fused[#loc332, #loc334])
#loc491 = loc(fused[#loc336, #loc337])
#loc492 = loc(fused[#loc338, #loc339, #loc340, #loc331])
#loc493 = loc(fused[#loc343, #loc344])
#loc494 = loc(fused[#loc342, #loc344])
#loc495 = loc(fused[#loc341, #loc345])
#loc496 = loc(fused[#loc346, #loc345])
#loc497 = loc(fused[#loc347, #loc348])
#loc498 = loc(fused[#loc349, #loc350])
#loc499 = loc(fused[#loc351, #loc348])
