!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc53 = loc("CWE617_Reachable_Assertion__fgets_63a.c":83:10)
#loc54 = loc("CWE617_Reachable_Assertion__fgets_63a.c":83:14)
#loc55 = loc("CWE617_Reachable_Assertion__fgets_63a.c":83:20)
#loc56 = loc("CWE617_Reachable_Assertion__fgets_63a.c":83:32)
#loc103 = loc(fused[#loc53, #loc54])
#loc104 = loc(fused[#loc55, #loc56])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE617_Reachable_Assertion/CWE617_Reachable_Assertion__fgets_63a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc84)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc85)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc86)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc87)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @CWE617_Reachable_Assertion__fgets_63b_badSink(!cir.ptr<!s32i>) loc(#loc88)
  cir.func no_proto @CWE617_Reachable_Assertion__fgets_63_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc90)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc17)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc91)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc93)
      %4 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc93)
      cir.store %4, %3 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc93)
      cir.scope {
        %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc25)
        %6 = cir.const #cir.int<3> : !s32i loc(#loc26)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc26)
        %8 = cir.const #cir.int<4> : !u64i loc(#loc26)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc26)
        %10 = cir.const #cir.int<2> : !s32i loc(#loc26)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc26)
        %12 = cir.binop(add, %9, %11) : !u64i loc(#loc26)
        %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc26)
        %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc85)
        %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc27)
        %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc28)
        %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc29)
        %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc29)
        %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc95)
        cir.if %19 {
          %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc33)
          %21 = cir.call @atoi(%20) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc34)
          cir.store %21, %0 : !s32i, !cir.ptr<!s32i> loc(#loc97)
        } else {
          %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
          %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc37)
        } loc(#loc96)
      } loc(#loc94)
    } loc(#loc92)
    cir.call @CWE617_Reachable_Assertion__fgets_63b_badSink(%0) : (!cir.ptr<!s32i>) -> () loc(#loc38)
    cir.return loc(#loc13)
  } loc(#loc89)
  cir.func no_proto @CWE617_Reachable_Assertion__fgets_63_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc99)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc41)
    cir.return loc(#loc40)
  } loc(#loc98)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc100)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc101)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc47)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc48)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc49)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc50)
  cir.func @main(%arg0: !s32i loc(fused[#loc53, #loc54]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc55, #loc56])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc103)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc104)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc52)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc57)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc57)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc58)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc59)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc59)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc60)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc47)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    %8 = cir.get_global @CWE617_Reachable_Assertion__fgets_63_good : !cir.ptr<!cir.func<!void ()>> loc(#loc105)
    cir.call @CWE617_Reachable_Assertion__fgets_63_good() : () -> () loc(#loc62)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc48)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc49)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    %13 = cir.get_global @CWE617_Reachable_Assertion__fgets_63_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc106)
    cir.call @CWE617_Reachable_Assertion__fgets_63_bad() : () -> () loc(#loc66)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc50)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc69)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc107)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc107)
    cir.return %17 : !s32i loc(#loc107)
  } loc(#loc102)
  cir.func private @CWE617_Reachable_Assertion__fgets_63b_goodG2BSink(!cir.ptr<!s32i>) loc(#loc108)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc110)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc77)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc78)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc111)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc80)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc81)
    %5 = cir.binop(add, %3, %4) nsw : !s32i loc(#loc80)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc112)
    cir.call @CWE617_Reachable_Assertion__fgets_63b_goodG2BSink(%0) : (!cir.ptr<!s32i>) -> () loc(#loc83)
    cir.return loc(#loc74)
  } loc(#loc109)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE617_Reachable_Assertion/CWE617_Reachable_Assertion__fgets_63a.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE617_Reachable_Assertion__fgets_63a.c":45:23)
#loc10 = loc("CWE617_Reachable_Assertion__fgets_63a.c":28:1)
#loc11 = loc("CWE617_Reachable_Assertion__fgets_63a.c":28:65)
#loc12 = loc("CWE617_Reachable_Assertion__fgets_63a.c":30:1)
#loc13 = loc("CWE617_Reachable_Assertion__fgets_63a.c":49:1)
#loc14 = loc("CWE617_Reachable_Assertion__fgets_63a.c":32:5)
#loc15 = loc("CWE617_Reachable_Assertion__fgets_63a.c":32:9)
#loc16 = loc("CWE617_Reachable_Assertion__fgets_63a.c":34:13)
#loc17 = loc("CWE617_Reachable_Assertion__fgets_63a.c":34:12)
#loc18 = loc("CWE617_Reachable_Assertion__fgets_63a.c":34:5)
#loc19 = loc("CWE617_Reachable_Assertion__fgets_63a.c":35:5)
#loc20 = loc("CWE617_Reachable_Assertion__fgets_63a.c":47:5)
#loc21 = loc("CWE617_Reachable_Assertion__fgets_63a.c":36:9)
#loc22 = loc("CWE617_Reachable_Assertion__fgets_63a.c":36:45)
#loc23 = loc("CWE617_Reachable_Assertion__fgets_63a.c":38:9)
#loc24 = loc("CWE617_Reachable_Assertion__fgets_63a.c":46:9)
#loc25 = loc("CWE617_Reachable_Assertion__fgets_63a.c":38:19)
#loc26 = loc("CWE617_Reachable_Assertion__fgets_63a.c":38:32)
#loc27 = loc("CWE617_Reachable_Assertion__fgets_63a.c":38:49)
#loc28 = loc("CWE617_Reachable_Assertion__fgets_63a.c":38:13)
#loc29 = loc("CWE617_Reachable_Assertion__fgets_63a.c":38:59)
#loc30 = loc("CWE617_Reachable_Assertion__fgets_63a.c":39:9)
#loc31 = loc("CWE617_Reachable_Assertion__fgets_63a.c":42:9)
#loc32 = loc("CWE617_Reachable_Assertion__fgets_63a.c":44:9)
#loc33 = loc("CWE617_Reachable_Assertion__fgets_63a.c":41:25)
#loc34 = loc("CWE617_Reachable_Assertion__fgets_63a.c":41:20)
#loc35 = loc("CWE617_Reachable_Assertion__fgets_63a.c":41:13)
#loc36 = loc("CWE617_Reachable_Assertion__fgets_63a.c":41:36)
#loc37 = loc("CWE617_Reachable_Assertion__fgets_63a.c":45:13)
#loc38 = loc("CWE617_Reachable_Assertion__fgets_63a.c":48:5)
#loc39 = loc("CWE617_Reachable_Assertion__fgets_63a.c":68:1)
#loc40 = loc("CWE617_Reachable_Assertion__fgets_63a.c":71:1)
#loc41 = loc("CWE617_Reachable_Assertion__fgets_63a.c":70:5)
#loc42 = loc("CWE617_Reachable_Assertion__fgets_63a.c":70:13)
#loc43 = loc("/usr/include/stdlib.h":575:1)
#loc44 = loc("/usr/include/stdlib.h":575:41)
#loc45 = loc("/usr/include/time.h":76:1)
#loc46 = loc("/usr/include/time.h":76:38)
#loc47 = loc("CWE617_Reachable_Assertion__fgets_63a.c":88:15)
#loc48 = loc("CWE617_Reachable_Assertion__fgets_63a.c":90:15)
#loc49 = loc("CWE617_Reachable_Assertion__fgets_63a.c":93:15)
#loc50 = loc("CWE617_Reachable_Assertion__fgets_63a.c":95:15)
#loc51 = loc("CWE617_Reachable_Assertion__fgets_63a.c":83:1)
#loc52 = loc("CWE617_Reachable_Assertion__fgets_63a.c":98:1)
#loc57 = loc("CWE617_Reachable_Assertion__fgets_63a.c":84:1)
#loc58 = loc("CWE617_Reachable_Assertion__fgets_63a.c":86:27)
#loc59 = loc("CWE617_Reachable_Assertion__fgets_63a.c":86:22)
#loc60 = loc("CWE617_Reachable_Assertion__fgets_63a.c":86:5)
#loc61 = loc("CWE617_Reachable_Assertion__fgets_63a.c":88:5)
#loc62 = loc("CWE617_Reachable_Assertion__fgets_63a.c":89:5)
#loc63 = loc("CWE617_Reachable_Assertion__fgets_63a.c":89:47)
#loc64 = loc("CWE617_Reachable_Assertion__fgets_63a.c":90:5)
#loc65 = loc("CWE617_Reachable_Assertion__fgets_63a.c":93:5)
#loc66 = loc("CWE617_Reachable_Assertion__fgets_63a.c":94:5)
#loc67 = loc("CWE617_Reachable_Assertion__fgets_63a.c":94:46)
#loc68 = loc("CWE617_Reachable_Assertion__fgets_63a.c":95:5)
#loc69 = loc("CWE617_Reachable_Assertion__fgets_63a.c":97:12)
#loc70 = loc("CWE617_Reachable_Assertion__fgets_63a.c":97:5)
#loc71 = loc("CWE617_Reachable_Assertion__fgets_63a.c":56:1)
#loc72 = loc("CWE617_Reachable_Assertion__fgets_63a.c":56:66)
#loc73 = loc("CWE617_Reachable_Assertion__fgets_63a.c":58:1)
#loc74 = loc("CWE617_Reachable_Assertion__fgets_63a.c":66:1)
#loc75 = loc("CWE617_Reachable_Assertion__fgets_63a.c":60:5)
#loc76 = loc("CWE617_Reachable_Assertion__fgets_63a.c":60:9)
#loc77 = loc("CWE617_Reachable_Assertion__fgets_63a.c":62:13)
#loc78 = loc("CWE617_Reachable_Assertion__fgets_63a.c":62:12)
#loc79 = loc("CWE617_Reachable_Assertion__fgets_63a.c":62:5)
#loc80 = loc("CWE617_Reachable_Assertion__fgets_63a.c":64:12)
#loc81 = loc("CWE617_Reachable_Assertion__fgets_63a.c":64:25)
#loc82 = loc("CWE617_Reachable_Assertion__fgets_63a.c":64:5)
#loc83 = loc("CWE617_Reachable_Assertion__fgets_63a.c":65:5)
#loc84 = loc(fused[#loc1, #loc2])
#loc85 = loc(fused[#loc3, #loc4])
#loc86 = loc(fused[#loc5, #loc6])
#loc87 = loc(fused[#loc7, #loc8])
#loc88 = loc(fused[#loc10, #loc11])
#loc89 = loc(fused[#loc12, #loc13])
#loc90 = loc(fused[#loc14, #loc15])
#loc91 = loc(fused[#loc18, #loc16])
#loc92 = loc(fused[#loc19, #loc20])
#loc93 = loc(fused[#loc21, #loc22])
#loc94 = loc(fused[#loc23, #loc24])
#loc95 = loc(fused[#loc28, #loc29])
#loc96 = loc(fused[#loc30, #loc31, #loc32, #loc24])
#loc97 = loc(fused[#loc35, #loc36])
#loc98 = loc(fused[#loc39, #loc40])
#loc99 = loc(fused[#loc41, #loc42])
#loc100 = loc(fused[#loc43, #loc44])
#loc101 = loc(fused[#loc45, #loc46])
#loc102 = loc(fused[#loc51, #loc52])
#loc105 = loc(fused[#loc62, #loc63])
#loc106 = loc(fused[#loc66, #loc67])
#loc107 = loc(fused[#loc70, #loc69])
#loc108 = loc(fused[#loc71, #loc72])
#loc109 = loc(fused[#loc73, #loc74])
#loc110 = loc(fused[#loc75, #loc76])
#loc111 = loc(fused[#loc79, #loc77])
#loc112 = loc(fused[#loc82, #loc81])
