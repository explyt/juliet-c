!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B2.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc196)
  cir.global "private" constant cir_private @__const.goodG2B1.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc197)
  cir.global "private" constant cir_private @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03_bad.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc198)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc199)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc200)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc201)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc202)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc203)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc198)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc205)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc206)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc207)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc24)
    cir.store %4, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc208)
    cir.br ^bb1 loc(#loc209)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<5> : !s32i loc(#loc28)
    %6 = cir.const #cir.int<5> : !s32i loc(#loc29)
    %7 = cir.cmp(eq, %5, %6) : !s32i, !cir.bool loc(#loc210)
    cir.brcond %7 ^bb2, ^bb7 loc(#loc211)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc31)
    %9 = cir.const #cir.int<10> : !s32i loc(#loc32)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc32)
    %11 = cir.const #cir.int<1> : !u64i loc(#loc212)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc213)
    %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc31)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc214)
    cir.store %14, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc215)
    cir.br ^bb3 loc(#loc216)
  ^bb3:  // pred: ^bb2
    %15 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc40)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc40)
    %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc217)
    cir.brcond %18 ^bb4, ^bb5 loc(#loc218)
  ^bb4:  // pred: ^bb3
    %19 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc42)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc43)
    %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc44)
    cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc42)
    cir.br ^bb5 loc(#loc38)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc38)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc27)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc27)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc219)
  ^bb9:  // pred: ^bb8
    %22 = cir.get_global @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03_bad.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc198)
    cir.copy %22 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc198)
    %23 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc47)
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc48)
    %25 = cir.call @strlen(%24) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc47)
    cir.store %25, %2 : !u64i, !cir.ptr<!u64i> loc(#loc220)
    cir.br ^bb10 loc(#loc221)
  ^bb10:  // pred: ^bb9
    %26 = cir.const #cir.int<0> : !s32i loc(#loc53)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc53)
    cir.store %27, %1 : !u64i, !cir.ptr<!u64i> loc(#loc222)
    cir.br ^bb11 loc(#loc221)
  ^bb11:  // 2 preds: ^bb10, ^bb15
    %28 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc55)
    %29 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc56)
    %30 = cir.const #cir.int<1> : !s32i loc(#loc57)
    %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc57)
    %32 = cir.binop(add, %29, %31) : !u64i loc(#loc223)
    %33 = cir.cmp(lt, %28, %32) : !u64i, !cir.bool loc(#loc224)
    cir.brcond %33 ^bb12, ^bb16 loc(#loc58)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc225)
  ^bb13:  // pred: ^bb12
    %34 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc60)
    %35 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc61)
    %36 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %34 : !u64i), !cir.ptr<!s8i> loc(#loc61)
    %37 = cir.load %36 : !cir.ptr<!s8i>, !s8i loc(#loc61)
    %38 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
    %39 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc63)
    %40 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %39 : !u64i), !cir.ptr<!s8i> loc(#loc64)
    cir.store %37, %40 : !s8i, !cir.ptr<!s8i> loc(#loc226)
    cir.br ^bb14 loc(#loc52)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc52)
  ^bb15:  // pred: ^bb14
    %41 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc66)
    %42 = cir.unary(inc, %41) : !u64i, !u64i loc(#loc67)
    cir.store %42, %1 : !u64i, !cir.ptr<!u64i> loc(#loc227)
    cir.br ^bb11 loc(#loc221)
  ^bb16:  // pred: ^bb11
    cir.br ^bb17 loc(#loc52)
  ^bb17:  // pred: ^bb16
    %43 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%43) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %44 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
    %45 = cir.cast(bitcast, %44 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc70)
    cir.call @free(%45) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc71)
    cir.br ^bb18 loc(#loc46)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc18)
  } loc(#loc204)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc229)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc74)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc230)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc76)
    cir.return loc(#loc73)
  } loc(#loc228)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc78)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc197)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc232)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc233)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc234)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc86)
    cir.store %4, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc235)
    cir.br ^bb1 loc(#loc236)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<5> : !s32i loc(#loc90)
    %6 = cir.const #cir.int<5> : !s32i loc(#loc91)
    %7 = cir.cmp(ne, %5, %6) : !s32i, !cir.bool loc(#loc237)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc238)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc78)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc78)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc95)
    cir.br ^bb8 loc(#loc93)
  ^bb3:  // pred: ^bb1
    %10 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc96)
    %11 = cir.const #cir.int<10> : !s32i loc(#loc97)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc98)
    %13 = cir.binop(add, %11, %12) nsw : !s32i loc(#loc97)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc97)
    %15 = cir.const #cir.int<1> : !u64i loc(#loc239)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc240)
    %17 = cir.call @malloc(%16) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc96)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc241)
    cir.store %18, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc242)
    cir.br ^bb4 loc(#loc243)
  ^bb4:  // pred: ^bb3
    %19 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc107)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc107)
    %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc244)
    cir.brcond %22 ^bb5, ^bb6 loc(#loc245)
  ^bb5:  // pred: ^bb4
    %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc109)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc110)
    %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc111)
    cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc109)
    cir.br ^bb6 loc(#loc105)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc105)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc89)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc89)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc246)
  ^bb10:  // pred: ^bb9
    %26 = cir.get_global @__const.goodG2B1.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc197)
    cir.copy %26 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc197)
    %27 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc114)
    %28 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc115)
    %29 = cir.call @strlen(%28) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc114)
    cir.store %29, %2 : !u64i, !cir.ptr<!u64i> loc(#loc247)
    cir.br ^bb11 loc(#loc248)
  ^bb11:  // pred: ^bb10
    %30 = cir.const #cir.int<0> : !s32i loc(#loc120)
    %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc120)
    cir.store %31, %1 : !u64i, !cir.ptr<!u64i> loc(#loc249)
    cir.br ^bb12 loc(#loc248)
  ^bb12:  // 2 preds: ^bb11, ^bb16
    %32 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc122)
    %33 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc123)
    %34 = cir.const #cir.int<1> : !s32i loc(#loc124)
    %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc124)
    %36 = cir.binop(add, %33, %35) : !u64i loc(#loc250)
    %37 = cir.cmp(lt, %32, %36) : !u64i, !cir.bool loc(#loc251)
    cir.brcond %37 ^bb13, ^bb17 loc(#loc125)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc252)
  ^bb14:  // pred: ^bb13
    %38 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc127)
    %39 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc128)
    %40 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %38 : !u64i), !cir.ptr<!s8i> loc(#loc128)
    %41 = cir.load %40 : !cir.ptr<!s8i>, !s8i loc(#loc128)
    %42 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
    %43 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc130)
    %44 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %43 : !u64i), !cir.ptr<!s8i> loc(#loc131)
    cir.store %41, %44 : !s8i, !cir.ptr<!s8i> loc(#loc253)
    cir.br ^bb15 loc(#loc119)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc119)
  ^bb16:  // pred: ^bb15
    %45 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc133)
    %46 = cir.unary(inc, %45) : !u64i, !u64i loc(#loc134)
    cir.store %46, %1 : !u64i, !cir.ptr<!u64i> loc(#loc254)
    cir.br ^bb12 loc(#loc248)
  ^bb17:  // pred: ^bb12
    cir.br ^bb18 loc(#loc119)
  ^bb18:  // pred: ^bb17
    %47 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
    cir.call @printLine(%47) : (!cir.ptr<!s8i>) -> () loc(#loc136)
    %48 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc137)
    %49 = cir.cast(bitcast, %48 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc137)
    cir.call @free(%49) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc138)
    cir.br ^bb19 loc(#loc113)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc80)
  } loc(#loc231)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc196)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc256)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc257)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc258)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc146)
    cir.store %4, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc259)
    cir.br ^bb1 loc(#loc260)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<5> : !s32i loc(#loc150)
    %6 = cir.const #cir.int<5> : !s32i loc(#loc151)
    %7 = cir.cmp(eq, %5, %6) : !s32i, !cir.bool loc(#loc261)
    cir.brcond %7 ^bb2, ^bb7 loc(#loc262)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc153)
    %9 = cir.const #cir.int<10> : !s32i loc(#loc154)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc155)
    %11 = cir.binop(add, %9, %10) nsw : !s32i loc(#loc154)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc154)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc263)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc264)
    %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc153)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc265)
    cir.store %16, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc266)
    cir.br ^bb3 loc(#loc267)
  ^bb3:  // pred: ^bb2
    %17 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc164)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc164)
    %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc268)
    cir.brcond %20 ^bb4, ^bb5 loc(#loc269)
  ^bb4:  // pred: ^bb3
    %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc166)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc167)
    %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc168)
    cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc166)
    cir.br ^bb5 loc(#loc162)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc162)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc149)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc149)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc270)
  ^bb9:  // pred: ^bb8
    %24 = cir.get_global @__const.goodG2B2.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc196)
    cir.copy %24 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc196)
    %25 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc171)
    %26 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc172)
    %27 = cir.call @strlen(%26) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc171)
    cir.store %27, %2 : !u64i, !cir.ptr<!u64i> loc(#loc271)
    cir.br ^bb10 loc(#loc272)
  ^bb10:  // pred: ^bb9
    %28 = cir.const #cir.int<0> : !s32i loc(#loc177)
    %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc177)
    cir.store %29, %1 : !u64i, !cir.ptr<!u64i> loc(#loc273)
    cir.br ^bb11 loc(#loc272)
  ^bb11:  // 2 preds: ^bb10, ^bb15
    %30 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc179)
    %31 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc180)
    %32 = cir.const #cir.int<1> : !s32i loc(#loc181)
    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc181)
    %34 = cir.binop(add, %31, %33) : !u64i loc(#loc274)
    %35 = cir.cmp(lt, %30, %34) : !u64i, !cir.bool loc(#loc275)
    cir.brcond %35 ^bb12, ^bb16 loc(#loc182)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc276)
  ^bb13:  // pred: ^bb12
    %36 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc184)
    %37 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc185)
    %38 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %36 : !u64i), !cir.ptr<!s8i> loc(#loc185)
    %39 = cir.load %38 : !cir.ptr<!s8i>, !s8i loc(#loc185)
    %40 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc186)
    %41 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc187)
    %42 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc188)
    cir.store %39, %42 : !s8i, !cir.ptr<!s8i> loc(#loc277)
    cir.br ^bb14 loc(#loc176)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc176)
  ^bb15:  // pred: ^bb14
    %43 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc190)
    %44 = cir.unary(inc, %43) : !u64i, !u64i loc(#loc191)
    cir.store %44, %1 : !u64i, !cir.ptr<!u64i> loc(#loc278)
    cir.br ^bb11 loc(#loc272)
  ^bb16:  // pred: ^bb11
    cir.br ^bb17 loc(#loc176)
  ^bb17:  // pred: ^bb16
    %45 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc192)
    cir.call @printLine(%45) : (!cir.ptr<!s8i>) -> () loc(#loc193)
    %46 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc194)
    %47 = cir.cast(bitcast, %46 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc194)
    cir.call @free(%47) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc195)
    cir.br ^bb18 loc(#loc170)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc140)
  } loc(#loc255)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":100:9)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":100:29)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":74:9)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":74:29)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":39:9)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":39:29)
#loc7 = loc("/usr/include/stdlib.h":672:1)
#loc8 = loc("/usr/include/stdlib.h":672:45)
#loc9 = loc("/usr/include/stdlib.h":756:1)
#loc10 = loc("/usr/include/stdlib.h":756:70)
#loc11 = loc("/usr/include/string.h":407:1)
#loc12 = loc("/usr/include/string.h":408:33)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc14 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc15 = loc("/usr/include/stdlib.h":687:1)
#loc16 = loc("/usr/include/stdlib.h":687:32)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":28:1)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":51:1)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":40:9)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":40:16)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":40:19)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":30:5)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":30:12)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":31:12)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":31:5)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":32:5)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":37:5)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":32:8)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":32:11)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":33:5)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":35:24)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":35:31)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":35:34)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":35:45)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":35:46)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":35:9)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":36:9)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":36:37)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":36:13)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":36:21)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":36:27)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":36:28)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":36:34)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":36:33)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":38:5)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":50:5)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":41:21)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":41:28)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":41:9)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":41:34)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":44:9)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":47:9)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":44:18)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":44:14)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":44:21)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":44:25)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":44:37)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":44:23)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":45:9)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":46:30)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":46:23)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":46:13)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":46:18)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":46:19)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":46:31)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":44:41)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":44:40)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":48:19)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":48:9)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":49:14)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":49:9)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":114:1)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":118:1)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":116:5)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":116:14)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":117:5)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":117:14)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":65:19)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":58:1)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":86:1)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":75:9)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":75:16)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":75:19)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":60:5)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":60:12)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":61:12)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":61:5)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":62:5)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":72:5)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":62:8)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":62:11)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":63:5)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":66:5)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":68:5)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":65:9)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":70:24)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":70:32)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":70:35)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":70:38)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":70:49)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":70:31)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":70:50)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":70:9)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":71:9)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":71:37)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":71:13)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":71:21)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":71:27)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":71:28)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":71:34)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":71:33)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":73:5)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":85:5)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":76:21)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":76:28)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":76:9)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":76:34)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":79:9)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":82:9)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":79:18)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":79:14)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":79:21)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":79:25)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":79:37)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":79:23)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":80:9)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":81:30)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":81:23)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":81:13)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":81:18)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":81:19)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":81:31)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":79:41)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":79:40)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":83:19)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":83:9)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":84:14)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":84:9)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":89:1)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":112:1)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":101:9)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":101:16)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":101:19)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":91:5)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":91:12)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":92:12)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":92:5)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":93:5)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":98:5)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":93:8)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":93:11)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":94:5)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":96:24)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":96:32)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":96:35)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":96:38)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":96:49)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":96:31)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":96:50)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":96:9)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":97:9)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":97:37)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":97:13)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":97:21)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":97:27)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":97:28)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":97:34)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":97:33)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":99:5)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":111:5)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":102:21)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":102:28)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":102:9)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":102:34)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":105:9)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":108:9)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":105:18)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":105:14)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":105:21)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":105:25)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":105:37)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":105:23)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":106:9)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":107:30)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":107:23)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":107:13)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":107:18)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":107:19)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":107:31)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":105:41)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":105:40)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":109:19)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":109:9)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":110:14)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_03.c":110:9)
#loc196 = loc(fused[#loc1, #loc2])
#loc197 = loc(fused[#loc3, #loc4])
#loc198 = loc(fused[#loc5, #loc6])
#loc199 = loc(fused[#loc7, #loc8])
#loc200 = loc(fused[#loc9, #loc10])
#loc201 = loc(fused[#loc11, #loc12])
#loc202 = loc(fused[#loc13, #loc14])
#loc203 = loc(fused[#loc15, #loc16])
#loc204 = loc(fused[#loc17, #loc18])
#loc205 = loc(fused[#loc19, #loc20])
#loc206 = loc(fused[#loc19, #loc21])
#loc207 = loc(fused[#loc22, #loc23])
#loc208 = loc(fused[#loc25, #loc24])
#loc209 = loc(fused[#loc26, #loc27])
#loc210 = loc(fused[#loc28, #loc29])
#loc211 = loc(fused[#loc30, #loc27])
#loc212 = loc(fused[#loc33, #loc34])
#loc213 = loc(fused[#loc32, #loc34])
#loc214 = loc(fused[#loc31, #loc35])
#loc215 = loc(fused[#loc36, #loc35])
#loc216 = loc(fused[#loc37, #loc38])
#loc217 = loc(fused[#loc39, #loc40])
#loc218 = loc(fused[#loc41, #loc38])
#loc219 = loc(fused[#loc45, #loc46])
#loc220 = loc(fused[#loc49, #loc50])
#loc221 = loc(fused[#loc51, #loc52])
#loc222 = loc(fused[#loc54, #loc53])
#loc223 = loc(fused[#loc56, #loc57])
#loc224 = loc(fused[#loc55, #loc57])
#loc225 = loc(fused[#loc59, #loc52])
#loc226 = loc(fused[#loc62, #loc65])
#loc227 = loc(fused[#loc67, #loc66])
#loc228 = loc(fused[#loc72, #loc73])
#loc229 = loc(fused[#loc74, #loc75])
#loc230 = loc(fused[#loc76, #loc77])
#loc231 = loc(fused[#loc79, #loc80])
#loc232 = loc(fused[#loc81, #loc82])
#loc233 = loc(fused[#loc81, #loc83])
#loc234 = loc(fused[#loc84, #loc85])
#loc235 = loc(fused[#loc87, #loc86])
#loc236 = loc(fused[#loc88, #loc89])
#loc237 = loc(fused[#loc90, #loc91])
#loc238 = loc(fused[#loc92, #loc93, #loc94, #loc89])
#loc239 = loc(fused[#loc99, #loc100])
#loc240 = loc(fused[#loc101, #loc100])
#loc241 = loc(fused[#loc96, #loc102])
#loc242 = loc(fused[#loc103, #loc102])
#loc243 = loc(fused[#loc104, #loc105])
#loc244 = loc(fused[#loc106, #loc107])
#loc245 = loc(fused[#loc108, #loc105])
#loc246 = loc(fused[#loc112, #loc113])
#loc247 = loc(fused[#loc116, #loc117])
#loc248 = loc(fused[#loc118, #loc119])
#loc249 = loc(fused[#loc121, #loc120])
#loc250 = loc(fused[#loc123, #loc124])
#loc251 = loc(fused[#loc122, #loc124])
#loc252 = loc(fused[#loc126, #loc119])
#loc253 = loc(fused[#loc129, #loc132])
#loc254 = loc(fused[#loc134, #loc133])
#loc255 = loc(fused[#loc139, #loc140])
#loc256 = loc(fused[#loc141, #loc142])
#loc257 = loc(fused[#loc141, #loc143])
#loc258 = loc(fused[#loc144, #loc145])
#loc259 = loc(fused[#loc147, #loc146])
#loc260 = loc(fused[#loc148, #loc149])
#loc261 = loc(fused[#loc150, #loc151])
#loc262 = loc(fused[#loc152, #loc149])
#loc263 = loc(fused[#loc156, #loc157])
#loc264 = loc(fused[#loc158, #loc157])
#loc265 = loc(fused[#loc153, #loc159])
#loc266 = loc(fused[#loc160, #loc159])
#loc267 = loc(fused[#loc161, #loc162])
#loc268 = loc(fused[#loc163, #loc164])
#loc269 = loc(fused[#loc165, #loc162])
#loc270 = loc(fused[#loc169, #loc170])
#loc271 = loc(fused[#loc173, #loc174])
#loc272 = loc(fused[#loc175, #loc176])
#loc273 = loc(fused[#loc178, #loc177])
#loc274 = loc(fused[#loc180, #loc181])
#loc275 = loc(fused[#loc179, #loc181])
#loc276 = loc(fused[#loc183, #loc176])
#loc277 = loc(fused[#loc186, #loc189])
#loc278 = loc(fused[#loc191, #loc190])
