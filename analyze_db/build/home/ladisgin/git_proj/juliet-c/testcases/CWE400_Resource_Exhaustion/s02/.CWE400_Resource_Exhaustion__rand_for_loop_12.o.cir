!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc26 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":30:17)
#loc56 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":53:27)
#loc96 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":79:17)
#loc98 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":84:17)
#loc113 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":91:27)
#loc135 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":105:27)
#true = #cir.bool<true> : !cir.bool
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_for_loop_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc208)
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc209)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc210)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc7)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_for_loop_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc212)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc213)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc214)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc17)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc215)
    cir.br ^bb1 loc(#loc216)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc217)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc217)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc21)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc21)
    cir.brcond %8 ^bb2, ^bb7 loc(#loc218)
  ^bb2:  // pred: ^bb1
    %9 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %11 = cir.binop(and, %9, %10) : !s32i loc(#loc26)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc26)
    cir.brcond %12 ^bb3, ^bb4 loc(#loc26)
  ^bb3:  // pred: ^bb2
    %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
    %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc26)
    %15 = cir.const #cir.int<30> : !s32i loc(#loc26)
    %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc26)
    %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
    %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc26)
    %19 = cir.const #cir.int<15> : !s32i loc(#loc26)
    %20 = cir.shift(left, %18 : !u32i, %19 : !s32i) -> !u32i loc(#loc26)
    %21 = cir.binop(xor, %16, %20) : !u32i loc(#loc26)
    %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
    %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc26)
    %24 = cir.binop(xor, %21, %23) : !u32i loc(#loc26)
    cir.br ^bb5(%24 : !u32i) loc(#loc26)
  ^bb4:  // pred: ^bb2
    %25 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
    %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc26)
    %27 = cir.const #cir.int<30> : !s32i loc(#loc26)
    %28 = cir.shift(left, %26 : !u32i, %27 : !s32i) -> !u32i loc(#loc26)
    %29 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
    %30 = cir.cast(integral, %29 : !s32i), !u32i loc(#loc26)
    %31 = cir.const #cir.int<15> : !s32i loc(#loc26)
    %32 = cir.shift(left, %30 : !u32i, %31 : !s32i) -> !u32i loc(#loc26)
    %33 = cir.binop(xor, %28, %32) : !u32i loc(#loc26)
    %34 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
    %35 = cir.cast(integral, %34 : !s32i), !u32i loc(#loc26)
    %36 = cir.binop(xor, %33, %35) : !u32i loc(#loc26)
    %37 = cir.unary(minus, %36) : !u32i, !u32i loc(#loc26)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %39 = cir.cast(integral, %38 : !s32i), !u32i loc(#loc26)
    %40 = cir.binop(sub, %37, %39) : !u32i loc(#loc26)
    cir.br ^bb5(%40 : !u32i) loc(#loc26)
  ^bb5(%41: !u32i loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":30:17)):  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc26)
  ^bb6:  // pred: ^bb5
    %42 = cir.cast(integral, %41 : !u32i), !s32i loc(#loc26)
    cir.store %42, %2 : !s32i, !cir.ptr<!s32i> loc(#loc219)
    cir.br ^bb8 loc(#loc24)
  ^bb7:  // pred: ^bb1
    %43 = cir.const #cir.int<20> : !s32i loc(#loc28)
    cir.store %43, %2 : !s32i, !cir.ptr<!s32i> loc(#loc220)
    cir.br ^bb8 loc(#loc20)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc20)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc221)
  ^bb10:  // pred: ^bb9
    %44 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc222)
    %45 = cir.cast(bitcast, %44 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc222)
    %46 = cir.call %45() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc32)
    %47 = cir.cast(int_to_bool, %46 : !s32i), !cir.bool loc(#loc32)
    cir.brcond %47 ^bb11, ^bb22 loc(#loc223)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc224)
  ^bb12:  // pred: ^bb11
    %48 = cir.const #cir.int<0> : !s32i loc(#loc11)
    %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc11)
    cir.store %49, %0 : !u64i, !cir.ptr<!u64i> loc(#loc212)
    cir.br ^bb13 loc(#loc225)
  ^bb13:  // pred: ^bb12
    %50 = cir.const #cir.int<0> : !s32i loc(#loc41)
    %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc41)
    cir.store %51, %0 : !u64i, !cir.ptr<!u64i> loc(#loc226)
    cir.br ^bb14 loc(#loc225)
  ^bb14:  // 2 preds: ^bb13, ^bb18
    %52 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc43)
    %53 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc44)
    %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc44)
    %55 = cir.cmp(lt, %52, %54) : !u64i, !cir.bool loc(#loc227)
    cir.brcond %55 ^bb15, ^bb19 loc(#loc45)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc228)
  ^bb16:  // pred: ^bb15
    %56 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc7)
    %57 = cir.cast(array_to_ptrdecay, %56 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc7)
    cir.call @printLine(%57) : (!cir.ptr<!s8i>) -> () loc(#loc47)
    cir.br ^bb17 loc(#loc40)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc40)
  ^bb18:  // pred: ^bb17
    %58 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc48)
    %59 = cir.unary(inc, %58) : !u64i, !u64i loc(#loc49)
    cir.store %59, %0 : !u64i, !cir.ptr<!u64i> loc(#loc229)
    cir.br ^bb14 loc(#loc225)
  ^bb19:  // pred: ^bb14
    cir.br ^bb20 loc(#loc40)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc38)
  ^bb21:  // pred: ^bb20
    cir.br ^bb45 loc(#loc35)
  ^bb22:  // pred: ^bb10
    cir.br ^bb23 loc(#loc230)
  ^bb23:  // pred: ^bb22
    %60 = cir.const #cir.int<0> : !s32i loc(#loc13)
    %61 = cir.cast(integral, %60 : !s32i), !u64i loc(#loc13)
    cir.store %61, %1 : !u64i, !cir.ptr<!u64i> loc(#loc213)
    cir.br ^bb24 loc(#loc231)
  ^bb24:  // pred: ^bb23
    %62 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc54)
    %63 = cir.const #cir.int<0> : !s32i loc(#loc55)
    %64 = cir.cmp(gt, %62, %63) : !s32i, !cir.bool loc(#loc232)
    cir.brcond %64 ^bb25, ^bb30 loc(#loc56)
  ^bb25:  // pred: ^bb24
    %65 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc57)
    %66 = cir.const #cir.int<20> : !s32i loc(#loc58)
    %67 = cir.cmp(le, %65, %66) : !s32i, !cir.bool loc(#loc233)
    cir.brcond %67 ^bb26, ^bb27 loc(#loc56)
  ^bb26:  // pred: ^bb25
    %68 = cir.const #true loc(#loc56)
    cir.br ^bb28(%68 : !cir.bool) loc(#loc56)
  ^bb27:  // pred: ^bb25
    %69 = cir.const #false loc(#loc56)
    cir.br ^bb28(%69 : !cir.bool) loc(#loc56)
  ^bb28(%70: !cir.bool loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":53:27)):  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc56)
  ^bb29:  // pred: ^bb28
    cir.br ^bb31(%70 : !cir.bool) loc(#loc56)
  ^bb30:  // pred: ^bb24
    %71 = cir.const #false loc(#loc56)
    cir.br ^bb31(%71 : !cir.bool) loc(#loc56)
  ^bb31(%72: !cir.bool loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":53:27)):  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc56)
  ^bb32:  // pred: ^bb31
    cir.brcond %72 ^bb33, ^bb42 loc(#loc234)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc235)
  ^bb34:  // pred: ^bb33
    %73 = cir.const #cir.int<0> : !s32i loc(#loc62)
    %74 = cir.cast(integral, %73 : !s32i), !u64i loc(#loc62)
    cir.store %74, %1 : !u64i, !cir.ptr<!u64i> loc(#loc236)
    cir.br ^bb35 loc(#loc235)
  ^bb35:  // 2 preds: ^bb34, ^bb39
    %75 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc64)
    %76 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc65)
    %77 = cir.cast(integral, %76 : !s32i), !u64i loc(#loc65)
    %78 = cir.cmp(lt, %75, %77) : !u64i, !cir.bool loc(#loc237)
    cir.brcond %78 ^bb36, ^bb40 loc(#loc66)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc238)
  ^bb37:  // pred: ^bb36
    %79 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc68)
    %80 = cir.cast(array_to_ptrdecay, %79 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%80) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    cir.br ^bb38 loc(#loc61)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc61)
  ^bb39:  // pred: ^bb38
    %81 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc70)
    %82 = cir.unary(inc, %81) : !u64i, !u64i loc(#loc71)
    cir.store %82, %1 : !u64i, !cir.ptr<!u64i> loc(#loc239)
    cir.br ^bb35 loc(#loc235)
  ^bb40:  // pred: ^bb35
    cir.br ^bb41 loc(#loc61)
  ^bb41:  // pred: ^bb40
    cir.br ^bb42 loc(#loc53)
  ^bb42:  // 2 preds: ^bb32, ^bb41
    cir.br ^bb43 loc(#loc53)
  ^bb43:  // pred: ^bb42
    cir.br ^bb44 loc(#loc51)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc31)
  ^bb45:  // 2 preds: ^bb21, ^bb44
    cir.br ^bb46 loc(#loc31)
  ^bb46:  // pred: ^bb45
    cir.return loc(#loc9)
  } loc(#loc211)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_for_loop_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc241)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc74)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc242)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc76)
    cir.return loc(#loc73)
  } loc(#loc240)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc244)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc245)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc246)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc86)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc87)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc247)
    cir.br ^bb1 loc(#loc248)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc249)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc249)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc91)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc91)
    cir.brcond %8 ^bb2, ^bb7 loc(#loc250)
  ^bb2:  // pred: ^bb1
    %9 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc96)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc96)
    %11 = cir.binop(and, %9, %10) : !s32i loc(#loc96)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc96)
    cir.brcond %12 ^bb3, ^bb4 loc(#loc96)
  ^bb3:  // pred: ^bb2
    %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc96)
    %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc96)
    %15 = cir.const #cir.int<30> : !s32i loc(#loc96)
    %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc96)
    %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc96)
    %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc96)
    %19 = cir.const #cir.int<15> : !s32i loc(#loc96)
    %20 = cir.shift(left, %18 : !u32i, %19 : !s32i) -> !u32i loc(#loc96)
    %21 = cir.binop(xor, %16, %20) : !u32i loc(#loc96)
    %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc96)
    %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc96)
    %24 = cir.binop(xor, %21, %23) : !u32i loc(#loc96)
    cir.br ^bb5(%24 : !u32i) loc(#loc96)
  ^bb4:  // pred: ^bb2
    %25 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc96)
    %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc96)
    %27 = cir.const #cir.int<30> : !s32i loc(#loc96)
    %28 = cir.shift(left, %26 : !u32i, %27 : !s32i) -> !u32i loc(#loc96)
    %29 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc96)
    %30 = cir.cast(integral, %29 : !s32i), !u32i loc(#loc96)
    %31 = cir.const #cir.int<15> : !s32i loc(#loc96)
    %32 = cir.shift(left, %30 : !u32i, %31 : !s32i) -> !u32i loc(#loc96)
    %33 = cir.binop(xor, %28, %32) : !u32i loc(#loc96)
    %34 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc96)
    %35 = cir.cast(integral, %34 : !s32i), !u32i loc(#loc96)
    %36 = cir.binop(xor, %33, %35) : !u32i loc(#loc96)
    %37 = cir.unary(minus, %36) : !u32i, !u32i loc(#loc96)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc96)
    %39 = cir.cast(integral, %38 : !s32i), !u32i loc(#loc96)
    %40 = cir.binop(sub, %37, %39) : !u32i loc(#loc96)
    cir.br ^bb5(%40 : !u32i) loc(#loc96)
  ^bb5(%41: !u32i loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":79:17)):  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc96)
  ^bb6:  // pred: ^bb5
    %42 = cir.cast(integral, %41 : !u32i), !s32i loc(#loc96)
    cir.store %42, %2 : !s32i, !cir.ptr<!s32i> loc(#loc251)
    cir.br ^bb12 loc(#loc94)
  ^bb7:  // pred: ^bb1
    %43 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc98)
    %44 = cir.const #cir.int<1> : !s32i loc(#loc98)
    %45 = cir.binop(and, %43, %44) : !s32i loc(#loc98)
    %46 = cir.cast(int_to_bool, %45 : !s32i), !cir.bool loc(#loc98)
    cir.brcond %46 ^bb8, ^bb9 loc(#loc98)
  ^bb8:  // pred: ^bb7
    %47 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc98)
    %48 = cir.cast(integral, %47 : !s32i), !u32i loc(#loc98)
    %49 = cir.const #cir.int<30> : !s32i loc(#loc98)
    %50 = cir.shift(left, %48 : !u32i, %49 : !s32i) -> !u32i loc(#loc98)
    %51 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc98)
    %52 = cir.cast(integral, %51 : !s32i), !u32i loc(#loc98)
    %53 = cir.const #cir.int<15> : !s32i loc(#loc98)
    %54 = cir.shift(left, %52 : !u32i, %53 : !s32i) -> !u32i loc(#loc98)
    %55 = cir.binop(xor, %50, %54) : !u32i loc(#loc98)
    %56 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc98)
    %57 = cir.cast(integral, %56 : !s32i), !u32i loc(#loc98)
    %58 = cir.binop(xor, %55, %57) : !u32i loc(#loc98)
    cir.br ^bb10(%58 : !u32i) loc(#loc98)
  ^bb9:  // pred: ^bb7
    %59 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc98)
    %60 = cir.cast(integral, %59 : !s32i), !u32i loc(#loc98)
    %61 = cir.const #cir.int<30> : !s32i loc(#loc98)
    %62 = cir.shift(left, %60 : !u32i, %61 : !s32i) -> !u32i loc(#loc98)
    %63 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc98)
    %64 = cir.cast(integral, %63 : !s32i), !u32i loc(#loc98)
    %65 = cir.const #cir.int<15> : !s32i loc(#loc98)
    %66 = cir.shift(left, %64 : !u32i, %65 : !s32i) -> !u32i loc(#loc98)
    %67 = cir.binop(xor, %62, %66) : !u32i loc(#loc98)
    %68 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc98)
    %69 = cir.cast(integral, %68 : !s32i), !u32i loc(#loc98)
    %70 = cir.binop(xor, %67, %69) : !u32i loc(#loc98)
    %71 = cir.unary(minus, %70) : !u32i, !u32i loc(#loc98)
    %72 = cir.const #cir.int<1> : !s32i loc(#loc98)
    %73 = cir.cast(integral, %72 : !s32i), !u32i loc(#loc98)
    %74 = cir.binop(sub, %71, %73) : !u32i loc(#loc98)
    cir.br ^bb10(%74 : !u32i) loc(#loc98)
  ^bb10(%75: !u32i loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":84:17)):  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc98)
  ^bb11:  // pred: ^bb10
    %76 = cir.cast(integral, %75 : !u32i), !s32i loc(#loc98)
    cir.store %76, %2 : !s32i, !cir.ptr<!s32i> loc(#loc252)
    cir.br ^bb12 loc(#loc90)
  ^bb12:  // 2 preds: ^bb6, ^bb11
    cir.br ^bb13 loc(#loc90)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc253)
  ^bb14:  // pred: ^bb13
    %77 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc254)
    %78 = cir.cast(bitcast, %77 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc254)
    %79 = cir.call %78() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc102)
    %80 = cir.cast(int_to_bool, %79 : !s32i), !cir.bool loc(#loc102)
    cir.brcond %80 ^bb15, ^bb38 loc(#loc255)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc256)
  ^bb16:  // pred: ^bb15
    %81 = cir.const #cir.int<0> : !s32i loc(#loc81)
    %82 = cir.cast(integral, %81 : !s32i), !u64i loc(#loc81)
    cir.store %82, %0 : !u64i, !cir.ptr<!u64i> loc(#loc244)
    cir.br ^bb17 loc(#loc257)
  ^bb17:  // pred: ^bb16
    %83 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc111)
    %84 = cir.const #cir.int<0> : !s32i loc(#loc112)
    %85 = cir.cmp(gt, %83, %84) : !s32i, !cir.bool loc(#loc258)
    cir.brcond %85 ^bb18, ^bb23 loc(#loc113)
  ^bb18:  // pred: ^bb17
    %86 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc114)
    %87 = cir.const #cir.int<20> : !s32i loc(#loc115)
    %88 = cir.cmp(le, %86, %87) : !s32i, !cir.bool loc(#loc259)
    cir.brcond %88 ^bb19, ^bb20 loc(#loc113)
  ^bb19:  // pred: ^bb18
    %89 = cir.const #true loc(#loc113)
    cir.br ^bb21(%89 : !cir.bool) loc(#loc113)
  ^bb20:  // pred: ^bb18
    %90 = cir.const #false loc(#loc113)
    cir.br ^bb21(%90 : !cir.bool) loc(#loc113)
  ^bb21(%91: !cir.bool loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":91:27)):  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc113)
  ^bb22:  // pred: ^bb21
    cir.br ^bb24(%91 : !cir.bool) loc(#loc113)
  ^bb23:  // pred: ^bb17
    %92 = cir.const #false loc(#loc113)
    cir.br ^bb24(%92 : !cir.bool) loc(#loc113)
  ^bb24(%93: !cir.bool loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":91:27)):  // 2 preds: ^bb22, ^bb23
    cir.br ^bb25 loc(#loc113)
  ^bb25:  // pred: ^bb24
    cir.brcond %93 ^bb26, ^bb35 loc(#loc260)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc261)
  ^bb27:  // pred: ^bb26
    %94 = cir.const #cir.int<0> : !s32i loc(#loc119)
    %95 = cir.cast(integral, %94 : !s32i), !u64i loc(#loc119)
    cir.store %95, %0 : !u64i, !cir.ptr<!u64i> loc(#loc262)
    cir.br ^bb28 loc(#loc261)
  ^bb28:  // 2 preds: ^bb27, ^bb32
    %96 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc121)
    %97 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc122)
    %98 = cir.cast(integral, %97 : !s32i), !u64i loc(#loc122)
    %99 = cir.cmp(lt, %96, %98) : !u64i, !cir.bool loc(#loc263)
    cir.brcond %99 ^bb29, ^bb33 loc(#loc123)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30 loc(#loc264)
  ^bb30:  // pred: ^bb29
    %100 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc125)
    %101 = cir.cast(array_to_ptrdecay, %100 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc125)
    cir.call @printLine(%101) : (!cir.ptr<!s8i>) -> () loc(#loc126)
    cir.br ^bb31 loc(#loc118)
  ^bb31:  // pred: ^bb30
    cir.br ^bb32 loc(#loc118)
  ^bb32:  // pred: ^bb31
    %102 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc127)
    %103 = cir.unary(inc, %102) : !u64i, !u64i loc(#loc128)
    cir.store %103, %0 : !u64i, !cir.ptr<!u64i> loc(#loc265)
    cir.br ^bb28 loc(#loc261)
  ^bb33:  // pred: ^bb28
    cir.br ^bb34 loc(#loc118)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc110)
  ^bb35:  // 2 preds: ^bb25, ^bb34
    cir.br ^bb36 loc(#loc110)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc108)
  ^bb37:  // pred: ^bb36
    cir.br ^bb61 loc(#loc105)
  ^bb38:  // pred: ^bb14
    cir.br ^bb39 loc(#loc266)
  ^bb39:  // pred: ^bb38
    %104 = cir.const #cir.int<0> : !s32i loc(#loc83)
    %105 = cir.cast(integral, %104 : !s32i), !u64i loc(#loc83)
    cir.store %105, %1 : !u64i, !cir.ptr<!u64i> loc(#loc245)
    cir.br ^bb40 loc(#loc267)
  ^bb40:  // pred: ^bb39
    %106 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc133)
    %107 = cir.const #cir.int<0> : !s32i loc(#loc134)
    %108 = cir.cmp(gt, %106, %107) : !s32i, !cir.bool loc(#loc268)
    cir.brcond %108 ^bb41, ^bb46 loc(#loc135)
  ^bb41:  // pred: ^bb40
    %109 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc136)
    %110 = cir.const #cir.int<20> : !s32i loc(#loc137)
    %111 = cir.cmp(le, %109, %110) : !s32i, !cir.bool loc(#loc269)
    cir.brcond %111 ^bb42, ^bb43 loc(#loc135)
  ^bb42:  // pred: ^bb41
    %112 = cir.const #true loc(#loc135)
    cir.br ^bb44(%112 : !cir.bool) loc(#loc135)
  ^bb43:  // pred: ^bb41
    %113 = cir.const #false loc(#loc135)
    cir.br ^bb44(%113 : !cir.bool) loc(#loc135)
  ^bb44(%114: !cir.bool loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":105:27)):  // 2 preds: ^bb42, ^bb43
    cir.br ^bb45 loc(#loc135)
  ^bb45:  // pred: ^bb44
    cir.br ^bb47(%114 : !cir.bool) loc(#loc135)
  ^bb46:  // pred: ^bb40
    %115 = cir.const #false loc(#loc135)
    cir.br ^bb47(%115 : !cir.bool) loc(#loc135)
  ^bb47(%116: !cir.bool loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":105:27)):  // 2 preds: ^bb45, ^bb46
    cir.br ^bb48 loc(#loc135)
  ^bb48:  // pred: ^bb47
    cir.brcond %116 ^bb49, ^bb58 loc(#loc270)
  ^bb49:  // pred: ^bb48
    cir.br ^bb50 loc(#loc271)
  ^bb50:  // pred: ^bb49
    %117 = cir.const #cir.int<0> : !s32i loc(#loc141)
    %118 = cir.cast(integral, %117 : !s32i), !u64i loc(#loc141)
    cir.store %118, %1 : !u64i, !cir.ptr<!u64i> loc(#loc272)
    cir.br ^bb51 loc(#loc271)
  ^bb51:  // 2 preds: ^bb50, ^bb55
    %119 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc143)
    %120 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc144)
    %121 = cir.cast(integral, %120 : !s32i), !u64i loc(#loc144)
    %122 = cir.cmp(lt, %119, %121) : !u64i, !cir.bool loc(#loc273)
    cir.brcond %122 ^bb52, ^bb56 loc(#loc145)
  ^bb52:  // pred: ^bb51
    cir.br ^bb53 loc(#loc274)
  ^bb53:  // pred: ^bb52
    %123 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc147)
    %124 = cir.cast(array_to_ptrdecay, %123 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc147)
    cir.call @printLine(%124) : (!cir.ptr<!s8i>) -> () loc(#loc148)
    cir.br ^bb54 loc(#loc140)
  ^bb54:  // pred: ^bb53
    cir.br ^bb55 loc(#loc140)
  ^bb55:  // pred: ^bb54
    %125 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc149)
    %126 = cir.unary(inc, %125) : !u64i, !u64i loc(#loc150)
    cir.store %126, %1 : !u64i, !cir.ptr<!u64i> loc(#loc275)
    cir.br ^bb51 loc(#loc271)
  ^bb56:  // pred: ^bb51
    cir.br ^bb57 loc(#loc140)
  ^bb57:  // pred: ^bb56
    cir.br ^bb58 loc(#loc132)
  ^bb58:  // 2 preds: ^bb48, ^bb57
    cir.br ^bb59 loc(#loc132)
  ^bb59:  // pred: ^bb58
    cir.br ^bb60 loc(#loc130)
  ^bb60:  // pred: ^bb59
    cir.br ^bb61 loc(#loc101)
  ^bb61:  // 2 preds: ^bb37, ^bb60
    cir.br ^bb62 loc(#loc101)
  ^bb62:  // pred: ^bb61
    cir.return loc(#loc79)
  } loc(#loc243)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc277)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc278)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc279)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc159)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc160)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc280)
    cir.br ^bb1 loc(#loc281)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc282)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc282)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc164)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc164)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc283)
  ^bb2:  // pred: ^bb1
    %9 = cir.const #cir.int<20> : !s32i loc(#loc169)
    cir.store %9, %2 : !s32i, !cir.ptr<!s32i> loc(#loc284)
    cir.br ^bb4 loc(#loc167)
  ^bb3:  // pred: ^bb1
    %10 = cir.const #cir.int<20> : !s32i loc(#loc171)
    cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc285)
    cir.br ^bb4 loc(#loc163)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc163)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc286)
  ^bb6:  // pred: ^bb5
    %11 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc287)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc287)
    %13 = cir.call %12() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc175)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc175)
    cir.brcond %14 ^bb7, ^bb18 loc(#loc288)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc289)
  ^bb8:  // pred: ^bb7
    %15 = cir.const #cir.int<0> : !s32i loc(#loc154)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc154)
    cir.store %16, %0 : !u64i, !cir.ptr<!u64i> loc(#loc277)
    cir.br ^bb9 loc(#loc290)
  ^bb9:  // pred: ^bb8
    %17 = cir.const #cir.int<0> : !s32i loc(#loc184)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc184)
    cir.store %18, %0 : !u64i, !cir.ptr<!u64i> loc(#loc291)
    cir.br ^bb10 loc(#loc290)
  ^bb10:  // 2 preds: ^bb9, ^bb14
    %19 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc186)
    %20 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc187)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc187)
    %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc292)
    cir.brcond %22 ^bb11, ^bb15 loc(#loc188)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc293)
  ^bb12:  // pred: ^bb11
    %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc190)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc190)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc191)
    cir.br ^bb13 loc(#loc183)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc183)
  ^bb14:  // pred: ^bb13
    %25 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc192)
    %26 = cir.unary(inc, %25) : !u64i, !u64i loc(#loc193)
    cir.store %26, %0 : !u64i, !cir.ptr<!u64i> loc(#loc294)
    cir.br ^bb10 loc(#loc290)
  ^bb15:  // pred: ^bb10
    cir.br ^bb16 loc(#loc183)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc181)
  ^bb17:  // pred: ^bb16
    cir.br ^bb29 loc(#loc178)
  ^bb18:  // pred: ^bb6
    cir.br ^bb19 loc(#loc295)
  ^bb19:  // pred: ^bb18
    %27 = cir.const #cir.int<0> : !s32i loc(#loc156)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc156)
    cir.store %28, %1 : !u64i, !cir.ptr<!u64i> loc(#loc278)
    cir.br ^bb20 loc(#loc296)
  ^bb20:  // pred: ^bb19
    %29 = cir.const #cir.int<0> : !s32i loc(#loc198)
    %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc198)
    cir.store %30, %1 : !u64i, !cir.ptr<!u64i> loc(#loc297)
    cir.br ^bb21 loc(#loc296)
  ^bb21:  // 2 preds: ^bb20, ^bb25
    %31 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc200)
    %32 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc201)
    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc201)
    %34 = cir.cmp(lt, %31, %33) : !u64i, !cir.bool loc(#loc298)
    cir.brcond %34 ^bb22, ^bb26 loc(#loc202)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc299)
  ^bb23:  // pred: ^bb22
    %35 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc204)
    %36 = cir.cast(array_to_ptrdecay, %35 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc204)
    cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc205)
    cir.br ^bb24 loc(#loc197)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc197)
  ^bb25:  // pred: ^bb24
    %37 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc206)
    %38 = cir.unary(inc, %37) : !u64i, !u64i loc(#loc207)
    cir.store %38, %1 : !u64i, !cir.ptr<!u64i> loc(#loc300)
    cir.br ^bb21 loc(#loc296)
  ^bb26:  // pred: ^bb21
    cir.br ^bb27 loc(#loc197)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28 loc(#loc195)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc174)
  ^bb29:  // 2 preds: ^bb17, ^bb28
    cir.br ^bb30 loc(#loc174)
  ^bb30:  // pred: ^bb29
    cir.return loc(#loc152)
  } loc(#loc276)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_for_loop_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdlib.h":573:1)
#loc4 = loc("/usr/include/stdlib.h":573:24)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":44:27)
#loc8 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":22:1)
#loc9 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":62:1)
#loc10 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":40:13)
#loc11 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":40:24)
#loc12 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":51:13)
#loc13 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":51:24)
#loc14 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":24:5)
#loc15 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":24:9)
#loc16 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":26:14)
#loc17 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":26:13)
#loc18 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":26:5)
#loc19 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":27:5)
#loc20 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":36:5)
#loc21 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":27:8)
#loc22 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":27:33)
#loc23 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":28:5)
#loc24 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":31:5)
#loc25 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":33:5)
#loc27 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":30:9)
#loc28 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":35:17)
#loc29 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":35:9)
#loc30 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":37:5)
#loc31 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":61:5)
#loc32 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":37:8)
#loc33 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":37:33)
#loc34 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":38:5)
#loc35 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":47:5)
#loc36 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":49:5)
#loc37 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":39:9)
#loc38 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":46:9)
#loc39 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":42:13)
#loc40 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":45:13)
#loc41 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":42:22)
#loc42 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":42:18)
#loc43 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":42:25)
#loc44 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":42:37)
#loc45 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":42:27)
#loc46 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":43:13)
#loc47 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":44:17)
#loc48 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":42:45)
#loc49 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":42:44)
#loc50 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":50:9)
#loc51 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":60:9)
#loc52 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":53:13)
#loc53 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":59:13)
#loc54 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":53:17)
#loc55 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":53:25)
#loc57 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":53:30)
#loc58 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":53:39)
#loc59 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":54:13)
#loc60 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":55:17)
#loc61 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":58:17)
#loc62 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":55:26)
#loc63 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":55:22)
#loc64 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":55:29)
#loc65 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":55:41)
#loc66 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":55:31)
#loc67 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":56:17)
#loc68 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":57:31)
#loc69 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":57:21)
#loc70 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":55:49)
#loc71 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":55:48)
#loc72 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":158:1)
#loc73 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":162:1)
#loc74 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":160:5)
#loc75 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":160:13)
#loc76 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":161:5)
#loc77 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":161:13)
#loc78 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":71:1)
#loc79 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":114:1)
#loc80 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":89:13)
#loc81 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":89:24)
#loc82 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":103:13)
#loc83 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":103:24)
#loc84 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":73:5)
#loc85 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":73:9)
#loc86 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":75:14)
#loc87 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":75:13)
#loc88 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":75:5)
#loc89 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":76:5)
#loc90 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":85:5)
#loc91 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":76:8)
#loc92 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":76:33)
#loc93 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":77:5)
#loc94 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":80:5)
#loc95 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":82:5)
#loc97 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":79:9)
#loc99 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":84:9)
#loc100 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":86:5)
#loc101 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":113:5)
#loc102 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":86:8)
#loc103 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":86:33)
#loc104 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":87:5)
#loc105 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":99:5)
#loc106 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":101:5)
#loc107 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":88:9)
#loc108 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":98:9)
#loc109 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":91:13)
#loc110 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":97:13)
#loc111 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":91:17)
#loc112 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":91:25)
#loc114 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":91:30)
#loc115 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":91:39)
#loc116 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":92:13)
#loc117 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":93:17)
#loc118 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":96:17)
#loc119 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":93:26)
#loc120 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":93:22)
#loc121 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":93:29)
#loc122 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":93:41)
#loc123 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":93:31)
#loc124 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":94:17)
#loc125 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":95:31)
#loc126 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":95:21)
#loc127 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":93:49)
#loc128 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":93:48)
#loc129 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":102:9)
#loc130 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":112:9)
#loc131 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":105:13)
#loc132 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":111:13)
#loc133 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":105:17)
#loc134 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":105:25)
#loc136 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":105:30)
#loc137 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":105:39)
#loc138 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":106:13)
#loc139 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":107:17)
#loc140 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":110:17)
#loc141 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":107:26)
#loc142 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":107:22)
#loc143 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":107:29)
#loc144 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":107:41)
#loc145 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":107:31)
#loc146 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":108:17)
#loc147 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":109:31)
#loc148 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":109:21)
#loc149 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":107:49)
#loc150 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":107:48)
#loc151 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":119:1)
#loc152 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":156:1)
#loc153 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":137:13)
#loc154 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":137:24)
#loc155 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":148:13)
#loc156 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":148:24)
#loc157 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":121:5)
#loc158 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":121:9)
#loc159 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":123:14)
#loc160 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":123:13)
#loc161 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":123:5)
#loc162 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":124:5)
#loc163 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":133:5)
#loc164 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":124:8)
#loc165 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":124:33)
#loc166 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":125:5)
#loc167 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":128:5)
#loc168 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":130:5)
#loc169 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":127:17)
#loc170 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":127:9)
#loc171 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":132:17)
#loc172 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":132:9)
#loc173 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":134:5)
#loc174 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":155:5)
#loc175 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":134:8)
#loc176 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":134:33)
#loc177 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":135:5)
#loc178 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":144:5)
#loc179 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":146:5)
#loc180 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":136:9)
#loc181 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":143:9)
#loc182 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":139:13)
#loc183 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":142:13)
#loc184 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":139:22)
#loc185 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":139:18)
#loc186 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":139:25)
#loc187 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":139:37)
#loc188 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":139:27)
#loc189 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":140:13)
#loc190 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":141:27)
#loc191 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":141:17)
#loc192 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":139:45)
#loc193 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":139:44)
#loc194 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":147:9)
#loc195 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":154:9)
#loc196 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":150:13)
#loc197 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":153:13)
#loc198 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":150:22)
#loc199 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":150:18)
#loc200 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":150:25)
#loc201 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":150:37)
#loc202 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":150:27)
#loc203 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":151:13)
#loc204 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":152:27)
#loc205 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":152:17)
#loc206 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":150:45)
#loc207 = loc("CWE400_Resource_Exhaustion__rand_for_loop_12.c":150:44)
#loc208 = loc(fused[#loc1, #loc2])
#loc209 = loc(fused[#loc3, #loc4])
#loc210 = loc(fused[#loc5, #loc6])
#loc211 = loc(fused[#loc8, #loc9])
#loc212 = loc(fused[#loc10, #loc11])
#loc213 = loc(fused[#loc12, #loc13])
#loc214 = loc(fused[#loc14, #loc15])
#loc215 = loc(fused[#loc18, #loc16])
#loc216 = loc(fused[#loc19, #loc20])
#loc217 = loc(fused[#loc21, #loc22])
#loc218 = loc(fused[#loc23, #loc24, #loc25, #loc20])
#loc219 = loc(fused[#loc27, #loc26])
#loc220 = loc(fused[#loc29, #loc28])
#loc221 = loc(fused[#loc30, #loc31])
#loc222 = loc(fused[#loc32, #loc33])
#loc223 = loc(fused[#loc34, #loc35, #loc36, #loc31])
#loc224 = loc(fused[#loc37, #loc38])
#loc225 = loc(fused[#loc39, #loc40])
#loc226 = loc(fused[#loc42, #loc41])
#loc227 = loc(fused[#loc43, #loc44])
#loc228 = loc(fused[#loc46, #loc40])
#loc229 = loc(fused[#loc49, #loc48])
#loc230 = loc(fused[#loc50, #loc51])
#loc231 = loc(fused[#loc52, #loc53])
#loc232 = loc(fused[#loc54, #loc55])
#loc233 = loc(fused[#loc57, #loc58])
#loc234 = loc(fused[#loc59, #loc53])
#loc235 = loc(fused[#loc60, #loc61])
#loc236 = loc(fused[#loc63, #loc62])
#loc237 = loc(fused[#loc64, #loc65])
#loc238 = loc(fused[#loc67, #loc61])
#loc239 = loc(fused[#loc71, #loc70])
#loc240 = loc(fused[#loc72, #loc73])
#loc241 = loc(fused[#loc74, #loc75])
#loc242 = loc(fused[#loc76, #loc77])
#loc243 = loc(fused[#loc78, #loc79])
#loc244 = loc(fused[#loc80, #loc81])
#loc245 = loc(fused[#loc82, #loc83])
#loc246 = loc(fused[#loc84, #loc85])
#loc247 = loc(fused[#loc88, #loc86])
#loc248 = loc(fused[#loc89, #loc90])
#loc249 = loc(fused[#loc91, #loc92])
#loc250 = loc(fused[#loc93, #loc94, #loc95, #loc90])
#loc251 = loc(fused[#loc97, #loc96])
#loc252 = loc(fused[#loc99, #loc98])
#loc253 = loc(fused[#loc100, #loc101])
#loc254 = loc(fused[#loc102, #loc103])
#loc255 = loc(fused[#loc104, #loc105, #loc106, #loc101])
#loc256 = loc(fused[#loc107, #loc108])
#loc257 = loc(fused[#loc109, #loc110])
#loc258 = loc(fused[#loc111, #loc112])
#loc259 = loc(fused[#loc114, #loc115])
#loc260 = loc(fused[#loc116, #loc110])
#loc261 = loc(fused[#loc117, #loc118])
#loc262 = loc(fused[#loc120, #loc119])
#loc263 = loc(fused[#loc121, #loc122])
#loc264 = loc(fused[#loc124, #loc118])
#loc265 = loc(fused[#loc128, #loc127])
#loc266 = loc(fused[#loc129, #loc130])
#loc267 = loc(fused[#loc131, #loc132])
#loc268 = loc(fused[#loc133, #loc134])
#loc269 = loc(fused[#loc136, #loc137])
#loc270 = loc(fused[#loc138, #loc132])
#loc271 = loc(fused[#loc139, #loc140])
#loc272 = loc(fused[#loc142, #loc141])
#loc273 = loc(fused[#loc143, #loc144])
#loc274 = loc(fused[#loc146, #loc140])
#loc275 = loc(fused[#loc150, #loc149])
#loc276 = loc(fused[#loc151, #loc152])
#loc277 = loc(fused[#loc153, #loc154])
#loc278 = loc(fused[#loc155, #loc156])
#loc279 = loc(fused[#loc157, #loc158])
#loc280 = loc(fused[#loc161, #loc159])
#loc281 = loc(fused[#loc162, #loc163])
#loc282 = loc(fused[#loc164, #loc165])
#loc283 = loc(fused[#loc166, #loc167, #loc168, #loc163])
#loc284 = loc(fused[#loc170, #loc169])
#loc285 = loc(fused[#loc172, #loc171])
#loc286 = loc(fused[#loc173, #loc174])
#loc287 = loc(fused[#loc175, #loc176])
#loc288 = loc(fused[#loc177, #loc178, #loc179, #loc174])
#loc289 = loc(fused[#loc180, #loc181])
#loc290 = loc(fused[#loc182, #loc183])
#loc291 = loc(fused[#loc185, #loc184])
#loc292 = loc(fused[#loc186, #loc187])
#loc293 = loc(fused[#loc189, #loc183])
#loc294 = loc(fused[#loc193, #loc192])
#loc295 = loc(fused[#loc194, #loc195])
#loc296 = loc(fused[#loc196, #loc197])
#loc297 = loc(fused[#loc199, #loc198])
#loc298 = loc(fused[#loc200, #loc201])
#loc299 = loc(fused[#loc203, #loc197])
#loc300 = loc(fused[#loc207, #loc206])
