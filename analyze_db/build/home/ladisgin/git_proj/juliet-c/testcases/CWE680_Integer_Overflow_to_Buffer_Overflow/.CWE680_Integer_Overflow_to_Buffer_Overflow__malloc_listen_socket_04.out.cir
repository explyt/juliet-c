!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":222:10)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":222:14)
#loc211 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":222:20)
#loc212 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":222:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc420 = loc(fused[#loc209, #loc210])
#loc421 = loc(fused[#loc211, #loc212])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc337)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc338)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc339)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc340)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc341)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc342)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc343)
  cir.func private @close(!s32i) -> !s32i loc(#loc344)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc345)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc346)
  cir.func private @printIntLine(!s32i) loc(#loc347)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc348)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc350)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc30)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc351)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc34)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc34)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc355)
          %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc356)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc357)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc358)
          %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc359)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc43)
          %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc43)
          cir.store %11, %7 : !s32i, !cir.ptr<!s32i> loc(#loc357)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc45)
          %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc45)
          cir.store %13, %8 : !s32i, !cir.ptr<!s32i> loc(#loc358)
          cir.scope {
            cir.do {
              %14 = cir.const #cir.int<2> : !s32i loc(#loc50)
              %15 = cir.const #cir.int<1> : !s32i loc(#loc51)
              %16 = cir.const #cir.int<6> : !s32i loc(#loc52)
              %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc53)
              cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc361)
              cir.scope {
                %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc58)
                %60 = cir.const #cir.int<1> : !s32i loc(#loc59)
                %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc59)
                %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc363)
                cir.if %62 {
                  cir.break loc(#loc61)
                } loc(#loc364)
              } loc(#loc362)
              %18 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc365)
              %19 = cir.const #cir.int<0> : !s32i loc(#loc64)
              %20 = cir.const #cir.int<16> : !u64i loc(#loc366)
              cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc367)
              %21 = cir.const #cir.int<2> : !s32i loc(#loc69)
              %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc69)
              %23 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc70)
              cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc368)
              %24 = cir.const #cir.int<0> : !s32i loc(#loc72)
              %25 = cir.cast(integral, %24 : !s32i), !u32i loc(#loc72)
              %26 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc73)
              %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc74)
              cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc369)
              %28 = cir.const #cir.int<27015> : !s32i loc(#loc76)
              %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc76)
              %30 = cir.call @htons(%29) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc77)
              %31 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
              cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc370)
              cir.scope {
                %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc83)
                %60 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc372)
                %61 = cir.const #cir.int<16> : !u64i loc(#loc373)
                %62 = cir.cast(integral, %61 : !u64i), !u32i loc(#loc373)
                %63 = cir.call @bind(%59, %60, %62) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc88)
                %64 = cir.const #cir.int<1> : !s32i loc(#loc89)
                %65 = cir.unary(minus, %64) : !s32i, !s32i loc(#loc89)
                %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc374)
                cir.if %66 {
                  cir.break loc(#loc91)
                } loc(#loc375)
              } loc(#loc371)
              cir.scope {
                %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc94)
                %60 = cir.const #cir.int<5> : !s32i loc(#loc95)
                %61 = cir.call @listen(%59, %60) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc96)
                %62 = cir.const #cir.int<1> : !s32i loc(#loc97)
                %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc97)
                %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc377)
                cir.if %64 {
                  cir.break loc(#loc99)
                } loc(#loc378)
              } loc(#loc376)
              %32 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc100)
              %33 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc101)
              %34 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc102)
              %35 = cir.call @accept(%32, %33, %34) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc103)
              cir.store %35, %8 : !s32i, !cir.ptr<!s32i> loc(#loc379)
              cir.scope {
                %59 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc108)
                %60 = cir.const #cir.int<1> : !s32i loc(#loc109)
                %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc109)
                %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc381)
                cir.if %62 {
                  cir.break loc(#loc111)
                } loc(#loc382)
              } loc(#loc380)
              %36 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc112)
              %37 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc113)
              %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc113)
              %39 = cir.const #cir.int<3> : !s32i loc(#loc114)
              %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc114)
              %41 = cir.const #cir.int<4> : !u64i loc(#loc114)
              %42 = cir.binop(mul, %40, %41) : !u64i loc(#loc114)
              %43 = cir.const #cir.int<2> : !s32i loc(#loc114)
              %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc114)
              %45 = cir.binop(add, %42, %44) : !u64i loc(#loc114)
              %46 = cir.const #cir.int<1> : !s32i loc(#loc115)
              %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc115)
              %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc383)
              %49 = cir.const #cir.int<0> : !s32i loc(#loc116)
              %50 = cir.call @recv(%36, %38, %48, %49) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc117)
              %51 = cir.cast(integral, %50 : !s64i), !s32i loc(#loc117)
              cir.store %51, %5 : !s32i, !cir.ptr<!s32i> loc(#loc384)
              cir.scope {
                %59 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc122)
                %60 = cir.const #cir.int<1> : !s32i loc(#loc123)
                %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc123)
                %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc386)
                %63 = cir.ternary(%62, true {
                  %64 = cir.const #true loc(#loc124)
                  cir.yield %64 : !cir.bool loc(#loc124)
                }, false {
                  %64 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc125)
                  %65 = cir.const #cir.int<0> : !s32i loc(#loc126)
                  %66 = cir.cmp(eq, %64, %65) : !s32i, !cir.bool loc(#loc387)
                  %67 = cir.ternary(%66, true {
                    %68 = cir.const #true loc(#loc124)
                    cir.yield %68 : !cir.bool loc(#loc124)
                  }, false {
                    %68 = cir.const #false loc(#loc124)
                    cir.yield %68 : !cir.bool loc(#loc124)
                  }) : (!cir.bool) -> !cir.bool loc(#loc124)
                  cir.yield %67 : !cir.bool loc(#loc124)
                }) : (!cir.bool) -> !cir.bool loc(#loc124)
                cir.if %63 {
                  cir.break loc(#loc128)
                } loc(#loc388)
              } loc(#loc385)
              %52 = cir.const #cir.int<0> : !s32i loc(#loc129)
              %53 = cir.cast(integral, %52 : !s32i), !s8i loc(#loc129)
              %54 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc130)
              %55 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc131)
              %56 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %54 : !s32i), !cir.ptr<!s8i> loc(#loc131)
              cir.store %53, %56 : !s8i, !cir.ptr<!s8i> loc(#loc389)
              %57 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc132)
              %58 = cir.call @atoi(%57) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc133)
              cir.store %58, %0 : !s32i, !cir.ptr<!s32i> loc(#loc390)
              cir.yield loc(#loc49)
            } while {
              %14 = cir.const #cir.int<0> : !s32i loc(#loc136)
              %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc136)
              cir.condition(%15) loc(#loc136)
            } loc(#loc360)
          } loc(#loc360)
          cir.scope {
            %14 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc139)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc140)
            %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc140)
            %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc392)
            cir.if %17 {
              %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc142)
              %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc143)
            } loc(#loc393)
          } loc(#loc391)
          cir.scope {
            %14 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc146)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc147)
            %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc147)
            %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc395)
            cir.if %17 {
              %18 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc149)
              %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc150)
            } loc(#loc396)
          } loc(#loc394)
        } loc(#loc354)
      } loc(#loc353)
    } loc(#loc352)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc398)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc399)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc157)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc158)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc158)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc400)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc401)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc157)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc402)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc403)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc165)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc166)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc166)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc405)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc168)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc169)
          %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc170)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc168)
        } loc(#loc406)
      } loc(#loc404)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc173)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc173)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc408)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc175)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc176)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc176)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc409)
          cir.condition(%24) loc(#loc177)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc179)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc180)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc181)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc182)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc411)
          } loc(#loc410)
          cir.yield loc(#loc172)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc183)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc184)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc412)
          cir.yield loc(#loc407)
        } loc(#loc407)
      } loc(#loc407)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc185)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc186)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc187)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc185)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc188)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc189)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc190)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc190)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc189)
    } loc(#loc397)
    cir.return loc(#loc26)
  } loc(#loc349)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc414)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc193)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc415)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc195)
    cir.return loc(#loc192)
  } loc(#loc413)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc416)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc417)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc418)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc203)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc204)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc205)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc206)
  cir.func @main(%arg0: !s32i loc(fused[#loc209, #loc210]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc211, #loc212])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc420)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc421)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc208)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc213)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc213)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc214)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc215)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc215)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc216)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc203)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc203)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc217)
    %8 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04_good : !cir.ptr<!cir.func<!void ()>> loc(#loc422)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04_good() : () -> () loc(#loc218)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc204)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc204)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc220)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc205)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc205)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc221)
    %13 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc423)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04_bad() : () -> () loc(#loc222)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc206)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc206)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc224)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc225)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc424)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc424)
    cir.return %17 : !s32i loc(#loc424)
  } loc(#loc419)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc227)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc426)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc232)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc233)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc427)
    cir.scope {
      %3 = cir.const #cir.int<0> : !s32i loc(#loc237)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc237)
      cir.if %4 {
        %5 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc227)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc227)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc241)
      } else {
        %5 = cir.const #cir.int<20> : !s32i loc(#loc242)
        cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc430)
      } loc(#loc429)
    } loc(#loc428)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc432)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc433)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc250)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc251)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc251)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc434)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc435)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc250)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc436)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc437)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc258)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc259)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc259)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc439)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc261)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc262)
          %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc263)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc261)
        } loc(#loc440)
      } loc(#loc438)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc266)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc266)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc442)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc268)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc269)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc269)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc443)
          cir.condition(%24) loc(#loc270)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc272)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc273)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc274)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc275)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc445)
          } loc(#loc444)
          cir.yield loc(#loc265)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc276)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc277)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc446)
          cir.yield loc(#loc441)
        } loc(#loc441)
      } loc(#loc441)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc278)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc279)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc280)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc278)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc281)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc282)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc283)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc283)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc282)
    } loc(#loc431)
    cir.return loc(#loc229)
  } loc(#loc425)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc448)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc288)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc289)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc449)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc293)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc293)
      cir.if %4 {
        %5 = cir.const #cir.int<20> : !s32i loc(#loc295)
        cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc452)
      } loc(#loc451)
    } loc(#loc450)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc454)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc455)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc303)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc304)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc304)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc456)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc457)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc303)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc458)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc459)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc311)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc312)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc312)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc461)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc314)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc315)
          %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc316)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc314)
        } loc(#loc462)
      } loc(#loc460)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc319)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc319)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc464)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc321)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc322)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc322)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc465)
          cir.condition(%24) loc(#loc323)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc325)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc326)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc327)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc328)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc467)
          } loc(#loc466)
          cir.yield loc(#loc318)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc329)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc330)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc468)
          cir.yield loc(#loc463)
        } loc(#loc463)
      } loc(#loc463)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc331)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc332)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc333)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc331)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc334)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc335)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc336)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc336)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc335)
    } loc(#loc453)
    cir.return loc(#loc285)
  } loc(#loc447)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":145:1)
#loc12 = loc("/usr/include/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("/usr/include/stdlib.h":672:1)
#loc18 = loc("/usr/include/stdlib.h":672:45)
#loc19 = loc("/usr/include/stdlib.h":756:1)
#loc20 = loc("/usr/include/stdlib.h":756:70)
#loc21 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc22 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc23 = loc("/usr/include/stdlib.h":687:1)
#loc24 = loc("/usr/include/stdlib.h":687:32)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":50:1)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":141:1)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":52:5)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":52:9)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":54:13)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":54:12)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":54:5)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":55:5)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":126:5)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":55:8)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":56:5)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":57:9)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":125:9)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":62:13)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":62:17)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":63:13)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":63:32)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":64:13)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":64:35)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":65:13)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":65:35)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":66:13)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":66:45)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":67:13)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":110:21)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":77:39)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":77:48)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":77:61)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":77:32)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":77:17)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":77:72)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":78:17)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":81:17)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":78:21)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":78:37)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":79:17)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":80:21)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":82:24)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":82:25)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":82:34)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":82:37)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":82:51)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":82:17)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":82:52)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":83:38)
#loc70 = loc("/usr/include/netinet/in.h":249:5)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":83:17)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":84:43)
#loc73 = loc("/usr/include/netinet/in.h":251:20)
#loc74 = loc("/usr/include/netinet/in.h":33:15)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":84:17)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":85:42)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":85:36)
#loc78 = loc("/usr/include/netinet/in.h":250:15)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":85:17)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":85:50)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":86:17)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":89:17)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":86:26)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":86:58)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":86:59)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":86:68)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":86:82)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":86:21)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":86:88)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":87:17)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":88:21)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":90:17)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":93:17)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":90:28)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":90:42)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":90:21)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":90:61)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":91:17)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":92:21)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":94:39)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":94:53)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":94:59)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":94:32)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":94:17)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":94:63)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":95:17)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":98:17)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":95:21)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":95:37)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":96:17)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":97:21)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":100:35)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":100:49)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":100:62)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":100:80)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":100:83)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":100:30)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":100:17)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":100:84)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":101:17)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":104:17)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":101:21)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":101:35)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":101:48)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":101:51)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":101:65)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":102:17)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":103:21)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":106:43)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":106:29)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":106:17)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":108:29)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":108:24)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":108:17)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":108:40)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":110:20)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":111:13)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":114:13)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":111:17)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":111:33)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":112:13)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":113:30)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":113:17)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":115:13)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":118:13)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":115:17)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":115:33)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":116:13)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":117:30)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":117:17)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":127:5)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":140:5)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":128:9)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":128:16)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":129:9)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":129:14)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":132:28)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":132:35)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":132:42)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":132:52)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":132:53)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":132:9)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":133:9)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":133:43)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":133:13)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":133:27)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":133:33)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":133:34)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":133:40)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":133:39)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":134:9)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":137:9)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":134:18)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":134:14)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":134:21)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":134:33)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":134:23)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":135:9)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":136:29)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":136:13)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":136:24)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":136:25)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":134:40)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":134:39)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":138:22)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":138:33)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":138:34)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":138:9)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":139:9)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":139:14)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":206:1)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":210:1)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":208:5)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":208:14)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":209:5)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":209:14)
#loc197 = loc("/usr/include/stdlib.h":575:1)
#loc198 = loc("/usr/include/stdlib.h":575:41)
#loc199 = loc("/usr/include/time.h":76:1)
#loc200 = loc("/usr/include/time.h":76:38)
#loc201 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc202 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":227:15)
#loc204 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":229:15)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":232:15)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":234:15)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":222:1)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":237:1)
#loc213 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":223:1)
#loc214 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":225:27)
#loc215 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":225:22)
#loc216 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":225:5)
#loc217 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":227:5)
#loc218 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":228:5)
#loc219 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":228:78)
#loc220 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":229:5)
#loc221 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":232:5)
#loc222 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":233:5)
#loc223 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":233:77)
#loc224 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":234:5)
#loc225 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":236:12)
#loc226 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":236:5)
#loc227 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":156:19)
#loc228 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":148:1)
#loc229 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":177:1)
#loc230 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":150:5)
#loc231 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":150:9)
#loc232 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":152:13)
#loc233 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":152:12)
#loc234 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":152:5)
#loc235 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":153:5)
#loc236 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":162:5)
#loc237 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":153:8)
#loc238 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":154:5)
#loc239 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":157:5)
#loc240 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":159:5)
#loc241 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":156:9)
#loc242 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":161:16)
#loc243 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":161:9)
#loc244 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":163:5)
#loc245 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":176:5)
#loc246 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":164:9)
#loc247 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":164:16)
#loc248 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":165:9)
#loc249 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":165:14)
#loc250 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":168:28)
#loc251 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":168:35)
#loc252 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":168:42)
#loc253 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":168:52)
#loc254 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":168:53)
#loc255 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":168:9)
#loc256 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":169:9)
#loc257 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":169:43)
#loc258 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":169:13)
#loc259 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":169:27)
#loc260 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":169:33)
#loc261 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":169:34)
#loc262 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":169:40)
#loc263 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":169:39)
#loc264 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":170:9)
#loc265 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":173:9)
#loc266 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":170:18)
#loc267 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":170:14)
#loc268 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":170:21)
#loc269 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":170:33)
#loc270 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":170:23)
#loc271 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":171:9)
#loc272 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":172:29)
#loc273 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":172:13)
#loc274 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":172:24)
#loc275 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":172:25)
#loc276 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":170:40)
#loc277 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":170:39)
#loc278 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":174:22)
#loc279 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":174:33)
#loc280 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":174:34)
#loc281 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":174:9)
#loc282 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":175:9)
#loc283 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":175:14)
#loc284 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":180:1)
#loc285 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":204:1)
#loc286 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":182:5)
#loc287 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":182:9)
#loc288 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":184:13)
#loc289 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":184:12)
#loc290 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":184:5)
#loc291 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":185:5)
#loc292 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":189:5)
#loc293 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":185:8)
#loc294 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":186:5)
#loc295 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":188:16)
#loc296 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":188:9)
#loc297 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":190:5)
#loc298 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":203:5)
#loc299 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":191:9)
#loc300 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":191:16)
#loc301 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":192:9)
#loc302 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":192:14)
#loc303 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":195:28)
#loc304 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":195:35)
#loc305 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":195:42)
#loc306 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":195:52)
#loc307 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":195:53)
#loc308 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":195:9)
#loc309 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":196:9)
#loc310 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":196:43)
#loc311 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":196:13)
#loc312 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":196:27)
#loc313 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":196:33)
#loc314 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":196:34)
#loc315 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":196:40)
#loc316 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":196:39)
#loc317 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":197:9)
#loc318 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":200:9)
#loc319 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":197:18)
#loc320 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":197:14)
#loc321 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":197:21)
#loc322 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":197:33)
#loc323 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":197:23)
#loc324 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":198:9)
#loc325 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":199:29)
#loc326 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":199:13)
#loc327 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":199:24)
#loc328 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":199:25)
#loc329 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":197:40)
#loc330 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":197:39)
#loc331 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":201:22)
#loc332 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":201:33)
#loc333 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":201:34)
#loc334 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":201:9)
#loc335 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":202:9)
#loc336 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_04.c":202:14)
#loc337 = loc(fused[#loc1, #loc2])
#loc338 = loc(fused[#loc3, #loc4])
#loc339 = loc(fused[#loc5, #loc6])
#loc340 = loc(fused[#loc7, #loc8])
#loc341 = loc(fused[#loc9, #loc10])
#loc342 = loc(fused[#loc11, #loc12])
#loc343 = loc(fused[#loc13, #loc14])
#loc344 = loc(fused[#loc15, #loc16])
#loc345 = loc(fused[#loc17, #loc18])
#loc346 = loc(fused[#loc19, #loc20])
#loc347 = loc(fused[#loc21, #loc22])
#loc348 = loc(fused[#loc23, #loc24])
#loc349 = loc(fused[#loc25, #loc26])
#loc350 = loc(fused[#loc27, #loc28])
#loc351 = loc(fused[#loc31, #loc29])
#loc352 = loc(fused[#loc32, #loc33])
#loc353 = loc(fused[#loc35, #loc33])
#loc354 = loc(fused[#loc36, #loc37])
#loc355 = loc(fused[#loc38, #loc39])
#loc356 = loc(fused[#loc40, #loc41])
#loc357 = loc(fused[#loc42, #loc43])
#loc358 = loc(fused[#loc44, #loc45])
#loc359 = loc(fused[#loc46, #loc47])
#loc360 = loc(fused[#loc48, #loc49])
#loc361 = loc(fused[#loc54, #loc55])
#loc362 = loc(fused[#loc56, #loc57])
#loc363 = loc(fused[#loc58, #loc59])
#loc364 = loc(fused[#loc60, #loc57])
#loc365 = loc(fused[#loc62, #loc63])
#loc366 = loc(fused[#loc65, #loc66])
#loc367 = loc(fused[#loc67, #loc68])
#loc368 = loc(fused[#loc71, #loc69])
#loc369 = loc(fused[#loc75, #loc72])
#loc370 = loc(fused[#loc79, #loc80])
#loc371 = loc(fused[#loc81, #loc82])
#loc372 = loc(fused[#loc84, #loc85])
#loc373 = loc(fused[#loc86, #loc87])
#loc374 = loc(fused[#loc88, #loc89])
#loc375 = loc(fused[#loc90, #loc82])
#loc376 = loc(fused[#loc92, #loc93])
#loc377 = loc(fused[#loc96, #loc97])
#loc378 = loc(fused[#loc98, #loc93])
#loc379 = loc(fused[#loc104, #loc105])
#loc380 = loc(fused[#loc106, #loc107])
#loc381 = loc(fused[#loc108, #loc109])
#loc382 = loc(fused[#loc110, #loc107])
#loc383 = loc(fused[#loc114, #loc115])
#loc384 = loc(fused[#loc118, #loc119])
#loc385 = loc(fused[#loc120, #loc121])
#loc386 = loc(fused[#loc122, #loc123])
#loc387 = loc(fused[#loc125, #loc126])
#loc388 = loc(fused[#loc127, #loc121])
#loc389 = loc(fused[#loc131, #loc129])
#loc390 = loc(fused[#loc134, #loc135])
#loc391 = loc(fused[#loc137, #loc138])
#loc392 = loc(fused[#loc139, #loc140])
#loc393 = loc(fused[#loc141, #loc138])
#loc394 = loc(fused[#loc144, #loc145])
#loc395 = loc(fused[#loc146, #loc147])
#loc396 = loc(fused[#loc148, #loc145])
#loc397 = loc(fused[#loc151, #loc152])
#loc398 = loc(fused[#loc153, #loc154])
#loc399 = loc(fused[#loc155, #loc156])
#loc400 = loc(fused[#loc159, #loc160])
#loc401 = loc(fused[#loc158, #loc160])
#loc402 = loc(fused[#loc157, #loc161])
#loc403 = loc(fused[#loc162, #loc161])
#loc404 = loc(fused[#loc163, #loc164])
#loc405 = loc(fused[#loc165, #loc166])
#loc406 = loc(fused[#loc167, #loc164])
#loc407 = loc(fused[#loc171, #loc172])
#loc408 = loc(fused[#loc174, #loc173])
#loc409 = loc(fused[#loc175, #loc176])
#loc410 = loc(fused[#loc178, #loc172])
#loc411 = loc(fused[#loc180, #loc179])
#loc412 = loc(fused[#loc184, #loc183])
#loc413 = loc(fused[#loc191, #loc192])
#loc414 = loc(fused[#loc193, #loc194])
#loc415 = loc(fused[#loc195, #loc196])
#loc416 = loc(fused[#loc197, #loc198])
#loc417 = loc(fused[#loc199, #loc200])
#loc418 = loc(fused[#loc201, #loc202])
#loc419 = loc(fused[#loc207, #loc208])
#loc422 = loc(fused[#loc218, #loc219])
#loc423 = loc(fused[#loc222, #loc223])
#loc424 = loc(fused[#loc226, #loc225])
#loc425 = loc(fused[#loc228, #loc229])
#loc426 = loc(fused[#loc230, #loc231])
#loc427 = loc(fused[#loc234, #loc232])
#loc428 = loc(fused[#loc235, #loc236])
#loc429 = loc(fused[#loc238, #loc239, #loc240, #loc236])
#loc430 = loc(fused[#loc243, #loc242])
#loc431 = loc(fused[#loc244, #loc245])
#loc432 = loc(fused[#loc246, #loc247])
#loc433 = loc(fused[#loc248, #loc249])
#loc434 = loc(fused[#loc252, #loc253])
#loc435 = loc(fused[#loc251, #loc253])
#loc436 = loc(fused[#loc250, #loc254])
#loc437 = loc(fused[#loc255, #loc254])
#loc438 = loc(fused[#loc256, #loc257])
#loc439 = loc(fused[#loc258, #loc259])
#loc440 = loc(fused[#loc260, #loc257])
#loc441 = loc(fused[#loc264, #loc265])
#loc442 = loc(fused[#loc267, #loc266])
#loc443 = loc(fused[#loc268, #loc269])
#loc444 = loc(fused[#loc271, #loc265])
#loc445 = loc(fused[#loc273, #loc272])
#loc446 = loc(fused[#loc277, #loc276])
#loc447 = loc(fused[#loc284, #loc285])
#loc448 = loc(fused[#loc286, #loc287])
#loc449 = loc(fused[#loc290, #loc288])
#loc450 = loc(fused[#loc291, #loc292])
#loc451 = loc(fused[#loc294, #loc292])
#loc452 = loc(fused[#loc296, #loc295])
#loc453 = loc(fused[#loc297, #loc298])
#loc454 = loc(fused[#loc299, #loc300])
#loc455 = loc(fused[#loc301, #loc302])
#loc456 = loc(fused[#loc305, #loc306])
#loc457 = loc(fused[#loc304, #loc306])
#loc458 = loc(fused[#loc303, #loc307])
#loc459 = loc(fused[#loc308, #loc307])
#loc460 = loc(fused[#loc309, #loc310])
#loc461 = loc(fused[#loc311, #loc312])
#loc462 = loc(fused[#loc313, #loc310])
#loc463 = loc(fused[#loc317, #loc318])
#loc464 = loc(fused[#loc320, #loc319])
#loc465 = loc(fused[#loc321, #loc322])
#loc466 = loc(fused[#loc324, #loc318])
#loc467 = loc(fused[#loc326, #loc325])
#loc468 = loc(fused[#loc330, #loc329])
