!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__int_max_preinc_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc117)
  cir.func no_proto @CWE190_Integer_Overflow__int_max_preinc_32_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc119)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc120)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc121)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc122)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc123)
    %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc124)
    cir.store %3, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc123)
    cir.store %3, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc124)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc17)
    cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc125)
    cir.br ^bb1 loc(#loc126)
  ^bb1:  // pred: ^bb0
    %7 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc6)
    %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc21)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc119)
    %9 = cir.const #cir.int<2147483647> : !s32i loc(#loc22)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc127)
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc24)
    %11 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc25)
    cir.store %10, %11 : !s32i, !cir.ptr<!s32i> loc(#loc128)
    cir.br ^bb2 loc(#loc20)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc129)
  ^bb3:  // pred: ^bb2
    %12 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc8)
    %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc29)
    cir.store %13, %1 : !s32i, !cir.ptr<!s32i> loc(#loc120)
    cir.br ^bb4 loc(#loc130)
  ^bb4:  // pred: ^bb3
    %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc32)
    %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc32)
    cir.store %15, %1 : !s32i, !cir.ptr<!s32i> loc(#loc131)
    %16 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc10)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc121)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc34)
    cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc35)
    cir.br ^bb5 loc(#loc31)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc28)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc4)
  } loc(#loc118)
  cir.func no_proto @CWE190_Integer_Overflow__int_max_preinc_32_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc133)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc134)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    cir.return loc(#loc37)
  } loc(#loc132)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc136)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc137)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc138)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc139)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc140)
    %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc141)
    cir.store %3, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc140)
    cir.store %3, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc141)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc56)
    cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc142)
    cir.br ^bb1 loc(#loc143)
  ^bb1:  // pred: ^bb0
    %7 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc45)
    %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc60)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc136)
    %9 = cir.const #cir.int<2> : !s32i loc(#loc61)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc144)
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc63)
    %11 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc64)
    cir.store %10, %11 : !s32i, !cir.ptr<!s32i> loc(#loc145)
    cir.br ^bb2 loc(#loc59)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc146)
  ^bb3:  // pred: ^bb2
    %12 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc47)
    %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc68)
    cir.store %13, %1 : !s32i, !cir.ptr<!s32i> loc(#loc137)
    cir.br ^bb4 loc(#loc147)
  ^bb4:  // pred: ^bb3
    %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc71)
    %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc71)
    cir.store %15, %1 : !s32i, !cir.ptr<!s32i> loc(#loc148)
    %16 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc49)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc138)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc73)
    cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc74)
    cir.br ^bb5 loc(#loc70)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc67)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc43)
  } loc(#loc135)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc149)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc77)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc151)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc152)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc153)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc154)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc155)
    %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc156)
    cir.store %3, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc155)
    cir.store %3, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc156)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc92)
    cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc157)
    cir.br ^bb1 loc(#loc158)
  ^bb1:  // pred: ^bb0
    %7 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc81)
    %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc96)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc151)
    %9 = cir.const #cir.int<2147483647> : !s32i loc(#loc97)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc159)
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc99)
    %11 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc100)
    cir.store %10, %11 : !s32i, !cir.ptr<!s32i> loc(#loc160)
    cir.br ^bb2 loc(#loc95)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc161)
  ^bb3:  // pred: ^bb2
    %12 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc83)
    %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc104)
    cir.store %13, %1 : !s32i, !cir.ptr<!s32i> loc(#loc152)
    cir.br ^bb4 loc(#loc162)
  ^bb4:  // pred: ^bb3
    %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc107)
    %15 = cir.const #cir.int<2147483647> : !s32i loc(#loc108)
    %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc163)
    cir.brcond %16 ^bb5, ^bb6 loc(#loc164)
  ^bb5:  // pred: ^bb4
    %17 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc112)
    cir.store %18, %1 : !s32i, !cir.ptr<!s32i> loc(#loc165)
    %19 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc85)
    cir.store %19, %2 : !s32i, !cir.ptr<!s32i> loc(#loc153)
    %20 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc114)
    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc115)
    cir.br ^bb7 loc(#loc110)
  ^bb6:  // pred: ^bb4
    %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc77)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc77)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc116)
    cir.br ^bb7 loc(#loc106)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc106)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc103)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc79)
  } loc(#loc150)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__int_max_preinc_32.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":22:1)
#loc4 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":44:1)
#loc5 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":30:9)
#loc6 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":30:21)
#loc7 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":36:9)
#loc8 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":36:21)
#loc9 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":40:13)
#loc10 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":40:26)
#loc11 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":24:5)
#loc12 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":24:9)
#loc13 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":25:5)
#loc14 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":25:22)
#loc15 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":26:5)
#loc16 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":26:22)
#loc17 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":28:12)
#loc18 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":28:5)
#loc19 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":29:5)
#loc20 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":34:5)
#loc21 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":30:20)
#loc22 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":32:16)
#loc23 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":32:9)
#loc24 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":33:21)
#loc25 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":33:10)
#loc26 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":33:9)
#loc27 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":35:5)
#loc28 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":43:5)
#loc29 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":36:20)
#loc30 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":37:9)
#loc31 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":42:9)
#loc32 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":39:13)
#loc33 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":39:15)
#loc34 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":41:26)
#loc35 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":41:13)
#loc36 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":105:1)
#loc37 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":109:1)
#loc38 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":107:5)
#loc39 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":107:13)
#loc40 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":108:5)
#loc41 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":108:13)
#loc42 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":51:1)
#loc43 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":73:1)
#loc44 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":59:9)
#loc45 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":59:21)
#loc46 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":65:9)
#loc47 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":65:21)
#loc48 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":69:13)
#loc49 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":69:26)
#loc50 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":53:5)
#loc51 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":53:9)
#loc52 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":54:5)
#loc53 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":54:22)
#loc54 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":55:5)
#loc55 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":55:22)
#loc56 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":57:12)
#loc57 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":57:5)
#loc58 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":58:5)
#loc59 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":63:5)
#loc60 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":59:20)
#loc61 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":61:16)
#loc62 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":61:9)
#loc63 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":62:21)
#loc64 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":62:10)
#loc65 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":62:9)
#loc66 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":64:5)
#loc67 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":72:5)
#loc68 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":65:20)
#loc69 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":66:9)
#loc70 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":71:9)
#loc71 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":68:13)
#loc72 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":68:15)
#loc73 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":70:26)
#loc74 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":70:13)
#loc75 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc76 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc77 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":100:23)
#loc78 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":76:1)
#loc79 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":103:1)
#loc80 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":84:9)
#loc81 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":84:21)
#loc82 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":90:9)
#loc83 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":90:21)
#loc84 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":95:13)
#loc85 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":95:26)
#loc86 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":78:5)
#loc87 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":78:9)
#loc88 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":79:5)
#loc89 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":79:22)
#loc90 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":80:5)
#loc91 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":80:22)
#loc92 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":82:12)
#loc93 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":82:5)
#loc94 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":83:5)
#loc95 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":88:5)
#loc96 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":84:20)
#loc97 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":86:16)
#loc98 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":86:9)
#loc99 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":87:21)
#loc100 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":87:10)
#loc101 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":87:9)
#loc102 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":89:5)
#loc103 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":102:5)
#loc104 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":90:20)
#loc105 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":92:9)
#loc106 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":101:9)
#loc107 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":92:13)
#loc108 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":92:20)
#loc109 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":93:9)
#loc110 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":97:9)
#loc111 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":99:9)
#loc112 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":94:13)
#loc113 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":94:15)
#loc114 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":96:26)
#loc115 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":96:13)
#loc116 = loc("CWE190_Integer_Overflow__int_max_preinc_32.c":100:13)
#loc117 = loc(fused[#loc1, #loc2])
#loc118 = loc(fused[#loc3, #loc4])
#loc119 = loc(fused[#loc5, #loc6])
#loc120 = loc(fused[#loc7, #loc8])
#loc121 = loc(fused[#loc9, #loc10])
#loc122 = loc(fused[#loc11, #loc12])
#loc123 = loc(fused[#loc13, #loc14])
#loc124 = loc(fused[#loc15, #loc16])
#loc125 = loc(fused[#loc18, #loc17])
#loc126 = loc(fused[#loc19, #loc20])
#loc127 = loc(fused[#loc23, #loc22])
#loc128 = loc(fused[#loc26, #loc24])
#loc129 = loc(fused[#loc27, #loc28])
#loc130 = loc(fused[#loc30, #loc31])
#loc131 = loc(fused[#loc32, #loc33])
#loc132 = loc(fused[#loc36, #loc37])
#loc133 = loc(fused[#loc38, #loc39])
#loc134 = loc(fused[#loc40, #loc41])
#loc135 = loc(fused[#loc42, #loc43])
#loc136 = loc(fused[#loc44, #loc45])
#loc137 = loc(fused[#loc46, #loc47])
#loc138 = loc(fused[#loc48, #loc49])
#loc139 = loc(fused[#loc50, #loc51])
#loc140 = loc(fused[#loc52, #loc53])
#loc141 = loc(fused[#loc54, #loc55])
#loc142 = loc(fused[#loc57, #loc56])
#loc143 = loc(fused[#loc58, #loc59])
#loc144 = loc(fused[#loc62, #loc61])
#loc145 = loc(fused[#loc65, #loc63])
#loc146 = loc(fused[#loc66, #loc67])
#loc147 = loc(fused[#loc69, #loc70])
#loc148 = loc(fused[#loc71, #loc72])
#loc149 = loc(fused[#loc75, #loc76])
#loc150 = loc(fused[#loc78, #loc79])
#loc151 = loc(fused[#loc80, #loc81])
#loc152 = loc(fused[#loc82, #loc83])
#loc153 = loc(fused[#loc84, #loc85])
#loc154 = loc(fused[#loc86, #loc87])
#loc155 = loc(fused[#loc88, #loc89])
#loc156 = loc(fused[#loc90, #loc91])
#loc157 = loc(fused[#loc93, #loc92])
#loc158 = loc(fused[#loc94, #loc95])
#loc159 = loc(fused[#loc98, #loc97])
#loc160 = loc(fused[#loc101, #loc99])
#loc161 = loc(fused[#loc102, #loc103])
#loc162 = loc(fused[#loc105, #loc106])
#loc163 = loc(fused[#loc107, #loc108])
#loc164 = loc(fused[#loc109, #loc110, #loc111, #loc106])
#loc165 = loc(fused[#loc112, #loc113])
