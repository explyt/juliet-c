!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc71 = loc("../../../testcasesupport/std_testcase.h":61:7)
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s03/CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc95)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc96)
  cir.func private  @_ZdlPvm(!cir.ptr<!void>, !u64i) extra(#fn_attr) loc(#loc97)
  cir.func  @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_163badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc99)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc100)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc15)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc15)
        cir.condition(%3) loc(#loc15)
      } do {
        %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc16)
        %3 = cir.const #cir.int<100> : !s32i loc(#loc17)
        %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc17)
        %5 = cir.const #cir.int<8> : !u64i loc(#loc102)
        %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc103)
        %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc16)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc104)
        cir.store %8, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc105)
        cir.scope {
          %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc24)
          %10 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc25)
          %11 = cir.cmp(eq, %9, %10) : !cir.ptr<!ty_TwoIntsClass>, !cir.bool loc(#loc107)
          cir.if %11 {
            %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc27)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc28)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc29)
            cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc27)
          } loc(#loc108)
        } loc(#loc106)
        cir.break loc(#loc30)
      } loc(#loc101)
    } loc(#loc101)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc33)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc33)
        cir.condition(%3) loc(#loc33)
      } do {
        %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc34)
        %3 = cir.cast(bitcast, %2 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc34)
        %4 = cir.const #cir.int<8> : !u64i loc(#loc35)
        cir.call @_ZdlPvm(%3, %4) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc35)
        cir.break loc(#loc36)
      } loc(#loc109)
    } loc(#loc109)
    cir.return loc(#loc8)
  } loc(#loc98)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc110)
  cir.func internal private  @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc112)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc43)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc113)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc47)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc47)
        cir.condition(%3) loc(#loc47)
      } do {
        %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc48)
        %3 = cir.const #cir.int<100> : !s32i loc(#loc49)
        %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc49)
        %5 = cir.const #cir.int<8> : !u64i loc(#loc115)
        %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc116)
        %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc48)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc117)
        cir.store %8, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc118)
        cir.scope {
          %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc56)
          %10 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc57)
          %11 = cir.cmp(eq, %9, %10) : !cir.ptr<!ty_TwoIntsClass>, !cir.bool loc(#loc120)
          cir.if %11 {
            %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc59)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc60)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc61)
            cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc59)
          } loc(#loc121)
        } loc(#loc119)
        cir.break loc(#loc62)
      } loc(#loc114)
    } loc(#loc114)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc65)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc65)
        cir.condition(%3) loc(#loc65)
      } do {
        %2 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc66)
        %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc67)
        %4 = cir.cast(bitcast, %3 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc67)
        cir.call @free(%4) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc66)
        cir.break loc(#loc68)
      } loc(#loc122)
    } loc(#loc122)
    cir.return loc(#loc40)
  } loc(#loc111)
  cir.func private  @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc123)
  cir.func linkonce_odr  @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc71)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc71)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc71)
    cir.return loc(#loc71)
  } loc(#loc71)
  cir.func internal private  @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc125)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc76)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc126)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc80)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc80)
        cir.condition(%3) loc(#loc80)
      } do {
        %2 = cir.const #cir.int<8> : !u64i loc(#loc128)
        %3 = cir.call @_Znwm(%2) : (!u64i) -> !cir.ptr<!void> loc(#loc83)
        %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc128)
        cir.call @_ZN12TwoIntsClassC2Ev(%4) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr) loc(#loc82)
        cir.store %4, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc129)
        cir.break loc(#loc85)
      } loc(#loc127)
    } loc(#loc127)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc88)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc88)
        cir.condition(%3) loc(#loc88)
      } do {
        %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc89)
        %3 = cir.cast(bitcast, %2 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc89)
        %4 = cir.const #cir.int<8> : !u64i loc(#loc83)
        cir.call @_ZdlPvm(%3, %4) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc83)
        cir.break loc(#loc90)
      } loc(#loc130)
    } loc(#loc130)
    cir.return loc(#loc73)
  } loc(#loc124)
  cir.func  @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_164goodEv() extra(#fn_attr1) {
    cir.call @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16L7goodB2GEv() : () -> () loc(#loc93)
    cir.call @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16L7goodG2BEv() : () -> () loc(#loc94)
    cir.return loc(#loc92)
  } loc(#loc131)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s03/CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":140:1)
#loc6 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":141:41)
#loc7 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":24:1)
#loc8 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":43:1)
#loc9 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":26:5)
#loc10 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":26:20)
#loc11 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":28:12)
#loc12 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":28:5)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":29:5)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":35:5)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":29:11)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":32:32)
#loc17 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":32:39)
#loc18 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":32:43)
#loc19 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":32:62)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":32:63)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":32:9)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":33:9)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":33:37)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":33:13)
#loc25 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":33:21)
#loc26 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":33:27)
#loc27 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":33:28)
#loc28 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":33:34)
#loc29 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":33:33)
#loc30 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":34:9)
#loc31 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":36:5)
#loc32 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":42:5)
#loc33 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":36:11)
#loc34 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":40:16)
#loc35 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":24:6)
#loc36 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":41:9)
#loc37 = loc("/usr/include/stdlib.h":687:1)
#loc38 = loc("/usr/include/stdlib.h":687:32)
#loc39 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":50:1)
#loc40 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":68:1)
#loc41 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":52:5)
#loc42 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":52:20)
#loc43 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":54:12)
#loc44 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":54:5)
#loc45 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":55:5)
#loc46 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":61:5)
#loc47 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":55:11)
#loc48 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":58:32)
#loc49 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":58:39)
#loc50 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":58:43)
#loc51 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":58:62)
#loc52 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":58:63)
#loc53 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":58:9)
#loc54 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":59:9)
#loc55 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":59:37)
#loc56 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":59:13)
#loc57 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":59:21)
#loc58 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":59:27)
#loc59 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":59:28)
#loc60 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":59:34)
#loc61 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":59:33)
#loc62 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":60:9)
#loc63 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":62:5)
#loc64 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":67:5)
#loc65 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":62:11)
#loc66 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":65:9)
#loc67 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":65:14)
#loc68 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":66:9)
#loc69 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc70 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc72 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":71:1)
#loc73 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":89:1)
#loc74 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":73:5)
#loc75 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":73:20)
#loc76 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":75:12)
#loc77 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":75:5)
#loc78 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":76:5)
#loc79 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":81:5)
#loc80 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":76:11)
#loc81 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":79:16)
#loc82 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":79:20)
#loc83 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":71:13)
#loc84 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":79:9)
#loc85 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":80:9)
#loc86 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":82:5)
#loc87 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":88:5)
#loc88 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":82:11)
#loc89 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":86:16)
#loc90 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":87:9)
#loc91 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":91:1)
#loc92 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":95:1)
#loc93 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":93:5)
#loc94 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_malloc_16.cpp":94:5)
#loc95 = loc(fused[#loc1, #loc2])
#loc96 = loc(fused[#loc3, #loc4])
#loc97 = loc(fused[#loc5, #loc6])
#loc98 = loc(fused[#loc7, #loc8])
#loc99 = loc(fused[#loc9, #loc10])
#loc100 = loc(fused[#loc12, #loc11])
#loc101 = loc(fused[#loc13, #loc14])
#loc102 = loc(fused[#loc18, #loc19])
#loc103 = loc(fused[#loc17, #loc19])
#loc104 = loc(fused[#loc16, #loc20])
#loc105 = loc(fused[#loc21, #loc20])
#loc106 = loc(fused[#loc22, #loc23])
#loc107 = loc(fused[#loc24, #loc25])
#loc108 = loc(fused[#loc26, #loc23])
#loc109 = loc(fused[#loc31, #loc32])
#loc110 = loc(fused[#loc37, #loc38])
#loc111 = loc(fused[#loc39, #loc40])
#loc112 = loc(fused[#loc41, #loc42])
#loc113 = loc(fused[#loc44, #loc43])
#loc114 = loc(fused[#loc45, #loc46])
#loc115 = loc(fused[#loc50, #loc51])
#loc116 = loc(fused[#loc49, #loc51])
#loc117 = loc(fused[#loc48, #loc52])
#loc118 = loc(fused[#loc53, #loc52])
#loc119 = loc(fused[#loc54, #loc55])
#loc120 = loc(fused[#loc56, #loc57])
#loc121 = loc(fused[#loc58, #loc55])
#loc122 = loc(fused[#loc63, #loc64])
#loc123 = loc(fused[#loc69, #loc70])
#loc124 = loc(fused[#loc72, #loc73])
#loc125 = loc(fused[#loc74, #loc75])
#loc126 = loc(fused[#loc77, #loc76])
#loc127 = loc(fused[#loc78, #loc79])
#loc128 = loc(fused[#loc81, #loc82])
#loc129 = loc(fused[#loc84, #loc82])
#loc130 = loc(fused[#loc86, #loc87])
#loc131 = loc(fused[#loc91, #loc92])
