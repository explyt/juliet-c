!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":23:74)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":23:81)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":52:78)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":52:85)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":93:10)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":93:14)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":93:20)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":93:32)
#loc166 = loc(fused[#loc7, #loc8])
#loc189 = loc(fused[#loc72, #loc73])
#loc203 = loc(fused[#loc119, #loc120])
#loc204 = loc(fused[#loc121, #loc122])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc163)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc164)
  cir.func @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41_badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc166)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc9)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc168)
      %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc14)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc14)
      %4 = cir.const #cir.int<67> : !s32i loc(#loc15)
      %5 = cir.const #cir.int<100> : !s32i loc(#loc16)
      %6 = cir.const #cir.int<1> : !s32i loc(#loc17)
      %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc16)
      %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc16)
      cir.libc.memset %8 bytes from %3 set to %4 : !cir.ptr<!void>, !s32i, !u64i loc(#loc169)
      %9 = cir.const #cir.int<0> : !s32i loc(#loc20)
      %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc20)
      %11 = cir.const #cir.int<100> : !s32i loc(#loc21)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc22)
      %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc21)
      %14 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc23)
      %15 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %13 : !s32i), !cir.ptr<!s8i> loc(#loc23)
      cir.store %10, %15 : !s8i, !cir.ptr<!s8i> loc(#loc170)
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
      %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc24)
      %18 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc25)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc25)
      %20 = cir.const #cir.int<100> : !s32i loc(#loc26)
      %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc26)
      %22 = cir.const #cir.int<1> : !u64i loc(#loc171)
      %23 = cir.binop(mul, %21, %22) : !u64i loc(#loc172)
      cir.libc.memmove %23 bytes from %19 to %17 : !cir.ptr<!void>, !u64i loc(#loc173)
      %24 = cir.const #cir.int<0> : !s32i loc(#loc31)
      %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc31)
      %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
      %27 = cir.const #cir.int<100> : !s32i loc(#loc33)
      %28 = cir.const #cir.int<1> : !s32i loc(#loc34)
      %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc33)
      %30 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc35)
      cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc174)
      %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
      cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc37)
      %32 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc38)
      %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
      %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc39)
      cir.call @free(%34) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc38)
    } loc(#loc167)
    cir.return loc(#loc6)
  } loc(#loc165)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc175)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc176)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc178)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc48)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc179)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc50)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc51)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc51)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc180)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc181)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc50)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc182)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc183)
    cir.scope {
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
      %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc59)
      %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc59)
      %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc185)
      cir.if %18 {
        %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc61)
        %20 = cir.const #cir.int<1> : !s32i loc(#loc62)
        %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc63)
        cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc61)
      } loc(#loc186)
    } loc(#loc184)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc64)
    %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc64)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc66)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %12 : !s32i), !cir.ptr<!s8i> loc(#loc67)
    cir.store %10, %13 : !s8i, !cir.ptr<!s8i> loc(#loc187)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41_badSink(%14) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    cir.return loc(#loc45)
  } loc(#loc177)
  cir.func @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41_goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc72, #loc73])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc189)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc74)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc191)
      %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc79)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc79)
      %4 = cir.const #cir.int<67> : !s32i loc(#loc80)
      %5 = cir.const #cir.int<100> : !s32i loc(#loc81)
      %6 = cir.const #cir.int<1> : !s32i loc(#loc82)
      %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc81)
      %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc81)
      cir.libc.memset %8 bytes from %3 set to %4 : !cir.ptr<!void>, !s32i, !u64i loc(#loc192)
      %9 = cir.const #cir.int<0> : !s32i loc(#loc85)
      %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc85)
      %11 = cir.const #cir.int<100> : !s32i loc(#loc86)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc87)
      %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc86)
      %14 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc88)
      %15 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %13 : !s32i), !cir.ptr<!s8i> loc(#loc88)
      cir.store %10, %15 : !s8i, !cir.ptr<!s8i> loc(#loc193)
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
      %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc89)
      %18 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc90)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc90)
      %20 = cir.const #cir.int<100> : !s32i loc(#loc91)
      %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc91)
      %22 = cir.const #cir.int<1> : !u64i loc(#loc194)
      %23 = cir.binop(mul, %21, %22) : !u64i loc(#loc195)
      cir.libc.memmove %23 bytes from %19 to %17 : !cir.ptr<!void>, !u64i loc(#loc196)
      %24 = cir.const #cir.int<0> : !s32i loc(#loc96)
      %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc96)
      %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
      %27 = cir.const #cir.int<100> : !s32i loc(#loc98)
      %28 = cir.const #cir.int<1> : !s32i loc(#loc99)
      %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc98)
      %30 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc100)
      cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc197)
      %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc101)
      cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc102)
      %32 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc103)
      %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
      %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc104)
      cir.call @free(%34) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc103)
    } loc(#loc190)
    cir.return loc(#loc71)
  } loc(#loc188)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc199)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc107)
    cir.return loc(#loc106)
  } loc(#loc198)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc200)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc201)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc113)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc114)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc115)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc116)
  cir.func @main(%arg0: !s32i loc(fused[#loc119, #loc120]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc121, #loc122])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc203)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc204)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc118)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc123)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc123)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc124)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc125)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc125)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc126)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc113)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc113)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc127)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41_good : !cir.ptr<!cir.func<!void ()>> loc(#loc205)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41_good() : () -> () loc(#loc128)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc114)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc114)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc130)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc115)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc115)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc131)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc206)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41_bad() : () -> () loc(#loc132)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc116)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc116)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc134)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc135)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc207)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc207)
    cir.return %17 : !s32i loc(#loc207)
  } loc(#loc202)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc209)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc141)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc210)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc143)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc144)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc144)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc211)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc212)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc143)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc213)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc214)
    cir.scope {
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
      %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc152)
      %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc152)
      %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc216)
      cir.if %18 {
        %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc154)
        %20 = cir.const #cir.int<1> : !s32i loc(#loc155)
        %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc156)
        cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc154)
      } loc(#loc217)
    } loc(#loc215)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc157)
    %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc157)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc159)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %12 : !s32i), !cir.ptr<!s8i> loc(#loc160)
    cir.store %10, %13 : !s8i, !cir.ptr<!s8i> loc(#loc218)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41_goodG2BSink(%14) : (!cir.ptr<!s8i>) -> () loc(#loc162)
    cir.return loc(#loc138)
  } loc(#loc208)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("/usr/include/stdlib.h":687:1)
#loc4 = loc("/usr/include/stdlib.h":687:32)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":23:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":35:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":24:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":25:5)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":34:5)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":26:9)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":26:24)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":27:16)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":27:24)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":27:29)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":27:33)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":27:9)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":27:34)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":28:25)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":28:16)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":28:20)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":28:9)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":30:17)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":30:23)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":30:31)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":30:35)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":30:46)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":30:9)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":30:47)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":31:23)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":31:9)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":31:14)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":31:18)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":31:19)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":32:19)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":32:9)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":33:9)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":33:14)
#loc40 = loc("/usr/include/stdlib.h":672:1)
#loc41 = loc("/usr/include/stdlib.h":672:45)
#loc42 = loc("/usr/include/stdlib.h":756:1)
#loc43 = loc("/usr/include/stdlib.h":756:70)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":37:1)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":46:1)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":39:5)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":39:12)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":40:12)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":40:5)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":42:20)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":42:27)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":42:30)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":42:41)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":42:42)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":42:5)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":43:5)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":43:33)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":43:9)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":43:17)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":43:23)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":43:24)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":43:30)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":43:29)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":44:15)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":44:5)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":44:10)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":44:11)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":45:73)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":45:5)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":52:1)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":64:1)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":53:1)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":54:5)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":63:5)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":55:9)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":55:24)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":56:16)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":56:24)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":56:29)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":56:33)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":56:9)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":56:34)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":57:25)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":57:16)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":57:20)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":57:9)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":59:17)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":59:23)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":59:31)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":59:35)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":59:46)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":59:9)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":59:47)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":60:23)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":60:9)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":60:14)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":60:18)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":60:19)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":61:19)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":61:9)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":62:9)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":62:14)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":78:1)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":81:1)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":80:5)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":80:13)
#loc109 = loc("/usr/include/stdlib.h":575:1)
#loc110 = loc("/usr/include/stdlib.h":575:41)
#loc111 = loc("/usr/include/time.h":76:1)
#loc112 = loc("/usr/include/time.h":76:38)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":98:15)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":100:15)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":103:15)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":105:15)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":93:1)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":108:1)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":94:1)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":96:27)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":96:22)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":96:5)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":98:5)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":99:5)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":99:70)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":100:5)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":103:5)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":104:5)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":104:69)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":105:5)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":107:12)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":107:5)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":67:1)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":76:1)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":69:5)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":69:12)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":70:12)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":70:5)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":72:20)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":72:27)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":72:31)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":72:42)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":72:43)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":72:5)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":73:5)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":73:33)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":73:9)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":73:17)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":73:23)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":73:24)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":73:30)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":73:29)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":74:15)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":74:5)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":74:10)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":74:11)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":75:77)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_memmove_41.c":75:5)
#loc163 = loc(fused[#loc1, #loc2])
#loc164 = loc(fused[#loc3, #loc4])
#loc165 = loc(fused[#loc5, #loc6])
#loc167 = loc(fused[#loc10, #loc11])
#loc168 = loc(fused[#loc12, #loc13])
#loc169 = loc(fused[#loc18, #loc19])
#loc170 = loc(fused[#loc23, #loc20])
#loc171 = loc(fused[#loc27, #loc28])
#loc172 = loc(fused[#loc26, #loc28])
#loc173 = loc(fused[#loc29, #loc30])
#loc174 = loc(fused[#loc32, #loc31])
#loc175 = loc(fused[#loc40, #loc41])
#loc176 = loc(fused[#loc42, #loc43])
#loc177 = loc(fused[#loc44, #loc45])
#loc178 = loc(fused[#loc46, #loc47])
#loc179 = loc(fused[#loc49, #loc48])
#loc180 = loc(fused[#loc52, #loc53])
#loc181 = loc(fused[#loc51, #loc53])
#loc182 = loc(fused[#loc50, #loc54])
#loc183 = loc(fused[#loc55, #loc54])
#loc184 = loc(fused[#loc56, #loc57])
#loc185 = loc(fused[#loc58, #loc59])
#loc186 = loc(fused[#loc60, #loc57])
#loc187 = loc(fused[#loc65, #loc64])
#loc188 = loc(fused[#loc70, #loc71])
#loc190 = loc(fused[#loc75, #loc76])
#loc191 = loc(fused[#loc77, #loc78])
#loc192 = loc(fused[#loc83, #loc84])
#loc193 = loc(fused[#loc88, #loc85])
#loc194 = loc(fused[#loc92, #loc93])
#loc195 = loc(fused[#loc91, #loc93])
#loc196 = loc(fused[#loc94, #loc95])
#loc197 = loc(fused[#loc97, #loc96])
#loc198 = loc(fused[#loc105, #loc106])
#loc199 = loc(fused[#loc107, #loc108])
#loc200 = loc(fused[#loc109, #loc110])
#loc201 = loc(fused[#loc111, #loc112])
#loc202 = loc(fused[#loc117, #loc118])
#loc205 = loc(fused[#loc128, #loc129])
#loc206 = loc(fused[#loc132, #loc133])
#loc207 = loc(fused[#loc136, #loc135])
#loc208 = loc(fused[#loc137, #loc138])
#loc209 = loc(fused[#loc139, #loc140])
#loc210 = loc(fused[#loc142, #loc141])
#loc211 = loc(fused[#loc145, #loc146])
#loc212 = loc(fused[#loc144, #loc146])
#loc213 = loc(fused[#loc143, #loc147])
#loc214 = loc(fused[#loc148, #loc147])
#loc215 = loc(fused[#loc149, #loc150])
#loc216 = loc(fused[#loc151, #loc152])
#loc217 = loc(fused[#loc153, #loc150])
#loc218 = loc(fused[#loc158, #loc157])
