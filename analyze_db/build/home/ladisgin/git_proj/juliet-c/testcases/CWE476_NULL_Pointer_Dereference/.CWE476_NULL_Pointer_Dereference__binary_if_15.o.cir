!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc54 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":60:44)
#loc76 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":79:44)
#true = #cir.bool<true> : !cir.bool
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__binary_if_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc87)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"intOne == 5\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc4)
  cir.func no_proto @CWE476_NULL_Pointer_Dereference__binary_if_15_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["twoIntsStructPointer", init] {alignment = 8 : i64} loc(#loc89)
    cir.br ^bb1 loc(#loc90)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<6> : !s32i loc(#loc11)
    cir.br ^bb2 loc(#loc9)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %1 : !s32i, ^bb11 [
      6: ^bb4
    ] loc(#loc9)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc12)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc91)
  ^bb5:  // pred: ^bb4
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc8)
    cir.store %2, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc89)
    cir.br ^bb6 loc(#loc92)
  ^bb6:  // pred: ^bb5
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc17)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc18)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc18)
    %6 = cir.cmp(ne, %3, %5) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc93)
    %7 = cir.cast(bool_to_int, %6 : !cir.bool), !s32i loc(#loc93)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc19)
    %9 = cir.get_member %8[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc20)
    %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc21)
    %11 = cir.const #cir.int<5> : !s32i loc(#loc22)
    %12 = cir.cmp(eq, %10, %11) : !s32i, !cir.bool loc(#loc94)
    %13 = cir.cast(bool_to_int, %12 : !cir.bool), !s32i loc(#loc94)
    %14 = cir.binop(and, %7, %13) : !s32i loc(#loc95)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc25)
    cir.brcond %15 ^bb7, ^bb8 loc(#loc96)
  ^bb7:  // pred: ^bb6
    %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc3)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc3)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc27)
    cir.br ^bb8 loc(#loc16)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc16)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc14)
  ^bb10:  // pred: ^bb9
    cir.br ^bb12 loc(#loc28)
  ^bb11:  // pred: ^bb2
    %18 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc4)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc4)
    cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc29)
    cir.br ^bb12 loc(#loc30)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc10)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc6)
  } loc(#loc88)
  cir.func no_proto @CWE476_NULL_Pointer_Dereference__binary_if_15_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc98)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc33)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc99)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc35)
    cir.return loc(#loc32)
  } loc(#loc97)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["twoIntsStructPointer", init] {alignment = 8 : i64} loc(#loc101)
    cir.br ^bb1 loc(#loc102)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<5> : !s32i loc(#loc43)
    cir.br ^bb2 loc(#loc41)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %1 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc41)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc44)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %2 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc45)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc46)
    cir.br ^bb20 loc(#loc47)
  ^bb5:  // pred: ^bb2
    cir.br ^bb6 loc(#loc103)
  ^bb6:  // pred: ^bb5
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc40)
    cir.store %4, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc101)
    cir.br ^bb7 loc(#loc104)
  ^bb7:  // pred: ^bb6
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc52)
    %6 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc53)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc53)
    %8 = cir.cmp(ne, %5, %7) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc105)
    cir.brcond %8 ^bb8, ^bb13 loc(#loc54)
  ^bb8:  // pred: ^bb7
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc55)
    %10 = cir.get_member %9[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc20)
    %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc56)
    %12 = cir.const #cir.int<5> : !s32i loc(#loc57)
    %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc106)
    cir.brcond %13 ^bb9, ^bb10 loc(#loc54)
  ^bb9:  // pred: ^bb8
    %14 = cir.const #true loc(#loc54)
    cir.br ^bb11(%14 : !cir.bool) loc(#loc54)
  ^bb10:  // pred: ^bb8
    %15 = cir.const #false loc(#loc54)
    cir.br ^bb11(%15 : !cir.bool) loc(#loc54)
  ^bb11(%16: !cir.bool loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":60:44)):  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc54)
  ^bb12:  // pred: ^bb11
    cir.br ^bb14(%16 : !cir.bool) loc(#loc54)
  ^bb13:  // pred: ^bb7
    %17 = cir.const #false loc(#loc54)
    cir.br ^bb14(%17 : !cir.bool) loc(#loc54)
  ^bb14(%18: !cir.bool loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":60:44)):  // 2 preds: ^bb12, ^bb13
    cir.br ^bb15 loc(#loc54)
  ^bb15:  // pred: ^bb14
    cir.brcond %18 ^bb16, ^bb17 loc(#loc107)
  ^bb16:  // pred: ^bb15
    %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc59)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    cir.br ^bb17 loc(#loc51)
  ^bb17:  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc51)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc49)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc61)
  ^bb20:  // 2 preds: ^bb4, ^bb19
    cir.br ^bb21 loc(#loc42)
  ^bb21:  // pred: ^bb20
    cir.return loc(#loc38)
  } loc(#loc100)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["twoIntsStructPointer", init] {alignment = 8 : i64} loc(#loc109)
    cir.br ^bb1 loc(#loc110)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<6> : !s32i loc(#loc68)
    cir.br ^bb2 loc(#loc66)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %1 : !s32i, ^bb19 [
      6: ^bb4
    ] loc(#loc66)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc69)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc111)
  ^bb5:  // pred: ^bb4
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc65)
    cir.store %2, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc109)
    cir.br ^bb6 loc(#loc112)
  ^bb6:  // pred: ^bb5
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc74)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc75)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc75)
    %6 = cir.cmp(ne, %3, %5) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc113)
    cir.brcond %6 ^bb7, ^bb12 loc(#loc76)
  ^bb7:  // pred: ^bb6
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc77)
    %8 = cir.get_member %7[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc20)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc78)
    %10 = cir.const #cir.int<5> : !s32i loc(#loc79)
    %11 = cir.cmp(eq, %9, %10) : !s32i, !cir.bool loc(#loc114)
    cir.brcond %11 ^bb8, ^bb9 loc(#loc76)
  ^bb8:  // pred: ^bb7
    %12 = cir.const #true loc(#loc76)
    cir.br ^bb10(%12 : !cir.bool) loc(#loc76)
  ^bb9:  // pred: ^bb7
    %13 = cir.const #false loc(#loc76)
    cir.br ^bb10(%13 : !cir.bool) loc(#loc76)
  ^bb10(%14: !cir.bool loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":79:44)):  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc76)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13(%14 : !cir.bool) loc(#loc76)
  ^bb12:  // pred: ^bb6
    %15 = cir.const #false loc(#loc76)
    cir.br ^bb13(%15 : !cir.bool) loc(#loc76)
  ^bb13(%16: !cir.bool loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":79:44)):  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc76)
  ^bb14:  // pred: ^bb13
    cir.brcond %16 ^bb15, ^bb16 loc(#loc115)
  ^bb15:  // pred: ^bb14
    %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc81)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    cir.br ^bb16 loc(#loc73)
  ^bb16:  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc73)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc71)
  ^bb18:  // pred: ^bb17
    cir.br ^bb20 loc(#loc83)
  ^bb19:  // pred: ^bb2
    %19 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc84)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc84)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    cir.br ^bb20 loc(#loc86)
  ^bb20:  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc67)
  ^bb21:  // pred: ^bb20
    cir.return loc(#loc63)
  } loc(#loc108)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__binary_if_15.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":31:23)
#loc4 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":37:19)
#loc5 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":20:1)
#loc6 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":40:1)
#loc7 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":26:9)
#loc8 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":26:47)
#loc9 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":22:5)
#loc10 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":39:5)
#loc11 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":22:12)
#loc12 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":24:5)
#loc13 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":25:5)
#loc14 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":33:5)
#loc15 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":29:9)
#loc16 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":32:9)
#loc17 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":29:14)
#loc18 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":29:38)
#loc19 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":29:47)
#loc20 = loc("../../testcasesupport/std_testcase.h":98:9)
#loc21 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":29:69)
#loc22 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":29:79)
#loc23 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":29:13)
#loc24 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":29:80)
#loc25 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":29:44)
#loc26 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":30:9)
#loc27 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":31:13)
#loc28 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":34:5)
#loc29 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":37:9)
#loc30 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":38:9)
#loc31 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":92:1)
#loc32 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":96:1)
#loc33 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":94:5)
#loc34 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":94:11)
#loc35 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":95:5)
#loc36 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":95:11)
#loc37 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":47:1)
#loc38 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":67:1)
#loc39 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":57:9)
#loc40 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":57:47)
#loc41 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":49:5)
#loc42 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":66:5)
#loc43 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":49:12)
#loc44 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":51:5)
#loc45 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":53:19)
#loc46 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":53:9)
#loc47 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":54:9)
#loc48 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":56:5)
#loc49 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":64:5)
#loc50 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":60:9)
#loc51 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":63:9)
#loc52 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":60:14)
#loc53 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":60:38)
#loc55 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":60:48)
#loc56 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":60:70)
#loc57 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":60:80)
#loc58 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":61:9)
#loc59 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":62:23)
#loc60 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":62:13)
#loc61 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":65:5)
#loc62 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":70:1)
#loc63 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":90:1)
#loc64 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":76:9)
#loc65 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":76:47)
#loc66 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":72:5)
#loc67 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":89:5)
#loc68 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":72:12)
#loc69 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":74:5)
#loc70 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":75:5)
#loc71 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":83:5)
#loc72 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":79:9)
#loc73 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":82:9)
#loc74 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":79:14)
#loc75 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":79:38)
#loc77 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":79:48)
#loc78 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":79:70)
#loc79 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":79:80)
#loc80 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":80:9)
#loc81 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":81:23)
#loc82 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":81:13)
#loc83 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":84:5)
#loc84 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":87:19)
#loc85 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":87:9)
#loc86 = loc("CWE476_NULL_Pointer_Dereference__binary_if_15.c":88:9)
#loc87 = loc(fused[#loc1, #loc2])
#loc88 = loc(fused[#loc5, #loc6])
#loc89 = loc(fused[#loc7, #loc8])
#loc90 = loc(fused[#loc9, #loc10])
#loc91 = loc(fused[#loc13, #loc14])
#loc92 = loc(fused[#loc15, #loc16])
#loc93 = loc(fused[#loc17, #loc18])
#loc94 = loc(fused[#loc19, #loc22])
#loc95 = loc(fused[#loc23, #loc24])
#loc96 = loc(fused[#loc26, #loc16])
#loc97 = loc(fused[#loc31, #loc32])
#loc98 = loc(fused[#loc33, #loc34])
#loc99 = loc(fused[#loc35, #loc36])
#loc100 = loc(fused[#loc37, #loc38])
#loc101 = loc(fused[#loc39, #loc40])
#loc102 = loc(fused[#loc41, #loc42])
#loc103 = loc(fused[#loc48, #loc49])
#loc104 = loc(fused[#loc50, #loc51])
#loc105 = loc(fused[#loc52, #loc53])
#loc106 = loc(fused[#loc55, #loc57])
#loc107 = loc(fused[#loc58, #loc51])
#loc108 = loc(fused[#loc62, #loc63])
#loc109 = loc(fused[#loc64, #loc65])
#loc110 = loc(fused[#loc66, #loc67])
#loc111 = loc(fused[#loc70, #loc71])
#loc112 = loc(fused[#loc72, #loc73])
#loc113 = loc(fused[#loc74, #loc75])
#loc114 = loc(fused[#loc77, #loc79])
#loc115 = loc(fused[#loc80, #loc73])
