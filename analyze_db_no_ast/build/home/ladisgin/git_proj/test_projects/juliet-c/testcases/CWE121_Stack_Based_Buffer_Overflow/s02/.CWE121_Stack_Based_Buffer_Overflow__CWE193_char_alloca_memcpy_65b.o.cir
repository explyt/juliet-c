!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_65b.c":28:80)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_65b.c":28:87)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_65b.c":44:84)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_65b.c":44:91)
#loc50 = loc(fused[#loc7, #loc8])
#loc58 = loc(fused[#loc28, #loc29])
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_65b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc47)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc48)
  cir.func  @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_65b_badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc50)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc9)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc52)
      %2 = cir.const #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc52)
      cir.store %2, %1 : !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>> loc(#loc52)
      %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc14)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc14)
      %5 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc15)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc15)
      %7 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc16)
      %8 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc17)
      %9 = cir.call @strlen(%8) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc16)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc18)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc18)
      %12 = cir.binop(add, %9, %11) : !u64i loc(#loc53)
      %13 = cir.const #cir.int<1> : !u64i loc(#loc54)
      %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc55)
      cir.libc.memcpy %14 bytes from %6 to %4 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc56)
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
      cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc25)
    } loc(#loc51)
    cir.return loc(#loc6)
  } loc(#loc49)
  cir.func  @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_65b_goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc28, #loc29])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc58)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc30)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc60)
      %2 = cir.const #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc60)
      cir.store %2, %1 : !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>> loc(#loc60)
      %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc35)
      %5 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc36)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc36)
      %7 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc37)
      %8 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc38)
      %9 = cir.call @strlen(%8) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc37)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc39)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc39)
      %12 = cir.binop(add, %9, %11) : !u64i loc(#loc61)
      %13 = cir.const #cir.int<1> : !u64i loc(#loc62)
      %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc63)
      cir.libc.memcpy %14 bytes from %6 to %4 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc64)
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
      cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc46)
    } loc(#loc59)
    cir.return loc(#loc27)
  } loc(#loc57)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_65b.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_65b.c":28:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_65b.c":37:1)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_65b.c":29:1)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_65b.c":30:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_65b.c":36:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_65b.c":31:9)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_65b.c":31:29)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_65b.c":34:16)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_65b.c":34:22)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_65b.c":34:31)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_65b.c":34:38)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_65b.c":34:48)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_65b.c":34:53)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_65b.c":34:64)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_65b.c":34:30)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_65b.c":34:9)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_65b.c":34:65)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_65b.c":35:19)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_65b.c":35:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_65b.c":44:1)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_65b.c":53:1)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_65b.c":45:1)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_65b.c":46:5)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_65b.c":52:5)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_65b.c":47:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_65b.c":47:29)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_65b.c":50:16)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_65b.c":50:22)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_65b.c":50:31)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_65b.c":50:38)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_65b.c":50:48)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_65b.c":50:53)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_65b.c":50:64)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_65b.c":50:30)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_65b.c":50:9)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_65b.c":50:65)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_65b.c":51:19)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_65b.c":51:9)
#loc47 = loc(fused[#loc1, #loc2])
#loc48 = loc(fused[#loc3, #loc4])
#loc49 = loc(fused[#loc5, #loc6])
#loc51 = loc(fused[#loc10, #loc11])
#loc52 = loc(fused[#loc12, #loc13])
#loc53 = loc(fused[#loc16, #loc18])
#loc54 = loc(fused[#loc19, #loc20])
#loc55 = loc(fused[#loc21, #loc20])
#loc56 = loc(fused[#loc22, #loc23])
#loc57 = loc(fused[#loc26, #loc27])
#loc59 = loc(fused[#loc31, #loc32])
#loc60 = loc(fused[#loc33, #loc34])
#loc61 = loc(fused[#loc37, #loc39])
#loc62 = loc(fused[#loc40, #loc41])
#loc63 = loc(fused[#loc42, #loc41])
#loc64 = loc(fused[#loc43, #loc44])
