!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc6 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":22:60)
#loc7 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":22:64)
#loc26 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":39:64)
#loc27 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":39:68)
#loc47 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":52:64)
#loc48 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":52:68)
#true = #cir.bool<true> : !cir.bool
#loc76 = loc(fused[#loc6, #loc7])
#loc85 = loc(fused[#loc26, #loc27])
#loc94 = loc(fused[#loc47, #loc48])
module @"/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_for_loop_53d.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc74)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc3)
  cir.func @CWE400_Resource_Exhaustion__rand_for_loop_53d_badSink(%arg0: !s32i loc(fused[#loc6, #loc7])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc76)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc8)
    cir.scope {
      %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc78)
      %2 = cir.const #cir.int<0> : !s32i loc(#loc12)
      %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc12)
      cir.store %3, %1 : !u64i, !cir.ptr<!u64i> loc(#loc78)
      cir.scope {
        %4 = cir.const #cir.int<0> : !s32i loc(#loc15)
        %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc15)
        cir.store %5, %1 : !u64i, !cir.ptr<!u64i> loc(#loc80)
        cir.for : cond {
          %6 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc17)
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc18)
          %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc18)
          %9 = cir.cmp(lt, %6, %8) : !u64i, !cir.bool loc(#loc81)
          cir.condition(%9) loc(#loc19)
        } body {
          cir.scope {
            %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc3)
            %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc3)
            cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc21)
          } loc(#loc82)
          cir.yield loc(#loc14)
        } step {
          %6 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc22)
          %7 = cir.unary(inc, %6) : !u64i, !u64i loc(#loc23)
          cir.store %7, %1 : !u64i, !cir.ptr<!u64i> loc(#loc83)
          cir.yield loc(#loc79)
        } loc(#loc79)
      } loc(#loc79)
    } loc(#loc77)
    cir.return loc(#loc5)
  } loc(#loc75)
  cir.func @CWE400_Resource_Exhaustion__rand_for_loop_53d_goodG2BSink(%arg0: !s32i loc(fused[#loc26, #loc27])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc85)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc28)
    cir.scope {
      %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc87)
      %2 = cir.const #cir.int<0> : !s32i loc(#loc32)
      %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc32)
      cir.store %3, %1 : !u64i, !cir.ptr<!u64i> loc(#loc87)
      cir.scope {
        %4 = cir.const #cir.int<0> : !s32i loc(#loc35)
        %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc35)
        cir.store %5, %1 : !u64i, !cir.ptr<!u64i> loc(#loc89)
        cir.for : cond {
          %6 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc37)
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc38)
          %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc38)
          %9 = cir.cmp(lt, %6, %8) : !u64i, !cir.bool loc(#loc90)
          cir.condition(%9) loc(#loc39)
        } body {
          cir.scope {
            %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc41)
            %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc41)
            cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc42)
          } loc(#loc91)
          cir.yield loc(#loc34)
        } step {
          %6 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc43)
          %7 = cir.unary(inc, %6) : !u64i, !u64i loc(#loc44)
          cir.store %7, %1 : !u64i, !cir.ptr<!u64i> loc(#loc92)
          cir.yield loc(#loc88)
        } loc(#loc88)
      } loc(#loc88)
    } loc(#loc86)
    cir.return loc(#loc25)
  } loc(#loc84)
  cir.func @CWE400_Resource_Exhaustion__rand_for_loop_53d_goodB2GSink(%arg0: !s32i loc(fused[#loc47, #loc48])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc94)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc49)
    cir.scope {
      %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc96)
      %2 = cir.const #cir.int<0> : !s32i loc(#loc53)
      %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc53)
      cir.store %3, %1 : !u64i, !cir.ptr<!u64i> loc(#loc96)
      cir.scope {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc56)
        %5 = cir.const #cir.int<0> : !s32i loc(#loc57)
        %6 = cir.cmp(gt, %4, %5) : !s32i, !cir.bool loc(#loc98)
        %7 = cir.ternary(%6, true {
          %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc59)
          %9 = cir.const #cir.int<20> : !s32i loc(#loc60)
          %10 = cir.cmp(le, %8, %9) : !s32i, !cir.bool loc(#loc99)
          %11 = cir.ternary(%10, true {
            %12 = cir.const #true loc(#loc58)
            cir.yield %12 : !cir.bool loc(#loc58)
          }, false {
            %12 = cir.const #false loc(#loc58)
            cir.yield %12 : !cir.bool loc(#loc58)
          }) : (!cir.bool) -> !cir.bool loc(#loc58)
          cir.yield %11 : !cir.bool loc(#loc58)
        }, false {
          %8 = cir.const #false loc(#loc58)
          cir.yield %8 : !cir.bool loc(#loc58)
        }) : (!cir.bool) -> !cir.bool loc(#loc58)
        cir.if %7 {
          cir.scope {
            %8 = cir.const #cir.int<0> : !s32i loc(#loc64)
            %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc64)
            cir.store %9, %1 : !u64i, !cir.ptr<!u64i> loc(#loc102)
            cir.for : cond {
              %10 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc66)
              %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc67)
              %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc67)
              %13 = cir.cmp(lt, %10, %12) : !u64i, !cir.bool loc(#loc103)
              cir.condition(%13) loc(#loc68)
            } body {
              cir.scope {
                %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc70)
                %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc70)
                cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc71)
              } loc(#loc104)
              cir.yield loc(#loc63)
            } step {
              %10 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc72)
              %11 = cir.unary(inc, %10) : !u64i, !u64i loc(#loc73)
              cir.store %11, %1 : !u64i, !cir.ptr<!u64i> loc(#loc105)
              cir.yield loc(#loc101)
            } loc(#loc101)
          } loc(#loc101)
        } loc(#loc100)
      } loc(#loc97)
    } loc(#loc95)
    cir.return loc(#loc46)
  } loc(#loc93)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_for_loop_53d.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":29:23)
#loc4 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":22:1)
#loc5 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":32:1)
#loc8 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":23:1)
#loc9 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":24:5)
#loc10 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":31:5)
#loc11 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":25:9)
#loc12 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":25:20)
#loc13 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":27:9)
#loc14 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":30:9)
#loc15 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":27:18)
#loc16 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":27:14)
#loc17 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":27:21)
#loc18 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":27:33)
#loc19 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":27:23)
#loc20 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":28:9)
#loc21 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":29:13)
#loc22 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":27:41)
#loc23 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":27:40)
#loc24 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":39:1)
#loc25 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":49:1)
#loc28 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":40:1)
#loc29 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":41:5)
#loc30 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":48:5)
#loc31 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":42:9)
#loc32 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":42:20)
#loc33 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":44:9)
#loc34 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":47:9)
#loc35 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":44:18)
#loc36 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":44:14)
#loc37 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":44:21)
#loc38 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":44:33)
#loc39 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":44:23)
#loc40 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":45:9)
#loc41 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":46:23)
#loc42 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":46:13)
#loc43 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":44:41)
#loc44 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":44:40)
#loc45 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":52:1)
#loc46 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":65:1)
#loc49 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":53:1)
#loc50 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":54:5)
#loc51 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":64:5)
#loc52 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":55:9)
#loc53 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":55:20)
#loc54 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":57:9)
#loc55 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":63:9)
#loc56 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":57:13)
#loc57 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":57:21)
#loc58 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":57:23)
#loc59 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":57:26)
#loc60 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":57:35)
#loc61 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":58:9)
#loc62 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":59:13)
#loc63 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":62:13)
#loc64 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":59:22)
#loc65 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":59:18)
#loc66 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":59:25)
#loc67 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":59:37)
#loc68 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":59:27)
#loc69 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":60:13)
#loc70 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":61:27)
#loc71 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":61:17)
#loc72 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":59:45)
#loc73 = loc("CWE400_Resource_Exhaustion__rand_for_loop_53d.c":59:44)
#loc74 = loc(fused[#loc1, #loc2])
#loc75 = loc(fused[#loc4, #loc5])
#loc77 = loc(fused[#loc9, #loc10])
#loc78 = loc(fused[#loc11, #loc12])
#loc79 = loc(fused[#loc13, #loc14])
#loc80 = loc(fused[#loc16, #loc15])
#loc81 = loc(fused[#loc17, #loc18])
#loc82 = loc(fused[#loc20, #loc14])
#loc83 = loc(fused[#loc23, #loc22])
#loc84 = loc(fused[#loc24, #loc25])
#loc86 = loc(fused[#loc29, #loc30])
#loc87 = loc(fused[#loc31, #loc32])
#loc88 = loc(fused[#loc33, #loc34])
#loc89 = loc(fused[#loc36, #loc35])
#loc90 = loc(fused[#loc37, #loc38])
#loc91 = loc(fused[#loc40, #loc34])
#loc92 = loc(fused[#loc44, #loc43])
#loc93 = loc(fused[#loc45, #loc46])
#loc95 = loc(fused[#loc50, #loc51])
#loc96 = loc(fused[#loc52, #loc53])
#loc97 = loc(fused[#loc54, #loc55])
#loc98 = loc(fused[#loc56, #loc57])
#loc99 = loc(fused[#loc59, #loc60])
#loc100 = loc(fused[#loc61, #loc55])
#loc101 = loc(fused[#loc62, #loc63])
#loc102 = loc(fused[#loc65, #loc64])
#loc103 = loc(fused[#loc66, #loc67])
#loc104 = loc(fused[#loc69, #loc63])
#loc105 = loc(fused[#loc73, #loc72])
