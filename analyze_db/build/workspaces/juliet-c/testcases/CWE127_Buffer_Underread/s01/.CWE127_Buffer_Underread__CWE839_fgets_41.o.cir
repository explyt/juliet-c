!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc15 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":24:21)
#loc16 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":24:25)
#loc70 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":96:25)
#loc71 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":96:29)
#loc123 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":67:25)
#loc124 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":67:29)
#true = #cir.bool<true> : !cir.bool
#loc159 = loc(fused[#loc15, #loc16])
#loc178 = loc(fused[#loc70, #loc71])
#loc195 = loc(fused[#loc123, #loc124])
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__CWE839_fgets_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc153)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc154)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc155)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc156)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printIntLine(!s32i) loc(#loc157)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is too big.\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc12)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc15, #loc16])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc159)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc17)
    cir.scope {
      %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc161)
      %2 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc161)
      cir.store %2, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc161)
      cir.scope {
        %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc24)
        %4 = cir.const #cir.int<10> : !s32i loc(#loc25)
        %5 = cir.cmp(lt, %3, %4) : !s32i, !cir.bool loc(#loc163)
        cir.if %5 {
          %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc29)
          %7 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc30)
          %8 = cir.ptr_stride(%7 : !cir.ptr<!s32i>, %6 : !s32i), !cir.ptr<!s32i> loc(#loc30)
          %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc30)
          cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc31)
        } else {
          %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc12)
          %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc12)
          cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc32)
        } loc(#loc164)
      } loc(#loc162)
    } loc(#loc160)
    cir.return loc(#loc14)
  } loc(#loc158)
  cir.func no_proto @CWE127_Buffer_Underread__CWE839_fgets_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc166)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc37)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc38)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc167)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc169)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc169)
      cir.store %5, %4 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc169)
      cir.scope {
        %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc46)
        %7 = cir.const #cir.int<3> : !s32i loc(#loc47)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc47)
        %9 = cir.const #cir.int<4> : !u64i loc(#loc47)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc47)
        %11 = cir.const #cir.int<2> : !s32i loc(#loc47)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc47)
        %13 = cir.binop(add, %10, %12) : !u64i loc(#loc47)
        %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc47)
        %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc154)
        %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc48)
        %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc49)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc50)
        %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc50)
        %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc171)
        cir.if %20 {
          %21 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc54)
          %22 = cir.call @atoi(%21) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc55)
          cir.store %22, %0 : !s32i, !cir.ptr<!s32i> loc(#loc173)
        } else {
          %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
          %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc58)
        } loc(#loc172)
      } loc(#loc170)
    } loc(#loc168)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc59)
    cir.call @badSink(%3) : (!s32i) -> () loc(#loc60)
    cir.return loc(#loc34)
  } loc(#loc165)
  cir.func no_proto @CWE127_Buffer_Underread__CWE839_fgets_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc175)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc63)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc176)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc65)
    cir.return loc(#loc62)
  } loc(#loc174)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc67)
  cir.func internal private @goodB2GSink(%arg0: !s32i loc(fused[#loc70, #loc71])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc178)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc72)
    cir.scope {
      %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc180)
      %2 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc180)
      cir.store %2, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc180)
      cir.scope {
        %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc79)
        %4 = cir.const #cir.int<0> : !s32i loc(#loc80)
        %5 = cir.cmp(ge, %3, %4) : !s32i, !cir.bool loc(#loc182)
        %6 = cir.ternary(%5, true {
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc82)
          %8 = cir.const #cir.int<10> : !s32i loc(#loc83)
          %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc183)
          %10 = cir.ternary(%9, true {
            %11 = cir.const #true loc(#loc81)
            cir.yield %11 : !cir.bool loc(#loc81)
          }, false {
            %11 = cir.const #false loc(#loc81)
            cir.yield %11 : !cir.bool loc(#loc81)
          }) : (!cir.bool) -> !cir.bool loc(#loc81)
          cir.yield %10 : !cir.bool loc(#loc81)
        }, false {
          %7 = cir.const #false loc(#loc81)
          cir.yield %7 : !cir.bool loc(#loc81)
        }) : (!cir.bool) -> !cir.bool loc(#loc81)
        cir.if %6 {
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc88)
          %8 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc89)
          %9 = cir.ptr_stride(%8 : !cir.ptr<!s32i>, %7 : !s32i), !cir.ptr<!s32i> loc(#loc89)
          %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc89)
          cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc90)
        } else {
          %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc67)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc67)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc91)
        } loc(#loc184)
      } loc(#loc181)
    } loc(#loc179)
    cir.return loc(#loc69)
  } loc(#loc177)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc186)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc96)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc97)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc187)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc189)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc189)
      cir.store %5, %4 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc189)
      cir.scope {
        %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc105)
        %7 = cir.const #cir.int<3> : !s32i loc(#loc106)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc106)
        %9 = cir.const #cir.int<4> : !u64i loc(#loc106)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc106)
        %11 = cir.const #cir.int<2> : !s32i loc(#loc106)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc106)
        %13 = cir.binop(add, %10, %12) : !u64i loc(#loc106)
        %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc106)
        %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc154)
        %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc107)
        %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc108)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc109)
        %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc109)
        %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc191)
        cir.if %20 {
          %21 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc113)
          %22 = cir.call @atoi(%21) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc114)
          cir.store %22, %0 : !s32i, !cir.ptr<!s32i> loc(#loc193)
        } else {
          %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc117)
          %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc117)
          cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc118)
        } loc(#loc192)
      } loc(#loc190)
    } loc(#loc188)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc119)
    cir.call @goodB2GSink(%3) : (!s32i) -> () loc(#loc120)
    cir.return loc(#loc93)
  } loc(#loc185)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc123, #loc124])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc195)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc125)
    cir.scope {
      %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc197)
      %2 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc197)
      cir.store %2, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc197)
      cir.scope {
        %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc132)
        %4 = cir.const #cir.int<10> : !s32i loc(#loc133)
        %5 = cir.cmp(lt, %3, %4) : !s32i, !cir.bool loc(#loc199)
        cir.if %5 {
          %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc137)
          %7 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc138)
          %8 = cir.ptr_stride(%7 : !cir.ptr<!s32i>, %6 : !s32i), !cir.ptr<!s32i> loc(#loc138)
          %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc138)
          cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc139)
        } else {
          %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc140)
          %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc140)
          cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc141)
        } loc(#loc200)
      } loc(#loc198)
    } loc(#loc196)
    cir.return loc(#loc122)
  } loc(#loc194)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc202)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc146)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc147)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc203)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc149)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc204)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc151)
    cir.call @goodG2BSink(%4) : (!s32i) -> () loc(#loc152)
    cir.return loc(#loc143)
  } loc(#loc201)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__CWE839_fgets_41.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":56:23)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":36:23)
#loc13 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":24:1)
#loc14 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":39:1)
#loc17 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":25:1)
#loc18 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":26:5)
#loc19 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":38:5)
#loc20 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":27:9)
#loc21 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":27:30)
#loc22 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":30:9)
#loc23 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":37:9)
#loc24 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":30:13)
#loc25 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":30:20)
#loc26 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":31:9)
#loc27 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":33:9)
#loc28 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":35:9)
#loc29 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":32:33)
#loc30 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":32:26)
#loc31 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":32:13)
#loc32 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":36:13)
#loc33 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":41:1)
#loc34 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":60:1)
#loc35 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":43:5)
#loc36 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":43:9)
#loc37 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":45:13)
#loc38 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":45:12)
#loc39 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":45:5)
#loc40 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":46:5)
#loc41 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":58:5)
#loc42 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":47:9)
#loc43 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":47:45)
#loc44 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":49:9)
#loc45 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":57:9)
#loc46 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":49:19)
#loc47 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":49:32)
#loc48 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":49:49)
#loc49 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":49:13)
#loc50 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":49:59)
#loc51 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":50:9)
#loc52 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":53:9)
#loc53 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":55:9)
#loc54 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":52:25)
#loc55 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":52:20)
#loc56 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":52:13)
#loc57 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":52:36)
#loc58 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":56:13)
#loc59 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":59:13)
#loc60 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":59:5)
#loc61 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":133:1)
#loc62 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":137:1)
#loc63 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":135:5)
#loc64 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":135:13)
#loc65 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":136:5)
#loc66 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":136:13)
#loc67 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":107:23)
#loc68 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":96:1)
#loc69 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":110:1)
#loc72 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":97:1)
#loc73 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":98:5)
#loc74 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":109:5)
#loc75 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":99:9)
#loc76 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":99:30)
#loc77 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":101:9)
#loc78 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":108:9)
#loc79 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":101:13)
#loc80 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":101:21)
#loc81 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":101:23)
#loc82 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":101:26)
#loc83 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":101:34)
#loc84 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":101:36)
#loc85 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":102:9)
#loc86 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":104:9)
#loc87 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":106:9)
#loc88 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":103:33)
#loc89 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":103:26)
#loc90 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":103:13)
#loc91 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":107:13)
#loc92 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":112:1)
#loc93 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":131:1)
#loc94 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":114:5)
#loc95 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":114:9)
#loc96 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":116:13)
#loc97 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":116:12)
#loc98 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":116:5)
#loc99 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":117:5)
#loc100 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":129:5)
#loc101 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":118:9)
#loc102 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":118:45)
#loc103 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":120:9)
#loc104 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":128:9)
#loc105 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":120:19)
#loc106 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":120:32)
#loc107 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":120:49)
#loc108 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":120:13)
#loc109 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":120:59)
#loc110 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":121:9)
#loc111 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":124:9)
#loc112 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":126:9)
#loc113 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":123:25)
#loc114 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":123:20)
#loc115 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":123:13)
#loc116 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":123:36)
#loc117 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":127:23)
#loc118 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":127:13)
#loc119 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":130:17)
#loc120 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":130:5)
#loc121 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":67:1)
#loc122 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":82:1)
#loc125 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":68:1)
#loc126 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":69:5)
#loc127 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":81:5)
#loc128 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":70:9)
#loc129 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":70:30)
#loc130 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":73:9)
#loc131 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":80:9)
#loc132 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":73:13)
#loc133 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":73:20)
#loc134 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":74:9)
#loc135 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":76:9)
#loc136 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":78:9)
#loc137 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":75:33)
#loc138 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":75:26)
#loc139 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":75:13)
#loc140 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":79:23)
#loc141 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":79:13)
#loc142 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":84:1)
#loc143 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":93:1)
#loc144 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":86:5)
#loc145 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":86:9)
#loc146 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":88:13)
#loc147 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":88:12)
#loc148 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":88:5)
#loc149 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":91:12)
#loc150 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":91:5)
#loc151 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":92:17)
#loc152 = loc("CWE127_Buffer_Underread__CWE839_fgets_41.c":92:5)
#loc153 = loc(fused[#loc1, #loc2])
#loc154 = loc(fused[#loc3, #loc4])
#loc155 = loc(fused[#loc5, #loc6])
#loc156 = loc(fused[#loc7, #loc8])
#loc157 = loc(fused[#loc10, #loc11])
#loc158 = loc(fused[#loc13, #loc14])
#loc160 = loc(fused[#loc18, #loc19])
#loc161 = loc(fused[#loc20, #loc21])
#loc162 = loc(fused[#loc22, #loc23])
#loc163 = loc(fused[#loc24, #loc25])
#loc164 = loc(fused[#loc26, #loc27, #loc28, #loc23])
#loc165 = loc(fused[#loc33, #loc34])
#loc166 = loc(fused[#loc35, #loc36])
#loc167 = loc(fused[#loc39, #loc37])
#loc168 = loc(fused[#loc40, #loc41])
#loc169 = loc(fused[#loc42, #loc43])
#loc170 = loc(fused[#loc44, #loc45])
#loc171 = loc(fused[#loc49, #loc50])
#loc172 = loc(fused[#loc51, #loc52, #loc53, #loc45])
#loc173 = loc(fused[#loc56, #loc57])
#loc174 = loc(fused[#loc61, #loc62])
#loc175 = loc(fused[#loc63, #loc64])
#loc176 = loc(fused[#loc65, #loc66])
#loc177 = loc(fused[#loc68, #loc69])
#loc179 = loc(fused[#loc73, #loc74])
#loc180 = loc(fused[#loc75, #loc76])
#loc181 = loc(fused[#loc77, #loc78])
#loc182 = loc(fused[#loc79, #loc80])
#loc183 = loc(fused[#loc82, #loc84])
#loc184 = loc(fused[#loc85, #loc86, #loc87, #loc78])
#loc185 = loc(fused[#loc92, #loc93])
#loc186 = loc(fused[#loc94, #loc95])
#loc187 = loc(fused[#loc98, #loc96])
#loc188 = loc(fused[#loc99, #loc100])
#loc189 = loc(fused[#loc101, #loc102])
#loc190 = loc(fused[#loc103, #loc104])
#loc191 = loc(fused[#loc108, #loc109])
#loc192 = loc(fused[#loc110, #loc111, #loc112, #loc104])
#loc193 = loc(fused[#loc115, #loc116])
#loc194 = loc(fused[#loc121, #loc122])
#loc196 = loc(fused[#loc126, #loc127])
#loc197 = loc(fused[#loc128, #loc129])
#loc198 = loc(fused[#loc130, #loc131])
#loc199 = loc(fused[#loc132, #loc133])
#loc200 = loc(fused[#loc134, #loc135, #loc136, #loc131])
#loc201 = loc(fused[#loc142, #loc143])
#loc202 = loc(fused[#loc144, #loc145])
#loc203 = loc(fused[#loc148, #loc146])
#loc204 = loc(fused[#loc150, #loc149])
