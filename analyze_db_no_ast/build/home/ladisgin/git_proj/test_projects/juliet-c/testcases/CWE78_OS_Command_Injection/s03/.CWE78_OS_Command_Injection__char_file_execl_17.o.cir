!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s03/CWE78_OS_Command_Injection__char_file_execl_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc120)
  cir.func private  @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc121)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc5)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"r\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc6)
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc122)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc123)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc11)
  cir.func private  @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc124)
  cir.func private  @execl(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc125)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"/bin/sh\00" : !cir.array<!s8i x 8>> : !cir.array<!s8i x 8> {alignment = 1 : i64} loc(#loc16)
  cir.global "private"  constant internal dsolocal @".str4" = #cir.const_array<"-c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc17)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_file_execl_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc127)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc128)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc129)
    %3 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc129)
    cir.store %3, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc129)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc26)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc130)
    cir.scope {
      %14 = cir.const #cir.int<0> : !s32i loc(#loc30)
      cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc132)
      cir.for : cond {
        %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc32)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc33)
        %17 = cir.cmp(lt, %15, %16) : !s32i, !s32i loc(#loc133)
        %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc34)
        cir.condition(%18) loc(#loc34)
      } body {
        cir.scope {
          cir.scope {
            %15 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc136)
            %16 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile"] {alignment = 8 : i64} loc(#loc137)
            %17 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc42)
            %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
            %19 = cir.call @strlen(%18) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc42)
            cir.store %19, %15 : !u64i, !cir.ptr<!u64i> loc(#loc136)
            cir.scope {
              %20 = cir.const #cir.int<100> : !s32i loc(#loc46)
              %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc46)
              %22 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc47)
              %23 = cir.binop(sub, %21, %22) : !u64i loc(#loc139)
              %24 = cir.const #cir.int<1> : !s32i loc(#loc48)
              %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc48)
              %26 = cir.cmp(gt, %23, %25) : !u64i, !s32i loc(#loc140)
              %27 = cir.cast(int_to_bool, %26 : !s32i), !cir.bool loc(#loc49)
              cir.if %27 {
                %28 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc51)
                %29 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc5)
                %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc5)
                %31 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc6)
                %32 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc6)
                %33 = cir.call @fopen(%30, %32) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc51)
                cir.store %33, %16 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc142)
                cir.scope {
                  %34 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc56)
                  %35 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc57)
                  %36 = cir.cast(bitcast, %35 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc57)
                  %37 = cir.cmp(ne, %34, %36) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc144)
                  %38 = cir.cast(int_to_bool, %37 : !s32i), !cir.bool loc(#loc58)
                  cir.if %38 {
                    cir.scope {
                      %41 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
                      %42 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc63)
                      %43 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc64)
                      %44 = cir.const #cir.int<100> : !s32i loc(#loc65)
                      %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc65)
                      %46 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc66)
                      %47 = cir.binop(sub, %45, %46) : !u64i loc(#loc147)
                      %48 = cir.cast(integral, %47 : !u64i), !s32i loc(#loc147)
                      %49 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc67)
                      %50 = cir.call @fgets(%43, %48, %49) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc68)
                      %51 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc69)
                      %52 = cir.cast(bitcast, %51 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc69)
                      %53 = cir.cmp(eq, %50, %52) : !cir.ptr<!s8i>, !s32i loc(#loc148)
                      %54 = cir.cast(int_to_bool, %53 : !s32i), !cir.bool loc(#loc70)
                      cir.if %54 {
                        %55 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc11)
                        %56 = cir.cast(array_to_ptrdecay, %55 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc11)
                        cir.call @printLine(%56) : (!cir.ptr<!s8i>) -> () loc(#loc72)
                        %57 = cir.const #cir.int<0> : !s32i loc(#loc73)
                        %58 = cir.cast(integral, %57 : !s32i), !s8i loc(#loc73)
                        %59 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
                        %60 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc75)
                        %61 = cir.ptr_stride(%59 : !cir.ptr<!s8i>, %60 : !u64i), !cir.ptr<!s8i> loc(#loc76)
                        cir.store %58, %61 : !s8i, !cir.ptr<!s8i> loc(#loc150)
                      } loc(#loc149)
                    } loc(#loc146)
                    %39 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc77)
                    %40 = cir.call @fclose(%39) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc78)
                  } loc(#loc145)
                } loc(#loc143)
              } loc(#loc141)
            } loc(#loc138)
          } loc(#loc135)
        } loc(#loc134)
        cir.yield loc(#loc29)
      } step {
        %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc79)
        %16 = cir.unary(inc, %15) : !s32i, !s32i loc(#loc80)
        cir.store %16, %0 : !s32i, !cir.ptr<!s32i> loc(#loc151)
        cir.yield loc(#loc131)
      } loc(#loc131)
    } loc(#loc131)
    %5 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc16)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc16)
    %7 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc81)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc81)
    %9 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc17)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc17)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc83)
    %13 = cir.call @execl(%6, %8, %10, %11, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc84)
    cir.return loc(#loc19)
  } loc(#loc126)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_file_execl_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc153)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc87)
    cir.return loc(#loc86)
  } loc(#loc152)
  cir.func private  @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc154)
  cir.global "private"  constant internal dsolocal @".str5" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc91)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc156)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc157)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc158)
    %3 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc158)
    cir.store %3, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc158)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc100)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc159)
    cir.scope {
      %14 = cir.const #cir.int<0> : !s32i loc(#loc104)
      cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc161)
      cir.for : cond {
        %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc106)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc107)
        %17 = cir.cmp(lt, %15, %16) : !s32i, !s32i loc(#loc162)
        %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc108)
        cir.condition(%18) loc(#loc108)
      } body {
        cir.scope {
          %15 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc110)
          %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
          %17 = cir.get_global @".str5" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc91)
          %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc91)
          %19 = cir.call @strcat(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc110)
        } loc(#loc163)
        cir.yield loc(#loc103)
      } step {
        %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc112)
        %16 = cir.unary(inc, %15) : !s32i, !s32i loc(#loc113)
        cir.store %16, %0 : !s32i, !cir.ptr<!s32i> loc(#loc164)
        cir.yield loc(#loc160)
      } loc(#loc160)
    } loc(#loc160)
    %5 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc114)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc114)
    %7 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc115)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc115)
    %9 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc116)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc116)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc118)
    %13 = cir.call @execl(%6, %8, %10, %11, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc119)
    cir.return loc(#loc93)
  } loc(#loc155)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s03/CWE78_OS_Command_Injection__char_file_execl_17.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/stdio.h":264:1)
#loc4 = loc("/usr/include/stdio.h":266:3)
#loc5 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":66:31)
#loc6 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":66:41)
#loc7 = loc("/usr/include/stdio.h":654:1)
#loc8 = loc("/usr/include/stdio.h":655:59)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":72:35)
#loc12 = loc("/usr/include/stdio.h":184:1)
#loc13 = loc("/usr/include/stdio.h":184:36)
#loc14 = loc("/usr/include/unistd.h":594:1)
#loc15 = loc("/usr/include/unistd.h":595:14)
#loc16 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":83:11)
#loc17 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":83:47)
#loc18 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":51:1)
#loc19 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":84:1)
#loc20 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":53:5)
#loc21 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":53:9)
#loc22 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":54:5)
#loc23 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":54:12)
#loc24 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":55:5)
#loc25 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":55:28)
#loc26 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":56:12)
#loc27 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":56:5)
#loc28 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":57:5)
#loc29 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":80:5)
#loc30 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":57:13)
#loc31 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":57:9)
#loc32 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":57:16)
#loc33 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":57:20)
#loc34 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":57:18)
#loc35 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":58:5)
#loc36 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":59:9)
#loc37 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":79:9)
#loc38 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":61:13)
#loc39 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":61:41)
#loc40 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":62:13)
#loc41 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":62:20)
#loc42 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":61:30)
#loc43 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":61:37)
#loc44 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":64:13)
#loc45 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":78:13)
#loc46 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":64:17)
#loc47 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":64:21)
#loc48 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":64:31)
#loc49 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":64:29)
#loc50 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":65:13)
#loc51 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":66:25)
#loc52 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":66:17)
#loc53 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":66:44)
#loc54 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":67:17)
#loc55 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":77:17)
#loc56 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":67:21)
#loc57 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":67:30)
#loc58 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":67:27)
#loc59 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":68:17)
#loc60 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":70:21)
#loc61 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":75:21)
#loc62 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":70:31)
#loc63 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":70:36)
#loc64 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":70:35)
#loc65 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":70:51)
#loc66 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":70:55)
#loc67 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":70:65)
#loc68 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":70:25)
#loc69 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":70:75)
#loc70 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":70:72)
#loc71 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":71:21)
#loc72 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":72:25)
#loc73 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":74:41)
#loc74 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":74:25)
#loc75 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":74:30)
#loc76 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":74:37)
#loc77 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":76:28)
#loc78 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":76:21)
#loc79 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":57:24)
#loc80 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":57:23)
#loc81 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":83:29)
#loc82 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":83:61)
#loc83 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":83:75)
#loc84 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":83:5)
#loc85 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":107:1)
#loc86 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":110:1)
#loc87 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":109:5)
#loc88 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":109:13)
#loc89 = loc("/usr/include/string.h":149:1)
#loc90 = loc("/usr/include/string.h":150:14)
#loc91 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":100:22)
#loc92 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":91:1)
#loc93 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":105:1)
#loc94 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":93:5)
#loc95 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":93:9)
#loc96 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":94:5)
#loc97 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":94:12)
#loc98 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":95:5)
#loc99 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":95:28)
#loc100 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":96:12)
#loc101 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":96:5)
#loc102 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":97:5)
#loc103 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":101:5)
#loc104 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":97:13)
#loc105 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":97:9)
#loc106 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":97:16)
#loc107 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":97:20)
#loc108 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":97:18)
#loc109 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":98:5)
#loc110 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":100:9)
#loc111 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":100:16)
#loc112 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":97:24)
#loc113 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":97:23)
#loc114 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":104:11)
#loc115 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":104:29)
#loc116 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":104:47)
#loc117 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":104:61)
#loc118 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":104:75)
#loc119 = loc("CWE78_OS_Command_Injection__char_file_execl_17.c":104:5)
#loc120 = loc(fused[#loc1, #loc2])
#loc121 = loc(fused[#loc3, #loc4])
#loc122 = loc(fused[#loc7, #loc8])
#loc123 = loc(fused[#loc9, #loc10])
#loc124 = loc(fused[#loc12, #loc13])
#loc125 = loc(fused[#loc14, #loc15])
#loc126 = loc(fused[#loc18, #loc19])
#loc127 = loc(fused[#loc20, #loc21])
#loc128 = loc(fused[#loc22, #loc23])
#loc129 = loc(fused[#loc24, #loc25])
#loc130 = loc(fused[#loc27, #loc26])
#loc131 = loc(fused[#loc28, #loc29])
#loc132 = loc(fused[#loc31, #loc30])
#loc133 = loc(fused[#loc32, #loc33])
#loc134 = loc(fused[#loc35, #loc29])
#loc135 = loc(fused[#loc36, #loc37])
#loc136 = loc(fused[#loc38, #loc39])
#loc137 = loc(fused[#loc40, #loc41])
#loc138 = loc(fused[#loc44, #loc45])
#loc139 = loc(fused[#loc46, #loc47])
#loc140 = loc(fused[#loc46, #loc48])
#loc141 = loc(fused[#loc50, #loc45])
#loc142 = loc(fused[#loc52, #loc53])
#loc143 = loc(fused[#loc54, #loc55])
#loc144 = loc(fused[#loc56, #loc57])
#loc145 = loc(fused[#loc59, #loc55])
#loc146 = loc(fused[#loc60, #loc61])
#loc147 = loc(fused[#loc65, #loc66])
#loc148 = loc(fused[#loc68, #loc69])
#loc149 = loc(fused[#loc71, #loc61])
#loc150 = loc(fused[#loc74, #loc73])
#loc151 = loc(fused[#loc80, #loc79])
#loc152 = loc(fused[#loc85, #loc86])
#loc153 = loc(fused[#loc87, #loc88])
#loc154 = loc(fused[#loc89, #loc90])
#loc155 = loc(fused[#loc92, #loc93])
#loc156 = loc(fused[#loc94, #loc95])
#loc157 = loc(fused[#loc96, #loc97])
#loc158 = loc(fused[#loc98, #loc99])
#loc159 = loc(fused[#loc101, #loc100])
#loc160 = loc(fused[#loc102, #loc103])
#loc161 = loc(fused[#loc105, #loc104])
#loc162 = loc(fused[#loc106, #loc107])
#loc163 = loc(fused[#loc109, #loc103])
#loc164 = loc(fused[#loc113, #loc112])
