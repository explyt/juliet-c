!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc7 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":27:23)
#loc8 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":27:30)
#loc39 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":50:27)
#loc40 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":50:34)
#loc67 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":68:27)
#loc68 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":68:34)
#loc109 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":106:10)
#loc110 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":106:14)
#loc111 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":106:20)
#loc112 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":106:32)
#loc128 = loc(fused[#loc7, #loc8])
#loc141 = loc(fused[#loc39, #loc40])
#loc153 = loc(fused[#loc67, #loc68])
#loc169 = loc(fused[#loc109, #loc110])
#loc170 = loc(fused[#loc111, #loc112])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE415_Double_Free/s01/CWE415_Double_Free__malloc_free_int_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc125)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc126)
  cir.func internal private @_ZN38CWE415_Double_Free__malloc_free_int_43L9badSourceERPi(%arg0: !cir.ptr<!cir.ptr<!s32i>> loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc128)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc9)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc10)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc11)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc11)
    %4 = cir.const #cir.int<4> : !u64i loc(#loc129)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc130)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc10)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc131)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc15)
    cir.store %7, %8 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc132)
    cir.scope {
      %13 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc18)
      %14 = cir.load %13 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc18)
      %15 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc19)
      %16 = cir.cmp(eq, %14, %15) : !cir.ptr<!s32i>, !cir.bool loc(#loc134)
      cir.if %16 {
        %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc21)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc22)
        %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc23)
        cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc21)
      } loc(#loc135)
    } loc(#loc133)
    %9 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc24)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc25)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc25)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc25)
    cir.call @free(%12) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc24)
    cir.return loc(#loc6)
  } loc(#loc127)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc136)
  cir.func @_ZN38CWE415_Double_Free__malloc_free_int_433badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc138)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc32)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc139)
    cir.call @_ZN38CWE415_Double_Free__malloc_free_int_43L9badSourceERPi(%0) : (!cir.ptr<!cir.ptr<!s32i>>) -> () loc(#loc34)
    %2 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc35)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc36)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc36)
    cir.call @free(%4) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc35)
    cir.return loc(#loc29)
  } loc(#loc137)
  cir.func internal private @_ZN38CWE415_Double_Free__malloc_free_int_43L13goodG2BSourceERPi(%arg0: !cir.ptr<!cir.ptr<!s32i>> loc(fused[#loc39, #loc40])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc141)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc41)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc42)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc43)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc43)
    %4 = cir.const #cir.int<4> : !u64i loc(#loc142)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc143)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc42)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc144)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc47)
    cir.store %7, %8 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc145)
    cir.scope {
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc50)
      %10 = cir.load %9 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc50)
      %11 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc51)
      %12 = cir.cmp(eq, %10, %11) : !cir.ptr<!s32i>, !cir.bool loc(#loc147)
      cir.if %12 {
        %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc53)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc54)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc55)
        cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc53)
      } loc(#loc148)
    } loc(#loc146)
    cir.return loc(#loc38)
  } loc(#loc140)
  cir.func internal private @_ZN38CWE415_Double_Free__malloc_free_int_43L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc150)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc60)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc151)
    cir.call @_ZN38CWE415_Double_Free__malloc_free_int_43L13goodG2BSourceERPi(%0) : (!cir.ptr<!cir.ptr<!s32i>>) -> () loc(#loc62)
    %2 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc63)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc64)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc64)
    cir.call @free(%4) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc63)
    cir.return loc(#loc57)
  } loc(#loc149)
  cir.func internal private @_ZN38CWE415_Double_Free__malloc_free_int_43L13goodB2GSourceERPi(%arg0: !cir.ptr<!cir.ptr<!s32i>> loc(fused[#loc67, #loc68])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc153)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc69)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc70)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc71)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc71)
    %4 = cir.const #cir.int<4> : !u64i loc(#loc154)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc155)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc70)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc156)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc75)
    cir.store %7, %8 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc157)
    cir.scope {
      %13 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc78)
      %14 = cir.load %13 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc78)
      %15 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc79)
      %16 = cir.cmp(eq, %14, %15) : !cir.ptr<!s32i>, !cir.bool loc(#loc159)
      cir.if %16 {
        %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc81)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc82)
        %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc83)
        cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc81)
      } loc(#loc160)
    } loc(#loc158)
    %9 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc84)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc85)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc85)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc85)
    cir.call @free(%12) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc84)
    cir.return loc(#loc66)
  } loc(#loc152)
  cir.func internal private @_ZN38CWE415_Double_Free__malloc_free_int_43L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc162)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc90)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc163)
    cir.call @_ZN38CWE415_Double_Free__malloc_free_int_43L13goodB2GSourceERPi(%0) : (!cir.ptr<!cir.ptr<!s32i>>) -> () loc(#loc92)
    cir.return loc(#loc87)
  } loc(#loc161)
  cir.func @_ZN38CWE415_Double_Free__malloc_free_int_434goodEv() extra(#fn_attr1) {
    cir.call @_ZN38CWE415_Double_Free__malloc_free_int_43L7goodG2BEv() : () -> () loc(#loc95)
    cir.call @_ZN38CWE415_Double_Free__malloc_free_int_43L7goodB2GEv() : () -> () loc(#loc96)
    cir.return loc(#loc94)
  } loc(#loc164)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc165)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc166)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc167)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc103)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc104)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc105)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc106)
  cir.func @main(%arg0: !s32i loc(fused[#loc109, #loc110]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc111, #loc112])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc169)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc170)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc108)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc113)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc113)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc114)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc115)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc115)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc116)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc103)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc103)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc117)
    cir.call @_ZN38CWE415_Double_Free__malloc_free_int_434goodEv() : () -> () loc(#loc118)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc104)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc104)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc119)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc105)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc105)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc120)
    cir.call @_ZN38CWE415_Double_Free__malloc_free_int_433badEv() : () -> () loc(#loc121)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc106)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc106)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc122)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc123)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc171)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc171)
    cir.return %15 : !s32i loc(#loc171)
  } loc(#loc168)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE415_Double_Free/s01/CWE415_Double_Free__malloc_free_int_43.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":27:1)
#loc6 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":33:1)
#loc9 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":28:1)
#loc10 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":29:19)
#loc11 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":29:26)
#loc12 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":29:30)
#loc13 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":29:40)
#loc14 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":29:41)
#loc15 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":29:5)
#loc16 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":30:5)
#loc17 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":30:33)
#loc18 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":30:9)
#loc19 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":30:17)
#loc20 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":30:23)
#loc21 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":30:24)
#loc22 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":30:30)
#loc23 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":30:29)
#loc24 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":32:5)
#loc25 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":32:10)
#loc26 = loc("/usr/include/stdlib.h":687:1)
#loc27 = loc("/usr/include/stdlib.h":687:32)
#loc28 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":35:1)
#loc29 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":43:1)
#loc30 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":37:5)
#loc31 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":37:11)
#loc32 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":39:12)
#loc33 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":39:5)
#loc34 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":40:5)
#loc35 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":42:5)
#loc36 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":42:10)
#loc37 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":50:1)
#loc38 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":55:1)
#loc41 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":51:1)
#loc42 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":52:19)
#loc43 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":52:26)
#loc44 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":52:30)
#loc45 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":52:40)
#loc46 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":52:41)
#loc47 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":52:5)
#loc48 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":53:5)
#loc49 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":53:33)
#loc50 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":53:9)
#loc51 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":53:17)
#loc52 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":53:23)
#loc53 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":53:24)
#loc54 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":53:30)
#loc55 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":53:29)
#loc56 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":57:1)
#loc57 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":65:1)
#loc58 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":59:5)
#loc59 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":59:11)
#loc60 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":61:12)
#loc61 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":61:5)
#loc62 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":62:5)
#loc63 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":64:5)
#loc64 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":64:10)
#loc65 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":68:1)
#loc66 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":74:1)
#loc69 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":69:1)
#loc70 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":70:19)
#loc71 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":70:26)
#loc72 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":70:30)
#loc73 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":70:40)
#loc74 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":70:41)
#loc75 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":70:5)
#loc76 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":71:5)
#loc77 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":71:33)
#loc78 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":71:9)
#loc79 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":71:17)
#loc80 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":71:23)
#loc81 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":71:24)
#loc82 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":71:30)
#loc83 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":71:29)
#loc84 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":73:5)
#loc85 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":73:10)
#loc86 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":76:1)
#loc87 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":85:1)
#loc88 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":78:5)
#loc89 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":78:11)
#loc90 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":80:12)
#loc91 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":80:5)
#loc92 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":81:5)
#loc93 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":87:1)
#loc94 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":91:1)
#loc95 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":89:5)
#loc96 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":90:5)
#loc97 = loc("/usr/include/stdlib.h":575:1)
#loc98 = loc("/usr/include/stdlib.h":575:41)
#loc99 = loc("/usr/include/time.h":76:1)
#loc100 = loc("/usr/include/time.h":76:38)
#loc101 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc102 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc103 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":111:15)
#loc104 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":113:15)
#loc105 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":116:15)
#loc106 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":118:15)
#loc107 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":106:1)
#loc108 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":121:1)
#loc113 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":107:1)
#loc114 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":109:27)
#loc115 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":109:22)
#loc116 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":109:5)
#loc117 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":111:5)
#loc118 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":112:5)
#loc119 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":113:5)
#loc120 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":116:5)
#loc121 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":117:5)
#loc122 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":118:5)
#loc123 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":120:12)
#loc124 = loc("CWE415_Double_Free__malloc_free_int_43.cpp":120:5)
#loc125 = loc(fused[#loc1, #loc2])
#loc126 = loc(fused[#loc3, #loc4])
#loc127 = loc(fused[#loc5, #loc6])
#loc129 = loc(fused[#loc12, #loc13])
#loc130 = loc(fused[#loc11, #loc13])
#loc131 = loc(fused[#loc10, #loc14])
#loc132 = loc(fused[#loc15, #loc14])
#loc133 = loc(fused[#loc16, #loc17])
#loc134 = loc(fused[#loc18, #loc19])
#loc135 = loc(fused[#loc20, #loc17])
#loc136 = loc(fused[#loc26, #loc27])
#loc137 = loc(fused[#loc28, #loc29])
#loc138 = loc(fused[#loc30, #loc31])
#loc139 = loc(fused[#loc33, #loc32])
#loc140 = loc(fused[#loc37, #loc38])
#loc142 = loc(fused[#loc44, #loc45])
#loc143 = loc(fused[#loc43, #loc45])
#loc144 = loc(fused[#loc42, #loc46])
#loc145 = loc(fused[#loc47, #loc46])
#loc146 = loc(fused[#loc48, #loc49])
#loc147 = loc(fused[#loc50, #loc51])
#loc148 = loc(fused[#loc52, #loc49])
#loc149 = loc(fused[#loc56, #loc57])
#loc150 = loc(fused[#loc58, #loc59])
#loc151 = loc(fused[#loc61, #loc60])
#loc152 = loc(fused[#loc65, #loc66])
#loc154 = loc(fused[#loc72, #loc73])
#loc155 = loc(fused[#loc71, #loc73])
#loc156 = loc(fused[#loc70, #loc74])
#loc157 = loc(fused[#loc75, #loc74])
#loc158 = loc(fused[#loc76, #loc77])
#loc159 = loc(fused[#loc78, #loc79])
#loc160 = loc(fused[#loc80, #loc77])
#loc161 = loc(fused[#loc86, #loc87])
#loc162 = loc(fused[#loc88, #loc89])
#loc163 = loc(fused[#loc91, #loc90])
#loc164 = loc(fused[#loc93, #loc94])
#loc165 = loc(fused[#loc97, #loc98])
#loc166 = loc(fused[#loc99, #loc100])
#loc167 = loc(fused[#loc101, #loc102])
#loc168 = loc(fused[#loc107, #loc108])
#loc171 = loc(fused[#loc124, #loc123])
