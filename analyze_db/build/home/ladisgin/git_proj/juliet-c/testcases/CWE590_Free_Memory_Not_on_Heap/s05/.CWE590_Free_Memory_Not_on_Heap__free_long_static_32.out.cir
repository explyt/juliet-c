!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":107:10)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":107:14)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":107:20)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":107:32)
#loc188 = loc(fused[#loc72, #loc73])
#loc189 = loc(fused[#loc74, #loc75])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @CWE590_Free_Memory_Not_on_Heap__free_long_static_32_bad.dataBuffer = #cir.zero : !cir.array<!s64i x 100> {alignment = 16 : i64} loc(#loc1)
  cir.func private @printLongLine(!s64i) loc(#loc160)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc161)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_long_static_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc163)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc164)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc165)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc164)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc165)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc14)
    cir.store %3, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc166)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc168)
      %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc19)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc20)
      cir.store %6, %4 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc168)
      cir.scope {
        %9 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_long_static_32_bad.dataBuffer : !cir.ptr<!cir.array<!s64i x 100>> loc(#loc1)
        cir.scope {
          %11 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc171)
          cir.scope {
            %12 = cir.const #cir.int<0> : !s32i loc(#loc29)
            %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc29)
            cir.store %13, %11 : !u64i, !cir.ptr<!u64i> loc(#loc173)
            cir.for : cond {
              %14 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc31)
              %15 = cir.const #cir.int<100> : !s32i loc(#loc32)
              %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc32)
              %17 = cir.cmp(lt, %14, %16) : !u64i, !cir.bool loc(#loc174)
              cir.condition(%17) loc(#loc33)
            } body {
              cir.scope {
                %14 = cir.const #cir.int<5> : !s64i loc(#loc35)
                %15 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc36)
                %16 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc37)
                %17 = cir.ptr_stride(%16 : !cir.ptr<!s64i>, %15 : !u64i), !cir.ptr<!s64i> loc(#loc37)
                cir.store %14, %17 : !s64i, !cir.ptr<!s64i> loc(#loc176)
              } loc(#loc175)
              cir.yield loc(#loc28)
            } step {
              %14 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc38)
              %15 = cir.unary(inc, %14) : !u64i, !u64i loc(#loc39)
              cir.store %15, %11 : !u64i, !cir.ptr<!u64i> loc(#loc177)
              cir.yield loc(#loc172)
            } loc(#loc172)
          } loc(#loc172)
        } loc(#loc170)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s64i x 100>>), !cir.ptr<!s64i> loc(#loc40)
        cir.store %10, %4 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc178)
      } loc(#loc169)
      %7 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc42)
      %8 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc43)
      cir.store %7, %8 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc179)
    } loc(#loc167)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc181)
      %5 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc48)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc49)
      cir.store %6, %4 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc181)
      %7 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc50)
      %8 = cir.const #cir.int<0> : !s32i loc(#loc51)
      %9 = cir.ptr_stride(%7 : !cir.ptr<!s64i>, %8 : !s32i), !cir.ptr<!s64i> loc(#loc52)
      %10 = cir.load %9 : !cir.ptr<!s64i>, !s64i loc(#loc50)
      cir.call @printLongLine(%10) : (!s64i) -> () loc(#loc53)
      %11 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc54)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc55)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc55)
      cir.call @free(%13) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc54)
    } loc(#loc180)
    cir.return loc(#loc7)
  } loc(#loc162)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_long_static_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc183)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc58)
    cir.return loc(#loc57)
  } loc(#loc182)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc184)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc185)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc186)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc66)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc67)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc68)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc69)
  cir.func @main(%arg0: !s32i loc(fused[#loc72, #loc73]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc74, #loc75])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc188)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc189)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc71)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc76)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc76)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc77)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc78)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc78)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc79)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc66)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    %8 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_long_static_32_good : !cir.ptr<!cir.func<!void ()>> loc(#loc190)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_long_static_32_good() : () -> () loc(#loc81)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc67)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc68)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    %13 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_long_static_32_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc191)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_long_static_32_bad() : () -> () loc(#loc85)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc69)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc88)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc192)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc192)
    cir.return %17 : !s32i loc(#loc192)
  } loc(#loc187)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc193)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc92)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc194)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc196)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc197)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc198)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc197)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc198)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc103)
    cir.store %3, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc199)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc201)
      %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc108)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc109)
      cir.store %6, %4 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc201)
      cir.scope {
        %9 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc203)
        %10 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc114)
        %11 = cir.const #cir.int<100> : !s32i loc(#loc115)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc115)
        %13 = cir.const #cir.int<8> : !u64i loc(#loc204)
        %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc205)
        %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc114)
        %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc206)
        cir.store %16, %9 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc203)
        cir.scope {
          %18 = cir.load %9 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc120)
          %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc121)
          %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc121)
          %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s64i>, !cir.bool loc(#loc208)
          cir.if %21 {
            %22 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc92)
            %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc92)
            cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc123)
            %24 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc124)
            %25 = cir.const #cir.int<1> : !s32i loc(#loc125)
            cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc124)
          } loc(#loc209)
        } loc(#loc207)
        cir.scope {
          %18 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc211)
          cir.scope {
            %19 = cir.const #cir.int<0> : !s32i loc(#loc132)
            %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc132)
            cir.store %20, %18 : !u64i, !cir.ptr<!u64i> loc(#loc213)
            cir.for : cond {
              %21 = cir.load %18 : !cir.ptr<!u64i>, !u64i loc(#loc134)
              %22 = cir.const #cir.int<100> : !s32i loc(#loc135)
              %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc135)
              %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc214)
              cir.condition(%24) loc(#loc136)
            } body {
              cir.scope {
                %21 = cir.const #cir.int<5> : !s64i loc(#loc138)
                %22 = cir.load %9 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc139)
                %23 = cir.load %18 : !cir.ptr<!u64i>, !u64i loc(#loc140)
                %24 = cir.ptr_stride(%22 : !cir.ptr<!s64i>, %23 : !u64i), !cir.ptr<!s64i> loc(#loc141)
                cir.store %21, %24 : !s64i, !cir.ptr<!s64i> loc(#loc216)
              } loc(#loc215)
              cir.yield loc(#loc131)
            } step {
              %21 = cir.load %18 : !cir.ptr<!u64i>, !u64i loc(#loc142)
              %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc143)
              cir.store %22, %18 : !u64i, !cir.ptr<!u64i> loc(#loc217)
              cir.yield loc(#loc212)
            } loc(#loc212)
          } loc(#loc212)
        } loc(#loc210)
        %17 = cir.load %9 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc144)
        cir.store %17, %4 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc218)
      } loc(#loc202)
      %7 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc146)
      %8 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc147)
      cir.store %7, %8 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc219)
    } loc(#loc200)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc221)
      %5 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc152)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc153)
      cir.store %6, %4 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc221)
      %7 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc154)
      %8 = cir.const #cir.int<0> : !s32i loc(#loc155)
      %9 = cir.ptr_stride(%7 : !cir.ptr<!s64i>, %8 : !s32i), !cir.ptr<!s64i> loc(#loc156)
      %10 = cir.load %9 : !cir.ptr<!s64i>, !s64i loc(#loc154)
      cir.call @printLongLine(%10) : (!s64i) -> () loc(#loc157)
      %11 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc158)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc159)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc159)
      cir.call @free(%13) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc158)
    } loc(#loc220)
    cir.return loc(#loc96)
  } loc(#loc195)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":0:0)
#loc1 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":33:25)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":24:1)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":24:35)
#loc4 = loc("/usr/include/stdlib.h":687:1)
#loc5 = loc("/usr/include/stdlib.h":687:32)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":23:1)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":51:1)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":25:5)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":25:12)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":26:5)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":26:25)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":27:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":27:25)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":28:12)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":28:5)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":29:5)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":44:5)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":30:9)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":30:24)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":30:23)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":31:9)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":42:9)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":34:13)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":40:13)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":35:17)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":35:24)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":36:17)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":39:17)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":36:26)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":36:22)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":36:29)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":36:33)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":36:31)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":37:17)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":38:37)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":38:32)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":38:21)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":36:39)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":36:38)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":41:20)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":41:13)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":43:21)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":43:10)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":43:9)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":45:5)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":50:5)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":46:9)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":46:24)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":46:23)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":47:23)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":47:28)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":47:29)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":47:9)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":49:9)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":49:14)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":93:1)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":96:1)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":95:5)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":95:13)
#loc60 = loc("/usr/include/stdlib.h":575:1)
#loc61 = loc("/usr/include/stdlib.h":575:41)
#loc62 = loc("/usr/include/time.h":76:1)
#loc63 = loc("/usr/include/time.h":76:38)
#loc64 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc65 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":112:15)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":114:15)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":117:15)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":119:15)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":107:1)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":122:1)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":108:1)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":110:27)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":110:22)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":110:5)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":112:5)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":113:5)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":113:62)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":114:5)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":117:5)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":118:5)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":118:61)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":119:5)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":121:12)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":121:5)
#loc90 = loc("/usr/include/stdlib.h":672:1)
#loc91 = loc("/usr/include/stdlib.h":672:45)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":71:27)
#loc93 = loc("/usr/include/stdlib.h":756:1)
#loc94 = loc("/usr/include/stdlib.h":756:70)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":58:1)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":91:1)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":60:5)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":60:12)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":61:5)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":61:25)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":62:5)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":62:25)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":63:12)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":63:5)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":64:5)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":84:5)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":65:9)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":65:24)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":65:23)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":66:9)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":82:9)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":68:13)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":68:64)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":68:41)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":68:48)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":68:52)
#loc117 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":68:63)
#loc118 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":69:13)
#loc119 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":73:13)
#loc120 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":69:17)
#loc121 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":69:31)
#loc122 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":70:13)
#loc123 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":71:17)
#loc124 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":72:17)
#loc125 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":72:22)
#loc126 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":74:13)
#loc127 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":80:13)
#loc128 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":75:17)
#loc129 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":75:24)
#loc130 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":76:17)
#loc131 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":79:17)
#loc132 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":76:26)
#loc133 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":76:22)
#loc134 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":76:29)
#loc135 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":76:33)
#loc136 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":76:31)
#loc137 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":77:17)
#loc138 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":78:37)
#loc139 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":78:21)
#loc140 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":78:32)
#loc141 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":78:33)
#loc142 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":76:39)
#loc143 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":76:38)
#loc144 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":81:20)
#loc145 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":81:13)
#loc146 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":83:21)
#loc147 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":83:10)
#loc148 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":83:9)
#loc149 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":85:5)
#loc150 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":90:5)
#loc151 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":86:9)
#loc152 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":86:24)
#loc153 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":86:23)
#loc154 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":87:23)
#loc155 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":87:28)
#loc156 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":87:29)
#loc157 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":87:9)
#loc158 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":89:9)
#loc159 = loc("CWE590_Free_Memory_Not_on_Heap__free_long_static_32.c":89:14)
#loc160 = loc(fused[#loc2, #loc3])
#loc161 = loc(fused[#loc4, #loc5])
#loc162 = loc(fused[#loc6, #loc7])
#loc163 = loc(fused[#loc8, #loc9])
#loc164 = loc(fused[#loc10, #loc11])
#loc165 = loc(fused[#loc12, #loc13])
#loc166 = loc(fused[#loc15, #loc14])
#loc167 = loc(fused[#loc16, #loc17])
#loc168 = loc(fused[#loc18, #loc19])
#loc169 = loc(fused[#loc21, #loc22])
#loc170 = loc(fused[#loc23, #loc24])
#loc171 = loc(fused[#loc25, #loc26])
#loc172 = loc(fused[#loc27, #loc28])
#loc173 = loc(fused[#loc30, #loc29])
#loc174 = loc(fused[#loc31, #loc32])
#loc175 = loc(fused[#loc34, #loc28])
#loc176 = loc(fused[#loc37, #loc35])
#loc177 = loc(fused[#loc39, #loc38])
#loc178 = loc(fused[#loc41, #loc40])
#loc179 = loc(fused[#loc44, #loc42])
#loc180 = loc(fused[#loc45, #loc46])
#loc181 = loc(fused[#loc47, #loc48])
#loc182 = loc(fused[#loc56, #loc57])
#loc183 = loc(fused[#loc58, #loc59])
#loc184 = loc(fused[#loc60, #loc61])
#loc185 = loc(fused[#loc62, #loc63])
#loc186 = loc(fused[#loc64, #loc65])
#loc187 = loc(fused[#loc70, #loc71])
#loc190 = loc(fused[#loc81, #loc82])
#loc191 = loc(fused[#loc85, #loc86])
#loc192 = loc(fused[#loc89, #loc88])
#loc193 = loc(fused[#loc90, #loc91])
#loc194 = loc(fused[#loc93, #loc94])
#loc195 = loc(fused[#loc95, #loc96])
#loc196 = loc(fused[#loc97, #loc98])
#loc197 = loc(fused[#loc99, #loc100])
#loc198 = loc(fused[#loc101, #loc102])
#loc199 = loc(fused[#loc104, #loc103])
#loc200 = loc(fused[#loc105, #loc106])
#loc201 = loc(fused[#loc107, #loc108])
#loc202 = loc(fused[#loc110, #loc111])
#loc203 = loc(fused[#loc112, #loc113])
#loc204 = loc(fused[#loc116, #loc117])
#loc205 = loc(fused[#loc115, #loc117])
#loc206 = loc(fused[#loc114, #loc113])
#loc207 = loc(fused[#loc118, #loc119])
#loc208 = loc(fused[#loc120, #loc121])
#loc209 = loc(fused[#loc122, #loc119])
#loc210 = loc(fused[#loc126, #loc127])
#loc211 = loc(fused[#loc128, #loc129])
#loc212 = loc(fused[#loc130, #loc131])
#loc213 = loc(fused[#loc133, #loc132])
#loc214 = loc(fused[#loc134, #loc135])
#loc215 = loc(fused[#loc137, #loc131])
#loc216 = loc(fused[#loc139, #loc138])
#loc217 = loc(fused[#loc143, #loc142])
#loc218 = loc(fused[#loc145, #loc144])
#loc219 = loc(fused[#loc148, #loc146])
#loc220 = loc(fused[#loc149, #loc150])
#loc221 = loc(fused[#loc151, #loc152])
