!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc19 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":40:13)
#loc58 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":78:13)
#loc66 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":82:23)
#loc90 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":112:10)
#loc91 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":112:14)
#loc92 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":112:20)
#loc93 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":112:32)
#true = #cir.bool<true> : !cir.bool
#loc138 = loc(fused[#loc90, #loc91])
#loc139 = loc(fused[#loc92, #loc93])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_sleep_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc106)
  cir.func private @usleep(!u32i) -> !s32i loc(#loc107)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc108)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Sleep time possibly too long\00" : !cir.array<!s8i x 29>> : !cir.array<!s8i x 29> {alignment = 1 : i64} loc(#loc7)
  cir.func @_ZN41CWE400_Resource_Exhaustion__rand_sleep_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc110)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc111)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["countRef", init, const] {alignment = 8 : i64} loc(#loc112)
    cir.store %1, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc15)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc17)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc113)
    %5 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc19)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %7 = cir.binop(and, %5, %6) : !s32i loc(#loc19)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc19)
    cir.brcond %8 ^bb1, ^bb2 loc(#loc19)
  ^bb1:  // pred: ^bb0
    %9 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc19)
    %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc19)
    %11 = cir.const #cir.int<30> : !s32i loc(#loc19)
    %12 = cir.shift(left, %10 : !u32i, %11 : !s32i) -> !u32i loc(#loc19)
    %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc19)
    %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc19)
    %15 = cir.const #cir.int<15> : !s32i loc(#loc19)
    %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc19)
    %17 = cir.binop(xor, %12, %16) : !u32i loc(#loc19)
    %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc19)
    %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc19)
    %20 = cir.binop(xor, %17, %19) : !u32i loc(#loc19)
    cir.br ^bb3(%20 : !u32i) loc(#loc19)
  ^bb2:  // pred: ^bb0
    %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc19)
    %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc19)
    %23 = cir.const #cir.int<30> : !s32i loc(#loc19)
    %24 = cir.shift(left, %22 : !u32i, %23 : !s32i) -> !u32i loc(#loc19)
    %25 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc19)
    %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc19)
    %27 = cir.const #cir.int<15> : !s32i loc(#loc19)
    %28 = cir.shift(left, %26 : !u32i, %27 : !s32i) -> !u32i loc(#loc19)
    %29 = cir.binop(xor, %24, %28) : !u32i loc(#loc19)
    %30 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc19)
    %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc19)
    %32 = cir.binop(xor, %29, %31) : !u32i loc(#loc19)
    %33 = cir.unary(minus, %32) : !u32i, !u32i loc(#loc19)
    %34 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %35 = cir.cast(integral, %34 : !s32i), !u32i loc(#loc19)
    %36 = cir.binop(sub, %33, %35) : !u32i loc(#loc19)
    cir.br ^bb3(%36 : !u32i) loc(#loc19)
  ^bb3(%37: !u32i loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":40:13)):  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc19)
  ^bb4:  // pred: ^bb3
    %38 = cir.cast(integral, %37 : !u32i), !s32i loc(#loc19)
    cir.store %38, %1 : !s32i, !cir.ptr<!s32i> loc(#loc114)
    cir.br ^bb5 loc(#loc115)
  ^bb5:  // pred: ^bb4
    %39 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc11)
    %40 = cir.load %39 : !cir.ptr<!s32i>, !s32i loc(#loc11)
    cir.store %40, %0 : !s32i, !cir.ptr<!s32i> loc(#loc110)
    %41 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc23)
    %42 = cir.cast(integral, %41 : !s32i), !u32i loc(#loc23)
    %43 = cir.call @usleep(%42) : (!u32i) -> !s32i loc(#loc24)
    %44 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc7)
    %45 = cir.cast(array_to_ptrdecay, %44 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc7)
    cir.call @printLine(%45) : (!cir.ptr<!s8i>) -> () loc(#loc25)
    cir.br ^bb6 loc(#loc22)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc9)
  } loc(#loc109)
  cir.func internal private @_ZN41CWE400_Resource_Exhaustion__rand_sleep_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc117)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc118)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["countRef", init, const] {alignment = 8 : i64} loc(#loc119)
    cir.store %1, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc33)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc35)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc120)
    %5 = cir.const #cir.int<20> : !s32i loc(#loc37)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc121)
    cir.br ^bb1 loc(#loc122)
  ^bb1:  // pred: ^bb0
    %6 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc29)
    %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc29)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc117)
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc41)
    %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc41)
    %10 = cir.call @usleep(%9) : (!u32i) -> !s32i loc(#loc42)
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc43)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc44)
    cir.br ^bb2 loc(#loc40)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc27)
  } loc(#loc116)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Sleep time OK\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc45)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Sleep time too long\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc46)
  cir.func internal private @_ZN41CWE400_Resource_Exhaustion__rand_sleep_33L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc124)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc125)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["countRef", init, const] {alignment = 8 : i64} loc(#loc126)
    cir.store %1, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc54)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc55)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc56)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc127)
    %5 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc58)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc58)
    %7 = cir.binop(and, %5, %6) : !s32i loc(#loc58)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc58)
    cir.brcond %8 ^bb1, ^bb2 loc(#loc58)
  ^bb1:  // pred: ^bb0
    %9 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc58)
    %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc58)
    %11 = cir.const #cir.int<30> : !s32i loc(#loc58)
    %12 = cir.shift(left, %10 : !u32i, %11 : !s32i) -> !u32i loc(#loc58)
    %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc58)
    %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc58)
    %15 = cir.const #cir.int<15> : !s32i loc(#loc58)
    %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc58)
    %17 = cir.binop(xor, %12, %16) : !u32i loc(#loc58)
    %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc58)
    %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc58)
    %20 = cir.binop(xor, %17, %19) : !u32i loc(#loc58)
    cir.br ^bb3(%20 : !u32i) loc(#loc58)
  ^bb2:  // pred: ^bb0
    %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc58)
    %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc58)
    %23 = cir.const #cir.int<30> : !s32i loc(#loc58)
    %24 = cir.shift(left, %22 : !u32i, %23 : !s32i) -> !u32i loc(#loc58)
    %25 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc58)
    %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc58)
    %27 = cir.const #cir.int<15> : !s32i loc(#loc58)
    %28 = cir.shift(left, %26 : !u32i, %27 : !s32i) -> !u32i loc(#loc58)
    %29 = cir.binop(xor, %24, %28) : !u32i loc(#loc58)
    %30 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc58)
    %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc58)
    %32 = cir.binop(xor, %29, %31) : !u32i loc(#loc58)
    %33 = cir.unary(minus, %32) : !u32i, !u32i loc(#loc58)
    %34 = cir.const #cir.int<1> : !s32i loc(#loc58)
    %35 = cir.cast(integral, %34 : !s32i), !u32i loc(#loc58)
    %36 = cir.binop(sub, %33, %35) : !u32i loc(#loc58)
    cir.br ^bb3(%36 : !u32i) loc(#loc58)
  ^bb3(%37: !u32i loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":78:13)):  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc58)
  ^bb4:  // pred: ^bb3
    %38 = cir.cast(integral, %37 : !u32i), !s32i loc(#loc58)
    cir.store %38, %1 : !s32i, !cir.ptr<!s32i> loc(#loc128)
    cir.br ^bb5 loc(#loc129)
  ^bb5:  // pred: ^bb4
    %39 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc50)
    %40 = cir.load %39 : !cir.ptr<!s32i>, !s32i loc(#loc50)
    cir.store %40, %0 : !s32i, !cir.ptr<!s32i> loc(#loc124)
    cir.br ^bb6 loc(#loc130)
  ^bb6:  // pred: ^bb5
    %41 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc64)
    %42 = cir.const #cir.int<0> : !s32i loc(#loc65)
    %43 = cir.cmp(gt, %41, %42) : !s32i, !cir.bool loc(#loc131)
    cir.brcond %43 ^bb7, ^bb12 loc(#loc66)
  ^bb7:  // pred: ^bb6
    %44 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc67)
    %45 = cir.const #cir.int<2000> : !s32i loc(#loc68)
    %46 = cir.cmp(le, %44, %45) : !s32i, !cir.bool loc(#loc132)
    cir.brcond %46 ^bb8, ^bb9 loc(#loc66)
  ^bb8:  // pred: ^bb7
    %47 = cir.const #true loc(#loc66)
    cir.br ^bb10(%47 : !cir.bool) loc(#loc66)
  ^bb9:  // pred: ^bb7
    %48 = cir.const #false loc(#loc66)
    cir.br ^bb10(%48 : !cir.bool) loc(#loc66)
  ^bb10(%49: !cir.bool loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":82:23)):  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc66)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13(%49 : !cir.bool) loc(#loc66)
  ^bb12:  // pred: ^bb6
    %50 = cir.const #false loc(#loc66)
    cir.br ^bb13(%50 : !cir.bool) loc(#loc66)
  ^bb13(%51: !cir.bool loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":82:23)):  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc66)
  ^bb14:  // pred: ^bb13
    cir.brcond %51 ^bb15, ^bb16 loc(#loc133)
  ^bb15:  // pred: ^bb14
    %52 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc72)
    %53 = cir.cast(integral, %52 : !s32i), !u32i loc(#loc72)
    %54 = cir.call @usleep(%53) : (!u32i) -> !s32i loc(#loc73)
    %55 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc45)
    %56 = cir.cast(array_to_ptrdecay, %55 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%56) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    cir.br ^bb17 loc(#loc70)
  ^bb16:  // pred: ^bb14
    %57 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc46)
    %58 = cir.cast(array_to_ptrdecay, %57 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%58) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    cir.br ^bb17 loc(#loc63)
  ^bb17:  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc63)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc61)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc48)
  } loc(#loc123)
  cir.func @_ZN41CWE400_Resource_Exhaustion__rand_sleep_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN41CWE400_Resource_Exhaustion__rand_sleep_33L7goodG2BEv() : () -> () loc(#loc78)
    cir.call @_ZN41CWE400_Resource_Exhaustion__rand_sleep_33L7goodB2GEv() : () -> () loc(#loc79)
    cir.return loc(#loc77)
  } loc(#loc134)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc135)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc136)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc84)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc85)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc86)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc87)
  cir.func @main(%arg0: !s32i loc(fused[#loc90, #loc91]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc92, #loc93])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc138)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc139)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc89)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc94)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc94)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc95)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc96)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc96)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc97)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc84)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc84)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    cir.call @_ZN41CWE400_Resource_Exhaustion__rand_sleep_334goodEv() : () -> () loc(#loc99)
    %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc85)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc85)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc100)
    %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc86)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc86)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc101)
    cir.call @_ZN41CWE400_Resource_Exhaustion__rand_sleep_333badEv() : () -> () loc(#loc102)
    %12 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc87)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc87)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc103)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc104)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc140)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc140)
    cir.return %15 : !s32i loc(#loc140)
  } loc(#loc137)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_sleep_33.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("/usr/include/unistd.h":480:1)
#loc4 = loc("/usr/include/unistd.h":480:43)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":45:19)
#loc8 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":33:1)
#loc9 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":47:1)
#loc10 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":42:9)
#loc11 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":42:21)
#loc12 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":35:5)
#loc13 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":35:9)
#loc14 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":36:5)
#loc15 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":36:21)
#loc16 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":38:14)
#loc17 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":38:13)
#loc18 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":38:5)
#loc20 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":40:5)
#loc21 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":41:5)
#loc22 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":46:5)
#loc23 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":44:15)
#loc24 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":44:9)
#loc25 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":45:9)
#loc26 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":54:1)
#loc27 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":68:1)
#loc28 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":63:9)
#loc29 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":63:21)
#loc30 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":56:5)
#loc31 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":56:9)
#loc32 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":57:5)
#loc33 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":57:21)
#loc34 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":59:14)
#loc35 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":59:13)
#loc36 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":59:5)
#loc37 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":61:13)
#loc38 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":61:5)
#loc39 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":62:5)
#loc40 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":67:5)
#loc41 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":65:15)
#loc42 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":65:9)
#loc43 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":66:19)
#loc44 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":66:9)
#loc45 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":85:23)
#loc46 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":89:23)
#loc47 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":71:1)
#loc48 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":92:1)
#loc49 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":80:9)
#loc50 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":80:21)
#loc51 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":73:5)
#loc52 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":73:9)
#loc53 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":74:5)
#loc54 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":74:21)
#loc55 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":76:14)
#loc56 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":76:13)
#loc57 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":76:5)
#loc59 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":78:5)
#loc60 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":79:5)
#loc61 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":91:5)
#loc62 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":82:9)
#loc63 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":90:9)
#loc64 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":82:13)
#loc65 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":82:21)
#loc67 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":82:26)
#loc68 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":82:35)
#loc69 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":83:9)
#loc70 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":86:9)
#loc71 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":88:9)
#loc72 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":84:19)
#loc73 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":84:13)
#loc74 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":85:13)
#loc75 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":89:13)
#loc76 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":94:1)
#loc77 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":98:1)
#loc78 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":96:5)
#loc79 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":97:5)
#loc80 = loc("/usr/include/stdlib.h":575:1)
#loc81 = loc("/usr/include/stdlib.h":575:41)
#loc82 = loc("/usr/include/time.h":76:1)
#loc83 = loc("/usr/include/time.h":76:38)
#loc84 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":117:15)
#loc85 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":119:15)
#loc86 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":122:15)
#loc87 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":124:15)
#loc88 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":112:1)
#loc89 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":127:1)
#loc94 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":113:1)
#loc95 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":115:27)
#loc96 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":115:22)
#loc97 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":115:5)
#loc98 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":117:5)
#loc99 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":118:5)
#loc100 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":119:5)
#loc101 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":122:5)
#loc102 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":123:5)
#loc103 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":124:5)
#loc104 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":126:12)
#loc105 = loc("CWE400_Resource_Exhaustion__rand_sleep_33.cpp":126:5)
#loc106 = loc(fused[#loc1, #loc2])
#loc107 = loc(fused[#loc3, #loc4])
#loc108 = loc(fused[#loc5, #loc6])
#loc109 = loc(fused[#loc8, #loc9])
#loc110 = loc(fused[#loc10, #loc11])
#loc111 = loc(fused[#loc12, #loc13])
#loc112 = loc(fused[#loc14, #loc15])
#loc113 = loc(fused[#loc18, #loc16])
#loc114 = loc(fused[#loc20, #loc19])
#loc115 = loc(fused[#loc21, #loc22])
#loc116 = loc(fused[#loc26, #loc27])
#loc117 = loc(fused[#loc28, #loc29])
#loc118 = loc(fused[#loc30, #loc31])
#loc119 = loc(fused[#loc32, #loc33])
#loc120 = loc(fused[#loc36, #loc34])
#loc121 = loc(fused[#loc38, #loc37])
#loc122 = loc(fused[#loc39, #loc40])
#loc123 = loc(fused[#loc47, #loc48])
#loc124 = loc(fused[#loc49, #loc50])
#loc125 = loc(fused[#loc51, #loc52])
#loc126 = loc(fused[#loc53, #loc54])
#loc127 = loc(fused[#loc57, #loc55])
#loc128 = loc(fused[#loc59, #loc58])
#loc129 = loc(fused[#loc60, #loc61])
#loc130 = loc(fused[#loc62, #loc63])
#loc131 = loc(fused[#loc64, #loc65])
#loc132 = loc(fused[#loc67, #loc68])
#loc133 = loc(fused[#loc69, #loc70, #loc71, #loc63])
#loc134 = loc(fused[#loc76, #loc77])
#loc135 = loc(fused[#loc80, #loc81])
#loc136 = loc(fused[#loc82, #loc83])
#loc137 = loc(fused[#loc88, #loc89])
#loc140 = loc(fused[#loc105, #loc104])
