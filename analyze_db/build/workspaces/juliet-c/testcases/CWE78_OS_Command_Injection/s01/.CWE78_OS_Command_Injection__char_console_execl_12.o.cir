!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_console_execl_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc121)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_console_execl_12_bad.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc122)
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc123)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc124)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc125)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc126)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc127)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc15)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc128)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc18)
  cir.func private @execl(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc129)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"/bin/sh\00" : !cir.array<!s8i x 8>> : !cir.array<!s8i x 8> {alignment = 1 : i64} loc(#loc21)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"-c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc22)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_execl_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc131)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc122)
    %2 = cir.get_global @__const.CWE78_OS_Command_Injection__char_console_execl_12_bad.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc122)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc122)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc27)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc132)
    cir.scope {
      %13 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc134)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc134)
      %15 = cir.call %14() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc31)
      %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc31)
      cir.if %16 {
        cir.scope {
          %17 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc137)
          %18 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc40)
          %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
          %20 = cir.call @strlen(%19) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc40)
          cir.store %20, %17 : !u64i, !cir.ptr<!u64i> loc(#loc137)
          cir.scope {
            %21 = cir.const #cir.int<100> : !s32i loc(#loc44)
            %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc44)
            %23 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc45)
            %24 = cir.binop(sub, %22, %23) : !u64i loc(#loc139)
            %25 = cir.const #cir.int<1> : !s32i loc(#loc46)
            %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc46)
            %27 = cir.cmp(gt, %24, %26) : !u64i, !cir.bool loc(#loc140)
            cir.if %27 {
              cir.scope {
                %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
                %29 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc51)
                %30 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %29 : !u64i), !cir.ptr<!s8i> loc(#loc52)
                %31 = cir.const #cir.int<100> : !s32i loc(#loc53)
                %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc53)
                %33 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc54)
                %34 = cir.binop(sub, %32, %33) : !u64i loc(#loc143)
                %35 = cir.cast(integral, %34 : !u64i), !s32i loc(#loc143)
                %36 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc126)
                %37 = cir.load %36 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc55)
                %38 = cir.call @fgets(%30, %35, %37) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc56)
                %39 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc57)
                %40 = cir.cast(bitcast, %39 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc57)
                %41 = cir.cmp(ne, %38, %40) : !cir.ptr<!s8i>, !cir.bool loc(#loc144)
                cir.if %41 {
                  %42 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc61)
                  %43 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
                  %44 = cir.call @strlen(%43) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc61)
                  cir.store %44, %17 : !u64i, !cir.ptr<!u64i> loc(#loc146)
                  cir.scope {
                    %45 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc67)
                    %46 = cir.const #cir.int<0> : !s32i loc(#loc68)
                    %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc68)
                    %48 = cir.cmp(gt, %45, %47) : !u64i, !cir.bool loc(#loc148)
                    %49 = cir.ternary(%48, true {
                      %50 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
                      %51 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc71)
                      %52 = cir.const #cir.int<1> : !s32i loc(#loc72)
                      %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc72)
                      %54 = cir.binop(sub, %51, %53) : !u64i loc(#loc149)
                      %55 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %54 : !u64i), !cir.ptr<!s8i> loc(#loc73)
                      %56 = cir.load %55 : !cir.ptr<!s8i>, !s8i loc(#loc70)
                      %57 = cir.cast(integral, %56 : !s8i), !s32i loc(#loc70)
                      %58 = cir.const #cir.int<10> : !s32i loc(#loc74)
                      %59 = cir.cmp(eq, %57, %58) : !s32i, !cir.bool loc(#loc150)
                      %60 = cir.ternary(%59, true {
                        %61 = cir.const #true loc(#loc69)
                        cir.yield %61 : !cir.bool loc(#loc69)
                      }, false {
                        %61 = cir.const #false loc(#loc69)
                        cir.yield %61 : !cir.bool loc(#loc69)
                      }) : (!cir.bool) -> !cir.bool loc(#loc69)
                      cir.yield %60 : !cir.bool loc(#loc69)
                    }, false {
                      %50 = cir.const #false loc(#loc69)
                      cir.yield %50 : !cir.bool loc(#loc69)
                    }) : (!cir.bool) -> !cir.bool loc(#loc69)
                    cir.if %49 {
                      %50 = cir.const #cir.int<0> : !s32i loc(#loc76)
                      %51 = cir.cast(integral, %50 : !s32i), !s8i loc(#loc76)
                      %52 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
                      %53 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc78)
                      %54 = cir.const #cir.int<1> : !s32i loc(#loc79)
                      %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc79)
                      %56 = cir.binop(sub, %53, %55) : !u64i loc(#loc152)
                      %57 = cir.ptr_stride(%52 : !cir.ptr<!s8i>, %56 : !u64i), !cir.ptr<!s8i> loc(#loc80)
                      cir.store %51, %57 : !s8i, !cir.ptr<!s8i> loc(#loc153)
                    } loc(#loc151)
                  } loc(#loc147)
                } else {
                  %42 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc15)
                  %43 = cir.cast(array_to_ptrdecay, %42 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc15)
                  cir.call @printLine(%43) : (!cir.ptr<!s8i>) -> () loc(#loc81)
                  %44 = cir.const #cir.int<0> : !s32i loc(#loc82)
                  %45 = cir.cast(integral, %44 : !s32i), !s8i loc(#loc82)
                  %46 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
                  %47 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc84)
                  %48 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %47 : !u64i), !cir.ptr<!s8i> loc(#loc85)
                  cir.store %45, %48 : !s8i, !cir.ptr<!s8i> loc(#loc154)
                } loc(#loc145)
              } loc(#loc142)
            } loc(#loc141)
          } loc(#loc138)
        } loc(#loc136)
      } else {
        %17 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc86)
        %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
        %19 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc18)
        %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc18)
        %21 = cir.call @strcat(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc86)
      } loc(#loc135)
    } loc(#loc133)
    %4 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc21)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc21)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc88)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc88)
    %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc22)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc22)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc90)
    %12 = cir.call @execl(%5, %7, %9, %10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc91)
    cir.return loc(#loc24)
  } loc(#loc130)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_execl_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc156)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc94)
    cir.return loc(#loc93)
  } loc(#loc155)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc158)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc121)
    %2 = cir.get_global @__const.goodG2B.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc121)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc121)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc100)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc159)
    cir.scope {
      %13 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc161)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc161)
      %15 = cir.call %14() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc104)
      %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc104)
      cir.if %16 {
        %17 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc109)
        %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
        %19 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc111)
        %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc111)
        %21 = cir.call @strcat(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc109)
      } else {
        %17 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc112)
        %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
        %19 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc114)
        %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc114)
        %21 = cir.call @strcat(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc112)
      } loc(#loc162)
    } loc(#loc160)
    %4 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc115)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc115)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc116)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc116)
    %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc117)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc117)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc119)
    %12 = cir.call @execl(%5, %7, %9, %10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc120)
    cir.return loc(#loc97)
  } loc(#loc157)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_console_execl_12.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":97:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":97:28)
#loc3 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":48:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":48:28)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("/usr/include/stdio.h":654:1)
#loc10 = loc("/usr/include/stdio.h":655:59)
#loc11 = loc("/usr/include/stdio.h":149:1)
#loc12 = loc("/usr/include/stdio.h":149:14)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc14 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc15 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":71:31)
#loc16 = loc("/usr/include/string.h":149:1)
#loc17 = loc("/usr/include/string.h":150:14)
#loc18 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":81:22)
#loc19 = loc("/usr/include/unistd.h":594:1)
#loc20 = loc("/usr/include/unistd.h":595:14)
#loc21 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":85:11)
#loc22 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":85:47)
#loc23 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":45:1)
#loc24 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":86:1)
#loc25 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":47:5)
#loc26 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":47:12)
#loc27 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":49:12)
#loc28 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":49:5)
#loc29 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":50:5)
#loc30 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":82:5)
#loc31 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":50:8)
#loc32 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":50:33)
#loc33 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":51:5)
#loc34 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":77:5)
#loc35 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":79:5)
#loc36 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":52:9)
#loc37 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":76:9)
#loc38 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":54:13)
#loc39 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":54:41)
#loc40 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":54:30)
#loc41 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":54:37)
#loc42 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":56:13)
#loc43 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":75:13)
#loc44 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":56:17)
#loc45 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":56:21)
#loc46 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":56:31)
#loc47 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":57:13)
#loc48 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":59:17)
#loc49 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":74:17)
#loc50 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":59:27)
#loc51 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":59:32)
#loc52 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":59:31)
#loc53 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":59:47)
#loc54 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":59:51)
#loc55 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":59:61)
#loc56 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":59:21)
#loc57 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":59:71)
#loc58 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":60:17)
#loc59 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":68:17)
#loc60 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":70:17)
#loc61 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":63:31)
#loc62 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":63:38)
#loc63 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":63:21)
#loc64 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":63:42)
#loc65 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":64:21)
#loc66 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":67:21)
#loc67 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":64:25)
#loc68 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":64:35)
#loc69 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":64:37)
#loc70 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":64:40)
#loc71 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":64:45)
#loc72 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":64:53)
#loc73 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":64:54)
#loc74 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":64:59)
#loc75 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":65:21)
#loc76 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":66:43)
#loc77 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":66:25)
#loc78 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":66:30)
#loc79 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":66:38)
#loc80 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":66:39)
#loc81 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":71:21)
#loc82 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":73:37)
#loc83 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":73:21)
#loc84 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":73:26)
#loc85 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":73:33)
#loc86 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":81:9)
#loc87 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":81:16)
#loc88 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":85:29)
#loc89 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":85:61)
#loc90 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":85:75)
#loc91 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":85:5)
#loc92 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":114:1)
#loc93 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":117:1)
#loc94 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":116:5)
#loc95 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":116:13)
#loc96 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":94:1)
#loc97 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":112:1)
#loc98 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":96:5)
#loc99 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":96:12)
#loc100 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":98:12)
#loc101 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":98:5)
#loc102 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":99:5)
#loc103 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":108:5)
#loc104 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":99:8)
#loc105 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":99:33)
#loc106 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":100:5)
#loc107 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":103:5)
#loc108 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":105:5)
#loc109 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":102:9)
#loc110 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":102:16)
#loc111 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":102:22)
#loc112 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":107:9)
#loc113 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":107:16)
#loc114 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":107:22)
#loc115 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":111:11)
#loc116 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":111:29)
#loc117 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":111:47)
#loc118 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":111:61)
#loc119 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":111:75)
#loc120 = loc("CWE78_OS_Command_Injection__char_console_execl_12.c":111:5)
#loc121 = loc(fused[#loc1, #loc2])
#loc122 = loc(fused[#loc3, #loc4])
#loc123 = loc(fused[#loc5, #loc6])
#loc124 = loc(fused[#loc7, #loc8])
#loc125 = loc(fused[#loc9, #loc10])
#loc126 = loc(fused[#loc11, #loc12])
#loc127 = loc(fused[#loc13, #loc14])
#loc128 = loc(fused[#loc16, #loc17])
#loc129 = loc(fused[#loc19, #loc20])
#loc130 = loc(fused[#loc23, #loc24])
#loc131 = loc(fused[#loc25, #loc26])
#loc132 = loc(fused[#loc28, #loc27])
#loc133 = loc(fused[#loc29, #loc30])
#loc134 = loc(fused[#loc31, #loc32])
#loc135 = loc(fused[#loc33, #loc34, #loc35, #loc30])
#loc136 = loc(fused[#loc36, #loc37])
#loc137 = loc(fused[#loc38, #loc39])
#loc138 = loc(fused[#loc42, #loc43])
#loc139 = loc(fused[#loc44, #loc45])
#loc140 = loc(fused[#loc44, #loc46])
#loc141 = loc(fused[#loc47, #loc43])
#loc142 = loc(fused[#loc48, #loc49])
#loc143 = loc(fused[#loc53, #loc54])
#loc144 = loc(fused[#loc56, #loc57])
#loc145 = loc(fused[#loc58, #loc59, #loc60, #loc49])
#loc146 = loc(fused[#loc63, #loc64])
#loc147 = loc(fused[#loc65, #loc66])
#loc148 = loc(fused[#loc67, #loc68])
#loc149 = loc(fused[#loc71, #loc72])
#loc150 = loc(fused[#loc70, #loc74])
#loc151 = loc(fused[#loc75, #loc66])
#loc152 = loc(fused[#loc78, #loc79])
#loc153 = loc(fused[#loc77, #loc76])
#loc154 = loc(fused[#loc83, #loc82])
#loc155 = loc(fused[#loc92, #loc93])
#loc156 = loc(fused[#loc94, #loc95])
#loc157 = loc(fused[#loc96, #loc97])
#loc158 = loc(fused[#loc98, #loc99])
#loc159 = loc(fused[#loc101, #loc100])
#loc160 = loc(fused[#loc102, #loc103])
#loc161 = loc(fused[#loc104, #loc105])
#loc162 = loc(fused[#loc106, #loc107, #loc108, #loc103])
