!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc73 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":163:10)
#loc74 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":163:14)
#loc75 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":163:20)
#loc76 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":163:32)
#true = #cir.bool<true> : !cir.bool
#loc208 = loc(fused[#loc73, #loc74])
#loc209 = loc(fused[#loc75, #loc76])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__fscanf_sleep_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc183)
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc184)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc185)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc7)
  cir.func private @usleep(!u32i) -> !s32i loc(#loc186)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc187)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Sleep time possibly too long\00" : !cir.array<!s8i x 29>> : !cir.array<!s8i x 29> {alignment = 1 : i64} loc(#loc12)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Sleep time OK\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc13)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Sleep time too long\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc14)
  cir.func no_proto @CWE400_Resource_Exhaustion__fscanf_sleep_12_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc189)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc20)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc190)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc192)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc192)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc24)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc24)
      cir.if %6 {
        %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc29)
        %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc185)
        %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc30)
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc7)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc7)
        %12 = cir.call @__isoc99_fscanf(%9, %11, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc29)
      } else {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc31)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc194)
      } loc(#loc193)
    } loc(#loc191)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc196)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc196)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc35)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc35)
      cir.if %6 {
        %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc40)
        %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc40)
        %9 = cir.call @usleep(%8) : (!u32i) -> !s32i loc(#loc41)
        %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc12)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc12)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc42)
      } else {
        cir.scope {
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc45)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc46)
          %9 = cir.cmp(gt, %7, %8) : !s32i, !cir.bool loc(#loc199)
          %10 = cir.ternary(%9, true {
            %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc48)
            %12 = cir.const #cir.int<2000> : !s32i loc(#loc49)
            %13 = cir.cmp(le, %11, %12) : !s32i, !cir.bool loc(#loc200)
            %14 = cir.ternary(%13, true {
              %15 = cir.const #true loc(#loc47)
              cir.yield %15 : !cir.bool loc(#loc47)
            }, false {
              %15 = cir.const #false loc(#loc47)
              cir.yield %15 : !cir.bool loc(#loc47)
            }) : (!cir.bool) -> !cir.bool loc(#loc47)
            cir.yield %14 : !cir.bool loc(#loc47)
          }, false {
            %11 = cir.const #false loc(#loc47)
            cir.yield %11 : !cir.bool loc(#loc47)
          }) : (!cir.bool) -> !cir.bool loc(#loc47)
          cir.if %10 {
            %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc53)
            %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc53)
            %13 = cir.call @usleep(%12) : (!u32i) -> !s32i loc(#loc54)
            %14 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc13)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc13)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc55)
          } else {
            %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc14)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc14)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc56)
          } loc(#loc201)
        } loc(#loc198)
      } loc(#loc197)
    } loc(#loc195)
    cir.return loc(#loc16)
  } loc(#loc188)
  cir.func no_proto @CWE400_Resource_Exhaustion__fscanf_sleep_12_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc203)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc59)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc204)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc61)
    cir.return loc(#loc58)
  } loc(#loc202)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc205)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc206)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc67)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc68)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc69)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc70)
  cir.func @main(%arg0: !s32i loc(fused[#loc73, #loc74]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc75, #loc76])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc208)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc209)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc72)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc77)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc77)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc78)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc79)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc79)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc80)
    %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc67)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    %8 = cir.get_global @CWE400_Resource_Exhaustion__fscanf_sleep_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc210)
    cir.call @CWE400_Resource_Exhaustion__fscanf_sleep_12_good() : () -> () loc(#loc82)
    %9 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc68)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    %11 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc69)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    %13 = cir.get_global @CWE400_Resource_Exhaustion__fscanf_sleep_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc211)
    cir.call @CWE400_Resource_Exhaustion__fscanf_sleep_12_bad() : () -> () loc(#loc86)
    %14 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc70)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc89)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc212)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc212)
    cir.return %17 : !s32i loc(#loc212)
  } loc(#loc207)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc214)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc95)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc96)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc215)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc217)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc217)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc100)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc100)
      cir.if %6 {
        %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc105)
        %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc185)
        %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc106)
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc107)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc107)
        %12 = cir.call @__isoc99_fscanf(%9, %11, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc105)
      } else {
        %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc108)
        %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc185)
        %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc109)
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc110)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc110)
        %12 = cir.call @__isoc99_fscanf(%9, %11, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc108)
      } loc(#loc218)
    } loc(#loc216)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc220)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc220)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc113)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc113)
      cir.if %6 {
        cir.scope {
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc120)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc121)
          %9 = cir.cmp(gt, %7, %8) : !s32i, !cir.bool loc(#loc223)
          %10 = cir.ternary(%9, true {
            %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc123)
            %12 = cir.const #cir.int<2000> : !s32i loc(#loc124)
            %13 = cir.cmp(le, %11, %12) : !s32i, !cir.bool loc(#loc224)
            %14 = cir.ternary(%13, true {
              %15 = cir.const #true loc(#loc122)
              cir.yield %15 : !cir.bool loc(#loc122)
            }, false {
              %15 = cir.const #false loc(#loc122)
              cir.yield %15 : !cir.bool loc(#loc122)
            }) : (!cir.bool) -> !cir.bool loc(#loc122)
            cir.yield %14 : !cir.bool loc(#loc122)
          }, false {
            %11 = cir.const #false loc(#loc122)
            cir.yield %11 : !cir.bool loc(#loc122)
          }) : (!cir.bool) -> !cir.bool loc(#loc122)
          cir.if %10 {
            %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc128)
            %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc128)
            %13 = cir.call @usleep(%12) : (!u32i) -> !s32i loc(#loc129)
            %14 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc130)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc130)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc131)
          } else {
            %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc132)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc132)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc133)
          } loc(#loc225)
        } loc(#loc222)
      } else {
        cir.scope {
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc136)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc137)
          %9 = cir.cmp(gt, %7, %8) : !s32i, !cir.bool loc(#loc227)
          %10 = cir.ternary(%9, true {
            %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc139)
            %12 = cir.const #cir.int<2000> : !s32i loc(#loc140)
            %13 = cir.cmp(le, %11, %12) : !s32i, !cir.bool loc(#loc228)
            %14 = cir.ternary(%13, true {
              %15 = cir.const #true loc(#loc138)
              cir.yield %15 : !cir.bool loc(#loc138)
            }, false {
              %15 = cir.const #false loc(#loc138)
              cir.yield %15 : !cir.bool loc(#loc138)
            }) : (!cir.bool) -> !cir.bool loc(#loc138)
            cir.yield %14 : !cir.bool loc(#loc138)
          }, false {
            %11 = cir.const #false loc(#loc138)
            cir.yield %11 : !cir.bool loc(#loc138)
          }) : (!cir.bool) -> !cir.bool loc(#loc138)
          cir.if %10 {
            %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc144)
            %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc144)
            %13 = cir.call @usleep(%12) : (!u32i) -> !s32i loc(#loc145)
            %14 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc146)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc146)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc147)
          } else {
            %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc148)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc148)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc149)
          } loc(#loc229)
        } loc(#loc226)
      } loc(#loc221)
    } loc(#loc219)
    cir.return loc(#loc92)
  } loc(#loc213)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc231)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc154)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc155)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc232)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc234)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc234)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc159)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc159)
      cir.if %6 {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc164)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc236)
      } else {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc166)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc237)
      } loc(#loc235)
    } loc(#loc233)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc239)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc239)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc170)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc170)
      cir.if %6 {
        %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc175)
        %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc175)
        %9 = cir.call @usleep(%8) : (!u32i) -> !s32i loc(#loc176)
        %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc177)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc177)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc178)
      } else {
        %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc179)
        %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc179)
        %9 = cir.call @usleep(%8) : (!u32i) -> !s32i loc(#loc180)
        %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc181)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc181)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc182)
      } loc(#loc240)
    } loc(#loc238)
    cir.return loc(#loc151)
  } loc(#loc230)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__fscanf_sleep_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":463:1)
#loc4 = loc("/usr/include/stdio.h":465:33)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":38:23)
#loc8 = loc("/usr/include/unistd.h":480:1)
#loc9 = loc("/usr/include/unistd.h":480:43)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc12 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":49:19)
#loc13 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":57:23)
#loc14 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":61:23)
#loc15 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":30:1)
#loc16 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":64:1)
#loc17 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":32:5)
#loc18 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":32:9)
#loc19 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":34:14)
#loc20 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":34:13)
#loc21 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":34:5)
#loc22 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":35:5)
#loc23 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":44:5)
#loc24 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":35:8)
#loc25 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":35:33)
#loc26 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":36:5)
#loc27 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":39:5)
#loc28 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":41:5)
#loc29 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":38:9)
#loc30 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":38:16)
#loc31 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":43:17)
#loc32 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":43:9)
#loc33 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":45:5)
#loc34 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":63:5)
#loc35 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":45:8)
#loc36 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":45:33)
#loc37 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":46:5)
#loc38 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":50:5)
#loc39 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":52:5)
#loc40 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":48:15)
#loc41 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":48:9)
#loc42 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":49:9)
#loc43 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":54:9)
#loc44 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":62:9)
#loc45 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":54:13)
#loc46 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":54:21)
#loc47 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":54:23)
#loc48 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":54:26)
#loc49 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":54:35)
#loc50 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":55:9)
#loc51 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":58:9)
#loc52 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":60:9)
#loc53 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":56:19)
#loc54 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":56:13)
#loc55 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":57:13)
#loc56 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":61:13)
#loc57 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":148:1)
#loc58 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":152:1)
#loc59 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":150:5)
#loc60 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":150:13)
#loc61 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":151:5)
#loc62 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":151:13)
#loc63 = loc("/usr/include/stdlib.h":575:1)
#loc64 = loc("/usr/include/stdlib.h":575:41)
#loc65 = loc("/usr/include/time.h":76:1)
#loc66 = loc("/usr/include/time.h":76:38)
#loc67 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":168:15)
#loc68 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":170:15)
#loc69 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":173:15)
#loc70 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":175:15)
#loc71 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":163:1)
#loc72 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":178:1)
#loc77 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":164:1)
#loc78 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":166:27)
#loc79 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":166:22)
#loc80 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":166:5)
#loc81 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":168:5)
#loc82 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":169:5)
#loc83 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":169:54)
#loc84 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":170:5)
#loc85 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":173:5)
#loc86 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":174:5)
#loc87 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":174:53)
#loc88 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":175:5)
#loc89 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":177:12)
#loc90 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":177:5)
#loc91 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":73:1)
#loc92 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":114:1)
#loc93 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":75:5)
#loc94 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":75:9)
#loc95 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":77:14)
#loc96 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":77:13)
#loc97 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":77:5)
#loc98 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":78:5)
#loc99 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":87:5)
#loc100 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":78:8)
#loc101 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":78:33)
#loc102 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":79:5)
#loc103 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":82:5)
#loc104 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":84:5)
#loc105 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":81:9)
#loc106 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":81:16)
#loc107 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":81:23)
#loc108 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":86:9)
#loc109 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":86:16)
#loc110 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":86:23)
#loc111 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":88:5)
#loc112 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":113:5)
#loc113 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":88:8)
#loc114 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":88:33)
#loc115 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":89:5)
#loc116 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":100:5)
#loc117 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":102:5)
#loc118 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":91:9)
#loc119 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":99:9)
#loc120 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":91:13)
#loc121 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":91:21)
#loc122 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":91:23)
#loc123 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":91:26)
#loc124 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":91:35)
#loc125 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":92:9)
#loc126 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":95:9)
#loc127 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":97:9)
#loc128 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":93:19)
#loc129 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":93:13)
#loc130 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":94:23)
#loc131 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":94:13)
#loc132 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":98:23)
#loc133 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":98:13)
#loc134 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":104:9)
#loc135 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":112:9)
#loc136 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":104:13)
#loc137 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":104:21)
#loc138 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":104:23)
#loc139 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":104:26)
#loc140 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":104:35)
#loc141 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":105:9)
#loc142 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":108:9)
#loc143 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":110:9)
#loc144 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":106:19)
#loc145 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":106:13)
#loc146 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":107:23)
#loc147 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":107:13)
#loc148 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":111:23)
#loc149 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":111:13)
#loc150 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":119:1)
#loc151 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":146:1)
#loc152 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":121:5)
#loc153 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":121:9)
#loc154 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":123:14)
#loc155 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":123:13)
#loc156 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":123:5)
#loc157 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":124:5)
#loc158 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":133:5)
#loc159 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":124:8)
#loc160 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":124:33)
#loc161 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":125:5)
#loc162 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":128:5)
#loc163 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":130:5)
#loc164 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":127:17)
#loc165 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":127:9)
#loc166 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":132:17)
#loc167 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":132:9)
#loc168 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":134:5)
#loc169 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":145:5)
#loc170 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":134:8)
#loc171 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":134:33)
#loc172 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":135:5)
#loc173 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":139:5)
#loc174 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":141:5)
#loc175 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":137:15)
#loc176 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":137:9)
#loc177 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":138:19)
#loc178 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":138:9)
#loc179 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":143:15)
#loc180 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":143:9)
#loc181 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":144:19)
#loc182 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_12.c":144:9)
#loc183 = loc(fused[#loc1, #loc2])
#loc184 = loc(fused[#loc3, #loc4])
#loc185 = loc(fused[#loc5, #loc6])
#loc186 = loc(fused[#loc8, #loc9])
#loc187 = loc(fused[#loc10, #loc11])
#loc188 = loc(fused[#loc15, #loc16])
#loc189 = loc(fused[#loc17, #loc18])
#loc190 = loc(fused[#loc21, #loc19])
#loc191 = loc(fused[#loc22, #loc23])
#loc192 = loc(fused[#loc24, #loc25])
#loc193 = loc(fused[#loc26, #loc27, #loc28, #loc23])
#loc194 = loc(fused[#loc32, #loc31])
#loc195 = loc(fused[#loc33, #loc34])
#loc196 = loc(fused[#loc35, #loc36])
#loc197 = loc(fused[#loc37, #loc38, #loc39, #loc34])
#loc198 = loc(fused[#loc43, #loc44])
#loc199 = loc(fused[#loc45, #loc46])
#loc200 = loc(fused[#loc48, #loc49])
#loc201 = loc(fused[#loc50, #loc51, #loc52, #loc44])
#loc202 = loc(fused[#loc57, #loc58])
#loc203 = loc(fused[#loc59, #loc60])
#loc204 = loc(fused[#loc61, #loc62])
#loc205 = loc(fused[#loc63, #loc64])
#loc206 = loc(fused[#loc65, #loc66])
#loc207 = loc(fused[#loc71, #loc72])
#loc210 = loc(fused[#loc82, #loc83])
#loc211 = loc(fused[#loc86, #loc87])
#loc212 = loc(fused[#loc90, #loc89])
#loc213 = loc(fused[#loc91, #loc92])
#loc214 = loc(fused[#loc93, #loc94])
#loc215 = loc(fused[#loc97, #loc95])
#loc216 = loc(fused[#loc98, #loc99])
#loc217 = loc(fused[#loc100, #loc101])
#loc218 = loc(fused[#loc102, #loc103, #loc104, #loc99])
#loc219 = loc(fused[#loc111, #loc112])
#loc220 = loc(fused[#loc113, #loc114])
#loc221 = loc(fused[#loc115, #loc116, #loc117, #loc112])
#loc222 = loc(fused[#loc118, #loc119])
#loc223 = loc(fused[#loc120, #loc121])
#loc224 = loc(fused[#loc123, #loc124])
#loc225 = loc(fused[#loc125, #loc126, #loc127, #loc119])
#loc226 = loc(fused[#loc134, #loc135])
#loc227 = loc(fused[#loc136, #loc137])
#loc228 = loc(fused[#loc139, #loc140])
#loc229 = loc(fused[#loc141, #loc142, #loc143, #loc135])
#loc230 = loc(fused[#loc150, #loc151])
#loc231 = loc(fused[#loc152, #loc153])
#loc232 = loc(fused[#loc156, #loc154])
#loc233 = loc(fused[#loc157, #loc158])
#loc234 = loc(fused[#loc159, #loc160])
#loc235 = loc(fused[#loc161, #loc162, #loc163, #loc158])
#loc236 = loc(fused[#loc165, #loc164])
#loc237 = loc(fused[#loc167, #loc166])
#loc238 = loc(fused[#loc168, #loc169])
#loc239 = loc(fused[#loc170, #loc171])
#loc240 = loc(fused[#loc172, #loc173, #loc174, #loc169])
