!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":25:79)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":25:86)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":46:83)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":46:90)
#loc82 = loc(fused[#loc7, #loc8])
#loc96 = loc(fused[#loc44, #loc45])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc79)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc80)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d_badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc82)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc9)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc84)
      %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc85)
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen"] {alignment = 8 : i64} loc(#loc86)
      %4 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc84)
      cir.store %4, %1 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc84)
      %5 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc17)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
      %7 = cir.call @strlen(%6) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc17)
      cir.store %7, %3 : !u64i, !cir.ptr<!u64i> loc(#loc87)
      cir.scope {
        %16 = cir.const #cir.int<0> : !s32i loc(#loc23)
        %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc23)
        cir.store %17, %2 : !u64i, !cir.ptr<!u64i> loc(#loc89)
        cir.for : cond {
          %18 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc25)
          %19 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc26)
          %20 = cir.cmp(lt, %18, %19) : !u64i, !cir.bool loc(#loc90)
          cir.condition(%20) loc(#loc27)
        } body {
          cir.scope {
            %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
            %19 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc30)
            %20 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %19 : !u64i), !cir.ptr<!s8i> loc(#loc31)
            %21 = cir.load %20 : !cir.ptr<!s8i>, !s8i loc(#loc29)
            %22 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc32)
            %23 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc33)
            %24 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %22 : !u64i), !cir.ptr<!s8i> loc(#loc33)
            cir.store %21, %24 : !s8i, !cir.ptr<!s8i> loc(#loc92)
          } loc(#loc91)
          cir.yield loc(#loc22)
        } step {
          %18 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc34)
          %19 = cir.unary(inc, %18) : !u64i, !u64i loc(#loc35)
          cir.store %19, %2 : !u64i, !cir.ptr<!u64i> loc(#loc93)
          cir.yield loc(#loc88)
        } loc(#loc88)
      } loc(#loc88)
      %8 = cir.const #cir.int<0> : !s32i loc(#loc36)
      %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc36)
      %10 = cir.const #cir.int<50> : !s32i loc(#loc37)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc38)
      %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc37)
      %13 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc39)
      %14 = cir.ptr_stride(%13 : !cir.ptr<!s8i>, %12 : !s32i), !cir.ptr<!s8i> loc(#loc39)
      cir.store %9, %14 : !s8i, !cir.ptr<!s8i> loc(#loc94)
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
      cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc41)
    } loc(#loc83)
    cir.return loc(#loc6)
  } loc(#loc81)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d_goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc44, #loc45])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc96)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc46)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc98)
      %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc99)
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen"] {alignment = 8 : i64} loc(#loc100)
      %4 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc98)
      cir.store %4, %1 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc98)
      %5 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc54)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
      %7 = cir.call @strlen(%6) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc54)
      cir.store %7, %3 : !u64i, !cir.ptr<!u64i> loc(#loc101)
      cir.scope {
        %16 = cir.const #cir.int<0> : !s32i loc(#loc60)
        %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc60)
        cir.store %17, %2 : !u64i, !cir.ptr<!u64i> loc(#loc103)
        cir.for : cond {
          %18 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc62)
          %19 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc63)
          %20 = cir.cmp(lt, %18, %19) : !u64i, !cir.bool loc(#loc104)
          cir.condition(%20) loc(#loc64)
        } body {
          cir.scope {
            %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
            %19 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc67)
            %20 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %19 : !u64i), !cir.ptr<!s8i> loc(#loc68)
            %21 = cir.load %20 : !cir.ptr<!s8i>, !s8i loc(#loc66)
            %22 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc69)
            %23 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc70)
            %24 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %22 : !u64i), !cir.ptr<!s8i> loc(#loc70)
            cir.store %21, %24 : !s8i, !cir.ptr<!s8i> loc(#loc106)
          } loc(#loc105)
          cir.yield loc(#loc59)
        } step {
          %18 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc71)
          %19 = cir.unary(inc, %18) : !u64i, !u64i loc(#loc72)
          cir.store %19, %2 : !u64i, !cir.ptr<!u64i> loc(#loc107)
          cir.yield loc(#loc102)
        } loc(#loc102)
      } loc(#loc102)
      %8 = cir.const #cir.int<0> : !s32i loc(#loc73)
      %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc73)
      %10 = cir.const #cir.int<50> : !s32i loc(#loc74)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc75)
      %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc74)
      %13 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc76)
      %14 = cir.ptr_stride(%13 : !cir.ptr<!s8i>, %12 : !s32i), !cir.ptr<!s8i> loc(#loc76)
      cir.store %9, %14 : !s8i, !cir.ptr<!s8i> loc(#loc108)
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
      cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    } loc(#loc97)
    cir.return loc(#loc43)
  } loc(#loc95)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":25:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":39:1)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":26:1)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":27:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":38:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":28:9)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":28:25)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":29:9)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":29:16)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":29:19)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":30:19)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":30:26)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":30:9)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":30:30)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":32:9)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":35:9)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":32:18)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":32:14)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":32:21)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":32:25)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":32:23)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":33:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":34:23)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":34:28)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":34:29)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":34:18)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":34:13)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":32:35)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":32:34)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":36:22)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":36:14)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":36:17)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":36:9)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":37:19)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":37:9)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":46:1)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":60:1)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":47:1)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":48:5)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":59:5)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":49:9)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":49:25)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":50:9)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":50:16)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":50:19)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":51:19)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":51:26)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":51:9)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":51:30)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":53:9)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":56:9)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":53:18)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":53:14)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":53:21)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":53:25)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":53:23)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":54:9)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":55:23)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":55:28)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":55:29)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":55:18)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":55:13)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":53:35)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":53:34)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":57:22)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":57:14)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":57:17)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":57:9)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":58:19)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_53d.c":58:9)
#loc79 = loc(fused[#loc1, #loc2])
#loc80 = loc(fused[#loc3, #loc4])
#loc81 = loc(fused[#loc5, #loc6])
#loc83 = loc(fused[#loc10, #loc11])
#loc84 = loc(fused[#loc12, #loc13])
#loc85 = loc(fused[#loc14, #loc15])
#loc86 = loc(fused[#loc14, #loc16])
#loc87 = loc(fused[#loc19, #loc20])
#loc88 = loc(fused[#loc21, #loc22])
#loc89 = loc(fused[#loc24, #loc23])
#loc90 = loc(fused[#loc25, #loc26])
#loc91 = loc(fused[#loc28, #loc22])
#loc92 = loc(fused[#loc33, #loc31])
#loc93 = loc(fused[#loc35, #loc34])
#loc94 = loc(fused[#loc39, #loc36])
#loc95 = loc(fused[#loc42, #loc43])
#loc97 = loc(fused[#loc47, #loc48])
#loc98 = loc(fused[#loc49, #loc50])
#loc99 = loc(fused[#loc51, #loc52])
#loc100 = loc(fused[#loc51, #loc53])
#loc101 = loc(fused[#loc56, #loc57])
#loc102 = loc(fused[#loc58, #loc59])
#loc103 = loc(fused[#loc61, #loc60])
#loc104 = loc(fused[#loc62, #loc63])
#loc105 = loc(fused[#loc65, #loc59])
#loc106 = loc(fused[#loc70, #loc68])
#loc107 = loc(fused[#loc72, #loc71])
#loc108 = loc(fused[#loc76, #loc73])
