!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":28:15)
#loc6 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":28:19)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":50:20)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":50:24)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":66:20)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":66:24)
#loc56 = loc(fused[#loc5, #loc6])
#loc65 = loc(fused[#loc25, #loc26])
#loc72 = loc(fused[#loc43, #loc44])
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" external @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_229badGlobalE : !s32i {alignment = 4 : i64} loc(#loc54)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_229badSourceEi(%arg0: !s32i loc(fused[#loc5, #loc6])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc56)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc4)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc7)
    cir.scope {
      %4 = cir.get_global @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_229badGlobalE : !cir.ptr<!s32i> loc(#loc54)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc10)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc10)
      cir.if %6 {
        %7 = cir.const #cir.int<2147483647> : !s32i loc(#loc12)
        %8 = cir.const #cir.int<2> : !s32i loc(#loc13)
        %9 = cir.binop(div, %7, %8) : !s32i loc(#loc59)
        %10 = cir.const #cir.int<2> : !s32i loc(#loc14)
        %11 = cir.binop(add, %9, %10) nsw : !s32i loc(#loc59)
        cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc60)
      } loc(#loc58)
    } loc(#loc57)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc16)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc61)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc61)
    cir.return %3 : !s32i loc(#loc61)
  } loc(#loc55)
  cir.global "private" external @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_2214goodG2B1GlobalE : !s32i {alignment = 4 : i64} loc(#loc62)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc63)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc22)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_2214goodG2B1SourceEi(%arg0: !s32i loc(fused[#loc25, #loc26])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc65)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc24)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc27)
    cir.scope {
      %4 = cir.get_global @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_2214goodG2B1GlobalE : !cir.ptr<!s32i> loc(#loc62)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc30)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc30)
      cir.if %6 {
        %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc22)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc22)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc34)
      } else {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc35)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc68)
      } loc(#loc67)
    } loc(#loc66)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc37)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc69)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc69)
    cir.return %3 : !s32i loc(#loc69)
  } loc(#loc64)
  cir.global "private" external @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_2214goodG2B2GlobalE : !s32i {alignment = 4 : i64} loc(#loc70)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_2214goodG2B2SourceEi(%arg0: !s32i loc(fused[#loc43, #loc44])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc72)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc42)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc45)
    cir.scope {
      %4 = cir.get_global @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_2214goodG2B2GlobalE : !cir.ptr<!s32i> loc(#loc70)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc48)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc48)
      cir.if %6 {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc50)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc75)
      } loc(#loc74)
    } loc(#loc73)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc52)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc76)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc76)
    cir.return %3 : !s32i loc(#loc76)
  } loc(#loc71)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":0:0)
#loc1 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":26:1)
#loc2 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":26:12)
#loc3 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":28:1)
#loc4 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":38:1)
#loc7 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":29:1)
#loc8 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":30:5)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":36:5)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":30:8)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":31:5)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":33:16)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":33:26)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":33:30)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":33:9)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":37:12)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":37:5)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":46:1)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":46:12)
#loc20 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc21 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":55:19)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":50:1)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":63:1)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":51:1)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":52:5)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":61:5)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":52:8)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":53:5)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":56:5)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":58:5)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":55:9)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":60:16)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":60:9)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":62:12)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":62:5)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":47:1)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":47:12)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":66:1)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":74:1)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":67:1)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":68:5)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":72:5)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":68:8)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":69:5)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":71:16)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":71:9)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":73:12)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_22b.cpp":73:5)
#loc54 = loc(fused[#loc1, #loc2])
#loc55 = loc(fused[#loc3, #loc4])
#loc57 = loc(fused[#loc8, #loc9])
#loc58 = loc(fused[#loc11, #loc9])
#loc59 = loc(fused[#loc12, #loc13])
#loc60 = loc(fused[#loc15, #loc14])
#loc61 = loc(fused[#loc17, #loc16])
#loc62 = loc(fused[#loc18, #loc19])
#loc63 = loc(fused[#loc20, #loc21])
#loc64 = loc(fused[#loc23, #loc24])
#loc66 = loc(fused[#loc28, #loc29])
#loc67 = loc(fused[#loc31, #loc32, #loc33, #loc29])
#loc68 = loc(fused[#loc36, #loc35])
#loc69 = loc(fused[#loc38, #loc37])
#loc70 = loc(fused[#loc39, #loc40])
#loc71 = loc(fused[#loc41, #loc42])
#loc73 = loc(fused[#loc46, #loc47])
#loc74 = loc(fused[#loc49, #loc47])
#loc75 = loc(fused[#loc51, #loc50])
#loc76 = loc(fused[#loc53, #loc52])
