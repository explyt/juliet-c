!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc50 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":89:10)
#loc51 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":89:14)
#loc52 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":89:20)
#loc53 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":89:32)
#loc123 = loc(fused[#loc50, #loc51])
#loc124 = loc(fused[#loc52, #loc53])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE242_Use_of_Inherently_Dangerous_Function/CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @gets(...) -> !s32i loc(#loc)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc105)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Error Condition: alter control flow to indicate action taken\00" : !cir.array<!s8i x 61>> : !cir.array<!s8i x 61> {alignment = 1 : i64} loc(#loc3)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc106)
  cir.func no_proto @CWE242_Use_of_Inherently_Dangerous_Function__basic_16_bad() extra(#fn_attr1) {
    cir.scope {
      cir.while {
        %0 = cir.const #cir.int<1> : !s32i loc(#loc10)
        %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc10)
        cir.condition(%1) loc(#loc10)
      } do {
        cir.scope {
          %0 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dest"] {alignment = 1 : i64} loc(#loc110)
          %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["result"] {alignment = 8 : i64} loc(#loc111)
          %2 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc17)
          %3 = cir.get_global @gets : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc112)
          %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>)>> loc(#loc112)
          %5 = cir.call %4(%2) : (!cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> !s32i loc(#loc18)
          %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc18)
          %7 = cir.cast(int_to_ptr, %6 : !u64i), !cir.ptr<!s8i> loc(#loc18)
          cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc113)
          cir.scope {
            %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
            %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc24)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc24)
            %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc115)
            cir.if %19 {
              %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 61>> loc(#loc3)
              %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 61>>), !cir.ptr<!s8i> loc(#loc3)
              cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc26)
              %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc27)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc28)
              cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc27)
            } loc(#loc116)
          } loc(#loc114)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc29)
          %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc29)
          %10 = cir.const #cir.int<10> : !s32i loc(#loc30)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc31)
          %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc30)
          %13 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc32)
          %14 = cir.ptr_stride(%13 : !cir.ptr<!s8i>, %12 : !s32i), !cir.ptr<!s8i> loc(#loc32)
          cir.store %9, %14 : !s8i, !cir.ptr<!s8i> loc(#loc117)
          %15 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc33)
          cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc34)
        } loc(#loc109)
        cir.break loc(#loc35)
      } loc(#loc108)
    } loc(#loc108)
    cir.return loc(#loc7)
  } loc(#loc107)
  cir.func no_proto @CWE242_Use_of_Inherently_Dangerous_Function__basic_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc119)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    cir.return loc(#loc37)
  } loc(#loc118)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc120)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc121)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc44)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc45)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc46)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc47)
  cir.func @main(%arg0: !s32i loc(fused[#loc50, #loc51]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc52, #loc53])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc123)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc124)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc49)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc54)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc54)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc55)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc56)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc56)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc57)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc44)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    %8 = cir.get_global @CWE242_Use_of_Inherently_Dangerous_Function__basic_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc125)
    cir.call @CWE242_Use_of_Inherently_Dangerous_Function__basic_16_good() : () -> () loc(#loc59)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc45)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc46)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %13 = cir.get_global @CWE242_Use_of_Inherently_Dangerous_Function__basic_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc126)
    cir.call @CWE242_Use_of_Inherently_Dangerous_Function__basic_16_bad() : () -> () loc(#loc63)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc47)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc66)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc127)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    cir.return %17 : !s32i loc(#loc127)
  } loc(#loc122)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc128)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc129)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      cir.while {
        %0 = cir.const #cir.int<1> : !s32i loc(#loc76)
        %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc76)
        cir.condition(%1) loc(#loc76)
      } do {
        cir.scope {
          %0 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dest"] {alignment = 1 : i64} loc(#loc133)
          %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["result"] {alignment = 8 : i64} loc(#loc134)
          %2 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc83)
          %3 = cir.const #cir.int<10> : !s32i loc(#loc84)
          %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc129)
          %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc85)
          %6 = cir.call @fgets(%2, %3, %5) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc86)
          cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc135)
          cir.scope {
            %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
            %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc92)
            %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc92)
            %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc137)
            cir.if %18 {
              %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 61>> loc(#loc94)
              %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 61>>), !cir.ptr<!s8i> loc(#loc94)
              cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc95)
              %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc96)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc97)
              cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc96)
            } loc(#loc138)
          } loc(#loc136)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc98)
          %8 = cir.cast(integral, %7 : !s32i), !s8i loc(#loc98)
          %9 = cir.const #cir.int<10> : !s32i loc(#loc99)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc100)
          %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc99)
          %12 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc101)
          %13 = cir.ptr_stride(%12 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc101)
          cir.store %8, %13 : !s8i, !cir.ptr<!s8i> loc(#loc139)
          %14 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc102)
          cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc103)
        } loc(#loc132)
        cir.break loc(#loc104)
      } loc(#loc131)
    } loc(#loc131)
    cir.return loc(#loc73)
  } loc(#loc130)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE242_Use_of_Inherently_Dangerous_Function/CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":37:27)
#loc4 = loc("/usr/include/stdlib.h":756:1)
#loc5 = loc("/usr/include/stdlib.h":756:70)
#loc6 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":22:1)
#loc7 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":45:1)
#loc8 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":24:5)
#loc9 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":44:5)
#loc10 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":24:11)
#loc11 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":26:9)
#loc12 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":42:9)
#loc13 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":27:13)
#loc14 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":27:32)
#loc15 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":28:13)
#loc16 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":28:19)
#loc17 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":32:27)
#loc18 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":32:22)
#loc19 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":32:31)
#loc20 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":32:13)
#loc21 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":34:13)
#loc22 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":39:13)
#loc23 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":34:17)
#loc24 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":34:27)
#loc25 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":35:13)
#loc26 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":37:17)
#loc27 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":38:17)
#loc28 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":38:22)
#loc29 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":40:33)
#loc30 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":40:18)
#loc31 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":40:28)
#loc32 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":40:13)
#loc33 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":41:23)
#loc34 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":41:13)
#loc35 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":43:9)
#loc36 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":75:1)
#loc37 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":78:1)
#loc38 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":77:5)
#loc39 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":77:11)
#loc40 = loc("/usr/include/stdlib.h":575:1)
#loc41 = loc("/usr/include/stdlib.h":575:41)
#loc42 = loc("/usr/include/time.h":76:1)
#loc43 = loc("/usr/include/time.h":76:38)
#loc44 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":94:15)
#loc45 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":96:15)
#loc46 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":99:15)
#loc47 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":101:15)
#loc48 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":89:1)
#loc49 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":104:1)
#loc54 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":90:1)
#loc55 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":92:27)
#loc56 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":92:22)
#loc57 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":92:5)
#loc58 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":94:5)
#loc59 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":95:5)
#loc60 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":95:64)
#loc61 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":96:5)
#loc62 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":99:5)
#loc63 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":100:5)
#loc64 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":100:63)
#loc65 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":101:5)
#loc66 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":103:12)
#loc67 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":103:5)
#loc68 = loc("/usr/include/stdio.h":654:1)
#loc69 = loc("/usr/include/stdio.h":655:59)
#loc70 = loc("/usr/include/stdio.h":149:1)
#loc71 = loc("/usr/include/stdio.h":149:14)
#loc72 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":52:1)
#loc73 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":73:1)
#loc74 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":54:5)
#loc75 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":72:5)
#loc76 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":54:11)
#loc77 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":56:9)
#loc78 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":70:9)
#loc79 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":57:13)
#loc80 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":57:32)
#loc81 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":58:13)
#loc82 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":58:19)
#loc83 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":60:28)
#loc84 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":60:34)
#loc85 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":60:45)
#loc86 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":60:22)
#loc87 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":60:13)
#loc88 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":60:50)
#loc89 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":62:13)
#loc90 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":67:13)
#loc91 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":62:17)
#loc92 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":62:27)
#loc93 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":63:13)
#loc94 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":65:27)
#loc95 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":65:17)
#loc96 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":66:17)
#loc97 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":66:22)
#loc98 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":68:33)
#loc99 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":68:18)
#loc100 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":68:28)
#loc101 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":68:13)
#loc102 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":69:23)
#loc103 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":69:13)
#loc104 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_16.c":71:9)
#loc105 = loc(fused[#loc1, #loc2])
#loc106 = loc(fused[#loc4, #loc5])
#loc107 = loc(fused[#loc6, #loc7])
#loc108 = loc(fused[#loc8, #loc9])
#loc109 = loc(fused[#loc11, #loc12])
#loc110 = loc(fused[#loc13, #loc14])
#loc111 = loc(fused[#loc15, #loc16])
#loc112 = loc(fused[#loc18, #loc19])
#loc113 = loc(fused[#loc20, #loc19])
#loc114 = loc(fused[#loc21, #loc22])
#loc115 = loc(fused[#loc23, #loc24])
#loc116 = loc(fused[#loc25, #loc22])
#loc117 = loc(fused[#loc32, #loc29])
#loc118 = loc(fused[#loc36, #loc37])
#loc119 = loc(fused[#loc38, #loc39])
#loc120 = loc(fused[#loc40, #loc41])
#loc121 = loc(fused[#loc42, #loc43])
#loc122 = loc(fused[#loc48, #loc49])
#loc125 = loc(fused[#loc59, #loc60])
#loc126 = loc(fused[#loc63, #loc64])
#loc127 = loc(fused[#loc67, #loc66])
#loc128 = loc(fused[#loc68, #loc69])
#loc129 = loc(fused[#loc70, #loc71])
#loc130 = loc(fused[#loc72, #loc73])
#loc131 = loc(fused[#loc74, #loc75])
#loc132 = loc(fused[#loc77, #loc78])
#loc133 = loc(fused[#loc79, #loc80])
#loc134 = loc(fused[#loc81, #loc82])
#loc135 = loc(fused[#loc87, #loc88])
#loc136 = loc(fused[#loc89, #loc90])
#loc137 = loc(fused[#loc91, #loc92])
#loc138 = loc(fused[#loc93, #loc90])
#loc139 = loc(fused[#loc101, #loc98])
