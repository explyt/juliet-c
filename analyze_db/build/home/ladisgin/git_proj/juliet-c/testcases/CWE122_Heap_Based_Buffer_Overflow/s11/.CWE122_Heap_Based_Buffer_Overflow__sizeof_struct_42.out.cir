!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":21:34)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":21:50)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":84:10)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":84:14)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":84:20)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":84:32)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":47:38)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":47:54)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc124 = loc(fused[#loc7, #loc8])
#loc146 = loc(fused[#loc65, #loc66])
#loc147 = loc(fused[#loc67, #loc68])
#loc152 = loc(fused[#loc85, #loc86])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc121)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc122)
  cir.func internal private @badSource(%arg0: !cir.ptr<!ty__twoIntsStruct> loc(fused[#loc7, #loc8])) -> !cir.ptr<!ty__twoIntsStruct> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc124)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["__retval"] {alignment = 8 : i64} loc(#loc6)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc9)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc10)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc125)
    %4 = cir.call @malloc(%3) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc10)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc126)
    cir.store %5, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc127)
    cir.br ^bb1 loc(#loc128)
  ^bb1:  // pred: ^bb0
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc17)
    %7 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc18)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc18)
    %9 = cir.cmp(eq, %6, %8) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc129)
    cir.brcond %9 ^bb2, ^bb3 loc(#loc130)
  ^bb2:  // pred: ^bb1
    %10 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc20)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc22)
    cir.call @exit(%12) : (!s32i) -> () extra(#fn_attr) loc(#loc20)
    cir.br ^bb3 loc(#loc16)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc16)
  ^bb4:  // pred: ^bb3
    %13 = cir.const #cir.int<1> : !s32i loc(#loc23)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc24)
    %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc25)
    cir.store %13, %15 : !s32i, !cir.ptr<!s32i> loc(#loc131)
    %16 = cir.const #cir.int<2> : !s32i loc(#loc26)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc27)
    %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc28)
    cir.store %16, %18 : !s32i, !cir.ptr<!s32i> loc(#loc132)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc29)
    cir.store %19, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc133)
    %20 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc133)
    cir.return %20 : !cir.ptr<!ty__twoIntsStruct> loc(#loc133)
  } loc(#loc123)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc134)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc135)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc137)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc39)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc138)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc41)
    %3 = cir.call @badSource(%2) : (!cir.ptr<!ty__twoIntsStruct>) -> !cir.ptr<!ty__twoIntsStruct> loc(#loc42)
    cir.store %3, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc139)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc45)
    cir.call @printStructLine(%4) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc46)
    %5 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc47)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc48)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc48)
    cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc47)
    cir.return loc(#loc36)
  } loc(#loc136)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc141)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc51)
    cir.return loc(#loc50)
  } loc(#loc140)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc142)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc143)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc144)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc59)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc60)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc61)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc62)
  cir.func @main(%arg0: !s32i loc(fused[#loc65, #loc66]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc67, #loc68])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc146)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc147)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc64)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc69)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc69)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc70)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc71)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc71)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc72)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc59)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42_good : !cir.ptr<!cir.func<!void ()>> loc(#loc148)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42_good() : () -> () loc(#loc74)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc60)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc61)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc77)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc149)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42_bad() : () -> () loc(#loc78)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc62)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc62)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc81)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc150)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc150)
    cir.return %17 : !s32i loc(#loc150)
  } loc(#loc145)
  cir.func internal private @goodG2BSource(%arg0: !cir.ptr<!ty__twoIntsStruct> loc(fused[#loc85, #loc86])) -> !cir.ptr<!ty__twoIntsStruct> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc152)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["__retval"] {alignment = 8 : i64} loc(#loc84)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc87)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc88)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc153)
    %4 = cir.call @malloc(%3) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc88)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc154)
    cir.store %5, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc155)
    cir.br ^bb1 loc(#loc156)
  ^bb1:  // pred: ^bb0
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc95)
    %7 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc96)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc96)
    %9 = cir.cmp(eq, %6, %8) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc157)
    cir.brcond %9 ^bb2, ^bb3 loc(#loc158)
  ^bb2:  // pred: ^bb1
    %10 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc98)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc99)
    %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc100)
    cir.call @exit(%12) : (!s32i) -> () extra(#fn_attr) loc(#loc98)
    cir.br ^bb3 loc(#loc94)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc94)
  ^bb4:  // pred: ^bb3
    %13 = cir.const #cir.int<1> : !s32i loc(#loc101)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc102)
    %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc25)
    cir.store %13, %15 : !s32i, !cir.ptr<!s32i> loc(#loc159)
    %16 = cir.const #cir.int<2> : !s32i loc(#loc103)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc104)
    %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc28)
    cir.store %16, %18 : !s32i, !cir.ptr<!s32i> loc(#loc160)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc105)
    cir.store %19, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc161)
    %20 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc161)
    cir.return %20 : !cir.ptr<!ty__twoIntsStruct> loc(#loc161)
  } loc(#loc151)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc163)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc111)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc164)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc113)
    %3 = cir.call @goodG2BSource(%2) : (!cir.ptr<!ty__twoIntsStruct>) -> !cir.ptr<!ty__twoIntsStruct> loc(#loc114)
    cir.store %3, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc165)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc117)
    cir.call @printStructLine(%4) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc118)
    %5 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc119)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc120)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc120)
    cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc119)
    cir.return loc(#loc108)
  } loc(#loc162)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":21:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":30:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":22:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":25:29)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":25:36)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":25:47)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":25:48)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":25:5)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":26:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":26:33)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":26:9)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":26:17)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":26:23)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":26:24)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":26:30)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":26:29)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":27:20)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":27:5)
#loc25 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":28:20)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":28:5)
#loc28 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":29:12)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":29:5)
#loc31 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc32 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc33 = loc("/usr/include/stdlib.h":687:1)
#loc34 = loc("/usr/include/stdlib.h":687:32)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":32:1)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":41:1)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":34:5)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":34:21)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":36:12)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":36:5)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":37:22)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":37:12)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":37:5)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":37:26)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":39:21)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":39:5)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":40:5)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":40:10)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":69:1)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":72:1)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":71:5)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":71:13)
#loc53 = loc("/usr/include/stdlib.h":575:1)
#loc54 = loc("/usr/include/stdlib.h":575:41)
#loc55 = loc("/usr/include/time.h":76:1)
#loc56 = loc("/usr/include/time.h":76:38)
#loc57 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc58 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":89:15)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":91:15)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":94:15)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":96:15)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":84:1)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":99:1)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":85:1)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":87:27)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":87:22)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":87:5)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":89:5)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":90:5)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":90:62)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":91:5)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":94:5)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":95:5)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":95:61)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":96:5)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":98:12)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":98:5)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":47:1)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":55:1)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":48:1)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":50:29)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":50:36)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":50:48)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":50:49)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":50:5)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":51:5)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":51:33)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":51:9)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":51:17)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":51:23)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":51:24)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":51:30)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":51:29)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":52:20)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":52:5)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":53:20)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":53:5)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":54:12)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":54:5)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":58:1)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":67:1)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":60:5)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":60:21)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":62:12)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":62:5)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":63:26)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":63:12)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":63:5)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":63:30)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":65:21)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":65:5)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":66:5)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_42.c":66:10)
#loc121 = loc(fused[#loc1, #loc2])
#loc122 = loc(fused[#loc3, #loc4])
#loc123 = loc(fused[#loc5, #loc6])
#loc125 = loc(fused[#loc11, #loc12])
#loc126 = loc(fused[#loc10, #loc13])
#loc127 = loc(fused[#loc14, #loc13])
#loc128 = loc(fused[#loc15, #loc16])
#loc129 = loc(fused[#loc17, #loc18])
#loc130 = loc(fused[#loc19, #loc16])
#loc131 = loc(fused[#loc24, #loc23])
#loc132 = loc(fused[#loc27, #loc26])
#loc133 = loc(fused[#loc30, #loc29])
#loc134 = loc(fused[#loc31, #loc32])
#loc135 = loc(fused[#loc33, #loc34])
#loc136 = loc(fused[#loc35, #loc36])
#loc137 = loc(fused[#loc37, #loc38])
#loc138 = loc(fused[#loc40, #loc39])
#loc139 = loc(fused[#loc43, #loc44])
#loc140 = loc(fused[#loc49, #loc50])
#loc141 = loc(fused[#loc51, #loc52])
#loc142 = loc(fused[#loc53, #loc54])
#loc143 = loc(fused[#loc55, #loc56])
#loc144 = loc(fused[#loc57, #loc58])
#loc145 = loc(fused[#loc63, #loc64])
#loc148 = loc(fused[#loc74, #loc75])
#loc149 = loc(fused[#loc78, #loc79])
#loc150 = loc(fused[#loc82, #loc81])
#loc151 = loc(fused[#loc83, #loc84])
#loc153 = loc(fused[#loc89, #loc90])
#loc154 = loc(fused[#loc88, #loc91])
#loc155 = loc(fused[#loc92, #loc91])
#loc156 = loc(fused[#loc93, #loc94])
#loc157 = loc(fused[#loc95, #loc96])
#loc158 = loc(fused[#loc97, #loc94])
#loc159 = loc(fused[#loc102, #loc101])
#loc160 = loc(fused[#loc104, #loc103])
#loc161 = loc(fused[#loc106, #loc105])
#loc162 = loc(fused[#loc107, #loc108])
#loc163 = loc(fused[#loc109, #loc110])
#loc164 = loc(fused[#loc112, #loc111])
#loc165 = loc(fused[#loc115, #loc116])
