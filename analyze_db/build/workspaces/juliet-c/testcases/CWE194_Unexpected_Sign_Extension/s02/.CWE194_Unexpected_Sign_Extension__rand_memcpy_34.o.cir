!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty_CWE194_Unexpected_Sign_Extension__rand_memcpy_34_unionType = !cir.record<union "CWE194_Unexpected_Sign_Extension__rand_memcpy_34_unionType" {!s16i, !s16i}>
module @"/workspaces/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc106)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc107)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__rand_memcpy_34_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc109)
    %1 = cir.alloca !ty_CWE194_Unexpected_Sign_Extension__rand_memcpy_34_unionType, !cir.ptr<!ty_CWE194_Unexpected_Sign_Extension__rand_memcpy_34_unionType>, ["myUnion"] {alignment = 2 : i64} loc(#loc110)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc11)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc11)
    cir.store %3, %0 : !s16i, !cir.ptr<!s16i> loc(#loc111)
    %4 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc13)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc13)
    %6 = cir.binop(and, %4, %5) : !s32i loc(#loc13)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc13)
    %8 = cir.ternary(%7, true {
      %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc13)
      %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc13)
      %15 = cir.const #cir.int<30> : !s32i loc(#loc13)
      %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc13)
      %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc13)
      %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc13)
      %19 = cir.const #cir.int<15> : !s32i loc(#loc13)
      %20 = cir.shift(left, %18 : !u32i, %19 : !s32i) -> !u32i loc(#loc13)
      %21 = cir.binop(xor, %16, %20) : !u32i loc(#loc13)
      %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc13)
      %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc13)
      %24 = cir.binop(xor, %21, %23) : !u32i loc(#loc13)
      cir.yield %24 : !u32i loc(#loc13)
    }, false {
      %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc13)
      %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc13)
      %15 = cir.const #cir.int<30> : !s32i loc(#loc13)
      %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc13)
      %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc13)
      %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc13)
      %19 = cir.const #cir.int<15> : !s32i loc(#loc13)
      %20 = cir.shift(left, %18 : !u32i, %19 : !s32i) -> !u32i loc(#loc13)
      %21 = cir.binop(xor, %16, %20) : !u32i loc(#loc13)
      %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc13)
      %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc13)
      %24 = cir.binop(xor, %21, %23) : !u32i loc(#loc13)
      %25 = cir.unary(minus, %24) : !u32i, !u32i loc(#loc13)
      %26 = cir.const #cir.int<1> : !s32i loc(#loc13)
      %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc13)
      %28 = cir.binop(sub, %25, %27) : !u32i loc(#loc13)
      cir.yield %28 : !u32i loc(#loc13)
    }) : (!cir.bool) -> !u32i loc(#loc13)
    %9 = cir.cast(integral, %8 : !u32i), !s32i loc(#loc13)
    %10 = cir.cast(integral, %9 : !s32i), !s16i loc(#loc13)
    cir.store %10, %0 : !s16i, !cir.ptr<!s16i> loc(#loc112)
    %11 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc15)
    %12 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE194_Unexpected_Sign_Extension__rand_memcpy_34_unionType> -> !cir.ptr<!s16i> loc(#loc16)
    cir.store %11, %12 : !s16i, !cir.ptr<!s16i> loc(#loc113)
    cir.scope {
      %13 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc115)
      %14 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE194_Unexpected_Sign_Extension__rand_memcpy_34_unionType> -> !cir.ptr<!s16i> loc(#loc22)
      %15 = cir.load %14 : !cir.ptr<!s16i>, !s16i loc(#loc21)
      cir.store %15, %13 : !s16i, !cir.ptr<!s16i> loc(#loc115)
      cir.scope {
        %16 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc117)
        %17 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc118)
        %18 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc118)
        cir.store %18, %17 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc118)
        %19 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc29)
        %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc29)
        %21 = cir.const #cir.int<65> : !s32i loc(#loc30)
        %22 = cir.const #cir.int<100> : !s32i loc(#loc31)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc32)
        %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc31)
        %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc31)
        cir.libc.memset %25 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc119)
        %26 = cir.const #cir.int<0> : !s32i loc(#loc35)
        %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc35)
        %28 = cir.const #cir.int<100> : !s32i loc(#loc36)
        %29 = cir.const #cir.int<1> : !s32i loc(#loc37)
        %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc36)
        %31 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc38)
        %32 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc38)
        cir.store %27, %32 : !s8i, !cir.ptr<!s8i> loc(#loc120)
        cir.scope {
          %34 = cir.load %13 : !cir.ptr<!s16i>, !s16i loc(#loc41)
          %35 = cir.cast(integral, %34 : !s16i), !s32i loc(#loc41)
          %36 = cir.const #cir.int<100> : !s32i loc(#loc42)
          %37 = cir.cmp(lt, %35, %36) : !s32i, !cir.bool loc(#loc122)
          cir.if %37 {
            %38 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc44)
            %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc44)
            %40 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc45)
            %41 = cir.cast(bitcast, %40 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc45)
            %42 = cir.load %13 : !cir.ptr<!s16i>, !s16i loc(#loc46)
            %43 = cir.cast(integral, %42 : !s16i), !u64i loc(#loc46)
            cir.libc.memcpy %43 bytes from %41 to %39 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc124)
            %44 = cir.const #cir.int<0> : !s32i loc(#loc49)
            %45 = cir.cast(integral, %44 : !s32i), !s8i loc(#loc49)
            %46 = cir.load %13 : !cir.ptr<!s16i>, !s16i loc(#loc50)
            %47 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc51)
            %48 = cir.ptr_stride(%47 : !cir.ptr<!s8i>, %46 : !s16i), !cir.ptr<!s8i> loc(#loc51)
            cir.store %45, %48 : !s8i, !cir.ptr<!s8i> loc(#loc125)
          } loc(#loc123)
        } loc(#loc121)
        %33 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc52)
        cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc53)
      } loc(#loc116)
    } loc(#loc114)
    cir.return loc(#loc6)
  } loc(#loc108)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__rand_memcpy_34_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc127)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc56)
    cir.return loc(#loc55)
  } loc(#loc126)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc129)
    %1 = cir.alloca !ty_CWE194_Unexpected_Sign_Extension__rand_memcpy_34_unionType, !cir.ptr<!ty_CWE194_Unexpected_Sign_Extension__rand_memcpy_34_unionType>, ["myUnion"] {alignment = 2 : i64} loc(#loc130)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc64)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc64)
    cir.store %3, %0 : !s16i, !cir.ptr<!s16i> loc(#loc131)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc66)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc67)
    %6 = cir.binop(sub, %4, %5) nsw : !s32i loc(#loc66)
    %7 = cir.cast(integral, %6 : !s32i), !s16i loc(#loc66)
    cir.store %7, %0 : !s16i, !cir.ptr<!s16i> loc(#loc132)
    %8 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc69)
    %9 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE194_Unexpected_Sign_Extension__rand_memcpy_34_unionType> -> !cir.ptr<!s16i> loc(#loc16)
    cir.store %8, %9 : !s16i, !cir.ptr<!s16i> loc(#loc133)
    cir.scope {
      %10 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc135)
      %11 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE194_Unexpected_Sign_Extension__rand_memcpy_34_unionType> -> !cir.ptr<!s16i> loc(#loc22)
      %12 = cir.load %11 : !cir.ptr<!s16i>, !s16i loc(#loc74)
      cir.store %12, %10 : !s16i, !cir.ptr<!s16i> loc(#loc135)
      cir.scope {
        %13 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc137)
        %14 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc138)
        %15 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc138)
        cir.store %15, %14 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc138)
        %16 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc81)
        %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc81)
        %18 = cir.const #cir.int<65> : !s32i loc(#loc82)
        %19 = cir.const #cir.int<100> : !s32i loc(#loc83)
        %20 = cir.const #cir.int<1> : !s32i loc(#loc84)
        %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc83)
        %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc83)
        cir.libc.memset %22 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc139)
        %23 = cir.const #cir.int<0> : !s32i loc(#loc87)
        %24 = cir.cast(integral, %23 : !s32i), !s8i loc(#loc87)
        %25 = cir.const #cir.int<100> : !s32i loc(#loc88)
        %26 = cir.const #cir.int<1> : !s32i loc(#loc89)
        %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc88)
        %28 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc90)
        %29 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc90)
        cir.store %24, %29 : !s8i, !cir.ptr<!s8i> loc(#loc140)
        cir.scope {
          %31 = cir.load %10 : !cir.ptr<!s16i>, !s16i loc(#loc93)
          %32 = cir.cast(integral, %31 : !s16i), !s32i loc(#loc93)
          %33 = cir.const #cir.int<100> : !s32i loc(#loc94)
          %34 = cir.cmp(lt, %32, %33) : !s32i, !cir.bool loc(#loc142)
          cir.if %34 {
            %35 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc96)
            %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc96)
            %37 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc97)
            %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc97)
            %39 = cir.load %10 : !cir.ptr<!s16i>, !s16i loc(#loc98)
            %40 = cir.cast(integral, %39 : !s16i), !u64i loc(#loc98)
            cir.libc.memcpy %40 bytes from %38 to %36 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc144)
            %41 = cir.const #cir.int<0> : !s32i loc(#loc101)
            %42 = cir.cast(integral, %41 : !s32i), !s8i loc(#loc101)
            %43 = cir.load %10 : !cir.ptr<!s16i>, !s16i loc(#loc102)
            %44 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc103)
            %45 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %43 : !s16i), !cir.ptr<!s8i> loc(#loc103)
            cir.store %42, %45 : !s8i, !cir.ptr<!s8i> loc(#loc145)
          } loc(#loc143)
        } loc(#loc141)
        %30 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc104)
        cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc105)
      } loc(#loc136)
    } loc(#loc134)
    cir.return loc(#loc59)
  } loc(#loc128)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":27:1)
#loc6 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":53:1)
#loc7 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":29:5)
#loc8 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":29:11)
#loc9 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":30:5)
#loc10 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":30:64)
#loc11 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":32:12)
#loc12 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":32:5)
#loc13 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":34:19)
#loc14 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":34:5)
#loc15 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":35:26)
#loc16 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":21:11)
#loc17 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":35:5)
#loc18 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":36:5)
#loc19 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":52:5)
#loc20 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":37:9)
#loc21 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":37:30)
#loc22 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":22:11)
#loc23 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":38:9)
#loc24 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":51:9)
#loc25 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":39:13)
#loc26 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":39:28)
#loc27 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":40:13)
#loc28 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":40:30)
#loc29 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":41:20)
#loc30 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":41:28)
#loc31 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":41:33)
#loc32 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":41:37)
#loc33 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":41:13)
#loc34 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":41:38)
#loc35 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":42:29)
#loc36 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":42:20)
#loc37 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":42:24)
#loc38 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":42:13)
#loc39 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":43:13)
#loc40 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":49:13)
#loc41 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":43:17)
#loc42 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":43:24)
#loc43 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":44:13)
#loc44 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":47:24)
#loc45 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":47:30)
#loc46 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":47:38)
#loc47 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":47:17)
#loc48 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":47:42)
#loc49 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":48:30)
#loc50 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":48:22)
#loc51 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":48:17)
#loc52 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":50:23)
#loc53 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":50:13)
#loc54 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":88:1)
#loc55 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":91:1)
#loc56 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":90:5)
#loc57 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":90:13)
#loc58 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":60:1)
#loc59 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":86:1)
#loc60 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":62:5)
#loc61 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":62:11)
#loc62 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":63:5)
#loc63 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":63:64)
#loc64 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":65:12)
#loc65 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":65:5)
#loc66 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":67:12)
#loc67 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":67:16)
#loc68 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":67:5)
#loc69 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":68:26)
#loc70 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":68:5)
#loc71 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":69:5)
#loc72 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":85:5)
#loc73 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":70:9)
#loc74 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":70:30)
#loc75 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":71:9)
#loc76 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":84:9)
#loc77 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":72:13)
#loc78 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":72:28)
#loc79 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":73:13)
#loc80 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":73:30)
#loc81 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":74:20)
#loc82 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":74:28)
#loc83 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":74:33)
#loc84 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":74:37)
#loc85 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":74:13)
#loc86 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":74:38)
#loc87 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":75:29)
#loc88 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":75:20)
#loc89 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":75:24)
#loc90 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":75:13)
#loc91 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":76:13)
#loc92 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":82:13)
#loc93 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":76:17)
#loc94 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":76:24)
#loc95 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":77:13)
#loc96 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":80:24)
#loc97 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":80:30)
#loc98 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":80:38)
#loc99 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":80:17)
#loc100 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":80:42)
#loc101 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":81:30)
#loc102 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":81:22)
#loc103 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":81:17)
#loc104 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":83:23)
#loc105 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_34.c":83:13)
#loc106 = loc(fused[#loc1, #loc2])
#loc107 = loc(fused[#loc3, #loc4])
#loc108 = loc(fused[#loc5, #loc6])
#loc109 = loc(fused[#loc7, #loc8])
#loc110 = loc(fused[#loc9, #loc10])
#loc111 = loc(fused[#loc12, #loc11])
#loc112 = loc(fused[#loc14, #loc13])
#loc113 = loc(fused[#loc17, #loc15])
#loc114 = loc(fused[#loc18, #loc19])
#loc115 = loc(fused[#loc20, #loc21])
#loc116 = loc(fused[#loc23, #loc24])
#loc117 = loc(fused[#loc25, #loc26])
#loc118 = loc(fused[#loc27, #loc28])
#loc119 = loc(fused[#loc33, #loc34])
#loc120 = loc(fused[#loc38, #loc35])
#loc121 = loc(fused[#loc39, #loc40])
#loc122 = loc(fused[#loc41, #loc42])
#loc123 = loc(fused[#loc43, #loc40])
#loc124 = loc(fused[#loc47, #loc48])
#loc125 = loc(fused[#loc51, #loc49])
#loc126 = loc(fused[#loc54, #loc55])
#loc127 = loc(fused[#loc56, #loc57])
#loc128 = loc(fused[#loc58, #loc59])
#loc129 = loc(fused[#loc60, #loc61])
#loc130 = loc(fused[#loc62, #loc63])
#loc131 = loc(fused[#loc65, #loc64])
#loc132 = loc(fused[#loc68, #loc67])
#loc133 = loc(fused[#loc70, #loc69])
#loc134 = loc(fused[#loc71, #loc72])
#loc135 = loc(fused[#loc73, #loc74])
#loc136 = loc(fused[#loc75, #loc76])
#loc137 = loc(fused[#loc77, #loc78])
#loc138 = loc(fused[#loc79, #loc80])
#loc139 = loc(fused[#loc85, #loc86])
#loc140 = loc(fused[#loc90, #loc87])
#loc141 = loc(fused[#loc91, #loc92])
#loc142 = loc(fused[#loc93, #loc94])
#loc143 = loc(fused[#loc95, #loc92])
#loc144 = loc(fused[#loc99, #loc100])
#loc145 = loc(fused[#loc103, #loc101])
