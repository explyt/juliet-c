!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE510_Trapdoor/CWE510_Trapdoor__hostname_based_logic_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc403)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc404)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc405)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc406)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc407)
  cir.func private @getsockname(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i extra(#fn_attr) loc(#loc408)
  cir.func private @getnameinfo(!cir.ptr<!ty_sockaddr>, !u32i, !cir.ptr<!s8i>, !u32i, !cir.ptr<!s8i>, !u32i, !s32i) -> !s32i loc(#loc409)
  cir.func private @strcmp(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc410)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"admin.google.com\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc17)
  cir.func private @send(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc411)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Welcome, admin!\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc20)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Welcome!\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc21)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc412)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Send failed!\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc24)
  cir.func private @close(!s32i) -> !s32i loc(#loc413)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc27)
  cir.func no_proto @CWE510_Trapdoor__hostname_based_logic_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc415)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["acceptService"] {alignment = 4 : i64} loc(#loc416)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptServiceLen", init] {alignment = 4 : i64} loc(#loc417)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc418)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc419)
    %5 = cir.alloca !cir.array<!s8i x 1025>, !cir.ptr<!cir.array<!s8i x 1025>>, ["hostname"] {alignment = 16 : i64} loc(#loc420)
    %6 = cir.alloca !cir.array<!s8i x 32>, !cir.ptr<!cir.array<!s8i x 32>>, ["servInfo"] {alignment = 16 : i64} loc(#loc421)
    cir.br ^bb1 loc(#loc422)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<6> : !s32i loc(#loc45)
    cir.br ^bb2 loc(#loc43)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %7 : !s32i, ^bb57 [
      6: ^bb4
    ] loc(#loc43)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc46)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc423)
  ^bb5:  // pred: ^bb4
    %8 = cir.const #cir.int<16> : !u64i loc(#loc424)
    %9 = cir.cast(integral, %8 : !u64i), !s32i loc(#loc424)
    cir.store %9, %2 : !s32i, !cir.ptr<!s32i> loc(#loc417)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc36)
    cir.store %11, %3 : !s32i, !cir.ptr<!s32i> loc(#loc418)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc38)
    %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc38)
    cir.store %13, %4 : !s32i, !cir.ptr<!s32i> loc(#loc419)
    cir.br ^bb6 loc(#loc425)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8 loc(#loc425)
  ^bb7:  // pred: ^bb45
    %14 = cir.const #cir.int<0> : !s32i loc(#loc52)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc52)
    cir.brcond %15 ^bb8, ^bb46 loc(#loc52)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    %16 = cir.const #cir.int<2> : !s32i loc(#loc53)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc54)
    %18 = cir.const #cir.int<6> : !s32i loc(#loc55)
    %19 = cir.call @socket(%16, %17, %18) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc56)
    cir.store %19, %3 : !s32i, !cir.ptr<!s32i> loc(#loc426)
    cir.br ^bb9 loc(#loc427)
  ^bb9:  // pred: ^bb8
    %20 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc61)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc62)
    %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc62)
    %23 = cir.cmp(eq, %20, %22) : !s32i, !cir.bool loc(#loc428)
    cir.brcond %23 ^bb10, ^bb11 loc(#loc429)
  ^bb10:  // pred: ^bb9
    cir.br ^bb46 loc(#loc64)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc60)
  ^bb12:  // pred: ^bb11
    %24 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc430)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc67)
    %26 = cir.const #cir.int<16> : !u64i loc(#loc431)
    cir.libc.memset %26 bytes from %24 set to %25 : !cir.ptr<!void>, !s32i, !u64i loc(#loc432)
    %27 = cir.const #cir.int<2> : !s32i loc(#loc72)
    %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc72)
    %29 = cir.get_member %0[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
    cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc433)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc75)
    %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc75)
    %32 = cir.get_member %0[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc76)
    %33 = cir.get_member %32[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc77)
    cir.store %31, %33 : !u32i, !cir.ptr<!u32i> loc(#loc434)
    %34 = cir.const #cir.int<20000> : !s32i loc(#loc79)
    %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc79)
    %36 = cir.call @htons(%35) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc80)
    %37 = cir.get_member %0[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc81)
    cir.store %36, %37 : !u16i, !cir.ptr<!u16i> loc(#loc435)
    cir.br ^bb13 loc(#loc436)
  ^bb13:  // pred: ^bb12
    %38 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc86)
    %39 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc437)
    %40 = cir.const #cir.int<16> : !u64i loc(#loc438)
    %41 = cir.cast(integral, %40 : !u64i), !u32i loc(#loc438)
    %42 = cir.call @bind(%38, %39, %41) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc91)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc92)
    %44 = cir.unary(minus, %43) : !s32i, !s32i loc(#loc92)
    %45 = cir.cmp(eq, %42, %44) : !s32i, !cir.bool loc(#loc439)
    cir.brcond %45 ^bb14, ^bb15 loc(#loc440)
  ^bb14:  // pred: ^bb13
    cir.br ^bb46 loc(#loc94)
  ^bb15:  // pred: ^bb13
    cir.br ^bb16 loc(#loc85)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc441)
  ^bb17:  // pred: ^bb16
    %46 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc97)
    %47 = cir.const #cir.int<5> : !s32i loc(#loc98)
    %48 = cir.call @listen(%46, %47) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc99)
    %49 = cir.const #cir.int<1> : !s32i loc(#loc100)
    %50 = cir.unary(minus, %49) : !s32i, !s32i loc(#loc100)
    %51 = cir.cmp(eq, %48, %50) : !s32i, !cir.bool loc(#loc442)
    cir.brcond %51 ^bb18, ^bb19 loc(#loc443)
  ^bb18:  // pred: ^bb17
    cir.br ^bb46 loc(#loc102)
  ^bb19:  // pred: ^bb17
    cir.br ^bb20 loc(#loc96)
  ^bb20:  // pred: ^bb19
    %52 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    %53 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc104)
    %54 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc105)
    %55 = cir.call @accept(%52, %53, %54) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc106)
    cir.store %55, %4 : !s32i, !cir.ptr<!s32i> loc(#loc444)
    cir.br ^bb21 loc(#loc445)
  ^bb21:  // pred: ^bb20
    %56 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc111)
    %57 = cir.const #cir.int<1> : !s32i loc(#loc112)
    %58 = cir.unary(minus, %57) : !s32i, !s32i loc(#loc112)
    %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc446)
    cir.brcond %59 ^bb22, ^bb23 loc(#loc447)
  ^bb22:  // pred: ^bb21
    cir.br ^bb46 loc(#loc114)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc110)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc448)
  ^bb25:  // pred: ^bb24
    %60 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    %61 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc449)
    %62 = cir.cast(bitcast, %2 : !cir.ptr<!s32i>), !cir.ptr<!u32i> loc(#loc450)
    %63 = cir.call @getsockname(%60, %61, %62) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i extra(#fn_attr) loc(#loc122)
    %64 = cir.const #cir.int<1> : !s32i loc(#loc123)
    %65 = cir.unary(minus, %64) : !s32i, !s32i loc(#loc124)
    %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc451)
    cir.brcond %66 ^bb26, ^bb27 loc(#loc452)
  ^bb26:  // pred: ^bb25
    cir.br ^bb46 loc(#loc126)
  ^bb27:  // pred: ^bb25
    cir.br ^bb28 loc(#loc116)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc453)
  ^bb29:  // pred: ^bb28
    %67 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc454)
    %68 = cir.const #cir.int<16> : !u64i loc(#loc455)
    %69 = cir.cast(integral, %68 : !u64i), !u32i loc(#loc455)
    %70 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 1025>>), !cir.ptr<!s8i> loc(#loc133)
    %71 = cir.const #cir.int<1025> : !s32i loc(#loc134)
    %72 = cir.cast(integral, %71 : !s32i), !u32i loc(#loc134)
    %73 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc135)
    %74 = cir.const #cir.int<32> : !s32i loc(#loc136)
    %75 = cir.cast(integral, %74 : !s32i), !u32i loc(#loc136)
    %76 = cir.const #cir.int<2> : !s32i loc(#loc137)
    %77 = cir.call @getnameinfo(%67, %69, %70, %72, %73, %75, %76) : (!cir.ptr<!ty_sockaddr>, !u32i, !cir.ptr<!s8i>, !u32i, !cir.ptr<!s8i>, !u32i, !s32i) -> !s32i loc(#loc138)
    %78 = cir.const #cir.int<0> : !s32i loc(#loc139)
    %79 = cir.cmp(ne, %77, %78) : !s32i, !cir.bool loc(#loc456)
    cir.brcond %79 ^bb30, ^bb31 loc(#loc457)
  ^bb30:  // pred: ^bb29
    cir.br ^bb46 loc(#loc141)
  ^bb31:  // pred: ^bb29
    cir.br ^bb32 loc(#loc128)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc458)
  ^bb33:  // pred: ^bb32
    %80 = cir.get_global @strcmp : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc144)
    %81 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc17)
    %82 = cir.cast(array_to_ptrdecay, %81 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc17)
    %83 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 1025>>), !cir.ptr<!s8i> loc(#loc145)
    %84 = cir.call @strcmp(%82, %83) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc144)
    %85 = cir.const #cir.int<0> : !s32i loc(#loc146)
    %86 = cir.cmp(eq, %84, %85) : !s32i, !cir.bool loc(#loc459)
    cir.brcond %86 ^bb34, ^bb39 loc(#loc460)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc461)
  ^bb35:  // pred: ^bb34
    %87 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc152)
    %88 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc20)
    %89 = cir.cast(array_to_ptrdecay, %88 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc20)
    %90 = cir.cast(bitcast, %89 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc20)
    %91 = cir.const #cir.int<15> : !u64i loc(#loc462)
    %92 = cir.const #cir.int<0> : !s32i loc(#loc155)
    %93 = cir.call @send(%87, %90, %91, %92) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc156)
    %94 = cir.const #cir.int<1> : !s32i loc(#loc157)
    %95 = cir.unary(minus, %94) : !s32i, !s32i loc(#loc157)
    %96 = cir.cast(integral, %95 : !s32i), !s64i loc(#loc157)
    %97 = cir.cmp(eq, %93, %96) : !s64i, !cir.bool loc(#loc463)
    cir.brcond %97 ^bb36, ^bb37 loc(#loc464)
  ^bb36:  // pred: ^bb35
    cir.br ^bb46 loc(#loc159)
  ^bb37:  // pred: ^bb35
    cir.br ^bb38 loc(#loc151)
  ^bb38:  // pred: ^bb37
    cir.br ^bb44 loc(#loc148)
  ^bb39:  // pred: ^bb33
    cir.br ^bb40 loc(#loc465)
  ^bb40:  // pred: ^bb39
    %98 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc162)
    %99 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc21)
    %100 = cir.cast(array_to_ptrdecay, %99 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc21)
    %101 = cir.cast(bitcast, %100 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc21)
    %102 = cir.const #cir.int<8> : !u64i loc(#loc466)
    %103 = cir.const #cir.int<0> : !s32i loc(#loc165)
    %104 = cir.call @send(%98, %101, %102, %103) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc166)
    %105 = cir.const #cir.int<1> : !s32i loc(#loc167)
    %106 = cir.unary(minus, %105) : !s32i, !s32i loc(#loc167)
    %107 = cir.cast(integral, %106 : !s32i), !s64i loc(#loc167)
    %108 = cir.cmp(eq, %104, %107) : !s64i, !cir.bool loc(#loc467)
    cir.brcond %108 ^bb41, ^bb42 loc(#loc468)
  ^bb41:  // pred: ^bb40
    %109 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc24)
    %110 = cir.cast(array_to_ptrdecay, %109 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc24)
    cir.call @printLine(%110) : (!cir.ptr<!s8i>) -> () loc(#loc169)
    cir.br ^bb42 loc(#loc161)
  ^bb42:  // 2 preds: ^bb40, ^bb41
    cir.br ^bb43 loc(#loc161)
  ^bb43:  // pred: ^bb42
    cir.br ^bb44 loc(#loc143)
  ^bb44:  // 2 preds: ^bb38, ^bb43
    cir.br ^bb45 loc(#loc143)
  ^bb45:  // pred: ^bb44
    cir.br ^bb7 loc(#loc51)
  ^bb46:  // 8 preds: ^bb7, ^bb10, ^bb14, ^bb18, ^bb22, ^bb26, ^bb30, ^bb36
    cir.br ^bb47 loc(#loc51)
  ^bb47:  // pred: ^bb46
    cir.br ^bb48 loc(#loc469)
  ^bb48:  // pred: ^bb47
    %111 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc172)
    %112 = cir.const #cir.int<1> : !s32i loc(#loc173)
    %113 = cir.unary(minus, %112) : !s32i, !s32i loc(#loc173)
    %114 = cir.cmp(ne, %111, %113) : !s32i, !cir.bool loc(#loc470)
    cir.brcond %114 ^bb49, ^bb50 loc(#loc471)
  ^bb49:  // pred: ^bb48
    %115 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc175)
    %116 = cir.call @close(%115) : (!s32i) -> !s32i loc(#loc176)
    cir.br ^bb50 loc(#loc171)
  ^bb50:  // 2 preds: ^bb48, ^bb49
    cir.br ^bb51 loc(#loc171)
  ^bb51:  // pred: ^bb50
    cir.br ^bb52 loc(#loc472)
  ^bb52:  // pred: ^bb51
    %117 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc179)
    %118 = cir.const #cir.int<1> : !s32i loc(#loc180)
    %119 = cir.unary(minus, %118) : !s32i, !s32i loc(#loc180)
    %120 = cir.cmp(ne, %117, %119) : !s32i, !cir.bool loc(#loc473)
    cir.brcond %120 ^bb53, ^bb54 loc(#loc474)
  ^bb53:  // pred: ^bb52
    %121 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc182)
    %122 = cir.call @close(%121) : (!s32i) -> !s32i loc(#loc183)
    cir.br ^bb54 loc(#loc178)
  ^bb54:  // 2 preds: ^bb52, ^bb53
    cir.br ^bb55 loc(#loc178)
  ^bb55:  // pred: ^bb54
    cir.br ^bb56 loc(#loc48)
  ^bb56:  // pred: ^bb55
    cir.br ^bb58 loc(#loc184)
  ^bb57:  // pred: ^bb2
    %123 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc27)
    %124 = cir.cast(array_to_ptrdecay, %123 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc27)
    cir.call @printLine(%124) : (!cir.ptr<!s8i>) -> () loc(#loc185)
    cir.br ^bb58 loc(#loc186)
  ^bb58:  // 2 preds: ^bb56, ^bb57
    cir.br ^bb59 loc(#loc44)
  ^bb59:  // pred: ^bb58
    cir.return loc(#loc29)
  } loc(#loc414)
  cir.func no_proto @CWE510_Trapdoor__hostname_based_logic_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc476)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc189)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc477)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc191)
    cir.return loc(#loc188)
  } loc(#loc475)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc479)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc480)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc481)
    cir.br ^bb1 loc(#loc482)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<5> : !s32i loc(#loc203)
    cir.br ^bb2 loc(#loc201)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc201)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc204)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %4 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc205)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc205)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc206)
    cir.br ^bb41 loc(#loc207)
  ^bb5:  // pred: ^bb2
    cir.br ^bb6 loc(#loc483)
  ^bb6:  // pred: ^bb5
    %6 = cir.const #cir.int<1> : !s32i loc(#loc198)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc198)
    cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc480)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc200)
    %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc200)
    cir.store %9, %2 : !s32i, !cir.ptr<!s32i> loc(#loc481)
    cir.br ^bb7 loc(#loc484)
  ^bb7:  // pred: ^bb6
    cir.br ^bb9 loc(#loc484)
  ^bb8:  // pred: ^bb29
    %10 = cir.const #cir.int<0> : !s32i loc(#loc212)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc212)
    cir.brcond %11 ^bb9, ^bb30 loc(#loc212)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    %12 = cir.const #cir.int<2> : !s32i loc(#loc213)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc214)
    %14 = cir.const #cir.int<6> : !s32i loc(#loc215)
    %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc216)
    cir.store %15, %1 : !s32i, !cir.ptr<!s32i> loc(#loc485)
    cir.br ^bb10 loc(#loc486)
  ^bb10:  // pred: ^bb9
    %16 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc221)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc222)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc222)
    %19 = cir.cmp(eq, %16, %18) : !s32i, !cir.bool loc(#loc487)
    cir.brcond %19 ^bb11, ^bb12 loc(#loc488)
  ^bb11:  // pred: ^bb10
    cir.br ^bb30 loc(#loc224)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc220)
  ^bb13:  // pred: ^bb12
    %20 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc489)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc227)
    %22 = cir.const #cir.int<16> : !u64i loc(#loc490)
    cir.libc.memset %22 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc491)
    %23 = cir.const #cir.int<2> : !s32i loc(#loc232)
    %24 = cir.cast(integral, %23 : !s32i), !u16i loc(#loc232)
    %25 = cir.get_member %0[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
    cir.store %24, %25 : !u16i, !cir.ptr<!u16i> loc(#loc492)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc234)
    %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc234)
    %28 = cir.get_member %0[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc76)
    %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc77)
    cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc493)
    %30 = cir.const #cir.int<20000> : !s32i loc(#loc236)
    %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc236)
    %32 = cir.call @htons(%31) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc237)
    %33 = cir.get_member %0[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc81)
    cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc494)
    cir.br ^bb14 loc(#loc495)
  ^bb14:  // pred: ^bb13
    %34 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc242)
    %35 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc496)
    %36 = cir.const #cir.int<16> : !u64i loc(#loc497)
    %37 = cir.cast(integral, %36 : !u64i), !u32i loc(#loc497)
    %38 = cir.call @bind(%34, %35, %37) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc247)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc248)
    %40 = cir.unary(minus, %39) : !s32i, !s32i loc(#loc248)
    %41 = cir.cmp(eq, %38, %40) : !s32i, !cir.bool loc(#loc498)
    cir.brcond %41 ^bb15, ^bb16 loc(#loc499)
  ^bb15:  // pred: ^bb14
    cir.br ^bb30 loc(#loc250)
  ^bb16:  // pred: ^bb14
    cir.br ^bb17 loc(#loc241)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc500)
  ^bb18:  // pred: ^bb17
    %42 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc253)
    %43 = cir.const #cir.int<5> : !s32i loc(#loc254)
    %44 = cir.call @listen(%42, %43) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc255)
    %45 = cir.const #cir.int<1> : !s32i loc(#loc256)
    %46 = cir.unary(minus, %45) : !s32i, !s32i loc(#loc256)
    %47 = cir.cmp(eq, %44, %46) : !s32i, !cir.bool loc(#loc501)
    cir.brcond %47 ^bb19, ^bb20 loc(#loc502)
  ^bb19:  // pred: ^bb18
    cir.br ^bb30 loc(#loc258)
  ^bb20:  // pred: ^bb18
    cir.br ^bb21 loc(#loc252)
  ^bb21:  // pred: ^bb20
    %48 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc259)
    %49 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc260)
    %50 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc261)
    %51 = cir.call @accept(%48, %49, %50) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc262)
    cir.store %51, %2 : !s32i, !cir.ptr<!s32i> loc(#loc503)
    cir.br ^bb22 loc(#loc504)
  ^bb22:  // pred: ^bb21
    %52 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc267)
    %53 = cir.const #cir.int<1> : !s32i loc(#loc268)
    %54 = cir.unary(minus, %53) : !s32i, !s32i loc(#loc268)
    %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc505)
    cir.brcond %55 ^bb23, ^bb24 loc(#loc506)
  ^bb23:  // pred: ^bb22
    cir.br ^bb30 loc(#loc270)
  ^bb24:  // pred: ^bb22
    cir.br ^bb25 loc(#loc266)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc507)
  ^bb26:  // pred: ^bb25
    %56 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc273)
    %57 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc274)
    %58 = cir.cast(array_to_ptrdecay, %57 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc274)
    %59 = cir.cast(bitcast, %58 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc274)
    %60 = cir.const #cir.int<8> : !u64i loc(#loc508)
    %61 = cir.const #cir.int<0> : !s32i loc(#loc277)
    %62 = cir.call @send(%56, %59, %60, %61) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc278)
    %63 = cir.const #cir.int<1> : !s32i loc(#loc279)
    %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc279)
    %65 = cir.cast(integral, %64 : !s32i), !s64i loc(#loc279)
    %66 = cir.cmp(eq, %62, %65) : !s64i, !cir.bool loc(#loc509)
    cir.brcond %66 ^bb27, ^bb28 loc(#loc510)
  ^bb27:  // pred: ^bb26
    %67 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc281)
    %68 = cir.cast(array_to_ptrdecay, %67 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc281)
    cir.call @printLine(%68) : (!cir.ptr<!s8i>) -> () loc(#loc282)
    cir.br ^bb28 loc(#loc272)
  ^bb28:  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc272)
  ^bb29:  // pred: ^bb28
    cir.br ^bb8 loc(#loc211)
  ^bb30:  // 5 preds: ^bb8, ^bb11, ^bb15, ^bb19, ^bb23
    cir.br ^bb31 loc(#loc211)
  ^bb31:  // pred: ^bb30
    cir.br ^bb32 loc(#loc511)
  ^bb32:  // pred: ^bb31
    %69 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc285)
    %70 = cir.const #cir.int<1> : !s32i loc(#loc286)
    %71 = cir.unary(minus, %70) : !s32i, !s32i loc(#loc286)
    %72 = cir.cmp(ne, %69, %71) : !s32i, !cir.bool loc(#loc512)
    cir.brcond %72 ^bb33, ^bb34 loc(#loc513)
  ^bb33:  // pred: ^bb32
    %73 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc288)
    %74 = cir.call @close(%73) : (!s32i) -> !s32i loc(#loc289)
    cir.br ^bb34 loc(#loc284)
  ^bb34:  // 2 preds: ^bb32, ^bb33
    cir.br ^bb35 loc(#loc284)
  ^bb35:  // pred: ^bb34
    cir.br ^bb36 loc(#loc514)
  ^bb36:  // pred: ^bb35
    %75 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc292)
    %76 = cir.const #cir.int<1> : !s32i loc(#loc293)
    %77 = cir.unary(minus, %76) : !s32i, !s32i loc(#loc293)
    %78 = cir.cmp(ne, %75, %77) : !s32i, !cir.bool loc(#loc515)
    cir.brcond %78 ^bb37, ^bb38 loc(#loc516)
  ^bb37:  // pred: ^bb36
    %79 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc295)
    %80 = cir.call @close(%79) : (!s32i) -> !s32i loc(#loc296)
    cir.br ^bb38 loc(#loc291)
  ^bb38:  // 2 preds: ^bb36, ^bb37
    cir.br ^bb39 loc(#loc291)
  ^bb39:  // pred: ^bb38
    cir.br ^bb40 loc(#loc209)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc297)
  ^bb41:  // 2 preds: ^bb4, ^bb40
    cir.br ^bb42 loc(#loc202)
  ^bb42:  // pred: ^bb41
    cir.return loc(#loc194)
  } loc(#loc478)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    %0 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc518)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc519)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc520)
    cir.br ^bb1 loc(#loc521)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<6> : !s32i loc(#loc308)
    cir.br ^bb2 loc(#loc306)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb40 [
      6: ^bb4
    ] loc(#loc306)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc309)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc522)
  ^bb5:  // pred: ^bb4
    %4 = cir.const #cir.int<1> : !s32i loc(#loc303)
    %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc303)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc519)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc305)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc305)
    cir.store %7, %2 : !s32i, !cir.ptr<!s32i> loc(#loc520)
    cir.br ^bb6 loc(#loc523)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8 loc(#loc523)
  ^bb7:  // pred: ^bb28
    %8 = cir.const #cir.int<0> : !s32i loc(#loc314)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc314)
    cir.brcond %9 ^bb8, ^bb29 loc(#loc314)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    %10 = cir.const #cir.int<2> : !s32i loc(#loc315)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc316)
    %12 = cir.const #cir.int<6> : !s32i loc(#loc317)
    %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc318)
    cir.store %13, %1 : !s32i, !cir.ptr<!s32i> loc(#loc524)
    cir.br ^bb9 loc(#loc525)
  ^bb9:  // pred: ^bb8
    %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc323)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc324)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc324)
    %17 = cir.cmp(eq, %14, %16) : !s32i, !cir.bool loc(#loc526)
    cir.brcond %17 ^bb10, ^bb11 loc(#loc527)
  ^bb10:  // pred: ^bb9
    cir.br ^bb29 loc(#loc326)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc322)
  ^bb12:  // pred: ^bb11
    %18 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc528)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc329)
    %20 = cir.const #cir.int<16> : !u64i loc(#loc529)
    cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc530)
    %21 = cir.const #cir.int<2> : !s32i loc(#loc334)
    %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc334)
    %23 = cir.get_member %0[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
    cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc531)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc336)
    %25 = cir.cast(integral, %24 : !s32i), !u32i loc(#loc336)
    %26 = cir.get_member %0[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc76)
    %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc77)
    cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc532)
    %28 = cir.const #cir.int<20000> : !s32i loc(#loc338)
    %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc338)
    %30 = cir.call @htons(%29) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc339)
    %31 = cir.get_member %0[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc81)
    cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc533)
    cir.br ^bb13 loc(#loc534)
  ^bb13:  // pred: ^bb12
    %32 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc344)
    %33 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc535)
    %34 = cir.const #cir.int<16> : !u64i loc(#loc536)
    %35 = cir.cast(integral, %34 : !u64i), !u32i loc(#loc536)
    %36 = cir.call @bind(%32, %33, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc349)
    %37 = cir.const #cir.int<1> : !s32i loc(#loc350)
    %38 = cir.unary(minus, %37) : !s32i, !s32i loc(#loc350)
    %39 = cir.cmp(eq, %36, %38) : !s32i, !cir.bool loc(#loc537)
    cir.brcond %39 ^bb14, ^bb15 loc(#loc538)
  ^bb14:  // pred: ^bb13
    cir.br ^bb29 loc(#loc352)
  ^bb15:  // pred: ^bb13
    cir.br ^bb16 loc(#loc343)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc539)
  ^bb17:  // pred: ^bb16
    %40 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc355)
    %41 = cir.const #cir.int<5> : !s32i loc(#loc356)
    %42 = cir.call @listen(%40, %41) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc357)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc358)
    %44 = cir.unary(minus, %43) : !s32i, !s32i loc(#loc358)
    %45 = cir.cmp(eq, %42, %44) : !s32i, !cir.bool loc(#loc540)
    cir.brcond %45 ^bb18, ^bb19 loc(#loc541)
  ^bb18:  // pred: ^bb17
    cir.br ^bb29 loc(#loc360)
  ^bb19:  // pred: ^bb17
    cir.br ^bb20 loc(#loc354)
  ^bb20:  // pred: ^bb19
    %46 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc361)
    %47 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc362)
    %48 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc363)
    %49 = cir.call @accept(%46, %47, %48) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc364)
    cir.store %49, %2 : !s32i, !cir.ptr<!s32i> loc(#loc542)
    cir.br ^bb21 loc(#loc543)
  ^bb21:  // pred: ^bb20
    %50 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc369)
    %51 = cir.const #cir.int<1> : !s32i loc(#loc370)
    %52 = cir.unary(minus, %51) : !s32i, !s32i loc(#loc370)
    %53 = cir.cmp(eq, %50, %52) : !s32i, !cir.bool loc(#loc544)
    cir.brcond %53 ^bb22, ^bb23 loc(#loc545)
  ^bb22:  // pred: ^bb21
    cir.br ^bb29 loc(#loc372)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc368)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc546)
  ^bb25:  // pred: ^bb24
    %54 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc375)
    %55 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc376)
    %56 = cir.cast(array_to_ptrdecay, %55 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc376)
    %57 = cir.cast(bitcast, %56 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc376)
    %58 = cir.const #cir.int<8> : !u64i loc(#loc547)
    %59 = cir.const #cir.int<0> : !s32i loc(#loc379)
    %60 = cir.call @send(%54, %57, %58, %59) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc380)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc381)
    %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc381)
    %63 = cir.cast(integral, %62 : !s32i), !s64i loc(#loc381)
    %64 = cir.cmp(eq, %60, %63) : !s64i, !cir.bool loc(#loc548)
    cir.brcond %64 ^bb26, ^bb27 loc(#loc549)
  ^bb26:  // pred: ^bb25
    %65 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc383)
    %66 = cir.cast(array_to_ptrdecay, %65 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc383)
    cir.call @printLine(%66) : (!cir.ptr<!s8i>) -> () loc(#loc384)
    cir.br ^bb27 loc(#loc374)
  ^bb27:  // 2 preds: ^bb25, ^bb26
    cir.br ^bb28 loc(#loc374)
  ^bb28:  // pred: ^bb27
    cir.br ^bb7 loc(#loc313)
  ^bb29:  // 5 preds: ^bb7, ^bb10, ^bb14, ^bb18, ^bb22
    cir.br ^bb30 loc(#loc313)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc550)
  ^bb31:  // pred: ^bb30
    %67 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc387)
    %68 = cir.const #cir.int<1> : !s32i loc(#loc388)
    %69 = cir.unary(minus, %68) : !s32i, !s32i loc(#loc388)
    %70 = cir.cmp(ne, %67, %69) : !s32i, !cir.bool loc(#loc551)
    cir.brcond %70 ^bb32, ^bb33 loc(#loc552)
  ^bb32:  // pred: ^bb31
    %71 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc390)
    %72 = cir.call @close(%71) : (!s32i) -> !s32i loc(#loc391)
    cir.br ^bb33 loc(#loc386)
  ^bb33:  // 2 preds: ^bb31, ^bb32
    cir.br ^bb34 loc(#loc386)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc553)
  ^bb35:  // pred: ^bb34
    %73 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc394)
    %74 = cir.const #cir.int<1> : !s32i loc(#loc395)
    %75 = cir.unary(minus, %74) : !s32i, !s32i loc(#loc395)
    %76 = cir.cmp(ne, %73, %75) : !s32i, !cir.bool loc(#loc554)
    cir.brcond %76 ^bb36, ^bb37 loc(#loc555)
  ^bb36:  // pred: ^bb35
    %77 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc397)
    %78 = cir.call @close(%77) : (!s32i) -> !s32i loc(#loc398)
    cir.br ^bb37 loc(#loc393)
  ^bb37:  // 2 preds: ^bb35, ^bb36
    cir.br ^bb38 loc(#loc393)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc311)
  ^bb39:  // pred: ^bb38
    cir.br ^bb41 loc(#loc399)
  ^bb40:  // pred: ^bb2
    %79 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc400)
    %80 = cir.cast(array_to_ptrdecay, %79 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc400)
    cir.call @printLine(%80) : (!cir.ptr<!s8i>) -> () loc(#loc401)
    cir.br ^bb41 loc(#loc402)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc307)
  ^bb42:  // pred: ^bb41
    cir.return loc(#loc299)
  } loc(#loc517)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE510_Trapdoor/CWE510_Trapdoor__hostname_based_logic_15.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":116:1)
#loc12 = loc("/usr/include/sys/socket.h":117:33)
#loc13 = loc("/usr/include/netdb.h":675:1)
#loc14 = loc("/usr/include/netdb.h":678:36)
#loc15 = loc("/usr/include/string.h":156:1)
#loc16 = loc("/usr/include/string.h":157:33)
#loc17 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":106:24)
#loc18 = loc("/usr/include/sys/socket.h":138:1)
#loc19 = loc("/usr/include/sys/socket.h":138:74)
#loc20 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":108:40)
#loc21 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":116:40)
#loc22 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc23 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc24 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":118:31)
#loc25 = loc("/usr/include/unistd.h":358:1)
#loc26 = loc("/usr/include/unistd.h":358:27)
#loc27 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":141:19)
#loc28 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":47:1)
#loc29 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":144:1)
#loc30 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":57:9)
#loc31 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":57:28)
#loc32 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":57:37)
#loc33 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":58:9)
#loc34 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":58:52)
#loc35 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":59:9)
#loc36 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":59:31)
#loc37 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":60:9)
#loc38 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":60:31)
#loc39 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":61:9)
#loc40 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":61:33)
#loc41 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":62:9)
#loc42 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":62:33)
#loc43 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":49:5)
#loc44 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":143:5)
#loc45 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":49:12)
#loc46 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":51:5)
#loc47 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":52:5)
#loc48 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":137:5)
#loc49 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":58:32)
#loc50 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":63:9)
#loc51 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":122:17)
#loc52 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":122:16)
#loc53 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":72:35)
#loc54 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":72:44)
#loc55 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":72:57)
#loc56 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":72:28)
#loc57 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":72:13)
#loc58 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":72:68)
#loc59 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":73:13)
#loc60 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":76:13)
#loc61 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":73:17)
#loc62 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":73:33)
#loc63 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":74:13)
#loc64 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":75:17)
#loc65 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":77:20)
#loc66 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":77:21)
#loc67 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":77:30)
#loc68 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":77:33)
#loc69 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":77:47)
#loc70 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":77:13)
#loc71 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":77:48)
#loc72 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":78:34)
#loc73 = loc("/usr/include/netinet/in.h":249:5)
#loc74 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":78:13)
#loc75 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":79:39)
#loc76 = loc("/usr/include/netinet/in.h":251:20)
#loc77 = loc("/usr/include/netinet/in.h":33:15)
#loc78 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":79:13)
#loc79 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":80:38)
#loc80 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":80:32)
#loc81 = loc("/usr/include/netinet/in.h":250:15)
#loc82 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":80:13)
#loc83 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":80:43)
#loc84 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":81:13)
#loc85 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":84:13)
#loc86 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":81:22)
#loc87 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":81:54)
#loc88 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":81:55)
#loc89 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":81:64)
#loc90 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":81:78)
#loc91 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":81:17)
#loc92 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":81:84)
#loc93 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":82:13)
#loc94 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":83:17)
#loc95 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":85:13)
#loc96 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":88:13)
#loc97 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":85:24)
#loc98 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":85:38)
#loc99 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":85:17)
#loc100 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":85:44)
#loc101 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":86:13)
#loc102 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":87:17)
#loc103 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":89:35)
#loc104 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":89:49)
#loc105 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":89:55)
#loc106 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":89:28)
#loc107 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":89:13)
#loc108 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":89:59)
#loc109 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":90:13)
#loc110 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":93:13)
#loc111 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":90:17)
#loc112 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":90:33)
#loc113 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":91:13)
#loc114 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":92:17)
#loc115 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":94:13)
#loc116 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":97:13)
#loc117 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":94:29)
#loc118 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":94:62)
#loc119 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":94:63)
#loc120 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":94:78)
#loc121 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":94:79)
#loc122 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":94:17)
#loc123 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":94:101)
#loc124 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":94:100)
#loc125 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":95:13)
#loc126 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":96:17)
#loc127 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":98:13)
#loc128 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":104:13)
#loc129 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":98:48)
#loc130 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":98:49)
#loc131 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":99:29)
#loc132 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":99:51)
#loc133 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":100:29)
#loc134 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":101:29)
#loc135 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":101:41)
#loc136 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":101:51)
#loc137 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":101:63)
#loc138 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":98:17)
#loc139 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":101:82)
#loc140 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":102:13)
#loc141 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":103:17)
#loc142 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":106:13)
#loc143 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":120:13)
#loc144 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":106:17)
#loc145 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":106:44)
#loc146 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":106:57)
#loc147 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":107:13)
#loc148 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":113:13)
#loc149 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":115:13)
#loc150 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":108:17)
#loc151 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":112:17)
#loc152 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":108:26)
#loc153 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":108:55)
#loc154 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":108:75)
#loc155 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":108:78)
#loc156 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":108:21)
#loc157 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":108:85)
#loc158 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":109:17)
#loc159 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":111:21)
#loc160 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":116:17)
#loc161 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":119:17)
#loc162 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":116:26)
#loc163 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":116:57)
#loc164 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":116:79)
#loc165 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":116:82)
#loc166 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":116:21)
#loc167 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":116:88)
#loc168 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":117:17)
#loc169 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":118:21)
#loc170 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":123:9)
#loc171 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":126:9)
#loc172 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":123:13)
#loc173 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":123:29)
#loc174 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":124:9)
#loc175 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":125:26)
#loc176 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":125:13)
#loc177 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":127:9)
#loc178 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":130:9)
#loc179 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":127:13)
#loc180 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":127:29)
#loc181 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":128:9)
#loc182 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":129:26)
#loc183 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":129:13)
#loc184 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":138:5)
#loc185 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":141:9)
#loc186 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":142:9)
#loc187 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":300:1)
#loc188 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":304:1)
#loc189 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":302:5)
#loc190 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":302:11)
#loc191 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":303:5)
#loc192 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":303:11)
#loc193 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":151:1)
#loc194 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":223:1)
#loc195 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":165:9)
#loc196 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":165:28)
#loc197 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":166:9)
#loc198 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":166:31)
#loc199 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":167:9)
#loc200 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":167:31)
#loc201 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":153:5)
#loc202 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":222:5)
#loc203 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":153:12)
#loc204 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":155:5)
#loc205 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":157:19)
#loc206 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":157:9)
#loc207 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":158:9)
#loc208 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":160:5)
#loc209 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":220:5)
#loc210 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":168:9)
#loc211 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":205:17)
#loc212 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":205:16)
#loc213 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":177:35)
#loc214 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":177:44)
#loc215 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":177:57)
#loc216 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":177:28)
#loc217 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":177:13)
#loc218 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":177:68)
#loc219 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":178:13)
#loc220 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":181:13)
#loc221 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":178:17)
#loc222 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":178:33)
#loc223 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":179:13)
#loc224 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":180:17)
#loc225 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":182:20)
#loc226 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":182:21)
#loc227 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":182:30)
#loc228 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":182:33)
#loc229 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":182:47)
#loc230 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":182:13)
#loc231 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":182:48)
#loc232 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":183:34)
#loc233 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":183:13)
#loc234 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":184:39)
#loc235 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":184:13)
#loc236 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":185:38)
#loc237 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":185:32)
#loc238 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":185:13)
#loc239 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":185:43)
#loc240 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":186:13)
#loc241 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":189:13)
#loc242 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":186:22)
#loc243 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":186:54)
#loc244 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":186:55)
#loc245 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":186:64)
#loc246 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":186:78)
#loc247 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":186:17)
#loc248 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":186:84)
#loc249 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":187:13)
#loc250 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":188:17)
#loc251 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":190:13)
#loc252 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":193:13)
#loc253 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":190:24)
#loc254 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":190:38)
#loc255 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":190:17)
#loc256 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":190:44)
#loc257 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":191:13)
#loc258 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":192:17)
#loc259 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":194:35)
#loc260 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":194:49)
#loc261 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":194:55)
#loc262 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":194:28)
#loc263 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":194:13)
#loc264 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":194:59)
#loc265 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":195:13)
#loc266 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":198:13)
#loc267 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":195:17)
#loc268 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":195:33)
#loc269 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":196:13)
#loc270 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":197:17)
#loc271 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":200:13)
#loc272 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":203:13)
#loc273 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":200:22)
#loc274 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":200:36)
#loc275 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":200:53)
#loc276 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":200:75)
#loc277 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":200:78)
#loc278 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":200:17)
#loc279 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":200:84)
#loc280 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":201:13)
#loc281 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":202:27)
#loc282 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":202:17)
#loc283 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":206:9)
#loc284 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":209:9)
#loc285 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":206:13)
#loc286 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":206:29)
#loc287 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":207:9)
#loc288 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":208:26)
#loc289 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":208:13)
#loc290 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":210:9)
#loc291 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":213:9)
#loc292 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":210:13)
#loc293 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":210:29)
#loc294 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":211:9)
#loc295 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":212:26)
#loc296 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":212:13)
#loc297 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":221:5)
#loc298 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":226:1)
#loc299 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":298:1)
#loc300 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":236:9)
#loc301 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":236:28)
#loc302 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":237:9)
#loc303 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":237:31)
#loc304 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":238:9)
#loc305 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":238:31)
#loc306 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":228:5)
#loc307 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":297:5)
#loc308 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":228:12)
#loc309 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":230:5)
#loc310 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":231:5)
#loc311 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":291:5)
#loc312 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":239:9)
#loc313 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":276:17)
#loc314 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":276:16)
#loc315 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":248:35)
#loc316 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":248:44)
#loc317 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":248:57)
#loc318 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":248:28)
#loc319 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":248:13)
#loc320 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":248:68)
#loc321 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":249:13)
#loc322 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":252:13)
#loc323 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":249:17)
#loc324 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":249:33)
#loc325 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":250:13)
#loc326 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":251:17)
#loc327 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":253:20)
#loc328 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":253:21)
#loc329 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":253:30)
#loc330 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":253:33)
#loc331 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":253:47)
#loc332 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":253:13)
#loc333 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":253:48)
#loc334 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":254:34)
#loc335 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":254:13)
#loc336 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":255:39)
#loc337 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":255:13)
#loc338 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":256:38)
#loc339 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":256:32)
#loc340 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":256:13)
#loc341 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":256:43)
#loc342 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":257:13)
#loc343 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":260:13)
#loc344 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":257:22)
#loc345 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":257:54)
#loc346 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":257:55)
#loc347 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":257:64)
#loc348 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":257:78)
#loc349 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":257:17)
#loc350 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":257:84)
#loc351 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":258:13)
#loc352 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":259:17)
#loc353 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":261:13)
#loc354 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":264:13)
#loc355 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":261:24)
#loc356 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":261:38)
#loc357 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":261:17)
#loc358 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":261:44)
#loc359 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":262:13)
#loc360 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":263:17)
#loc361 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":265:35)
#loc362 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":265:49)
#loc363 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":265:55)
#loc364 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":265:28)
#loc365 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":265:13)
#loc366 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":265:59)
#loc367 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":266:13)
#loc368 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":269:13)
#loc369 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":266:17)
#loc370 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":266:33)
#loc371 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":267:13)
#loc372 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":268:17)
#loc373 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":271:13)
#loc374 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":274:13)
#loc375 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":271:22)
#loc376 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":271:36)
#loc377 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":271:53)
#loc378 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":271:75)
#loc379 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":271:78)
#loc380 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":271:17)
#loc381 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":271:84)
#loc382 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":272:13)
#loc383 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":273:27)
#loc384 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":273:17)
#loc385 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":277:9)
#loc386 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":280:9)
#loc387 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":277:13)
#loc388 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":277:29)
#loc389 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":278:9)
#loc390 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":279:26)
#loc391 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":279:13)
#loc392 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":281:9)
#loc393 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":284:9)
#loc394 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":281:13)
#loc395 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":281:29)
#loc396 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":282:9)
#loc397 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":283:26)
#loc398 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":283:13)
#loc399 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":292:5)
#loc400 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":295:19)
#loc401 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":295:9)
#loc402 = loc("CWE510_Trapdoor__hostname_based_logic_15.c":296:9)
#loc403 = loc(fused[#loc1, #loc2])
#loc404 = loc(fused[#loc3, #loc4])
#loc405 = loc(fused[#loc5, #loc6])
#loc406 = loc(fused[#loc7, #loc8])
#loc407 = loc(fused[#loc9, #loc10])
#loc408 = loc(fused[#loc11, #loc12])
#loc409 = loc(fused[#loc13, #loc14])
#loc410 = loc(fused[#loc15, #loc16])
#loc411 = loc(fused[#loc18, #loc19])
#loc412 = loc(fused[#loc22, #loc23])
#loc413 = loc(fused[#loc25, #loc26])
#loc414 = loc(fused[#loc28, #loc29])
#loc415 = loc(fused[#loc30, #loc31])
#loc416 = loc(fused[#loc30, #loc32])
#loc417 = loc(fused[#loc33, #loc34])
#loc418 = loc(fused[#loc35, #loc36])
#loc419 = loc(fused[#loc37, #loc38])
#loc420 = loc(fused[#loc39, #loc40])
#loc421 = loc(fused[#loc41, #loc42])
#loc422 = loc(fused[#loc43, #loc44])
#loc423 = loc(fused[#loc47, #loc48])
#loc424 = loc(fused[#loc49, #loc34])
#loc425 = loc(fused[#loc50, #loc51])
#loc426 = loc(fused[#loc57, #loc58])
#loc427 = loc(fused[#loc59, #loc60])
#loc428 = loc(fused[#loc61, #loc62])
#loc429 = loc(fused[#loc63, #loc60])
#loc430 = loc(fused[#loc65, #loc66])
#loc431 = loc(fused[#loc68, #loc69])
#loc432 = loc(fused[#loc70, #loc71])
#loc433 = loc(fused[#loc74, #loc72])
#loc434 = loc(fused[#loc78, #loc75])
#loc435 = loc(fused[#loc82, #loc83])
#loc436 = loc(fused[#loc84, #loc85])
#loc437 = loc(fused[#loc87, #loc88])
#loc438 = loc(fused[#loc89, #loc90])
#loc439 = loc(fused[#loc91, #loc92])
#loc440 = loc(fused[#loc93, #loc85])
#loc441 = loc(fused[#loc95, #loc96])
#loc442 = loc(fused[#loc99, #loc100])
#loc443 = loc(fused[#loc101, #loc96])
#loc444 = loc(fused[#loc107, #loc108])
#loc445 = loc(fused[#loc109, #loc110])
#loc446 = loc(fused[#loc111, #loc112])
#loc447 = loc(fused[#loc113, #loc110])
#loc448 = loc(fused[#loc115, #loc116])
#loc449 = loc(fused[#loc118, #loc119])
#loc450 = loc(fused[#loc120, #loc121])
#loc451 = loc(fused[#loc122, #loc123])
#loc452 = loc(fused[#loc125, #loc116])
#loc453 = loc(fused[#loc127, #loc128])
#loc454 = loc(fused[#loc129, #loc130])
#loc455 = loc(fused[#loc131, #loc132])
#loc456 = loc(fused[#loc138, #loc139])
#loc457 = loc(fused[#loc140, #loc128])
#loc458 = loc(fused[#loc142, #loc143])
#loc459 = loc(fused[#loc144, #loc146])
#loc460 = loc(fused[#loc147, #loc148, #loc149, #loc143])
#loc461 = loc(fused[#loc150, #loc151])
#loc462 = loc(fused[#loc153, #loc154])
#loc463 = loc(fused[#loc156, #loc157])
#loc464 = loc(fused[#loc158, #loc151])
#loc465 = loc(fused[#loc160, #loc161])
#loc466 = loc(fused[#loc163, #loc164])
#loc467 = loc(fused[#loc166, #loc167])
#loc468 = loc(fused[#loc168, #loc161])
#loc469 = loc(fused[#loc170, #loc171])
#loc470 = loc(fused[#loc172, #loc173])
#loc471 = loc(fused[#loc174, #loc171])
#loc472 = loc(fused[#loc177, #loc178])
#loc473 = loc(fused[#loc179, #loc180])
#loc474 = loc(fused[#loc181, #loc178])
#loc475 = loc(fused[#loc187, #loc188])
#loc476 = loc(fused[#loc189, #loc190])
#loc477 = loc(fused[#loc191, #loc192])
#loc478 = loc(fused[#loc193, #loc194])
#loc479 = loc(fused[#loc195, #loc196])
#loc480 = loc(fused[#loc197, #loc198])
#loc481 = loc(fused[#loc199, #loc200])
#loc482 = loc(fused[#loc201, #loc202])
#loc483 = loc(fused[#loc208, #loc209])
#loc484 = loc(fused[#loc210, #loc211])
#loc485 = loc(fused[#loc217, #loc218])
#loc486 = loc(fused[#loc219, #loc220])
#loc487 = loc(fused[#loc221, #loc222])
#loc488 = loc(fused[#loc223, #loc220])
#loc489 = loc(fused[#loc225, #loc226])
#loc490 = loc(fused[#loc228, #loc229])
#loc491 = loc(fused[#loc230, #loc231])
#loc492 = loc(fused[#loc233, #loc232])
#loc493 = loc(fused[#loc235, #loc234])
#loc494 = loc(fused[#loc238, #loc239])
#loc495 = loc(fused[#loc240, #loc241])
#loc496 = loc(fused[#loc243, #loc244])
#loc497 = loc(fused[#loc245, #loc246])
#loc498 = loc(fused[#loc247, #loc248])
#loc499 = loc(fused[#loc249, #loc241])
#loc500 = loc(fused[#loc251, #loc252])
#loc501 = loc(fused[#loc255, #loc256])
#loc502 = loc(fused[#loc257, #loc252])
#loc503 = loc(fused[#loc263, #loc264])
#loc504 = loc(fused[#loc265, #loc266])
#loc505 = loc(fused[#loc267, #loc268])
#loc506 = loc(fused[#loc269, #loc266])
#loc507 = loc(fused[#loc271, #loc272])
#loc508 = loc(fused[#loc275, #loc276])
#loc509 = loc(fused[#loc278, #loc279])
#loc510 = loc(fused[#loc280, #loc272])
#loc511 = loc(fused[#loc283, #loc284])
#loc512 = loc(fused[#loc285, #loc286])
#loc513 = loc(fused[#loc287, #loc284])
#loc514 = loc(fused[#loc290, #loc291])
#loc515 = loc(fused[#loc292, #loc293])
#loc516 = loc(fused[#loc294, #loc291])
#loc517 = loc(fused[#loc298, #loc299])
#loc518 = loc(fused[#loc300, #loc301])
#loc519 = loc(fused[#loc302, #loc303])
#loc520 = loc(fused[#loc304, #loc305])
#loc521 = loc(fused[#loc306, #loc307])
#loc522 = loc(fused[#loc310, #loc311])
#loc523 = loc(fused[#loc312, #loc313])
#loc524 = loc(fused[#loc319, #loc320])
#loc525 = loc(fused[#loc321, #loc322])
#loc526 = loc(fused[#loc323, #loc324])
#loc527 = loc(fused[#loc325, #loc322])
#loc528 = loc(fused[#loc327, #loc328])
#loc529 = loc(fused[#loc330, #loc331])
#loc530 = loc(fused[#loc332, #loc333])
#loc531 = loc(fused[#loc335, #loc334])
#loc532 = loc(fused[#loc337, #loc336])
#loc533 = loc(fused[#loc340, #loc341])
#loc534 = loc(fused[#loc342, #loc343])
#loc535 = loc(fused[#loc345, #loc346])
#loc536 = loc(fused[#loc347, #loc348])
#loc537 = loc(fused[#loc349, #loc350])
#loc538 = loc(fused[#loc351, #loc343])
#loc539 = loc(fused[#loc353, #loc354])
#loc540 = loc(fused[#loc357, #loc358])
#loc541 = loc(fused[#loc359, #loc354])
#loc542 = loc(fused[#loc365, #loc366])
#loc543 = loc(fused[#loc367, #loc368])
#loc544 = loc(fused[#loc369, #loc370])
#loc545 = loc(fused[#loc371, #loc368])
#loc546 = loc(fused[#loc373, #loc374])
#loc547 = loc(fused[#loc377, #loc378])
#loc548 = loc(fused[#loc380, #loc381])
#loc549 = loc(fused[#loc382, #loc374])
#loc550 = loc(fused[#loc385, #loc386])
#loc551 = loc(fused[#loc387, #loc388])
#loc552 = loc(fused[#loc389, #loc386])
#loc553 = loc(fused[#loc392, #loc393])
#loc554 = loc(fused[#loc394, #loc395])
#loc555 = loc(fused[#loc396, #loc393])
