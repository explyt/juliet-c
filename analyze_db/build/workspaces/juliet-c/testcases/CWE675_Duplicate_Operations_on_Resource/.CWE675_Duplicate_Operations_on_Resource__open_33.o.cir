!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE675_Duplicate_Operations_on_Resource/CWE675_Duplicate_Operations_on_Resource__open_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc80)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"BadSource_open.txt\00" : !cir.array<!s8i x 19>> : !cir.array<!s8i x 19> {alignment = 1 : i64} loc(#loc3)
  cir.func private @close(!s32i) -> !s32i loc(#loc81)
  cir.func @_ZN48CWE675_Duplicate_Operations_on_Resource__open_333badEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc83)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc84)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc11)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc12)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc13)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc85)
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc3)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc3)
    %6 = cir.const #cir.int<2> : !s32i loc(#loc15)
    %7 = cir.const #cir.int<64> : !s32i loc(#loc16)
    %8 = cir.binop(or, %6, %7) : !s32i loc(#loc86)
    %9 = cir.const #cir.int<256> : !s32i loc(#loc17)
    %10 = cir.const #cir.int<128> : !s32i loc(#loc18)
    %11 = cir.binop(or, %9, %10) : !s32i loc(#loc87)
    %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc19)
    cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc88)
    %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc22)
    %14 = cir.call @close(%13) : (!s32i) -> !s32i loc(#loc23)
    cir.scope {
      %15 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc90)
      %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc27)
      %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc27)
      cir.store %17, %15 : !s32i, !cir.ptr<!s32i> loc(#loc90)
      %18 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc28)
      %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc29)
    } loc(#loc89)
    cir.return loc(#loc7)
  } loc(#loc82)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"GoodSource_open.txt\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc30)
  cir.func internal private @_ZN48CWE675_Duplicate_Operations_on_Resource__open_33L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc92)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc93)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc36)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc37)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc38)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc94)
    %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc30)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc30)
    %6 = cir.const #cir.int<2> : !s32i loc(#loc40)
    %7 = cir.const #cir.int<64> : !s32i loc(#loc41)
    %8 = cir.binop(or, %6, %7) : !s32i loc(#loc95)
    %9 = cir.const #cir.int<256> : !s32i loc(#loc42)
    %10 = cir.const #cir.int<128> : !s32i loc(#loc43)
    %11 = cir.binop(or, %9, %10) : !s32i loc(#loc96)
    %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc44)
    cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc97)
    cir.scope {
      %13 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc99)
      %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc50)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc50)
      cir.store %15, %13 : !s32i, !cir.ptr<!s32i> loc(#loc99)
      %16 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc51)
      %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc52)
    } loc(#loc98)
    cir.return loc(#loc32)
  } loc(#loc91)
  cir.func internal private @_ZN48CWE675_Duplicate_Operations_on_Resource__open_33L7goodB2GEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc101)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc102)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc58)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc59)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc60)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc103)
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc62)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc62)
    %6 = cir.const #cir.int<2> : !s32i loc(#loc63)
    %7 = cir.const #cir.int<64> : !s32i loc(#loc64)
    %8 = cir.binop(or, %6, %7) : !s32i loc(#loc104)
    %9 = cir.const #cir.int<256> : !s32i loc(#loc65)
    %10 = cir.const #cir.int<128> : !s32i loc(#loc66)
    %11 = cir.binop(or, %9, %10) : !s32i loc(#loc105)
    %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc67)
    cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc106)
    %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc70)
    %14 = cir.call @close(%13) : (!s32i) -> !s32i loc(#loc71)
    cir.scope {
      %15 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc108)
      %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc75)
      %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc75)
      cir.store %17, %15 : !s32i, !cir.ptr<!s32i> loc(#loc108)
    } loc(#loc107)
    cir.return loc(#loc54)
  } loc(#loc100)
  cir.func @_ZN48CWE675_Duplicate_Operations_on_Resource__open_334goodEv() extra(#fn_attr) {
    cir.call @_ZN48CWE675_Duplicate_Operations_on_Resource__open_33L7goodG2BEv() : () -> () loc(#loc78)
    cir.call @_ZN48CWE675_Duplicate_Operations_on_Resource__open_33L7goodB2GEv() : () -> () loc(#loc79)
    cir.return loc(#loc77)
  } loc(#loc109)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE675_Duplicate_Operations_on_Resource/CWE675_Duplicate_Operations_on_Resource__open_33.cpp":0:0)
#loc1 = loc("/usr/include/fcntl.h":209:1)
#loc2 = loc("/usr/include/fcntl.h":209:56)
#loc3 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":39:17)
#loc4 = loc("/usr/include/unistd.h":358:1)
#loc5 = loc("/usr/include/unistd.h":358:27)
#loc6 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":34:1)
#loc7 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":47:1)
#loc8 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":36:5)
#loc9 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":36:9)
#loc10 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":37:5)
#loc11 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":37:20)
#loc12 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":38:13)
#loc13 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":38:12)
#loc14 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":38:5)
#loc15 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":39:39)
#loc16 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":39:46)
#loc17 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":39:55)
#loc18 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":39:63)
#loc19 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":39:12)
#loc20 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":39:5)
#loc21 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":39:71)
#loc22 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":41:11)
#loc23 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":41:5)
#loc24 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":42:5)
#loc25 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":46:5)
#loc26 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":43:9)
#loc27 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":43:20)
#loc28 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":45:15)
#loc29 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":45:9)
#loc30 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":60:17)
#loc31 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":54:1)
#loc32 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":66:1)
#loc33 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":56:5)
#loc34 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":56:9)
#loc35 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":57:5)
#loc36 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":57:20)
#loc37 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":58:13)
#loc38 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":58:12)
#loc39 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":58:5)
#loc40 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":60:40)
#loc41 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":60:47)
#loc42 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":60:56)
#loc43 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":60:64)
#loc44 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":60:12)
#loc45 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":60:5)
#loc46 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":60:72)
#loc47 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":61:5)
#loc48 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":65:5)
#loc49 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":62:9)
#loc50 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":62:20)
#loc51 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":64:15)
#loc52 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":64:9)
#loc53 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":69:1)
#loc54 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":83:1)
#loc55 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":71:5)
#loc56 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":71:9)
#loc57 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":72:5)
#loc58 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":72:20)
#loc59 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":73:13)
#loc60 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":73:12)
#loc61 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":73:5)
#loc62 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":74:17)
#loc63 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":74:39)
#loc64 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":74:46)
#loc65 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":74:55)
#loc66 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":74:63)
#loc67 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":74:12)
#loc68 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":74:5)
#loc69 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":74:71)
#loc70 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":76:11)
#loc71 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":76:5)
#loc72 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":77:5)
#loc73 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":82:5)
#loc74 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":78:9)
#loc75 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":78:20)
#loc76 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":85:1)
#loc77 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":89:1)
#loc78 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":87:5)
#loc79 = loc("CWE675_Duplicate_Operations_on_Resource__open_33.cpp":88:5)
#loc80 = loc(fused[#loc1, #loc2])
#loc81 = loc(fused[#loc4, #loc5])
#loc82 = loc(fused[#loc6, #loc7])
#loc83 = loc(fused[#loc8, #loc9])
#loc84 = loc(fused[#loc10, #loc11])
#loc85 = loc(fused[#loc14, #loc12])
#loc86 = loc(fused[#loc15, #loc16])
#loc87 = loc(fused[#loc17, #loc18])
#loc88 = loc(fused[#loc20, #loc21])
#loc89 = loc(fused[#loc24, #loc25])
#loc90 = loc(fused[#loc26, #loc27])
#loc91 = loc(fused[#loc31, #loc32])
#loc92 = loc(fused[#loc33, #loc34])
#loc93 = loc(fused[#loc35, #loc36])
#loc94 = loc(fused[#loc39, #loc37])
#loc95 = loc(fused[#loc40, #loc41])
#loc96 = loc(fused[#loc42, #loc43])
#loc97 = loc(fused[#loc45, #loc46])
#loc98 = loc(fused[#loc47, #loc48])
#loc99 = loc(fused[#loc49, #loc50])
#loc100 = loc(fused[#loc53, #loc54])
#loc101 = loc(fused[#loc55, #loc56])
#loc102 = loc(fused[#loc57, #loc58])
#loc103 = loc(fused[#loc61, #loc59])
#loc104 = loc(fused[#loc63, #loc64])
#loc105 = loc(fused[#loc65, #loc66])
#loc106 = loc(fused[#loc68, #loc69])
#loc107 = loc(fused[#loc72, #loc73])
#loc108 = loc(fused[#loc74, #loc75])
#loc109 = loc(fused[#loc76, #loc77])
