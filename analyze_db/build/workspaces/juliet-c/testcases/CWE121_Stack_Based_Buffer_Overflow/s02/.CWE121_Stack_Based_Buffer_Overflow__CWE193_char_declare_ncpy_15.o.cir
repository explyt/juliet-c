!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B2.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc118)
  cir.global "private" constant cir_private @__const.goodG2B1.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc119)
  cir.global "private" constant cir_private @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15_bad.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc120)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc121)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc9)
  cir.func private @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc122)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc123)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc125)
    %1 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc126)
    %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc127)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc24)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc26)
          cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc129)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc28)
          %6 = cir.cast(integral, %5 : !s32i), !s8i loc(#loc28)
          %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc30)
          %9 = cir.ptr_stride(%7 : !cir.ptr<!s8i>, %8 : !s32i), !cir.ptr<!s8i> loc(#loc31)
          cir.store %6, %9 : !s8i, !cir.ptr<!s8i> loc(#loc130)
          cir.break loc(#loc32)
        } loc(#loc25)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc9)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc34)
          cir.break loc(#loc35)
        } loc(#loc33)
        cir.yield loc(#loc22)
      } loc(#loc22)
    } loc(#loc128)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc120)
      %4 = cir.get_global @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15_bad.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc120)
      cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc120)
      %5 = cir.get_global @strncpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc38)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
      %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc40)
      %8 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc41)
      %9 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc42)
      %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc41)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc43)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc43)
      %13 = cir.binop(add, %10, %12) : !u64i loc(#loc132)
      %14 = cir.call @strncpy(%6, %7, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc38)
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
      cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc45)
    } loc(#loc131)
    cir.return loc(#loc15)
  } loc(#loc124)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc134)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc48)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc135)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc50)
    cir.return loc(#loc47)
  } loc(#loc133)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc137)
    %1 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc138)
    %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc139)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc62)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc64)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc64)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc65)
          cir.break loc(#loc66)
        } loc(#loc63)
        cir.case(default, []) {
          %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc68)
          cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc141)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc70)
          %6 = cir.cast(integral, %5 : !s32i), !s8i loc(#loc70)
          %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc72)
          %9 = cir.ptr_stride(%7 : !cir.ptr<!s8i>, %8 : !s32i), !cir.ptr<!s8i> loc(#loc73)
          cir.store %6, %9 : !s8i, !cir.ptr<!s8i> loc(#loc142)
          cir.break loc(#loc74)
        } loc(#loc67)
        cir.yield loc(#loc60)
      } loc(#loc60)
    } loc(#loc140)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc119)
      %4 = cir.get_global @__const.goodG2B1.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc119)
      cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc119)
      %5 = cir.get_global @strncpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc77)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
      %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc79)
      %8 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc80)
      %9 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc81)
      %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc80)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc82)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc82)
      %13 = cir.binop(add, %10, %12) : !u64i loc(#loc144)
      %14 = cir.call @strncpy(%6, %7, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc77)
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
      cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    } loc(#loc143)
    cir.return loc(#loc53)
  } loc(#loc136)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc146)
    %1 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc147)
    %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc148)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc95)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc97)
          cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc150)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc99)
          %6 = cir.cast(integral, %5 : !s32i), !s8i loc(#loc99)
          %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc101)
          %9 = cir.ptr_stride(%7 : !cir.ptr<!s8i>, %8 : !s32i), !cir.ptr<!s8i> loc(#loc102)
          cir.store %6, %9 : !s8i, !cir.ptr<!s8i> loc(#loc151)
          cir.break loc(#loc103)
        } loc(#loc96)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc105)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc105)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc106)
          cir.break loc(#loc107)
        } loc(#loc104)
        cir.yield loc(#loc93)
      } loc(#loc93)
    } loc(#loc149)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc118)
      %4 = cir.get_global @__const.goodG2B2.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc118)
      cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc118)
      %5 = cir.get_global @strncpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc110)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
      %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc112)
      %8 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc113)
      %9 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc114)
      %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc113)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc115)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc115)
      %13 = cir.binop(add, %10, %12) : !u64i loc(#loc153)
      %14 = cir.call @strncpy(%6, %7, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc110)
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
      cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc117)
    } loc(#loc152)
    cir.return loc(#loc86)
  } loc(#loc145)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":107:9)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":107:29)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":79:9)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":79:29)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":47:9)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":47:29)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":43:19)
#loc10 = loc("/usr/include/string.h":144:1)
#loc11 = loc("/usr/include/string.h":146:14)
#loc12 = loc("/usr/include/string.h":407:1)
#loc13 = loc("/usr/include/string.h":408:33)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":28:1)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":53:1)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":30:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":30:12)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":31:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":31:26)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":32:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":32:29)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":33:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":45:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":33:12)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":35:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":38:16)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":38:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":39:19)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":39:9)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":39:14)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":39:15)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":40:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":41:5)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":43:9)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":44:9)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":46:5)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":52:5)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":50:9)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":50:17)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":50:23)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":50:31)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":50:38)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":50:48)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":51:19)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":51:9)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":115:1)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":119:1)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":117:5)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":117:14)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":118:5)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":118:14)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":60:1)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":85:1)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":62:5)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":62:12)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":63:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":63:26)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":64:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":64:29)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":65:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":77:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":65:12)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":67:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":69:19)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":69:9)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":70:9)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":71:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":74:16)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":74:9)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":75:19)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":75:9)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":75:14)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":75:15)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":76:9)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":78:5)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":84:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":82:9)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":82:17)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":82:23)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":82:31)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":82:38)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":82:48)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":83:19)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":83:9)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":88:1)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":113:1)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":90:5)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":90:12)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":91:5)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":91:26)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":92:5)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":92:29)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":93:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":105:5)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":93:12)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":95:5)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":98:16)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":98:9)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":99:19)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":99:9)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":99:14)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":99:15)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":100:9)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":101:5)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":103:19)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":103:9)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":104:9)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":106:5)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":112:5)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":110:9)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":110:17)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":110:23)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":110:31)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":110:38)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":110:48)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":111:19)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_15.c":111:9)
#loc118 = loc(fused[#loc1, #loc2])
#loc119 = loc(fused[#loc3, #loc4])
#loc120 = loc(fused[#loc5, #loc6])
#loc121 = loc(fused[#loc7, #loc8])
#loc122 = loc(fused[#loc10, #loc11])
#loc123 = loc(fused[#loc12, #loc13])
#loc124 = loc(fused[#loc14, #loc15])
#loc125 = loc(fused[#loc16, #loc17])
#loc126 = loc(fused[#loc18, #loc19])
#loc127 = loc(fused[#loc20, #loc21])
#loc128 = loc(fused[#loc22, #loc23])
#loc129 = loc(fused[#loc27, #loc26])
#loc130 = loc(fused[#loc29, #loc28])
#loc131 = loc(fused[#loc36, #loc37])
#loc132 = loc(fused[#loc41, #loc43])
#loc133 = loc(fused[#loc46, #loc47])
#loc134 = loc(fused[#loc48, #loc49])
#loc135 = loc(fused[#loc50, #loc51])
#loc136 = loc(fused[#loc52, #loc53])
#loc137 = loc(fused[#loc54, #loc55])
#loc138 = loc(fused[#loc56, #loc57])
#loc139 = loc(fused[#loc58, #loc59])
#loc140 = loc(fused[#loc60, #loc61])
#loc141 = loc(fused[#loc69, #loc68])
#loc142 = loc(fused[#loc71, #loc70])
#loc143 = loc(fused[#loc75, #loc76])
#loc144 = loc(fused[#loc80, #loc82])
#loc145 = loc(fused[#loc85, #loc86])
#loc146 = loc(fused[#loc87, #loc88])
#loc147 = loc(fused[#loc89, #loc90])
#loc148 = loc(fused[#loc91, #loc92])
#loc149 = loc(fused[#loc93, #loc94])
#loc150 = loc(fused[#loc98, #loc97])
#loc151 = loc(fused[#loc100, #loc99])
#loc152 = loc(fused[#loc108, #loc109])
#loc153 = loc(fused[#loc113, #loc115])
