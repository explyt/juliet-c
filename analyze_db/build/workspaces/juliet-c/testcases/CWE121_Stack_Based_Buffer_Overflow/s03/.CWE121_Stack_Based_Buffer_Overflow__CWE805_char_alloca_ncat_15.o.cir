!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc137)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc3)
  cir.func private @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc138)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc140)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc141)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc142)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc13)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc13)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc13)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc13)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc13)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc143)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc13)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc13)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc142)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc15)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc15)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc15)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc15)
    %15 = cir.alloca !u8i, !cir.ptr<!u8i>, %14 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc15)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc15)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc15)
    cir.store %17, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc143)
    cir.br ^bb1 loc(#loc144)
  ^bb1:  // pred: ^bb0
    %18 = cir.const #cir.int<6> : !s32i loc(#loc18)
    cir.br ^bb2 loc(#loc16)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %18 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc16)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc19)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
    cir.store %19, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc145)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc22)
    %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc22)
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc24)
    %24 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc25)
    cir.store %21, %24 : !s8i, !cir.ptr<!s8i> loc(#loc146)
    cir.br ^bb6 loc(#loc26)
  ^bb5:  // pred: ^bb2
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc3)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc3)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc27)
    cir.br ^bb6 loc(#loc28)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc17)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc147)
  ^bb8:  // pred: ^bb7
    %27 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc31)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc31)
    %29 = cir.const #cir.int<67> : !s32i loc(#loc32)
    %30 = cir.const #cir.int<100> : !s32i loc(#loc33)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %32 = cir.binop(sub, %30, %31) nsw : !s32i loc(#loc33)
    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc33)
    cir.libc.memset %33 bytes from %28 set to %29 : !cir.ptr<!void>, !s32i, !u64i loc(#loc148)
    %34 = cir.const #cir.int<0> : !s32i loc(#loc37)
    %35 = cir.cast(integral, %34 : !s32i), !s8i loc(#loc37)
    %36 = cir.const #cir.int<100> : !s32i loc(#loc38)
    %37 = cir.const #cir.int<1> : !s32i loc(#loc39)
    %38 = cir.binop(sub, %36, %37) nsw : !s32i loc(#loc38)
    %39 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc40)
    %40 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %38 : !s32i), !cir.ptr<!s8i> loc(#loc40)
    cir.store %35, %40 : !s8i, !cir.ptr<!s8i> loc(#loc149)
    %41 = cir.get_global @strncat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc41)
    %42 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
    %43 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc43)
    %44 = cir.const #cir.int<100> : !s32i loc(#loc44)
    %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc44)
    %46 = cir.call @strncat(%42, %43, %45) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc41)
    %47 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%47) : (!cir.ptr<!s8i>) -> () loc(#loc46)
    cir.br ^bb9 loc(#loc30)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc7)
  } loc(#loc139)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc151)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc49)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc152)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc51)
    cir.return loc(#loc48)
  } loc(#loc150)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc154)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc155)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc156)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc60)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc60)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc60)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc60)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc60)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc157)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc60)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc60)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc156)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc62)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc62)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc62)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc62)
    %15 = cir.alloca !u8i, !cir.ptr<!u8i>, %14 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc62)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc62)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc62)
    cir.store %17, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc157)
    cir.br ^bb1 loc(#loc158)
  ^bb1:  // pred: ^bb0
    %18 = cir.const #cir.int<5> : !s32i loc(#loc65)
    cir.br ^bb2 loc(#loc63)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %18 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc63)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc66)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc67)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    cir.br ^bb6 loc(#loc69)
  ^bb5:  // pred: ^bb2
    %21 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
    cir.store %21, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc159)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc72)
    %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc72)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc74)
    %26 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc75)
    cir.store %23, %26 : !s8i, !cir.ptr<!s8i> loc(#loc160)
    cir.br ^bb6 loc(#loc76)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc64)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc161)
  ^bb8:  // pred: ^bb7
    %27 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc79)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc79)
    %29 = cir.const #cir.int<67> : !s32i loc(#loc80)
    %30 = cir.const #cir.int<100> : !s32i loc(#loc81)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc82)
    %32 = cir.binop(sub, %30, %31) nsw : !s32i loc(#loc81)
    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc81)
    cir.libc.memset %33 bytes from %28 set to %29 : !cir.ptr<!void>, !s32i, !u64i loc(#loc162)
    %34 = cir.const #cir.int<0> : !s32i loc(#loc85)
    %35 = cir.cast(integral, %34 : !s32i), !s8i loc(#loc85)
    %36 = cir.const #cir.int<100> : !s32i loc(#loc86)
    %37 = cir.const #cir.int<1> : !s32i loc(#loc87)
    %38 = cir.binop(sub, %36, %37) nsw : !s32i loc(#loc86)
    %39 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc88)
    %40 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %38 : !s32i), !cir.ptr<!s8i> loc(#loc88)
    cir.store %35, %40 : !s8i, !cir.ptr<!s8i> loc(#loc163)
    %41 = cir.get_global @strncat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc89)
    %42 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
    %43 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc91)
    %44 = cir.const #cir.int<100> : !s32i loc(#loc92)
    %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc92)
    %46 = cir.call @strncat(%42, %43, %45) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc89)
    %47 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
    cir.call @printLine(%47) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    cir.br ^bb9 loc(#loc78)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc54)
  } loc(#loc153)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc165)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc166)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc167)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc102)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc102)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc102)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc102)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc102)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc168)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc102)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc102)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc167)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc104)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc104)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc104)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc104)
    %15 = cir.alloca !u8i, !cir.ptr<!u8i>, %14 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc104)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc104)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc104)
    cir.store %17, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc168)
    cir.br ^bb1 loc(#loc169)
  ^bb1:  // pred: ^bb0
    %18 = cir.const #cir.int<6> : !s32i loc(#loc107)
    cir.br ^bb2 loc(#loc105)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %18 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc105)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc108)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %19 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
    cir.store %19, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc170)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc111)
    %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc111)
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc112)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc113)
    %24 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc114)
    cir.store %21, %24 : !s8i, !cir.ptr<!s8i> loc(#loc171)
    cir.br ^bb6 loc(#loc115)
  ^bb5:  // pred: ^bb2
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc116)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc116)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc117)
    cir.br ^bb6 loc(#loc118)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc106)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc172)
  ^bb8:  // pred: ^bb7
    %27 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc121)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc121)
    %29 = cir.const #cir.int<67> : !s32i loc(#loc122)
    %30 = cir.const #cir.int<100> : !s32i loc(#loc123)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc124)
    %32 = cir.binop(sub, %30, %31) nsw : !s32i loc(#loc123)
    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc123)
    cir.libc.memset %33 bytes from %28 set to %29 : !cir.ptr<!void>, !s32i, !u64i loc(#loc173)
    %34 = cir.const #cir.int<0> : !s32i loc(#loc127)
    %35 = cir.cast(integral, %34 : !s32i), !s8i loc(#loc127)
    %36 = cir.const #cir.int<100> : !s32i loc(#loc128)
    %37 = cir.const #cir.int<1> : !s32i loc(#loc129)
    %38 = cir.binop(sub, %36, %37) nsw : !s32i loc(#loc128)
    %39 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc130)
    %40 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %38 : !s32i), !cir.ptr<!s8i> loc(#loc130)
    cir.store %35, %40 : !s8i, !cir.ptr<!s8i> loc(#loc174)
    %41 = cir.get_global @strncat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc131)
    %42 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
    %43 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc133)
    %44 = cir.const #cir.int<100> : !s32i loc(#loc134)
    %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc134)
    %46 = cir.call @strncat(%42, %43, %45) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc131)
    %47 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
    cir.call @printLine(%47) : (!cir.ptr<!s8i>) -> () loc(#loc136)
    cir.br ^bb9 loc(#loc120)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc96)
  } loc(#loc164)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":38:19)
#loc4 = loc("/usr/include/string.h":152:1)
#loc5 = loc("/usr/include/string.h":153:29)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":23:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":49:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":42:9)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":42:24)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":25:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":25:12)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":26:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":26:36)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":27:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":27:37)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":28:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":40:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":28:12)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":30:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":33:16)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":33:9)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":34:19)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":34:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":34:14)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":34:15)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":35:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":38:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":39:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":41:5)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":48:5)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":43:16)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":43:24)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":43:29)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":43:33)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":43:9)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":43:34)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":44:25)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":44:16)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":44:20)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":44:9)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":46:9)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":46:17)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":46:23)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":46:31)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":47:19)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":47:9)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":111:1)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":115:1)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":113:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":113:14)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":114:5)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":114:14)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":56:1)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":81:1)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":74:9)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":74:24)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":58:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":58:12)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":59:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":59:36)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":60:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":60:37)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":61:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":72:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":61:12)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":63:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":65:19)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":65:9)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":66:9)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":69:16)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":69:9)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":70:19)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":70:9)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":70:14)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":70:15)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":71:9)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":73:5)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":80:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":75:16)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":75:24)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":75:29)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":75:33)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":75:9)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":75:34)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":76:25)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":76:16)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":76:20)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":76:9)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":78:9)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":78:17)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":78:23)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":78:31)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":79:19)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":79:9)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":84:1)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":109:1)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":102:9)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":102:24)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":86:5)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":86:12)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":87:5)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":87:36)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":88:5)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":88:37)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":89:5)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":100:5)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":89:12)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":91:5)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":93:16)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":93:9)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":94:19)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":94:9)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":94:14)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":94:15)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":95:9)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":98:19)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":98:9)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":99:9)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":101:5)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":108:5)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":103:16)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":103:24)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":103:29)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":103:33)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":103:9)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":103:34)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":104:25)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":104:16)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":104:20)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":104:9)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":106:9)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":106:17)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":106:23)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":106:31)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":107:19)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncat_15.c":107:9)
#loc137 = loc(fused[#loc1, #loc2])
#loc138 = loc(fused[#loc4, #loc5])
#loc139 = loc(fused[#loc6, #loc7])
#loc140 = loc(fused[#loc8, #loc9])
#loc141 = loc(fused[#loc10, #loc11])
#loc142 = loc(fused[#loc12, #loc13])
#loc143 = loc(fused[#loc14, #loc15])
#loc144 = loc(fused[#loc16, #loc17])
#loc145 = loc(fused[#loc21, #loc20])
#loc146 = loc(fused[#loc23, #loc22])
#loc147 = loc(fused[#loc29, #loc30])
#loc148 = loc(fused[#loc35, #loc36])
#loc149 = loc(fused[#loc40, #loc37])
#loc150 = loc(fused[#loc47, #loc48])
#loc151 = loc(fused[#loc49, #loc50])
#loc152 = loc(fused[#loc51, #loc52])
#loc153 = loc(fused[#loc53, #loc54])
#loc154 = loc(fused[#loc55, #loc56])
#loc155 = loc(fused[#loc57, #loc58])
#loc156 = loc(fused[#loc59, #loc60])
#loc157 = loc(fused[#loc61, #loc62])
#loc158 = loc(fused[#loc63, #loc64])
#loc159 = loc(fused[#loc71, #loc70])
#loc160 = loc(fused[#loc73, #loc72])
#loc161 = loc(fused[#loc77, #loc78])
#loc162 = loc(fused[#loc83, #loc84])
#loc163 = loc(fused[#loc88, #loc85])
#loc164 = loc(fused[#loc95, #loc96])
#loc165 = loc(fused[#loc97, #loc98])
#loc166 = loc(fused[#loc99, #loc100])
#loc167 = loc(fused[#loc101, #loc102])
#loc168 = loc(fused[#loc103, #loc104])
#loc169 = loc(fused[#loc105, #loc106])
#loc170 = loc(fused[#loc110, #loc109])
#loc171 = loc(fused[#loc112, #loc111])
#loc172 = loc(fused[#loc119, #loc120])
#loc173 = loc(fused[#loc125, #loc126])
#loc174 = loc(fused[#loc130, #loc127])
