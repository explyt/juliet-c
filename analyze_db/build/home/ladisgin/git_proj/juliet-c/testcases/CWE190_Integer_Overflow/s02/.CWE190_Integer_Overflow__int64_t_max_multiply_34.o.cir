!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty_CWE190_Integer_Overflow__int64_t_max_multiply_34_unionType = !cir.struct<union "CWE190_Integer_Overflow__int64_t_max_multiply_34_unionType" {!s64i, !s64i}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int64_t_max_multiply_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLongLongLine(!s64i) loc(#loc102)
  cir.func no_proto @CWE190_Integer_Overflow__int64_t_max_multiply_34_bad() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc104)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc105)
    %2 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc106)
    %3 = cir.alloca !ty_CWE190_Integer_Overflow__int64_t_max_multiply_34_unionType, !cir.ptr<!ty_CWE190_Integer_Overflow__int64_t_max_multiply_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc107)
    %4 = cir.const #cir.int<0> : !s64i loc(#loc13)
    cir.store %4, %2 : !s64i, !cir.ptr<!s64i> loc(#loc108)
    %5 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc15)
    cir.store %5, %2 : !s64i, !cir.ptr<!s64i> loc(#loc109)
    %6 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc17)
    %7 = cir.get_member %3[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE190_Integer_Overflow__int64_t_max_multiply_34_unionType> -> !cir.ptr<!s64i> loc(#loc18)
    cir.store %6, %7 : !s64i, !cir.ptr<!s64i> loc(#loc110)
    cir.br ^bb1 loc(#loc111)
  ^bb1:  // pred: ^bb0
    %8 = cir.get_member %3[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE190_Integer_Overflow__int64_t_max_multiply_34_unionType> -> !cir.ptr<!s64i> loc(#loc22)
    %9 = cir.load %8 : !cir.ptr<!s64i>, !s64i loc(#loc6)
    cir.store %9, %0 : !s64i, !cir.ptr<!s64i> loc(#loc104)
    cir.br ^bb2 loc(#loc112)
  ^bb2:  // pred: ^bb1
    %10 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc25)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc26)
    %12 = cir.cast(integral, %11 : !s32i), !s64i loc(#loc26)
    %13 = cir.cmp(gt, %10, %12) : !s64i, !cir.bool loc(#loc113)
    cir.brcond %13 ^bb3, ^bb4 loc(#loc114)
  ^bb3:  // pred: ^bb2
    %14 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc28)
    %15 = cir.const #cir.int<2> : !s32i loc(#loc8)
    %16 = cir.cast(integral, %15 : !s32i), !s64i loc(#loc8)
    %17 = cir.binop(mul, %14, %16) nsw : !s64i loc(#loc28)
    cir.store %17, %1 : !s64i, !cir.ptr<!s64i> loc(#loc105)
    %18 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc29)
    cir.call @printLongLongLine(%18) : (!s64i) -> () loc(#loc30)
    cir.br ^bb4 loc(#loc24)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc24)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc21)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc4)
  } loc(#loc103)
  cir.func no_proto @CWE190_Integer_Overflow__int64_t_max_multiply_34_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc116)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc33)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc117)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc35)
    cir.return loc(#loc32)
  } loc(#loc115)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc119)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc120)
    %2 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc121)
    %3 = cir.alloca !ty_CWE190_Integer_Overflow__int64_t_max_multiply_34_unionType, !cir.ptr<!ty_CWE190_Integer_Overflow__int64_t_max_multiply_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc122)
    %4 = cir.const #cir.int<0> : !s64i loc(#loc47)
    cir.store %4, %2 : !s64i, !cir.ptr<!s64i> loc(#loc123)
    %5 = cir.const #cir.int<2> : !s32i loc(#loc49)
    %6 = cir.cast(integral, %5 : !s32i), !s64i loc(#loc49)
    cir.store %6, %2 : !s64i, !cir.ptr<!s64i> loc(#loc124)
    %7 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc51)
    %8 = cir.get_member %3[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE190_Integer_Overflow__int64_t_max_multiply_34_unionType> -> !cir.ptr<!s64i> loc(#loc18)
    cir.store %7, %8 : !s64i, !cir.ptr<!s64i> loc(#loc125)
    cir.br ^bb1 loc(#loc126)
  ^bb1:  // pred: ^bb0
    %9 = cir.get_member %3[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE190_Integer_Overflow__int64_t_max_multiply_34_unionType> -> !cir.ptr<!s64i> loc(#loc22)
    %10 = cir.load %9 : !cir.ptr<!s64i>, !s64i loc(#loc40)
    cir.store %10, %0 : !s64i, !cir.ptr<!s64i> loc(#loc119)
    cir.br ^bb2 loc(#loc127)
  ^bb2:  // pred: ^bb1
    %11 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc57)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc58)
    %13 = cir.cast(integral, %12 : !s32i), !s64i loc(#loc58)
    %14 = cir.cmp(gt, %11, %13) : !s64i, !cir.bool loc(#loc128)
    cir.brcond %14 ^bb3, ^bb4 loc(#loc129)
  ^bb3:  // pred: ^bb2
    %15 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc60)
    %16 = cir.const #cir.int<2> : !s32i loc(#loc42)
    %17 = cir.cast(integral, %16 : !s32i), !s64i loc(#loc42)
    %18 = cir.binop(mul, %15, %17) nsw : !s64i loc(#loc60)
    cir.store %18, %1 : !s64i, !cir.ptr<!s64i> loc(#loc120)
    %19 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc61)
    cir.call @printLongLongLine(%19) : (!s64i) -> () loc(#loc62)
    cir.br ^bb4 loc(#loc56)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc56)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc54)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc38)
  } loc(#loc118)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc130)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc65)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc132)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc133)
    %2 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc134)
    %3 = cir.alloca !ty_CWE190_Integer_Overflow__int64_t_max_multiply_34_unionType, !cir.ptr<!ty_CWE190_Integer_Overflow__int64_t_max_multiply_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc135)
    %4 = cir.const #cir.int<0> : !s64i loc(#loc76)
    cir.store %4, %2 : !s64i, !cir.ptr<!s64i> loc(#loc136)
    %5 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc78)
    cir.store %5, %2 : !s64i, !cir.ptr<!s64i> loc(#loc137)
    %6 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc80)
    %7 = cir.get_member %3[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE190_Integer_Overflow__int64_t_max_multiply_34_unionType> -> !cir.ptr<!s64i> loc(#loc18)
    cir.store %6, %7 : !s64i, !cir.ptr<!s64i> loc(#loc138)
    cir.br ^bb1 loc(#loc139)
  ^bb1:  // pred: ^bb0
    %8 = cir.get_member %3[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE190_Integer_Overflow__int64_t_max_multiply_34_unionType> -> !cir.ptr<!s64i> loc(#loc22)
    %9 = cir.load %8 : !cir.ptr<!s64i>, !s64i loc(#loc69)
    cir.store %9, %0 : !s64i, !cir.ptr<!s64i> loc(#loc132)
    cir.br ^bb2 loc(#loc140)
  ^bb2:  // pred: ^bb1
    %10 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc86)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc87)
    %12 = cir.cast(integral, %11 : !s32i), !s64i loc(#loc87)
    %13 = cir.cmp(gt, %10, %12) : !s64i, !cir.bool loc(#loc141)
    cir.brcond %13 ^bb3, ^bb9 loc(#loc142)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc143)
  ^bb4:  // pred: ^bb3
    %14 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc91)
    %15 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc92)
    %16 = cir.const #cir.int<2> : !s32i loc(#loc93)
    %17 = cir.cast(integral, %16 : !s32i), !s64i loc(#loc93)
    %18 = cir.binop(div, %15, %17) : !s64i loc(#loc144)
    %19 = cir.cmp(lt, %14, %18) : !s64i, !cir.bool loc(#loc145)
    cir.brcond %19 ^bb5, ^bb6 loc(#loc146)
  ^bb5:  // pred: ^bb4
    %20 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc98)
    %21 = cir.const #cir.int<2> : !s32i loc(#loc71)
    %22 = cir.cast(integral, %21 : !s32i), !s64i loc(#loc71)
    %23 = cir.binop(mul, %20, %22) nsw : !s64i loc(#loc98)
    cir.store %23, %1 : !s64i, !cir.ptr<!s64i> loc(#loc133)
    %24 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc99)
    cir.call @printLongLongLine(%24) : (!s64i) -> () loc(#loc100)
    cir.br ^bb7 loc(#loc96)
  ^bb6:  // pred: ^bb4
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc65)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc101)
    cir.br ^bb7 loc(#loc90)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc90)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc85)
  ^bb9:  // 2 preds: ^bb2, ^bb8
    cir.br ^bb10 loc(#loc85)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc83)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc67)
  } loc(#loc131)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int64_t_max_multiply_34.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc3 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":28:1)
#loc4 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":45:1)
#loc5 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":37:9)
#loc6 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":37:32)
#loc7 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":41:13)
#loc8 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":41:37)
#loc9 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":30:5)
#loc10 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":30:13)
#loc11 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":31:5)
#loc12 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":31:64)
#loc13 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":32:12)
#loc14 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":32:5)
#loc15 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":34:12)
#loc16 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":34:5)
#loc17 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":35:26)
#loc18 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":22:13)
#loc19 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":35:5)
#loc20 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":36:5)
#loc21 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":44:5)
#loc22 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":23:13)
#loc23 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":38:9)
#loc24 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":43:9)
#loc25 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":38:12)
#loc26 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":38:19)
#loc27 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":39:9)
#loc28 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":41:30)
#loc29 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":42:31)
#loc30 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":42:13)
#loc31 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":98:1)
#loc32 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":102:1)
#loc33 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":100:5)
#loc34 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":100:13)
#loc35 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":101:5)
#loc36 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":101:13)
#loc37 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":52:1)
#loc38 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":69:1)
#loc39 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":61:9)
#loc40 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":61:32)
#loc41 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":65:13)
#loc42 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":65:37)
#loc43 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":54:5)
#loc44 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":54:13)
#loc45 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":55:5)
#loc46 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":55:64)
#loc47 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":56:12)
#loc48 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":56:5)
#loc49 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":58:12)
#loc50 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":58:5)
#loc51 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":59:26)
#loc52 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":59:5)
#loc53 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":60:5)
#loc54 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":68:5)
#loc55 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":62:9)
#loc56 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":67:9)
#loc57 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":62:12)
#loc58 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":62:19)
#loc59 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":63:9)
#loc60 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":65:30)
#loc61 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":66:31)
#loc62 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":66:13)
#loc63 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc64 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc65 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":92:27)
#loc66 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":72:1)
#loc67 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":96:1)
#loc68 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":81:9)
#loc69 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":81:32)
#loc70 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":87:17)
#loc71 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":87:41)
#loc72 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":74:5)
#loc73 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":74:13)
#loc74 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":75:5)
#loc75 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":75:64)
#loc76 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":76:12)
#loc77 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":76:5)
#loc78 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":78:12)
#loc79 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":78:5)
#loc80 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":79:26)
#loc81 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":79:5)
#loc82 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":80:5)
#loc83 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":95:5)
#loc84 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":82:9)
#loc85 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":94:9)
#loc86 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":82:12)
#loc87 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":82:19)
#loc88 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":83:9)
#loc89 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":85:13)
#loc90 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":93:13)
#loc91 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":85:17)
#loc92 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":85:25)
#loc93 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":85:35)
#loc94 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":85:36)
#loc95 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":86:13)
#loc96 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":89:13)
#loc97 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":91:13)
#loc98 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":87:34)
#loc99 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":88:35)
#loc100 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":88:17)
#loc101 = loc("CWE190_Integer_Overflow__int64_t_max_multiply_34.c":92:17)
#loc102 = loc(fused[#loc1, #loc2])
#loc103 = loc(fused[#loc3, #loc4])
#loc104 = loc(fused[#loc5, #loc6])
#loc105 = loc(fused[#loc7, #loc8])
#loc106 = loc(fused[#loc9, #loc10])
#loc107 = loc(fused[#loc11, #loc12])
#loc108 = loc(fused[#loc14, #loc13])
#loc109 = loc(fused[#loc16, #loc15])
#loc110 = loc(fused[#loc19, #loc17])
#loc111 = loc(fused[#loc20, #loc21])
#loc112 = loc(fused[#loc23, #loc24])
#loc113 = loc(fused[#loc25, #loc26])
#loc114 = loc(fused[#loc27, #loc24])
#loc115 = loc(fused[#loc31, #loc32])
#loc116 = loc(fused[#loc33, #loc34])
#loc117 = loc(fused[#loc35, #loc36])
#loc118 = loc(fused[#loc37, #loc38])
#loc119 = loc(fused[#loc39, #loc40])
#loc120 = loc(fused[#loc41, #loc42])
#loc121 = loc(fused[#loc43, #loc44])
#loc122 = loc(fused[#loc45, #loc46])
#loc123 = loc(fused[#loc48, #loc47])
#loc124 = loc(fused[#loc50, #loc49])
#loc125 = loc(fused[#loc52, #loc51])
#loc126 = loc(fused[#loc53, #loc54])
#loc127 = loc(fused[#loc55, #loc56])
#loc128 = loc(fused[#loc57, #loc58])
#loc129 = loc(fused[#loc59, #loc56])
#loc130 = loc(fused[#loc63, #loc64])
#loc131 = loc(fused[#loc66, #loc67])
#loc132 = loc(fused[#loc68, #loc69])
#loc133 = loc(fused[#loc70, #loc71])
#loc134 = loc(fused[#loc72, #loc73])
#loc135 = loc(fused[#loc74, #loc75])
#loc136 = loc(fused[#loc77, #loc76])
#loc137 = loc(fused[#loc79, #loc78])
#loc138 = loc(fused[#loc81, #loc80])
#loc139 = loc(fused[#loc82, #loc83])
#loc140 = loc(fused[#loc84, #loc85])
#loc141 = loc(fused[#loc86, #loc87])
#loc142 = loc(fused[#loc88, #loc85])
#loc143 = loc(fused[#loc89, #loc90])
#loc144 = loc(fused[#loc92, #loc93])
#loc145 = loc(fused[#loc91, #loc94])
#loc146 = loc(fused[#loc95, #loc96, #loc97, #loc90])
