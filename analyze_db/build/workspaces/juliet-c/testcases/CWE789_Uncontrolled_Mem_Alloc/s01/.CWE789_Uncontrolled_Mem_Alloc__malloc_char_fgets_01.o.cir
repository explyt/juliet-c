!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc195)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc196)
  cir.func private @strtoul(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc197)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc198)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc199)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc200)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc201)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc16)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc202)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc19)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc204)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc24)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc24)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc205)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc207)
      %4 = cir.const #cir.zero : !cir.array<!s8i x 26> loc(#loc207)
      cir.store %4, %3 : !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>> loc(#loc207)
      cir.scope {
        %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc32)
        %6 = cir.const #cir.int<3> : !s32i loc(#loc33)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc33)
        %8 = cir.const #cir.int<8> : !u64i loc(#loc33)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc33)
        %10 = cir.const #cir.int<2> : !s32i loc(#loc33)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc33)
        %12 = cir.binop(add, %9, %11) : !u64i loc(#loc33)
        %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc33)
        %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc196)
        %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc34)
        %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc35)
        %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc36)
        %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc36)
        %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc209)
        cir.if %19 {
          %20 = cir.get_global @strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc40)
          %21 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc41)
          %22 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc42)
          %23 = cir.const #cir.int<0> : !s32i loc(#loc43)
          %24 = cir.call @strtoul(%21, %22, %23) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc40)
          cir.store %24, %0 : !u64i, !cir.ptr<!u64i> loc(#loc211)
        } else {
          %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
          %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc46)
        } loc(#loc210)
      } loc(#loc208)
    } loc(#loc206)
    cir.scope {
      %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc213)
      cir.scope {
        %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc53)
        %5 = cir.const #cir.int<5> : !u64i loc(#loc215)
        %6 = cir.cmp(gt, %4, %5) : !u64i, !cir.bool loc(#loc216)
        cir.if %6 {
          %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc59)
          %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc60)
          %9 = cir.const #cir.int<1> : !u64i loc(#loc218)
          %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc219)
          %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc59)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc220)
          cir.store %12, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc221)
          cir.scope {
            %22 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
            %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc68)
            %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc68)
            %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!s8i>, !cir.bool loc(#loc223)
            cir.if %25 {
              %26 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc70)
              %27 = cir.const #cir.int<1> : !s32i loc(#loc71)
              %28 = cir.unary(minus, %27) nsw : !s32i, !s32i loc(#loc72)
              cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc70)
            } loc(#loc224)
          } loc(#loc222)
          %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc73)
          %14 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
          %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc16)
          %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc16)
          %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc73)
          %18 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
          cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc76)
          %19 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc77)
          %20 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
          %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc78)
          cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc77)
        } else {
          %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc19)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc19)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc79)
        } loc(#loc217)
      } loc(#loc214)
    } loc(#loc212)
    cir.return loc(#loc21)
  } loc(#loc203)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc226)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc82)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc227)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc84)
    cir.return loc(#loc81)
  } loc(#loc225)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc229)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc90)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc90)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc230)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc92)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc92)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc231)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc233)
      cir.scope {
        %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc100)
        %7 = cir.const #cir.int<5> : !u64i loc(#loc235)
        %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc236)
        cir.if %8 {
          %9 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc106)
          %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc107)
          %11 = cir.const #cir.int<1> : !u64i loc(#loc238)
          %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc239)
          %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc106)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc240)
          cir.store %14, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc241)
          cir.scope {
            %24 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc114)
            %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc115)
            %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc115)
            %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!s8i>, !cir.bool loc(#loc243)
            cir.if %27 {
              %28 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc117)
              %29 = cir.const #cir.int<1> : !s32i loc(#loc118)
              %30 = cir.unary(minus, %29) nsw : !s32i, !s32i loc(#loc119)
              cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc117)
            } loc(#loc244)
          } loc(#loc242)
          %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc120)
          %16 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
          %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc122)
          %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc122)
          %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc120)
          %20 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
          cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc124)
          %21 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc125)
          %22 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
          %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc126)
          cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc125)
        } else {
          %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc127)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc127)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc128)
        } loc(#loc237)
      } loc(#loc234)
    } loc(#loc232)
    cir.return loc(#loc87)
  } loc(#loc228)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc129)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc246)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc134)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc134)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc247)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc249)
      %4 = cir.const #cir.zero : !cir.array<!s8i x 26> loc(#loc249)
      cir.store %4, %3 : !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>> loc(#loc249)
      cir.scope {
        %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc142)
        %6 = cir.const #cir.int<3> : !s32i loc(#loc143)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc143)
        %8 = cir.const #cir.int<8> : !u64i loc(#loc143)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc143)
        %10 = cir.const #cir.int<2> : !s32i loc(#loc143)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc143)
        %12 = cir.binop(add, %9, %11) : !u64i loc(#loc143)
        %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc143)
        %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc196)
        %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc144)
        %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc145)
        %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc146)
        %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc146)
        %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc251)
        cir.if %19 {
          %20 = cir.get_global @strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc150)
          %21 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc151)
          %22 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc152)
          %23 = cir.const #cir.int<0> : !s32i loc(#loc153)
          %24 = cir.call @strtoul(%21, %22, %23) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc150)
          cir.store %24, %0 : !u64i, !cir.ptr<!u64i> loc(#loc253)
        } else {
          %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc156)
          %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc156)
          cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc157)
        } loc(#loc252)
      } loc(#loc250)
    } loc(#loc248)
    cir.scope {
      %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc255)
      cir.scope {
        %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc164)
        %5 = cir.const #cir.int<5> : !u64i loc(#loc257)
        %6 = cir.cmp(gt, %4, %5) : !u64i, !cir.bool loc(#loc258)
        %7 = cir.ternary(%6, true {
          %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc168)
          %9 = cir.const #cir.int<100> : !s32i loc(#loc169)
          %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc169)
          %11 = cir.cmp(lt, %8, %10) : !u64i, !cir.bool loc(#loc259)
          %12 = cir.ternary(%11, true {
            %13 = cir.const #true loc(#loc167)
            cir.yield %13 : !cir.bool loc(#loc167)
          }, false {
            %13 = cir.const #false loc(#loc167)
            cir.yield %13 : !cir.bool loc(#loc167)
          }) : (!cir.bool) -> !cir.bool loc(#loc167)
          cir.yield %12 : !cir.bool loc(#loc167)
        }, false {
          %8 = cir.const #false loc(#loc167)
          cir.yield %8 : !cir.bool loc(#loc167)
        }) : (!cir.bool) -> !cir.bool loc(#loc167)
        cir.if %7 {
          %8 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc173)
          %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc174)
          %10 = cir.const #cir.int<1> : !u64i loc(#loc261)
          %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc262)
          %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc173)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc263)
          cir.store %13, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc264)
          cir.scope {
            %23 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc181)
            %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc182)
            %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc182)
            %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc266)
            cir.if %26 {
              %27 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc184)
              %28 = cir.const #cir.int<1> : !s32i loc(#loc185)
              %29 = cir.unary(minus, %28) nsw : !s32i, !s32i loc(#loc186)
              cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc184)
            } loc(#loc267)
          } loc(#loc265)
          %14 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc187)
          %15 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc188)
          %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc189)
          %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc189)
          %18 = cir.call @strcpy(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc187)
          %19 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc190)
          cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc191)
          %20 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc192)
          %21 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc193)
          %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc193)
          cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc192)
        } else {
          %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc129)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc129)
          cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc194)
        } loc(#loc260)
      } loc(#loc256)
    } loc(#loc254)
    cir.return loc(#loc131)
  } loc(#loc245)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":181:1)
#loc6 = loc("/usr/include/stdlib.h":183:14)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":45:23)
#loc10 = loc("/usr/include/stdlib.h":672:1)
#loc11 = loc("/usr/include/stdlib.h":672:45)
#loc12 = loc("/usr/include/stdlib.h":756:1)
#loc13 = loc("/usr/include/stdlib.h":756:70)
#loc14 = loc("/usr/include/string.h":141:1)
#loc15 = loc("/usr/include/string.h":142:14)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":58:30)
#loc17 = loc("/usr/include/stdlib.h":687:1)
#loc18 = loc("/usr/include/stdlib.h":687:32)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":64:23)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":30:1)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":67:1)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":32:5)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":32:12)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":34:12)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":34:5)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":35:5)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":47:5)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":36:9)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":36:45)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":38:9)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":46:9)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":38:19)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":38:32)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":38:49)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":38:13)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":38:59)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":39:9)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":42:9)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":44:9)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":41:20)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":41:28)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":41:41)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":41:47)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":41:13)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":41:48)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":45:13)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":48:5)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":66:5)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":49:9)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":49:16)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":53:9)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":65:9)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":53:13)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":53:20)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":53:39)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":54:9)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":61:9)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":63:9)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":55:32)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":55:39)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":55:44)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":55:55)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":55:56)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":55:13)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":56:13)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":56:45)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":56:17)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":56:29)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":56:35)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":56:36)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":56:42)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":56:41)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":58:13)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":58:20)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":59:23)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":59:13)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":60:13)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":60:18)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":64:13)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":142:1)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":146:1)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":144:5)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":144:13)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":145:5)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":145:13)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":74:1)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":100:1)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":76:5)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":76:12)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":78:12)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":78:5)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":80:12)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":80:5)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":81:5)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":99:5)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":82:9)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":82:16)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":86:9)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":98:9)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":86:13)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":86:20)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":86:39)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":87:9)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":94:9)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":96:9)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":88:32)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":88:39)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":88:44)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":88:55)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":88:56)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":88:13)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":89:13)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":89:45)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":89:17)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":89:29)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":89:35)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":89:36)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":89:42)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":89:41)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":91:13)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":91:20)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":91:30)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":92:23)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":92:13)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":93:13)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":93:18)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":97:23)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":97:13)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":137:23)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":103:1)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":140:1)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":105:5)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":105:12)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":107:12)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":107:5)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":108:5)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":120:5)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":109:9)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":109:45)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":111:9)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":119:9)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":111:19)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":111:32)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":111:49)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":111:13)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":111:59)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":112:9)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":115:9)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":117:9)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":114:20)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":114:28)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":114:41)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":114:47)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":114:13)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":114:48)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":118:23)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":118:13)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":121:5)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":139:5)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":122:9)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":122:16)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":126:9)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":138:9)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":126:13)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":126:20)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":126:39)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":126:41)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":126:44)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":126:51)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":127:9)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":134:9)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":136:9)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":128:32)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":128:39)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":128:44)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":128:55)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":128:56)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":128:13)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":129:13)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":129:45)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":129:17)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":129:29)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":129:35)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":129:36)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":129:42)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":129:41)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":131:13)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":131:20)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":131:30)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":132:23)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":132:13)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":133:13)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":133:18)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_01.c":137:13)
#loc195 = loc(fused[#loc1, #loc2])
#loc196 = loc(fused[#loc3, #loc4])
#loc197 = loc(fused[#loc5, #loc6])
#loc198 = loc(fused[#loc7, #loc8])
#loc199 = loc(fused[#loc10, #loc11])
#loc200 = loc(fused[#loc12, #loc13])
#loc201 = loc(fused[#loc14, #loc15])
#loc202 = loc(fused[#loc17, #loc18])
#loc203 = loc(fused[#loc20, #loc21])
#loc204 = loc(fused[#loc22, #loc23])
#loc205 = loc(fused[#loc25, #loc24])
#loc206 = loc(fused[#loc26, #loc27])
#loc207 = loc(fused[#loc28, #loc29])
#loc208 = loc(fused[#loc30, #loc31])
#loc209 = loc(fused[#loc35, #loc36])
#loc210 = loc(fused[#loc37, #loc38, #loc39, #loc31])
#loc211 = loc(fused[#loc44, #loc45])
#loc212 = loc(fused[#loc47, #loc48])
#loc213 = loc(fused[#loc49, #loc50])
#loc214 = loc(fused[#loc51, #loc52])
#loc215 = loc(fused[#loc54, #loc55])
#loc216 = loc(fused[#loc53, #loc55])
#loc217 = loc(fused[#loc56, #loc57, #loc58, #loc52])
#loc218 = loc(fused[#loc61, #loc62])
#loc219 = loc(fused[#loc60, #loc62])
#loc220 = loc(fused[#loc59, #loc63])
#loc221 = loc(fused[#loc64, #loc63])
#loc222 = loc(fused[#loc65, #loc66])
#loc223 = loc(fused[#loc67, #loc68])
#loc224 = loc(fused[#loc69, #loc66])
#loc225 = loc(fused[#loc80, #loc81])
#loc226 = loc(fused[#loc82, #loc83])
#loc227 = loc(fused[#loc84, #loc85])
#loc228 = loc(fused[#loc86, #loc87])
#loc229 = loc(fused[#loc88, #loc89])
#loc230 = loc(fused[#loc91, #loc90])
#loc231 = loc(fused[#loc93, #loc92])
#loc232 = loc(fused[#loc94, #loc95])
#loc233 = loc(fused[#loc96, #loc97])
#loc234 = loc(fused[#loc98, #loc99])
#loc235 = loc(fused[#loc101, #loc102])
#loc236 = loc(fused[#loc100, #loc102])
#loc237 = loc(fused[#loc103, #loc104, #loc105, #loc99])
#loc238 = loc(fused[#loc108, #loc109])
#loc239 = loc(fused[#loc107, #loc109])
#loc240 = loc(fused[#loc106, #loc110])
#loc241 = loc(fused[#loc111, #loc110])
#loc242 = loc(fused[#loc112, #loc113])
#loc243 = loc(fused[#loc114, #loc115])
#loc244 = loc(fused[#loc116, #loc113])
#loc245 = loc(fused[#loc130, #loc131])
#loc246 = loc(fused[#loc132, #loc133])
#loc247 = loc(fused[#loc135, #loc134])
#loc248 = loc(fused[#loc136, #loc137])
#loc249 = loc(fused[#loc138, #loc139])
#loc250 = loc(fused[#loc140, #loc141])
#loc251 = loc(fused[#loc145, #loc146])
#loc252 = loc(fused[#loc147, #loc148, #loc149, #loc141])
#loc253 = loc(fused[#loc154, #loc155])
#loc254 = loc(fused[#loc158, #loc159])
#loc255 = loc(fused[#loc160, #loc161])
#loc256 = loc(fused[#loc162, #loc163])
#loc257 = loc(fused[#loc165, #loc166])
#loc258 = loc(fused[#loc164, #loc166])
#loc259 = loc(fused[#loc168, #loc169])
#loc260 = loc(fused[#loc170, #loc171, #loc172, #loc163])
#loc261 = loc(fused[#loc175, #loc176])
#loc262 = loc(fused[#loc174, #loc176])
#loc263 = loc(fused[#loc173, #loc177])
#loc264 = loc(fused[#loc178, #loc177])
#loc265 = loc(fused[#loc179, #loc180])
#loc266 = loc(fused[#loc181, #loc182])
#loc267 = loc(fused[#loc183, #loc180])
