!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":26:77)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":26:150)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":52:81)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":52:154)
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc99 = loc(fused[#loc7, #loc8])
#loc116 = loc(fused[#loc54, #loc55])
!ty__CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67_structType = !cir.record<struct "_CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67_structType" {!cir.ptr<!ty__twoIntsStruct>}>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc96)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc97)
  cir.func @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b_badSink(%arg0: !ty__CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67_structType loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !ty__CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67_structType, !cir.ptr<!ty__CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67_structType>, ["myStruct", init] {alignment = 8 : i64} loc(#loc99)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc100)
    cir.store %arg0, %0 : !ty__CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67_structType, !cir.ptr<!ty__CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67_structType> loc(#loc11)
    %2 = cir.get_member %0[0] {name = "structFirst"} : !cir.ptr<!ty__CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67_structType> -> !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc12)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc10)
    cir.store %3, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc100)
    cir.scope {
      %4 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc102)
      cir.scope {
        %19 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc104)
        cir.scope {
          %20 = cir.const #cir.int<0> : !s32i loc(#loc23)
          %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc23)
          cir.store %21, %19 : !u64i, !cir.ptr<!u64i> loc(#loc106)
          cir.for : cond {
            %22 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc25)
            %23 = cir.const #cir.int<100> : !s32i loc(#loc26)
            %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc26)
            %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc107)
            cir.condition(%25) loc(#loc27)
          } body {
            cir.scope {
              %22 = cir.const #cir.int<0> : !s32i loc(#loc29)
              %23 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc30)
              %24 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc31)
              %25 = cir.ptr_stride(%24 : !cir.ptr<!ty__twoIntsStruct>, %23 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc31)
              %26 = cir.get_member %25[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc32)
              cir.store %22, %26 : !s32i, !cir.ptr<!s32i> loc(#loc109)
              %27 = cir.const #cir.int<0> : !s32i loc(#loc33)
              %28 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc34)
              %29 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc35)
              %30 = cir.ptr_stride(%29 : !cir.ptr<!ty__twoIntsStruct>, %28 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc35)
              %31 = cir.get_member %30[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc36)
              cir.store %27, %31 : !s32i, !cir.ptr<!s32i> loc(#loc110)
            } loc(#loc108)
            cir.yield loc(#loc22)
          } step {
            %22 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc37)
            %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc38)
            cir.store %23, %19 : !u64i, !cir.ptr<!u64i> loc(#loc111)
            cir.yield loc(#loc105)
          } loc(#loc105)
        } loc(#loc105)
      } loc(#loc103)
      %5 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc39)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc39)
      %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc40)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc40)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc41)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc41)
      %11 = cir.const #cir.int<8> : !u64i loc(#loc112)
      %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc113)
      cir.libc.memmove %12 bytes from %8 to %6 : !cir.ptr<!void>, !u64i loc(#loc114)
      %13 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc46)
      %14 = cir.const #cir.int<0> : !s32i loc(#loc47)
      %15 = cir.ptr_stride(%13 : !cir.ptr<!ty__twoIntsStruct>, %14 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc48)
      cir.call @printStructLine(%15) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc49)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc50)
      %17 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc51)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc51)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc50)
    } loc(#loc101)
    cir.return loc(#loc6)
  } loc(#loc98)
  cir.func @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b_goodG2BSink(%arg0: !ty__CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67_structType loc(fused[#loc54, #loc55])) extra(#fn_attr1) {
    %0 = cir.alloca !ty__CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67_structType, !cir.ptr<!ty__CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67_structType>, ["myStruct", init] {alignment = 8 : i64} loc(#loc116)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc117)
    cir.store %arg0, %0 : !ty__CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67_structType, !cir.ptr<!ty__CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67_structType> loc(#loc58)
    %2 = cir.get_member %0[0] {name = "structFirst"} : !cir.ptr<!ty__CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67_structType> -> !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc12)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc57)
    cir.store %3, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc117)
    cir.scope {
      %4 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc119)
      cir.scope {
        %19 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc121)
        cir.scope {
          %20 = cir.const #cir.int<0> : !s32i loc(#loc69)
          %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc69)
          cir.store %21, %19 : !u64i, !cir.ptr<!u64i> loc(#loc123)
          cir.for : cond {
            %22 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc71)
            %23 = cir.const #cir.int<100> : !s32i loc(#loc72)
            %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc72)
            %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc124)
            cir.condition(%25) loc(#loc73)
          } body {
            cir.scope {
              %22 = cir.const #cir.int<0> : !s32i loc(#loc75)
              %23 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc76)
              %24 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc77)
              %25 = cir.ptr_stride(%24 : !cir.ptr<!ty__twoIntsStruct>, %23 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc77)
              %26 = cir.get_member %25[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc32)
              cir.store %22, %26 : !s32i, !cir.ptr<!s32i> loc(#loc126)
              %27 = cir.const #cir.int<0> : !s32i loc(#loc78)
              %28 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc79)
              %29 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc80)
              %30 = cir.ptr_stride(%29 : !cir.ptr<!ty__twoIntsStruct>, %28 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc80)
              %31 = cir.get_member %30[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc36)
              cir.store %27, %31 : !s32i, !cir.ptr<!s32i> loc(#loc127)
            } loc(#loc125)
            cir.yield loc(#loc68)
          } step {
            %22 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc81)
            %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc82)
            cir.store %23, %19 : !u64i, !cir.ptr<!u64i> loc(#loc128)
            cir.yield loc(#loc122)
          } loc(#loc122)
        } loc(#loc122)
      } loc(#loc120)
      %5 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc83)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc83)
      %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc84)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc84)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc85)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc85)
      %11 = cir.const #cir.int<8> : !u64i loc(#loc129)
      %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc130)
      cir.libc.memmove %12 bytes from %8 to %6 : !cir.ptr<!void>, !u64i loc(#loc131)
      %13 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc90)
      %14 = cir.const #cir.int<0> : !s32i loc(#loc91)
      %15 = cir.ptr_stride(%13 : !cir.ptr<!ty__twoIntsStruct>, %14 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc92)
      cir.call @printStructLine(%15) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc93)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc94)
      %17 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc95)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc95)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc94)
    } loc(#loc118)
    cir.return loc(#loc53)
  } loc(#loc115)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("/usr/include/stdlib.h":687:1)
#loc4 = loc("/usr/include/stdlib.h":687:32)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":26:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":45:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":28:5)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":28:37)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":27:1)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":21:21)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":29:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":44:5)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":30:9)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":30:33)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":31:9)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":39:9)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":32:13)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":32:20)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":34:13)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":38:13)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":34:22)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":34:18)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":34:25)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":34:29)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":34:27)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":35:13)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":36:36)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":36:24)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":36:17)
#loc32 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":37:36)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":37:24)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":37:17)
#loc36 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":34:35)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":34:34)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":41:17)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":41:23)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":41:31)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":41:35)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":41:55)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":41:9)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":41:56)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":42:26)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":42:31)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":42:32)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":42:9)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":43:9)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":43:14)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":52:1)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":71:1)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":54:5)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":54:37)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":53:1)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":55:5)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":70:5)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":56:9)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":56:33)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":57:9)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":65:9)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":58:13)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":58:20)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":60:13)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":64:13)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":60:22)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":60:18)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":60:25)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":60:29)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":60:27)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":61:13)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":62:36)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":62:24)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":62:17)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":63:36)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":63:24)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":63:17)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":60:35)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":60:34)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":67:17)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":67:23)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":67:31)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":67:35)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":67:55)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":67:9)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":67:56)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":68:26)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":68:31)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":68:32)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":68:9)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":69:9)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_67b.c":69:14)
#loc96 = loc(fused[#loc1, #loc2])
#loc97 = loc(fused[#loc3, #loc4])
#loc98 = loc(fused[#loc5, #loc6])
#loc100 = loc(fused[#loc9, #loc10])
#loc101 = loc(fused[#loc13, #loc14])
#loc102 = loc(fused[#loc15, #loc16])
#loc103 = loc(fused[#loc17, #loc18])
#loc104 = loc(fused[#loc19, #loc20])
#loc105 = loc(fused[#loc21, #loc22])
#loc106 = loc(fused[#loc24, #loc23])
#loc107 = loc(fused[#loc25, #loc26])
#loc108 = loc(fused[#loc28, #loc22])
#loc109 = loc(fused[#loc31, #loc29])
#loc110 = loc(fused[#loc35, #loc33])
#loc111 = loc(fused[#loc38, #loc37])
#loc112 = loc(fused[#loc42, #loc43])
#loc113 = loc(fused[#loc41, #loc43])
#loc114 = loc(fused[#loc44, #loc45])
#loc115 = loc(fused[#loc52, #loc53])
#loc117 = loc(fused[#loc56, #loc57])
#loc118 = loc(fused[#loc59, #loc60])
#loc119 = loc(fused[#loc61, #loc62])
#loc120 = loc(fused[#loc63, #loc64])
#loc121 = loc(fused[#loc65, #loc66])
#loc122 = loc(fused[#loc67, #loc68])
#loc123 = loc(fused[#loc70, #loc69])
#loc124 = loc(fused[#loc71, #loc72])
#loc125 = loc(fused[#loc74, #loc68])
#loc126 = loc(fused[#loc77, #loc75])
#loc127 = loc(fused[#loc80, #loc78])
#loc128 = loc(fused[#loc82, #loc81])
#loc129 = loc(fused[#loc86, #loc87])
#loc130 = loc(fused[#loc85, #loc87])
#loc131 = loc(fused[#loc88, #loc89])
