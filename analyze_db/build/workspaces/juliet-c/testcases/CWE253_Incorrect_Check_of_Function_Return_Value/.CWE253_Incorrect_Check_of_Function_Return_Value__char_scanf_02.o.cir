!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @__isoc99_scanf(!cir.ptr<!s8i>, ...) -> !s32i loc(#loc78)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%99s" : !cir.array<!s8i x 4>, trailing_zeros> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc3)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc79)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"scanf failed!\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc6)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<1> : !s32i loc(#loc11)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc11)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc84)
          %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc85)
          %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc84)
          cir.store %4, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc84)
          %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc18)
          cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc85)
          cir.scope {
            %6 = cir.get_global @__isoc99_scanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc21)
            %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc3)
            %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc3)
            %9 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
            %10 = cir.call @__isoc99_scanf(%8, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc21)
            %11 = cir.const #cir.int<0> : !s32i loc(#loc23)
            %12 = cir.cmp(eq, %10, %11) : !s32i, !cir.bool loc(#loc87)
            cir.if %12 {
              %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc6)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc6)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc25)
            } loc(#loc88)
          } loc(#loc86)
        } loc(#loc83)
      } loc(#loc82)
    } loc(#loc81)
    cir.return loc(#loc8)
  } loc(#loc80)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc90)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc28)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc91)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc30)
    cir.return loc(#loc27)
  } loc(#loc89)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc32)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<0> : !s32i loc(#loc37)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc37)
      cir.if %1 {
        %2 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc32)
        %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc32)
        cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc41)
      } else {
        cir.scope {
          %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc96)
          %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc97)
          %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc96)
          cir.store %4, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc96)
          %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc47)
          cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc97)
          cir.scope {
            %6 = cir.get_global @__isoc99_scanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc50)
            %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc51)
            %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc51)
            %9 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
            %10 = cir.call @__isoc99_scanf(%8, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc50)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc53)
            %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc53)
            %13 = cir.cmp(eq, %10, %12) : !s32i, !cir.bool loc(#loc99)
            cir.if %13 {
              %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc55)
              %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc55)
              cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc56)
            } loc(#loc100)
          } loc(#loc98)
        } loc(#loc95)
      } loc(#loc94)
    } loc(#loc93)
    cir.return loc(#loc34)
  } loc(#loc92)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<1> : !s32i loc(#loc61)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc61)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc105)
          %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc106)
          %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc105)
          cir.store %4, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc105)
          %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc68)
          cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc106)
          cir.scope {
            %6 = cir.get_global @__isoc99_scanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc71)
            %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc72)
            %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc72)
            %9 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
            %10 = cir.call @__isoc99_scanf(%8, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc71)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc74)
            %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc74)
            %13 = cir.cmp(eq, %10, %12) : !s32i, !cir.bool loc(#loc108)
            cir.if %13 {
              %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc76)
              %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc76)
              cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc77)
            } loc(#loc109)
          } loc(#loc107)
        } loc(#loc104)
      } loc(#loc103)
    } loc(#loc102)
    cir.return loc(#loc58)
  } loc(#loc101)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":0:0)
#loc1 = loc("/usr/include/stdio.h":466:1)
#loc2 = loc("/usr/include/stdio.h":466:12)
#loc3 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":35:23)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc6 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":37:27)
#loc7 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":24:1)
#loc8 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":41:1)
#loc9 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":26:5)
#loc10 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":40:5)
#loc11 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":26:8)
#loc12 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":27:5)
#loc13 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":28:9)
#loc14 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":39:9)
#loc15 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":31:13)
#loc16 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":31:36)
#loc17 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":32:13)
#loc18 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":32:27)
#loc19 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":35:13)
#loc20 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":38:13)
#loc21 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":35:17)
#loc22 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":35:33)
#loc23 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":35:42)
#loc24 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":36:13)
#loc25 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":37:17)
#loc26 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":90:1)
#loc27 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":94:1)
#loc28 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":92:5)
#loc29 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":92:11)
#loc30 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":93:5)
#loc31 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":93:11)
#loc32 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":53:19)
#loc33 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":48:1)
#loc34 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":69:1)
#loc35 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":50:5)
#loc36 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":68:5)
#loc37 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":50:8)
#loc38 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":51:5)
#loc39 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":54:5)
#loc40 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":56:5)
#loc41 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":53:9)
#loc42 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":57:9)
#loc43 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":67:9)
#loc44 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":60:13)
#loc45 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":60:36)
#loc46 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":61:13)
#loc47 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":61:27)
#loc48 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":63:13)
#loc49 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":66:13)
#loc50 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":63:17)
#loc51 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":63:23)
#loc52 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":63:33)
#loc53 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":63:42)
#loc54 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":64:13)
#loc55 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":65:27)
#loc56 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":65:17)
#loc57 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":72:1)
#loc58 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":88:1)
#loc59 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":74:5)
#loc60 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":87:5)
#loc61 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":74:8)
#loc62 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":75:5)
#loc63 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":76:9)
#loc64 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":86:9)
#loc65 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":79:13)
#loc66 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":79:36)
#loc67 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":80:13)
#loc68 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":80:27)
#loc69 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":82:13)
#loc70 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":85:13)
#loc71 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":82:17)
#loc72 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":82:23)
#loc73 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":82:33)
#loc74 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":82:42)
#loc75 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":83:13)
#loc76 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":84:27)
#loc77 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_02.c":84:17)
#loc78 = loc(fused[#loc1, #loc2])
#loc79 = loc(fused[#loc4, #loc5])
#loc80 = loc(fused[#loc7, #loc8])
#loc81 = loc(fused[#loc9, #loc10])
#loc82 = loc(fused[#loc12, #loc10])
#loc83 = loc(fused[#loc13, #loc14])
#loc84 = loc(fused[#loc15, #loc16])
#loc85 = loc(fused[#loc17, #loc18])
#loc86 = loc(fused[#loc19, #loc20])
#loc87 = loc(fused[#loc21, #loc23])
#loc88 = loc(fused[#loc24, #loc20])
#loc89 = loc(fused[#loc26, #loc27])
#loc90 = loc(fused[#loc28, #loc29])
#loc91 = loc(fused[#loc30, #loc31])
#loc92 = loc(fused[#loc33, #loc34])
#loc93 = loc(fused[#loc35, #loc36])
#loc94 = loc(fused[#loc38, #loc39, #loc40, #loc36])
#loc95 = loc(fused[#loc42, #loc43])
#loc96 = loc(fused[#loc44, #loc45])
#loc97 = loc(fused[#loc46, #loc47])
#loc98 = loc(fused[#loc48, #loc49])
#loc99 = loc(fused[#loc50, #loc53])
#loc100 = loc(fused[#loc54, #loc49])
#loc101 = loc(fused[#loc57, #loc58])
#loc102 = loc(fused[#loc59, #loc60])
#loc103 = loc(fused[#loc62, #loc60])
#loc104 = loc(fused[#loc63, #loc64])
#loc105 = loc(fused[#loc65, #loc66])
#loc106 = loc(fused[#loc67, #loc68])
#loc107 = loc(fused[#loc69, #loc70])
#loc108 = loc(fused[#loc71, #loc74])
#loc109 = loc(fused[#loc75, #loc70])
