!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_putchar_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @putchar(!s32i) -> !s32i loc(#loc54)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_putchar_06_bad() extra(#fn_attr) {
    cir.br ^bb1 loc(#loc56)
  ^bb1:  // pred: ^bb0
    %0 = cir.const #cir.int<5> : !s32i loc(#loc7)
    %1 = cir.const #cir.int<5> : !s32i loc(#loc8)
    %2 = cir.cmp(eq, %0, %1) : !s32i, !cir.bool loc(#loc57)
    cir.brcond %2 ^bb2, ^bb3 loc(#loc58)
  ^bb2:  // pred: ^bb1
    %3 = cir.const #cir.int<65> : !s32i loc(#loc10)
    %4 = cir.call @putchar(%3) : (!s32i) -> !s32i loc(#loc11)
    cir.br ^bb3 loc(#loc6)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc6)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc4)
  } loc(#loc55)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_putchar_06_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc60)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc14)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc61)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc16)
    cir.return loc(#loc13)
  } loc(#loc59)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc62)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc20)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"putchar failed!\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc21)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.br ^bb1 loc(#loc64)
  ^bb1:  // pred: ^bb0
    %0 = cir.const #cir.int<5> : !s32i loc(#loc26)
    %1 = cir.const #cir.int<5> : !s32i loc(#loc27)
    %2 = cir.cmp(ne, %0, %1) : !s32i, !cir.bool loc(#loc65)
    cir.brcond %2 ^bb2, ^bb3 loc(#loc66)
  ^bb2:  // pred: ^bb1
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc20)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc20)
    cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc31)
    cir.br ^bb8 loc(#loc29)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc67)
  ^bb4:  // pred: ^bb3
    %5 = cir.const #cir.int<65> : !s32i loc(#loc34)
    %6 = cir.call @putchar(%5) : (!s32i) -> !s32i loc(#loc35)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc36)
    %9 = cir.cmp(eq, %6, %8) : !s32i, !cir.bool loc(#loc68)
    cir.brcond %9 ^bb5, ^bb6 loc(#loc69)
  ^bb5:  // pred: ^bb4
    %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc21)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc21)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc38)
    cir.br ^bb6 loc(#loc33)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc33)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc25)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc25)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc23)
  } loc(#loc63)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.br ^bb1 loc(#loc71)
  ^bb1:  // pred: ^bb0
    %0 = cir.const #cir.int<5> : !s32i loc(#loc43)
    %1 = cir.const #cir.int<5> : !s32i loc(#loc44)
    %2 = cir.cmp(eq, %0, %1) : !s32i, !cir.bool loc(#loc72)
    cir.brcond %2 ^bb2, ^bb7 loc(#loc73)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc74)
  ^bb3:  // pred: ^bb2
    %3 = cir.const #cir.int<65> : !s32i loc(#loc48)
    %4 = cir.call @putchar(%3) : (!s32i) -> !s32i loc(#loc49)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc50)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc50)
    %7 = cir.cmp(eq, %4, %6) : !s32i, !cir.bool loc(#loc75)
    cir.brcond %7 ^bb4, ^bb5 loc(#loc76)
  ^bb4:  // pred: ^bb3
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc52)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc53)
    cir.br ^bb5 loc(#loc47)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc47)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc42)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc42)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc40)
  } loc(#loc70)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_putchar_06.c":0:0)
#loc1 = loc("/usr/include/stdio.h":618:1)
#loc2 = loc("/usr/include/stdio.h":618:28)
#loc3 = loc("CWE252_Unchecked_Return_Value__char_putchar_06.c":29:1)
#loc4 = loc("CWE252_Unchecked_Return_Value__char_putchar_06.c":36:1)
#loc5 = loc("CWE252_Unchecked_Return_Value__char_putchar_06.c":31:5)
#loc6 = loc("CWE252_Unchecked_Return_Value__char_putchar_06.c":35:5)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_putchar_06.c":31:8)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_putchar_06.c":31:27)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_putchar_06.c":32:5)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_putchar_06.c":34:22)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_putchar_06.c":34:9)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_putchar_06.c":73:1)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_putchar_06.c":77:1)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_putchar_06.c":75:5)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_putchar_06.c":75:11)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_putchar_06.c":76:5)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_putchar_06.c":76:11)
#loc18 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc19 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_putchar_06.c":48:19)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_putchar_06.c":55:23)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_putchar_06.c":43:1)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_putchar_06.c":58:1)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_putchar_06.c":45:5)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_putchar_06.c":57:5)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_putchar_06.c":45:8)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_putchar_06.c":45:27)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_putchar_06.c":46:5)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_putchar_06.c":49:5)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_putchar_06.c":51:5)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_putchar_06.c":48:9)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_putchar_06.c":53:9)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_putchar_06.c":56:9)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_putchar_06.c":53:26)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_putchar_06.c":53:13)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_putchar_06.c":53:34)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_putchar_06.c":54:9)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_putchar_06.c":55:13)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_putchar_06.c":61:1)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_putchar_06.c":71:1)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_putchar_06.c":63:5)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_putchar_06.c":70:5)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_putchar_06.c":63:8)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_putchar_06.c":63:27)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_putchar_06.c":64:5)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_putchar_06.c":66:9)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_putchar_06.c":69:9)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_putchar_06.c":66:26)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_putchar_06.c":66:13)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_putchar_06.c":66:34)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_putchar_06.c":67:9)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_putchar_06.c":68:23)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_putchar_06.c":68:13)
#loc54 = loc(fused[#loc1, #loc2])
#loc55 = loc(fused[#loc3, #loc4])
#loc56 = loc(fused[#loc5, #loc6])
#loc57 = loc(fused[#loc7, #loc8])
#loc58 = loc(fused[#loc9, #loc6])
#loc59 = loc(fused[#loc12, #loc13])
#loc60 = loc(fused[#loc14, #loc15])
#loc61 = loc(fused[#loc16, #loc17])
#loc62 = loc(fused[#loc18, #loc19])
#loc63 = loc(fused[#loc22, #loc23])
#loc64 = loc(fused[#loc24, #loc25])
#loc65 = loc(fused[#loc26, #loc27])
#loc66 = loc(fused[#loc28, #loc29, #loc30, #loc25])
#loc67 = loc(fused[#loc32, #loc33])
#loc68 = loc(fused[#loc35, #loc36])
#loc69 = loc(fused[#loc37, #loc33])
#loc70 = loc(fused[#loc39, #loc40])
#loc71 = loc(fused[#loc41, #loc42])
#loc72 = loc(fused[#loc43, #loc44])
#loc73 = loc(fused[#loc45, #loc42])
#loc74 = loc(fused[#loc46, #loc47])
#loc75 = loc(fused[#loc49, #loc50])
#loc76 = loc(fused[#loc51, #loc47])
