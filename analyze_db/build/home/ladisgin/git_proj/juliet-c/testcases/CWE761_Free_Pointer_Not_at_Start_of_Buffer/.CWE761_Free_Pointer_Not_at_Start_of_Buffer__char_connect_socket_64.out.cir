!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc8 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":46:82)
#loc9 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":46:89)
#loc40 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":70:86)
#loc41 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":70:93)
#loc80 = loc(fused[#loc8, #loc9])
#loc92 = loc(fused[#loc40, #loc41])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE761_Free_Pointer_Not_at_Start_of_Buffer/CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc77)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"We have a match!\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc3)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc78)
  cir.func @CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b_badSink(%arg0: !cir.ptr<!void> loc(fused[#loc8, #loc9])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dataVoidPtr", init] {alignment = 8 : i64} loc(#loc80)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc81)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc82)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc14)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc11)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc11)
    cir.store %4, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc81)
    %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc15)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc16)
    cir.store %6, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc82)
    cir.scope {
      cir.for : cond {
        %10 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
        %11 = cir.load %10 : !cir.ptr<!s8i>, !s8i loc(#loc20)
        %12 = cir.cast(integral, %11 : !s8i), !s32i loc(#loc20)
        %13 = cir.const #cir.int<0> : !s32i loc(#loc21)
        %14 = cir.cmp(ne, %12, %13) : !s32i, !cir.bool loc(#loc84)
        cir.condition(%14) loc(#loc22)
      } body {
        cir.scope {
          cir.scope {
            %10 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
            %11 = cir.load %10 : !cir.ptr<!s8i>, !s8i loc(#loc27)
            %12 = cir.cast(integral, %11 : !s8i), !s32i loc(#loc27)
            %13 = cir.const #cir.int<83> : !s32i loc(#loc28)
            %14 = cir.cmp(eq, %12, %13) : !s32i, !cir.bool loc(#loc87)
            cir.if %14 {
              %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc3)
              %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc3)
              cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc30)
              cir.break loc(#loc31)
            } loc(#loc88)
          } loc(#loc86)
        } loc(#loc85)
        cir.yield loc(#loc18)
      } step {
        %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc89)
        %12 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc89)
        cir.store %12, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc89)
        cir.yield loc(#loc83)
      } loc(#loc83)
    } loc(#loc83)
    %7 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc34)
    %8 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc35)
    cir.call @free(%9) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc34)
    cir.return loc(#loc7)
  } loc(#loc79)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc90)
  cir.func @CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b_goodB2GSink(%arg0: !cir.ptr<!void> loc(fused[#loc40, #loc41])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dataVoidPtr", init] {alignment = 8 : i64} loc(#loc92)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc93)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc94)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc46)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc43)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc43)
    cir.store %4, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc93)
    %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc47)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
    cir.store %6, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc94)
    cir.scope {
      %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc96)
      cir.scope {
        %11 = cir.const #cir.int<0> : !s32i loc(#loc55)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc55)
        cir.store %12, %7 : !u64i, !cir.ptr<!u64i> loc(#loc98)
        cir.for : cond {
          %13 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc57)
          %14 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc58)
          %15 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
          %16 = cir.call @strlen(%15) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc58)
          %17 = cir.cmp(lt, %13, %16) : !u64i, !cir.bool loc(#loc99)
          cir.condition(%17) loc(#loc61)
        } body {
          cir.scope {
            cir.scope {
              %13 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
              %14 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc66)
              %15 = cir.ptr_stride(%13 : !cir.ptr<!s8i>, %14 : !u64i), !cir.ptr<!s8i> loc(#loc67)
              %16 = cir.load %15 : !cir.ptr<!s8i>, !s8i loc(#loc65)
              %17 = cir.cast(integral, %16 : !s8i), !s32i loc(#loc65)
              %18 = cir.const #cir.int<83> : !s32i loc(#loc68)
              %19 = cir.cmp(eq, %17, %18) : !s32i, !cir.bool loc(#loc102)
              cir.if %19 {
                %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc70)
                %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc70)
                cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc71)
                cir.break loc(#loc72)
              } loc(#loc103)
            } loc(#loc101)
          } loc(#loc100)
          cir.yield loc(#loc54)
        } step {
          %13 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc73)
          %14 = cir.unary(inc, %13) : !u64i, !u64i loc(#loc74)
          cir.store %14, %7 : !u64i, !cir.ptr<!u64i> loc(#loc104)
          cir.yield loc(#loc97)
        } loc(#loc97)
      } loc(#loc97)
      %8 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc75)
      %9 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc76)
      cir.call @free(%10) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc75)
    } loc(#loc95)
    cir.return loc(#loc39)
  } loc(#loc91)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE761_Free_Pointer_Not_at_Start_of_Buffer/CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":58:23)
#loc4 = loc("/usr/include/stdlib.h":687:1)
#loc5 = loc("/usr/include/stdlib.h":687:32)
#loc6 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":46:1)
#loc7 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":63:1)
#loc10 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":49:5)
#loc11 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":49:34)
#loc12 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":51:5)
#loc13 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":51:28)
#loc14 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":47:1)
#loc15 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":51:21)
#loc16 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":51:20)
#loc17 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":54:5)
#loc18 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":61:5)
#loc19 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":54:13)
#loc20 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":54:12)
#loc21 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":54:21)
#loc22 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":54:18)
#loc23 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":55:5)
#loc24 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":56:9)
#loc25 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":60:9)
#loc26 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":56:14)
#loc27 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":56:13)
#loc28 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":56:22)
#loc29 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":57:9)
#loc30 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":58:13)
#loc31 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":59:13)
#loc32 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":54:31)
#loc33 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":54:27)
#loc34 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":62:5)
#loc35 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":62:10)
#loc36 = loc("/usr/include/string.h":407:1)
#loc37 = loc("/usr/include/string.h":408:33)
#loc38 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":70:1)
#loc39 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":89:1)
#loc42 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":73:5)
#loc43 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":73:34)
#loc44 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":75:5)
#loc45 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":75:28)
#loc46 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":71:1)
#loc47 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":75:21)
#loc48 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":75:20)
#loc49 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":76:5)
#loc50 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":88:5)
#loc51 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":77:9)
#loc52 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":77:16)
#loc53 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":79:9)
#loc54 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":86:9)
#loc55 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":79:16)
#loc56 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":79:14)
#loc57 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":79:19)
#loc58 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":79:23)
#loc59 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":79:30)
#loc60 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":79:34)
#loc61 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":79:21)
#loc62 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":80:9)
#loc63 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":81:13)
#loc64 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":85:13)
#loc65 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":81:17)
#loc66 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":81:22)
#loc67 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":81:23)
#loc68 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":81:28)
#loc69 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":82:13)
#loc70 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":83:27)
#loc71 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":83:17)
#loc72 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":84:17)
#loc73 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":79:38)
#loc74 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":79:37)
#loc75 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":87:9)
#loc76 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_connect_socket_64b.c":87:14)
#loc77 = loc(fused[#loc1, #loc2])
#loc78 = loc(fused[#loc4, #loc5])
#loc79 = loc(fused[#loc6, #loc7])
#loc81 = loc(fused[#loc10, #loc11])
#loc82 = loc(fused[#loc12, #loc13])
#loc83 = loc(fused[#loc17, #loc18])
#loc84 = loc(fused[#loc20, #loc21])
#loc85 = loc(fused[#loc23, #loc18])
#loc86 = loc(fused[#loc24, #loc25])
#loc87 = loc(fused[#loc27, #loc28])
#loc88 = loc(fused[#loc29, #loc25])
#loc89 = loc(fused[#loc33, #loc32])
#loc90 = loc(fused[#loc36, #loc37])
#loc91 = loc(fused[#loc38, #loc39])
#loc93 = loc(fused[#loc42, #loc43])
#loc94 = loc(fused[#loc44, #loc45])
#loc95 = loc(fused[#loc49, #loc50])
#loc96 = loc(fused[#loc51, #loc52])
#loc97 = loc(fused[#loc53, #loc54])
#loc98 = loc(fused[#loc56, #loc55])
#loc99 = loc(fused[#loc57, #loc60])
#loc100 = loc(fused[#loc62, #loc54])
#loc101 = loc(fused[#loc63, #loc64])
#loc102 = loc(fused[#loc65, #loc68])
#loc103 = loc(fused[#loc69, #loc64])
#loc104 = loc(fused[#loc74, #loc73])
