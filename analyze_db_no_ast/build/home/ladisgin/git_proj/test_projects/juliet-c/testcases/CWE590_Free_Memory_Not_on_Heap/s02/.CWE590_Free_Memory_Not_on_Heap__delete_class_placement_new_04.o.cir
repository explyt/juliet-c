!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc1 = loc("../../../testcasesupport/std_testcase.h":61:7)
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s02/CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func linkonce_odr  @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc1)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc1)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc1)
    cir.return loc(#loc1)
  } loc(#loc1)
  cir.func private  @printIntLine(!s32i) loc(#loc101)
  cir.func private  @_ZdlPvm(!cir.ptr<!void>, !u64i) extra(#fn_attr1) loc(#loc102)
  cir.func  @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_043badEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc104)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc10)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc105)
    cir.scope {
      %8 = cir.const #cir.int<1> : !s32i loc(#loc14)
      %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc14)
      cir.if %9 {
        cir.scope {
          %10 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["buffer"] {alignment = 1 : i64} loc(#loc109)
          %11 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc110)
          %12 = cir.const #cir.int<8> : !u64i loc(#loc111)
          %13 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc23)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc23)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc111)
          cir.call @_ZN12TwoIntsClassC2Ev(%15) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc21)
          cir.store %15, %11 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc110)
          %16 = cir.const #cir.int<2> : !s32i loc(#loc24)
          %17 = cir.load %11 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc25)
          %18 = cir.get_member %17[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc26)
          cir.store %16, %18 : !s32i, !cir.ptr<!s32i> loc(#loc112)
          %19 = cir.const #cir.int<2> : !s32i loc(#loc27)
          %20 = cir.load %11 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc28)
          %21 = cir.get_member %20[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc29)
          cir.store %19, %21 : !s32i, !cir.ptr<!s32i> loc(#loc113)
          %22 = cir.load %11 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc30)
          cir.store %22, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc114)
        } loc(#loc108)
      } loc(#loc107)
    } loc(#loc106)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc32)
    %3 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc26)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc33)
    cir.call @printIntLine(%4) : (!s32i) -> () loc(#loc34)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc35)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc35)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc36)
    cir.call @_ZdlPvm(%6, %7) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr1) loc(#loc36)
    cir.return loc(#loc7)
  } loc(#loc103)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc115)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc39)
  cir.func private  @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc116)
  cir.func internal private  @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04L8goodG2B1Ev() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc118)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc46)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc119)
    cir.scope {
      %8 = cir.const #cir.int<0> : !s32i loc(#loc50)
      %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc50)
      cir.if %9 {
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc39)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc39)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc54)
      } else {
        cir.scope {
          %10 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc123)
          %11 = cir.const #cir.int<8> : !u64i loc(#loc124)
          %12 = cir.call @_Znwm(%11) : (!u64i) -> !cir.ptr<!void> loc(#loc123)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc124)
          cir.call @_ZN12TwoIntsClassC2Ev(%13) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc58)
          cir.store %13, %10 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc123)
          %14 = cir.const #cir.int<2> : !s32i loc(#loc60)
          %15 = cir.load %10 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc61)
          %16 = cir.get_member %15[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc26)
          cir.store %14, %16 : !s32i, !cir.ptr<!s32i> loc(#loc125)
          %17 = cir.const #cir.int<2> : !s32i loc(#loc62)
          %18 = cir.load %10 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc63)
          %19 = cir.get_member %18[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc29)
          cir.store %17, %19 : !s32i, !cir.ptr<!s32i> loc(#loc126)
          %20 = cir.load %10 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc64)
          cir.store %20, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc127)
        } loc(#loc122)
      } loc(#loc121)
    } loc(#loc120)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc66)
    %3 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc26)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc67)
    cir.call @printIntLine(%4) : (!s32i) -> () loc(#loc68)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc69)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc69)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc70)
    cir.call @_ZdlPvm(%6, %7) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr1) loc(#loc70)
    cir.return loc(#loc43)
  } loc(#loc117)
  cir.func internal private  @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04L8goodG2B2Ev() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc129)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc75)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc130)
    cir.scope {
      %8 = cir.const #cir.int<1> : !s32i loc(#loc79)
      %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc79)
      cir.if %9 {
        cir.scope {
          %10 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc134)
          %11 = cir.const #cir.int<8> : !u64i loc(#loc135)
          %12 = cir.call @_Znwm(%11) : (!u64i) -> !cir.ptr<!void> loc(#loc134)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc135)
          cir.call @_ZN12TwoIntsClassC2Ev(%13) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc84)
          cir.store %13, %10 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc134)
          %14 = cir.const #cir.int<2> : !s32i loc(#loc86)
          %15 = cir.load %10 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc87)
          %16 = cir.get_member %15[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc26)
          cir.store %14, %16 : !s32i, !cir.ptr<!s32i> loc(#loc136)
          %17 = cir.const #cir.int<2> : !s32i loc(#loc88)
          %18 = cir.load %10 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc89)
          %19 = cir.get_member %18[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc29)
          cir.store %17, %19 : !s32i, !cir.ptr<!s32i> loc(#loc137)
          %20 = cir.load %10 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc90)
          cir.store %20, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc138)
        } loc(#loc133)
      } loc(#loc132)
    } loc(#loc131)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc92)
    %3 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc26)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc93)
    cir.call @printIntLine(%4) : (!s32i) -> () loc(#loc94)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc95)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc95)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc96)
    cir.call @_ZdlPvm(%6, %7) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr1) loc(#loc96)
    cir.return loc(#loc72)
  } loc(#loc128)
  cir.func  @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_044goodEv() extra(#fn_attr2) {
    cir.call @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04L8goodG2B1Ev() : () -> () loc(#loc99)
    cir.call @_ZN61CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04L8goodG2B2Ev() : () -> () loc(#loc100)
    cir.return loc(#loc98)
  } loc(#loc139)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s02/CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":0:0)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc4 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":140:1)
#loc5 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":141:41)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":32:1)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":50:1)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":34:5)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":34:20)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":35:12)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":35:5)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":36:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":46:5)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":36:8)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":37:5)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":38:9)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":45:9)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":40:13)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":40:45)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":41:13)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":41:53)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":41:41)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":41:45)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":42:34)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":42:13)
#loc26 = loc("../../../testcasesupport/std_testcase.h":64:13)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":43:34)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":43:13)
#loc29 = loc("../../../testcasesupport/std_testcase.h":65:13)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":44:20)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":44:13)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":47:18)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":47:24)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":47:5)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":49:12)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":32:6)
#loc37 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc38 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":64:19)
#loc40 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc41 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":57:1)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":79:1)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":59:5)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":59:20)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":60:12)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":60:5)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":61:5)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":75:5)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":61:8)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":62:5)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":65:5)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":67:5)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":64:9)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":68:9)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":74:9)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":70:13)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":70:45)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":70:41)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":71:34)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":71:13)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":72:34)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":72:13)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":73:20)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":73:13)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":76:18)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":76:24)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":76:5)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":78:12)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":57:13)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":82:1)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":99:1)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":84:5)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":84:20)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":85:12)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":85:5)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":86:5)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":95:5)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":86:8)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":87:5)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":88:9)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":94:9)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":90:13)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":90:45)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":90:41)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":91:34)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":91:13)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":92:34)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":92:13)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":93:20)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":93:13)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":96:18)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":96:24)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":96:5)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":98:12)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":82:13)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":101:1)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":105:1)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":103:5)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__delete_class_placement_new_04.cpp":104:5)
#loc101 = loc(fused[#loc2, #loc3])
#loc102 = loc(fused[#loc4, #loc5])
#loc103 = loc(fused[#loc6, #loc7])
#loc104 = loc(fused[#loc8, #loc9])
#loc105 = loc(fused[#loc11, #loc10])
#loc106 = loc(fused[#loc12, #loc13])
#loc107 = loc(fused[#loc15, #loc13])
#loc108 = loc(fused[#loc16, #loc17])
#loc109 = loc(fused[#loc18, #loc19])
#loc110 = loc(fused[#loc20, #loc21])
#loc111 = loc(fused[#loc22, #loc21])
#loc112 = loc(fused[#loc25, #loc24])
#loc113 = loc(fused[#loc28, #loc27])
#loc114 = loc(fused[#loc31, #loc30])
#loc115 = loc(fused[#loc37, #loc38])
#loc116 = loc(fused[#loc40, #loc41])
#loc117 = loc(fused[#loc42, #loc43])
#loc118 = loc(fused[#loc44, #loc45])
#loc119 = loc(fused[#loc47, #loc46])
#loc120 = loc(fused[#loc48, #loc49])
#loc121 = loc(fused[#loc51, #loc52, #loc53, #loc49])
#loc122 = loc(fused[#loc55, #loc56])
#loc123 = loc(fused[#loc57, #loc58])
#loc124 = loc(fused[#loc59, #loc58])
#loc125 = loc(fused[#loc61, #loc60])
#loc126 = loc(fused[#loc63, #loc62])
#loc127 = loc(fused[#loc65, #loc64])
#loc128 = loc(fused[#loc71, #loc72])
#loc129 = loc(fused[#loc73, #loc74])
#loc130 = loc(fused[#loc76, #loc75])
#loc131 = loc(fused[#loc77, #loc78])
#loc132 = loc(fused[#loc80, #loc78])
#loc133 = loc(fused[#loc81, #loc82])
#loc134 = loc(fused[#loc83, #loc84])
#loc135 = loc(fused[#loc85, #loc84])
#loc136 = loc(fused[#loc87, #loc86])
#loc137 = loc(fused[#loc89, #loc88])
#loc138 = loc(fused[#loc91, #loc90])
#loc139 = loc(fused[#loc97, #loc98])
