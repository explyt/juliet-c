!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc119)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc120)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc122)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc123)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen"] {alignment = 8 : i64} loc(#loc124)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc125)
    %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc126)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc16)
    cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc127)
    cir.br ^bb1 loc(#loc128)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc128)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc20)
    cir.brcond %7 ^bb3, ^bb4 loc(#loc20)
  ^bb3:  // pred: ^bb2
    %8 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc21)
    %10 = cir.const #cir.int<65> : !s32i loc(#loc22)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc23)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc23)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc23)
    cir.libc.memset %14 bytes from %9 set to %10 : !cir.ptr<!void>, !s32i, !u64i loc(#loc129)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc27)
    %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc27)
    %17 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
    %18 = cir.const #cir.int<100> : !s32i loc(#loc29)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc29)
    %21 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %20 : !s32i), !cir.ptr<!s8i> loc(#loc31)
    cir.store %16, %21 : !s8i, !cir.ptr<!s8i> loc(#loc130)
    cir.br ^bb4 loc(#loc32)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc19)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc131)
  ^bb6:  // pred: ^bb5
    %22 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc122)
    cir.store %22, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc122)
    %23 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc35)
    %24 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    %25 = cir.call @strlen(%24) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc35)
    cir.store %25, %2 : !u64i, !cir.ptr<!u64i> loc(#loc132)
    cir.br ^bb7 loc(#loc133)
  ^bb7:  // pred: ^bb6
    %26 = cir.const #cir.int<0> : !s32i loc(#loc41)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc41)
    cir.store %27, %1 : !u64i, !cir.ptr<!u64i> loc(#loc134)
    cir.br ^bb8 loc(#loc133)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %28 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc43)
    %29 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc44)
    %30 = cir.cmp(lt, %28, %29) : !u64i, !cir.bool loc(#loc135)
    cir.brcond %30 ^bb9, ^bb13 loc(#loc45)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc136)
  ^bb10:  // pred: ^bb9
    %31 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
    %32 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc48)
    %33 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %32 : !u64i), !cir.ptr<!s8i> loc(#loc49)
    %34 = cir.load %33 : !cir.ptr<!s8i>, !s8i loc(#loc47)
    %35 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc50)
    %36 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc51)
    %37 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %35 : !u64i), !cir.ptr<!s8i> loc(#loc51)
    cir.store %34, %37 : !s8i, !cir.ptr<!s8i> loc(#loc137)
    cir.br ^bb11 loc(#loc40)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc40)
  ^bb12:  // pred: ^bb11
    %38 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc52)
    %39 = cir.unary(inc, %38) : !u64i, !u64i loc(#loc53)
    cir.store %39, %1 : !u64i, !cir.ptr<!u64i> loc(#loc138)
    cir.br ^bb8 loc(#loc133)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc40)
  ^bb14:  // pred: ^bb13
    %40 = cir.const #cir.int<0> : !s32i loc(#loc54)
    %41 = cir.cast(integral, %40 : !s32i), !s8i loc(#loc54)
    %42 = cir.const #cir.int<50> : !s32i loc(#loc55)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %44 = cir.binop(sub, %42, %43) nsw : !s32i loc(#loc55)
    %45 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc57)
    %46 = cir.ptr_stride(%45 : !cir.ptr<!s8i>, %44 : !s32i), !cir.ptr<!s8i> loc(#loc57)
    cir.store %41, %46 : !s8i, !cir.ptr<!s8i> loc(#loc139)
    %47 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%47) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    cir.br ^bb15 loc(#loc34)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc6)
  } loc(#loc121)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc141)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc62)
    cir.return loc(#loc61)
  } loc(#loc140)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc143)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc144)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen"] {alignment = 8 : i64} loc(#loc145)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc146)
    %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc147)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc75)
    cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc148)
    cir.br ^bb1 loc(#loc149)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc149)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<1> : !s32i loc(#loc79)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc79)
    cir.brcond %7 ^bb3, ^bb4 loc(#loc79)
  ^bb3:  // pred: ^bb2
    %8 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc80)
    %10 = cir.const #cir.int<65> : !s32i loc(#loc81)
    %11 = cir.const #cir.int<50> : !s32i loc(#loc82)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc83)
    %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc82)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc82)
    cir.libc.memset %14 bytes from %9 set to %10 : !cir.ptr<!void>, !s32i, !u64i loc(#loc150)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc86)
    %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc86)
    %17 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
    %18 = cir.const #cir.int<50> : !s32i loc(#loc88)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc89)
    %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc88)
    %21 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %20 : !s32i), !cir.ptr<!s8i> loc(#loc90)
    cir.store %16, %21 : !s8i, !cir.ptr<!s8i> loc(#loc151)
    cir.br ^bb4 loc(#loc91)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc78)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc152)
  ^bb6:  // pred: ^bb5
    %22 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc143)
    cir.store %22, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc143)
    %23 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc94)
    %24 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
    %25 = cir.call @strlen(%24) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc94)
    cir.store %25, %2 : !u64i, !cir.ptr<!u64i> loc(#loc153)
    cir.br ^bb7 loc(#loc154)
  ^bb7:  // pred: ^bb6
    %26 = cir.const #cir.int<0> : !s32i loc(#loc100)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc100)
    cir.store %27, %1 : !u64i, !cir.ptr<!u64i> loc(#loc155)
    cir.br ^bb8 loc(#loc154)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %28 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc102)
    %29 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc103)
    %30 = cir.cmp(lt, %28, %29) : !u64i, !cir.bool loc(#loc156)
    cir.brcond %30 ^bb9, ^bb13 loc(#loc104)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc157)
  ^bb10:  // pred: ^bb9
    %31 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
    %32 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc107)
    %33 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %32 : !u64i), !cir.ptr<!s8i> loc(#loc108)
    %34 = cir.load %33 : !cir.ptr<!s8i>, !s8i loc(#loc106)
    %35 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc109)
    %36 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc110)
    %37 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %35 : !u64i), !cir.ptr<!s8i> loc(#loc110)
    cir.store %34, %37 : !s8i, !cir.ptr<!s8i> loc(#loc158)
    cir.br ^bb11 loc(#loc99)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc99)
  ^bb12:  // pred: ^bb11
    %38 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc111)
    %39 = cir.unary(inc, %38) : !u64i, !u64i loc(#loc112)
    cir.store %39, %1 : !u64i, !cir.ptr<!u64i> loc(#loc159)
    cir.br ^bb8 loc(#loc154)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc99)
  ^bb14:  // pred: ^bb13
    %40 = cir.const #cir.int<0> : !s32i loc(#loc113)
    %41 = cir.cast(integral, %40 : !s32i), !s8i loc(#loc113)
    %42 = cir.const #cir.int<50> : !s32i loc(#loc114)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc115)
    %44 = cir.binop(sub, %42, %43) nsw : !s32i loc(#loc114)
    %45 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc116)
    %46 = cir.ptr_stride(%45 : !cir.ptr<!s8i>, %44 : !s32i), !cir.ptr<!s8i> loc(#loc116)
    cir.store %41, %46 : !s8i, !cir.ptr<!s8i> loc(#loc160)
    %47 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
    cir.call @printLine(%47) : (!cir.ptr<!s8i>) -> () loc(#loc118)
    cir.br ^bb15 loc(#loc93)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc65)
  } loc(#loc142)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":23:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":47:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":36:9)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":36:25)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":37:9)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":37:16)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":37:19)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":25:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":25:12)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":26:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":26:24)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":27:12)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":27:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":28:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":34:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":28:11)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":31:16)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":31:22)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":31:27)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":31:31)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":31:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":31:32)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":32:23)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":32:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":32:14)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":32:18)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":32:19)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":33:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":35:5)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":46:5)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":38:19)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":38:26)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":38:9)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":38:30)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":40:9)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":43:9)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":40:18)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":40:14)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":40:21)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":40:25)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":40:23)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":41:9)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":42:23)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":42:28)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":42:29)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":42:18)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":42:13)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":40:35)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":40:34)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":44:22)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":44:14)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":44:17)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":44:9)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":45:19)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":45:9)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":80:1)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":83:1)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":82:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":82:13)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":54:1)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":78:1)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":67:9)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":67:25)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":68:9)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":68:16)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":68:19)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":56:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":56:12)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":57:5)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":57:24)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":58:12)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":58:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":59:5)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":65:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":59:11)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":62:16)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":62:22)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":62:27)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":62:30)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":62:9)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":62:31)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":63:22)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":63:9)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":63:14)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":63:17)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":63:18)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":64:9)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":66:5)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":77:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":69:19)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":69:26)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":69:9)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":69:30)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":71:9)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":74:9)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":71:18)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":71:14)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":71:21)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":71:25)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":71:23)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":72:9)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":73:23)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":73:28)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":73:29)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":73:18)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":73:13)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":71:35)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":71:34)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":75:22)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":75:14)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":75:17)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":75:9)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":76:19)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_16.c":76:9)
#loc119 = loc(fused[#loc1, #loc2])
#loc120 = loc(fused[#loc3, #loc4])
#loc121 = loc(fused[#loc5, #loc6])
#loc122 = loc(fused[#loc7, #loc8])
#loc123 = loc(fused[#loc9, #loc10])
#loc124 = loc(fused[#loc9, #loc11])
#loc125 = loc(fused[#loc12, #loc13])
#loc126 = loc(fused[#loc14, #loc15])
#loc127 = loc(fused[#loc17, #loc16])
#loc128 = loc(fused[#loc18, #loc19])
#loc129 = loc(fused[#loc25, #loc26])
#loc130 = loc(fused[#loc28, #loc27])
#loc131 = loc(fused[#loc33, #loc34])
#loc132 = loc(fused[#loc37, #loc38])
#loc133 = loc(fused[#loc39, #loc40])
#loc134 = loc(fused[#loc42, #loc41])
#loc135 = loc(fused[#loc43, #loc44])
#loc136 = loc(fused[#loc46, #loc40])
#loc137 = loc(fused[#loc51, #loc49])
#loc138 = loc(fused[#loc53, #loc52])
#loc139 = loc(fused[#loc57, #loc54])
#loc140 = loc(fused[#loc60, #loc61])
#loc141 = loc(fused[#loc62, #loc63])
#loc142 = loc(fused[#loc64, #loc65])
#loc143 = loc(fused[#loc66, #loc67])
#loc144 = loc(fused[#loc68, #loc69])
#loc145 = loc(fused[#loc68, #loc70])
#loc146 = loc(fused[#loc71, #loc72])
#loc147 = loc(fused[#loc73, #loc74])
#loc148 = loc(fused[#loc76, #loc75])
#loc149 = loc(fused[#loc77, #loc78])
#loc150 = loc(fused[#loc84, #loc85])
#loc151 = loc(fused[#loc87, #loc86])
#loc152 = loc(fused[#loc92, #loc93])
#loc153 = loc(fused[#loc96, #loc97])
#loc154 = loc(fused[#loc98, #loc99])
#loc155 = loc(fused[#loc101, #loc100])
#loc156 = loc(fused[#loc102, #loc103])
#loc157 = loc(fused[#loc105, #loc99])
#loc158 = loc(fused[#loc110, #loc108])
#loc159 = loc(fused[#loc112, #loc111])
#loc160 = loc(fused[#loc116, #loc113])
