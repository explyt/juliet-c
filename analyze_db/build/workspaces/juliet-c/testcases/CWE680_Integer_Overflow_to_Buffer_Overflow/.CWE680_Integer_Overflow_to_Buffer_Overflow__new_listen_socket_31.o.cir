!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc237)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc238)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc239)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc240)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc241)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc242)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc243)
  cir.func private @close(!s32i) -> !s32i loc(#loc244)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc245)
  cir.func private @printIntLine(!s32i) loc(#loc246)
  cir.func @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_313badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc248)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc26)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc249)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc251)
      %4 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc252)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc253)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc254)
      %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc255)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc35)
      %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc35)
      cir.store %9, %5 : !s32i, !cir.ptr<!s32i> loc(#loc253)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc37)
      %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc37)
      cir.store %11, %6 : !s32i, !cir.ptr<!s32i> loc(#loc254)
      cir.scope {
        cir.do {
          cir.scope {
            %12 = cir.const #cir.int<2> : !s32i loc(#loc44)
            %13 = cir.const #cir.int<1> : !u32i loc(#loc45)
            %14 = cir.cast(integral, %13 : !u32i), !s32i loc(#loc45)
            %15 = cir.const #cir.int<6> : !u32i loc(#loc46)
            %16 = cir.cast(integral, %15 : !u32i), !s32i loc(#loc46)
            %17 = cir.call @socket(%12, %14, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc47)
            cir.store %17, %5 : !s32i, !cir.ptr<!s32i> loc(#loc258)
            cir.scope {
              %58 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc52)
              %59 = cir.const #cir.int<1> : !s32i loc(#loc53)
              %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc53)
              %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc260)
              cir.if %61 {
                cir.break loc(#loc55)
              } loc(#loc261)
            } loc(#loc259)
            %18 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc262)
            %19 = cir.const #cir.int<0> : !s32i loc(#loc58)
            %20 = cir.const #cir.int<16> : !u64i loc(#loc263)
            cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc264)
            %21 = cir.const #cir.int<2> : !s32i loc(#loc63)
            %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc63)
            %23 = cir.get_member %4[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc64)
            cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc265)
            %24 = cir.const #cir.int<0> : !s32i loc(#loc66)
            %25 = cir.cast(integral, %24 : !s32i), !u32i loc(#loc66)
            %26 = cir.get_member %4[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc67)
            %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc68)
            cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc266)
            %28 = cir.const #cir.int<27015> : !s32i loc(#loc70)
            %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc70)
            %30 = cir.call @htons(%29) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc71)
            %31 = cir.get_member %4[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc72)
            cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc267)
            cir.scope {
              %58 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc77)
              %59 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc269)
              %60 = cir.const #cir.int<16> : !u64i loc(#loc270)
              %61 = cir.cast(integral, %60 : !u64i), !u32i loc(#loc270)
              %62 = cir.call @bind(%58, %59, %61) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc82)
              %63 = cir.const #cir.int<1> : !s32i loc(#loc83)
              %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc83)
              %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc271)
              cir.if %65 {
                cir.break loc(#loc85)
              } loc(#loc272)
            } loc(#loc268)
            cir.scope {
              %58 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc88)
              %59 = cir.const #cir.int<5> : !s32i loc(#loc89)
              %60 = cir.call @listen(%58, %59) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc90)
              %61 = cir.const #cir.int<1> : !s32i loc(#loc91)
              %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc91)
              %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc274)
              cir.if %63 {
                cir.break loc(#loc93)
              } loc(#loc275)
            } loc(#loc273)
            %32 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc94)
            %33 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc95)
            %34 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc96)
            %35 = cir.call @accept(%32, %33, %34) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc97)
            cir.store %35, %6 : !s32i, !cir.ptr<!s32i> loc(#loc276)
            cir.scope {
              %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc102)
              %59 = cir.const #cir.int<1> : !s32i loc(#loc103)
              %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc103)
              %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc278)
              cir.if %61 {
                cir.break loc(#loc105)
              } loc(#loc279)
            } loc(#loc277)
            %36 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc106)
            %37 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc107)
            %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc107)
            %39 = cir.const #cir.int<3> : !s32i loc(#loc108)
            %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc108)
            %41 = cir.const #cir.int<4> : !u64i loc(#loc108)
            %42 = cir.binop(mul, %40, %41) : !u64i loc(#loc108)
            %43 = cir.const #cir.int<2> : !s32i loc(#loc108)
            %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc108)
            %45 = cir.binop(add, %42, %44) : !u64i loc(#loc108)
            %46 = cir.const #cir.int<1> : !s32i loc(#loc109)
            %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc109)
            %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc280)
            %49 = cir.const #cir.int<0> : !s32i loc(#loc110)
            %50 = cir.call @recv(%36, %38, %48, %49) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc111)
            %51 = cir.cast(integral, %50 : !s64i), !s32i loc(#loc111)
            cir.store %51, %3 : !s32i, !cir.ptr<!s32i> loc(#loc281)
            cir.scope {
              %58 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc116)
              %59 = cir.const #cir.int<1> : !s32i loc(#loc117)
              %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc117)
              %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc283)
              %62 = cir.ternary(%61, true {
                %63 = cir.const #true loc(#loc118)
                cir.yield %63 : !cir.bool loc(#loc118)
              }, false {
                %63 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc119)
                %64 = cir.const #cir.int<0> : !s32i loc(#loc120)
                %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc284)
                %66 = cir.ternary(%65, true {
                  %67 = cir.const #true loc(#loc118)
                  cir.yield %67 : !cir.bool loc(#loc118)
                }, false {
                  %67 = cir.const #false loc(#loc118)
                  cir.yield %67 : !cir.bool loc(#loc118)
                }) : (!cir.bool) -> !cir.bool loc(#loc118)
                cir.yield %66 : !cir.bool loc(#loc118)
              }) : (!cir.bool) -> !cir.bool loc(#loc118)
              cir.if %62 {
                cir.break loc(#loc122)
              } loc(#loc285)
            } loc(#loc282)
            %52 = cir.const #cir.int<0> : !s8i loc(#loc123)
            %53 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc124)
            %54 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc125)
            %55 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %53 : !s32i), !cir.ptr<!s8i> loc(#loc125)
            cir.store %52, %55 : !s8i, !cir.ptr<!s8i> loc(#loc286)
            %56 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc126)
            %57 = cir.call @atoi(%56) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc127)
            cir.store %57, %0 : !s32i, !cir.ptr<!s32i> loc(#loc287)
          } loc(#loc257)
          cir.yield loc(#loc41)
        } while {
          %12 = cir.const #cir.int<0> : !s32i loc(#loc130)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc130)
          cir.condition(%13) loc(#loc130)
        } loc(#loc256)
      } loc(#loc256)
      cir.scope {
        %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc133)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc134)
        %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc134)
        %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc289)
        cir.if %15 {
          %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc136)
          %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc137)
        } loc(#loc290)
      } loc(#loc288)
      cir.scope {
        %12 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc140)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc141)
        %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc141)
        %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc292)
        cir.if %15 {
          %16 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc143)
          %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc144)
        } loc(#loc293)
      } loc(#loc291)
    } loc(#loc250)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc295)
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc296)
      %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc148)
      cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc295)
      %6 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc150)
      cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc296)
      cir.scope {
        %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc298)
        %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc299)
        %9 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc300)
        %10 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc158)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc158)
        %12 = cir.const #cir.int<4> : !u64i loc(#loc301)
        %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc302)
        cir.store %13, %7 : !u64i, !cir.ptr<!u64i> loc(#loc303)
        %14 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc162)
        %15 = cir.call @_Znam(%14) : (!u64i) -> !cir.ptr<!void> loc(#loc163)
        %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc304)
        %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc304)
        cir.store %17, %9 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc305)
        cir.scope {
          %23 = cir.const #cir.int<0> : !s32i loc(#loc169)
          %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc169)
          cir.store %24, %8 : !u64i, !cir.ptr<!u64i> loc(#loc307)
          cir.for : cond {
            %25 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc171)
            %26 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc172)
            %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc172)
            %28 = cir.cmp(lt, %25, %27) : !u64i, !cir.bool loc(#loc308)
            cir.condition(%28) loc(#loc308)
          } body {
            cir.scope {
              %25 = cir.const #cir.int<0> : !s32i loc(#loc174)
              %26 = cir.load %9 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc175)
              %27 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc176)
              %28 = cir.ptr_stride(%26 : !cir.ptr<!s32i>, %27 : !u64i), !cir.ptr<!s32i> loc(#loc177)
              cir.store %25, %28 : !s32i, !cir.ptr<!s32i> loc(#loc310)
            } loc(#loc309)
            cir.yield loc(#loc168)
          } step {
            %25 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc178)
            %26 = cir.unary(inc, %25) : !u64i, !u64i loc(#loc179)
            cir.store %26, %8 : !u64i, !cir.ptr<!u64i> loc(#loc311)
            cir.yield loc(#loc306)
          } loc(#loc306)
        } loc(#loc306)
        %18 = cir.load %9 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc180)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc181)
        %20 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc182)
        %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc180)
        cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc183)
        %22 = cir.load %9 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc184)
        cir.delete.array %22 : <!s32i> loc(#loc184)
      } loc(#loc297)
    } loc(#loc294)
    cir.return loc(#loc22)
  } loc(#loc247)
  cir.func internal private @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc313)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc189)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc190)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc314)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc192)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc315)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc317)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc318)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc197)
      cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc317)
      %7 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc199)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc318)
      cir.scope {
        %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc320)
        %9 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc321)
        %10 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc322)
        %11 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc207)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc207)
        %13 = cir.const #cir.int<4> : !u64i loc(#loc323)
        %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc324)
        cir.store %14, %8 : !u64i, !cir.ptr<!u64i> loc(#loc325)
        %15 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc211)
        %16 = cir.call @_Znam(%15) : (!u64i) -> !cir.ptr<!void> loc(#loc212)
        %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc326)
        %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc326)
        cir.store %18, %10 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc327)
        cir.scope {
          %24 = cir.const #cir.int<0> : !s32i loc(#loc218)
          %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc218)
          cir.store %25, %9 : !u64i, !cir.ptr<!u64i> loc(#loc329)
          cir.for : cond {
            %26 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc220)
            %27 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc221)
            %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc221)
            %29 = cir.cmp(lt, %26, %28) : !u64i, !cir.bool loc(#loc330)
            cir.condition(%29) loc(#loc330)
          } body {
            cir.scope {
              %26 = cir.const #cir.int<0> : !s32i loc(#loc223)
              %27 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc224)
              %28 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc225)
              %29 = cir.ptr_stride(%27 : !cir.ptr<!s32i>, %28 : !u64i), !cir.ptr<!s32i> loc(#loc226)
              cir.store %26, %29 : !s32i, !cir.ptr<!s32i> loc(#loc332)
            } loc(#loc331)
            cir.yield loc(#loc217)
          } step {
            %26 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc227)
            %27 = cir.unary(inc, %26) : !u64i, !u64i loc(#loc228)
            cir.store %27, %9 : !u64i, !cir.ptr<!u64i> loc(#loc333)
            cir.yield loc(#loc328)
          } loc(#loc328)
        } loc(#loc328)
        %19 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc229)
        %20 = cir.const #cir.int<0> : !s32i loc(#loc230)
        %21 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc231)
        %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc229)
        cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc232)
        %23 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc233)
        cir.delete.array %23 : <!s32i> loc(#loc233)
      } loc(#loc319)
    } loc(#loc316)
    cir.return loc(#loc186)
  } loc(#loc312)
  cir.func @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_314goodEv() extra(#fn_attr1) {
    cir.call @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31L7goodG2BEv() : () -> () loc(#loc236)
    cir.return loc(#loc235)
  } loc(#loc334)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":402:1)
#loc4 = loc("/usr/include/netinet/in.h":403:40)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc18 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc19 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc20 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":46:1)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":137:1)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":48:5)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":48:9)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":50:13)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":50:12)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":50:5)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":51:5)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":119:5)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":56:9)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":56:13)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":57:9)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":57:28)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":58:9)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":58:31)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":59:9)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":59:31)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":60:9)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":60:41)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":61:9)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":104:17)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":62:9)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":103:9)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":71:35)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":71:44)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":71:57)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":71:28)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":71:13)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":71:68)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":72:13)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":75:13)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":72:17)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":72:33)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":73:13)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":74:17)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":76:20)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":76:21)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":76:30)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":76:33)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":76:47)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":76:13)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":76:48)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":77:34)
#loc64 = loc("/usr/include/netinet/in.h":249:5)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":77:13)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":78:39)
#loc67 = loc("/usr/include/netinet/in.h":251:20)
#loc68 = loc("/usr/include/netinet/in.h":33:15)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":78:13)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":79:38)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":79:32)
#loc72 = loc("/usr/include/netinet/in.h":250:15)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":79:13)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":79:46)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":80:13)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":83:13)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":80:22)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":80:54)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":80:55)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":80:64)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":80:78)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":80:17)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":80:84)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":81:13)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":82:17)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":84:13)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":87:13)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":84:24)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":84:38)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":84:17)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":84:57)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":85:13)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":86:17)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":88:35)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":88:49)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":88:55)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":88:28)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":88:13)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":88:59)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":89:13)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":92:13)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":89:17)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":89:33)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":90:13)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":91:17)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":94:31)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":94:45)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":94:58)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":94:76)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":94:79)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":94:26)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":94:13)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":94:80)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":95:13)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":98:13)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":95:17)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":95:31)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":95:44)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":95:47)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":95:61)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":96:13)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":97:17)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":100:39)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":100:25)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":100:13)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":102:25)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":102:20)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":102:13)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":102:36)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":104:16)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":105:9)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":108:9)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":105:13)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":105:29)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":106:9)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":107:26)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":107:13)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":109:9)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":112:9)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":109:13)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":109:29)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":110:9)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":111:26)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":111:13)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":120:5)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":136:5)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":121:9)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":121:24)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":122:9)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":122:20)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":123:9)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":135:9)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":124:13)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":124:20)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":124:30)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":125:13)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":125:18)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":127:25)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":127:32)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":127:42)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":127:13)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":128:41)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":46:6)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":128:32)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":128:50)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":128:13)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":129:13)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":132:13)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":129:22)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":129:18)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":129:25)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":129:37)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":130:13)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":131:33)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":131:17)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":131:28)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":131:29)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":129:44)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":129:43)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":133:26)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":133:37)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":133:38)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":133:13)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":134:23)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":144:1)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":168:1)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":146:5)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":146:9)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":148:13)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":148:12)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":148:5)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":150:12)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":150:5)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":151:5)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":167:5)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":152:9)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":152:24)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":153:9)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":153:20)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":154:9)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":166:9)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":155:13)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":155:20)
#loc204 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":155:30)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":156:13)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":156:18)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":158:25)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":158:32)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":158:42)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":158:13)
#loc211 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":159:41)
#loc212 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":144:13)
#loc213 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":159:32)
#loc214 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":159:50)
#loc215 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":159:13)
#loc216 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":160:13)
#loc217 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":163:13)
#loc218 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":160:22)
#loc219 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":160:18)
#loc220 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":160:25)
#loc221 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":160:37)
#loc222 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":161:13)
#loc223 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":162:33)
#loc224 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":162:17)
#loc225 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":162:28)
#loc226 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":162:29)
#loc227 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":160:44)
#loc228 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":160:43)
#loc229 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":164:26)
#loc230 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":164:37)
#loc231 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":164:38)
#loc232 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":164:13)
#loc233 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":165:23)
#loc234 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":170:1)
#loc235 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":173:1)
#loc236 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_31.cpp":172:5)
#loc237 = loc(fused[#loc1, #loc2])
#loc238 = loc(fused[#loc3, #loc4])
#loc239 = loc(fused[#loc5, #loc6])
#loc240 = loc(fused[#loc7, #loc8])
#loc241 = loc(fused[#loc9, #loc10])
#loc242 = loc(fused[#loc11, #loc12])
#loc243 = loc(fused[#loc13, #loc14])
#loc244 = loc(fused[#loc15, #loc16])
#loc245 = loc(fused[#loc17, #loc18])
#loc246 = loc(fused[#loc19, #loc20])
#loc247 = loc(fused[#loc21, #loc22])
#loc248 = loc(fused[#loc23, #loc24])
#loc249 = loc(fused[#loc27, #loc25])
#loc250 = loc(fused[#loc28, #loc29])
#loc251 = loc(fused[#loc30, #loc31])
#loc252 = loc(fused[#loc32, #loc33])
#loc253 = loc(fused[#loc34, #loc35])
#loc254 = loc(fused[#loc36, #loc37])
#loc255 = loc(fused[#loc38, #loc39])
#loc256 = loc(fused[#loc40, #loc41])
#loc257 = loc(fused[#loc42, #loc43])
#loc258 = loc(fused[#loc48, #loc49])
#loc259 = loc(fused[#loc50, #loc51])
#loc260 = loc(fused[#loc52, #loc53])
#loc261 = loc(fused[#loc54, #loc51])
#loc262 = loc(fused[#loc56, #loc57])
#loc263 = loc(fused[#loc59, #loc60])
#loc264 = loc(fused[#loc61, #loc62])
#loc265 = loc(fused[#loc65, #loc63])
#loc266 = loc(fused[#loc69, #loc66])
#loc267 = loc(fused[#loc73, #loc74])
#loc268 = loc(fused[#loc75, #loc76])
#loc269 = loc(fused[#loc78, #loc79])
#loc270 = loc(fused[#loc80, #loc81])
#loc271 = loc(fused[#loc82, #loc83])
#loc272 = loc(fused[#loc84, #loc76])
#loc273 = loc(fused[#loc86, #loc87])
#loc274 = loc(fused[#loc90, #loc91])
#loc275 = loc(fused[#loc92, #loc87])
#loc276 = loc(fused[#loc98, #loc99])
#loc277 = loc(fused[#loc100, #loc101])
#loc278 = loc(fused[#loc102, #loc103])
#loc279 = loc(fused[#loc104, #loc101])
#loc280 = loc(fused[#loc108, #loc109])
#loc281 = loc(fused[#loc112, #loc113])
#loc282 = loc(fused[#loc114, #loc115])
#loc283 = loc(fused[#loc116, #loc117])
#loc284 = loc(fused[#loc119, #loc120])
#loc285 = loc(fused[#loc121, #loc115])
#loc286 = loc(fused[#loc125, #loc123])
#loc287 = loc(fused[#loc128, #loc129])
#loc288 = loc(fused[#loc131, #loc132])
#loc289 = loc(fused[#loc133, #loc134])
#loc290 = loc(fused[#loc135, #loc132])
#loc291 = loc(fused[#loc138, #loc139])
#loc292 = loc(fused[#loc140, #loc141])
#loc293 = loc(fused[#loc142, #loc139])
#loc294 = loc(fused[#loc145, #loc146])
#loc295 = loc(fused[#loc147, #loc148])
#loc296 = loc(fused[#loc149, #loc150])
#loc297 = loc(fused[#loc151, #loc152])
#loc298 = loc(fused[#loc153, #loc154])
#loc299 = loc(fused[#loc153, #loc155])
#loc300 = loc(fused[#loc156, #loc157])
#loc301 = loc(fused[#loc159, #loc160])
#loc302 = loc(fused[#loc158, #loc160])
#loc303 = loc(fused[#loc161, #loc160])
#loc304 = loc(fused[#loc164, #loc165])
#loc305 = loc(fused[#loc166, #loc165])
#loc306 = loc(fused[#loc167, #loc168])
#loc307 = loc(fused[#loc170, #loc169])
#loc308 = loc(fused[#loc171, #loc172])
#loc309 = loc(fused[#loc173, #loc168])
#loc310 = loc(fused[#loc175, #loc174])
#loc311 = loc(fused[#loc179, #loc178])
#loc312 = loc(fused[#loc185, #loc186])
#loc313 = loc(fused[#loc187, #loc188])
#loc314 = loc(fused[#loc191, #loc189])
#loc315 = loc(fused[#loc193, #loc192])
#loc316 = loc(fused[#loc194, #loc195])
#loc317 = loc(fused[#loc196, #loc197])
#loc318 = loc(fused[#loc198, #loc199])
#loc319 = loc(fused[#loc200, #loc201])
#loc320 = loc(fused[#loc202, #loc203])
#loc321 = loc(fused[#loc202, #loc204])
#loc322 = loc(fused[#loc205, #loc206])
#loc323 = loc(fused[#loc208, #loc209])
#loc324 = loc(fused[#loc207, #loc209])
#loc325 = loc(fused[#loc210, #loc209])
#loc326 = loc(fused[#loc213, #loc214])
#loc327 = loc(fused[#loc215, #loc214])
#loc328 = loc(fused[#loc216, #loc217])
#loc329 = loc(fused[#loc219, #loc218])
#loc330 = loc(fused[#loc220, #loc221])
#loc331 = loc(fused[#loc222, #loc217])
#loc332 = loc(fused[#loc224, #loc223])
#loc333 = loc(fused[#loc228, #loc227])
#loc334 = loc(fused[#loc234, #loc235])
