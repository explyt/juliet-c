!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
module @"/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_16.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc90)
  cir.func private @printHexCharLine(!s8i) loc(#loc91)
  cir.func @_ZN31CWE401_Memory_Leak__new_char_163badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc93)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc9)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc94)
    cir.br ^bb1 loc(#loc95)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc95)
  ^bb2:  // 2 preds: ^bb1, ^bb5
    %2 = cir.const #cir.int<1> : !s32i loc(#loc13)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc13)
    cir.brcond %3 ^bb3, ^bb6 loc(#loc13)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc96)
  ^bb4:  // pred: ^bb3
    %4 = cir.const #cir.int<1> : !u64i loc(#loc97)
    %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc17)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc97)
    cir.store %6, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc98)
    %7 = cir.const #cir.int<65> : !s8i loc(#loc19)
    %8 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
    cir.store %7, %8 : !s8i, !cir.ptr<!s8i> loc(#loc99)
    %9 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
    %10 = cir.load %9 : !cir.ptr<!s8i>, !s8i loc(#loc23)
    cir.call @printHexCharLine(%10) : (!s8i) -> () loc(#loc24)
    cir.br ^bb6 loc(#loc25)
  ^bb5:  // no predecessors
    cir.br ^bb2 loc(#loc12)
  ^bb6:  // 2 preds: ^bb2, ^bb4
    cir.br ^bb7 loc(#loc12)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc100)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc100)
  ^bb9:  // 2 preds: ^bb8, ^bb12
    %11 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc28)
    cir.brcond %12 ^bb10, ^bb13 loc(#loc28)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc101)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13 loc(#loc30)
  ^bb12:  // no predecessors
    cir.br ^bb9 loc(#loc27)
  ^bb13:  // 2 preds: ^bb9, ^bb11
    cir.br ^bb14 loc(#loc27)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc6)
  } loc(#loc92)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc102)
  cir.func internal private @_ZN31CWE401_Memory_Leak__new_char_16L7goodB2GEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc104)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc37)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc105)
    cir.br ^bb1 loc(#loc106)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc106)
  ^bb2:  // 2 preds: ^bb1, ^bb5
    %2 = cir.const #cir.int<1> : !s32i loc(#loc41)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc41)
    cir.brcond %3 ^bb3, ^bb6 loc(#loc41)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc107)
  ^bb4:  // pred: ^bb3
    %4 = cir.const #cir.int<1> : !u64i loc(#loc108)
    %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc45)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc108)
    cir.store %6, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc109)
    %7 = cir.const #cir.int<65> : !s8i loc(#loc47)
    %8 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
    cir.store %7, %8 : !s8i, !cir.ptr<!s8i> loc(#loc110)
    %9 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
    %10 = cir.load %9 : !cir.ptr<!s8i>, !s8i loc(#loc51)
    cir.call @printHexCharLine(%10) : (!s8i) -> () loc(#loc52)
    cir.br ^bb6 loc(#loc53)
  ^bb5:  // no predecessors
    cir.br ^bb2 loc(#loc40)
  ^bb6:  // 2 preds: ^bb2, ^bb4
    cir.br ^bb7 loc(#loc40)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc111)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc111)
  ^bb9:  // 2 preds: ^bb8, ^bb12
    %11 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc56)
    cir.brcond %12 ^bb10, ^bb13 loc(#loc56)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc112)
  ^bb11:  // pred: ^bb10
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc58)
    cir.call @_ZdlPv(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc45)
    cir.br ^bb13 loc(#loc59)
  ^bb12:  // no predecessors
    cir.br ^bb9 loc(#loc55)
  ^bb13:  // 2 preds: ^bb9, ^bb11
    cir.br ^bb14 loc(#loc55)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc34)
  } loc(#loc103)
  cir.func internal private @_ZN31CWE401_Memory_Leak__new_char_16L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc114)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc115)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc66)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc116)
    cir.br ^bb1 loc(#loc117)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc117)
  ^bb2:  // 2 preds: ^bb1, ^bb5
    %3 = cir.const #cir.int<1> : !s32i loc(#loc70)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc70)
    cir.brcond %4 ^bb3, ^bb6 loc(#loc70)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc118)
  ^bb4:  // pred: ^bb3
    cir.store %0, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc119)
    %5 = cir.const #cir.int<65> : !s8i loc(#loc74)
    %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
    cir.store %5, %6 : !s8i, !cir.ptr<!s8i> loc(#loc120)
    %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
    %8 = cir.load %7 : !cir.ptr<!s8i>, !s8i loc(#loc78)
    cir.call @printHexCharLine(%8) : (!s8i) -> () loc(#loc79)
    cir.br ^bb6 loc(#loc80)
  ^bb5:  // no predecessors
    cir.br ^bb2 loc(#loc69)
  ^bb6:  // 2 preds: ^bb2, ^bb4
    cir.br ^bb7 loc(#loc69)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc121)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc121)
  ^bb9:  // 2 preds: ^bb8, ^bb12
    %9 = cir.const #cir.int<1> : !s32i loc(#loc83)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc83)
    cir.brcond %10 ^bb10, ^bb13 loc(#loc83)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc122)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13 loc(#loc85)
  ^bb12:  // no predecessors
    cir.br ^bb9 loc(#loc82)
  ^bb13:  // 2 preds: ^bb9, ^bb11
    cir.br ^bb14 loc(#loc82)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc61)
  } loc(#loc113)
  cir.func @_ZN31CWE401_Memory_Leak__new_char_164goodEv() extra(#fn_attr) {
    cir.call @_ZN31CWE401_Memory_Leak__new_char_16L7goodB2GEv() : () -> () loc(#loc88)
    cir.call @_ZN31CWE401_Memory_Leak__new_char_16L7goodG2BEv() : () -> () loc(#loc89)
    cir.return loc(#loc87)
  } loc(#loc123)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_16.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":126:20)
#loc2 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":127:41)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":30:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":30:35)
#loc5 = loc("CWE401_Memory_Leak__new_char_16.cpp":28:1)
#loc6 = loc("CWE401_Memory_Leak__new_char_16.cpp":47:1)
#loc7 = loc("CWE401_Memory_Leak__new_char_16.cpp":30:5)
#loc8 = loc("CWE401_Memory_Leak__new_char_16.cpp":30:12)
#loc9 = loc("CWE401_Memory_Leak__new_char_16.cpp":31:12)
#loc10 = loc("CWE401_Memory_Leak__new_char_16.cpp":31:5)
#loc11 = loc("CWE401_Memory_Leak__new_char_16.cpp":32:5)
#loc12 = loc("CWE401_Memory_Leak__new_char_16.cpp":40:5)
#loc13 = loc("CWE401_Memory_Leak__new_char_16.cpp":32:11)
#loc14 = loc("CWE401_Memory_Leak__new_char_16.cpp":33:5)
#loc15 = loc("CWE401_Memory_Leak__new_char_16.cpp":35:16)
#loc16 = loc("CWE401_Memory_Leak__new_char_16.cpp":35:20)
#loc17 = loc("CWE401_Memory_Leak__new_char_16.cpp":28:6)
#loc18 = loc("CWE401_Memory_Leak__new_char_16.cpp":35:9)
#loc19 = loc("CWE401_Memory_Leak__new_char_16.cpp":37:17)
#loc20 = loc("CWE401_Memory_Leak__new_char_16.cpp":37:10)
#loc21 = loc("CWE401_Memory_Leak__new_char_16.cpp":37:9)
#loc22 = loc("CWE401_Memory_Leak__new_char_16.cpp":38:27)
#loc23 = loc("CWE401_Memory_Leak__new_char_16.cpp":38:26)
#loc24 = loc("CWE401_Memory_Leak__new_char_16.cpp":38:9)
#loc25 = loc("CWE401_Memory_Leak__new_char_16.cpp":39:9)
#loc26 = loc("CWE401_Memory_Leak__new_char_16.cpp":41:5)
#loc27 = loc("CWE401_Memory_Leak__new_char_16.cpp":46:5)
#loc28 = loc("CWE401_Memory_Leak__new_char_16.cpp":41:11)
#loc29 = loc("CWE401_Memory_Leak__new_char_16.cpp":42:5)
#loc30 = loc("CWE401_Memory_Leak__new_char_16.cpp":45:9)
#loc31 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":130:1)
#loc32 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":131:41)
#loc33 = loc("CWE401_Memory_Leak__new_char_16.cpp":54:1)
#loc34 = loc("CWE401_Memory_Leak__new_char_16.cpp":73:1)
#loc35 = loc("CWE401_Memory_Leak__new_char_16.cpp":56:5)
#loc36 = loc("CWE401_Memory_Leak__new_char_16.cpp":56:12)
#loc37 = loc("CWE401_Memory_Leak__new_char_16.cpp":57:12)
#loc38 = loc("CWE401_Memory_Leak__new_char_16.cpp":57:5)
#loc39 = loc("CWE401_Memory_Leak__new_char_16.cpp":58:5)
#loc40 = loc("CWE401_Memory_Leak__new_char_16.cpp":66:5)
#loc41 = loc("CWE401_Memory_Leak__new_char_16.cpp":58:11)
#loc42 = loc("CWE401_Memory_Leak__new_char_16.cpp":59:5)
#loc43 = loc("CWE401_Memory_Leak__new_char_16.cpp":61:16)
#loc44 = loc("CWE401_Memory_Leak__new_char_16.cpp":61:20)
#loc45 = loc("CWE401_Memory_Leak__new_char_16.cpp":54:13)
#loc46 = loc("CWE401_Memory_Leak__new_char_16.cpp":61:9)
#loc47 = loc("CWE401_Memory_Leak__new_char_16.cpp":63:17)
#loc48 = loc("CWE401_Memory_Leak__new_char_16.cpp":63:10)
#loc49 = loc("CWE401_Memory_Leak__new_char_16.cpp":63:9)
#loc50 = loc("CWE401_Memory_Leak__new_char_16.cpp":64:27)
#loc51 = loc("CWE401_Memory_Leak__new_char_16.cpp":64:26)
#loc52 = loc("CWE401_Memory_Leak__new_char_16.cpp":64:9)
#loc53 = loc("CWE401_Memory_Leak__new_char_16.cpp":65:9)
#loc54 = loc("CWE401_Memory_Leak__new_char_16.cpp":67:5)
#loc55 = loc("CWE401_Memory_Leak__new_char_16.cpp":72:5)
#loc56 = loc("CWE401_Memory_Leak__new_char_16.cpp":67:11)
#loc57 = loc("CWE401_Memory_Leak__new_char_16.cpp":68:5)
#loc58 = loc("CWE401_Memory_Leak__new_char_16.cpp":70:16)
#loc59 = loc("CWE401_Memory_Leak__new_char_16.cpp":71:9)
#loc60 = loc("CWE401_Memory_Leak__new_char_16.cpp":76:1)
#loc61 = loc("CWE401_Memory_Leak__new_char_16.cpp":96:1)
#loc62 = loc("CWE401_Memory_Leak__new_char_16.cpp":83:9)
#loc63 = loc("CWE401_Memory_Leak__new_char_16.cpp":83:14)
#loc64 = loc("CWE401_Memory_Leak__new_char_16.cpp":78:5)
#loc65 = loc("CWE401_Memory_Leak__new_char_16.cpp":78:12)
#loc66 = loc("CWE401_Memory_Leak__new_char_16.cpp":79:12)
#loc67 = loc("CWE401_Memory_Leak__new_char_16.cpp":79:5)
#loc68 = loc("CWE401_Memory_Leak__new_char_16.cpp":80:5)
#loc69 = loc("CWE401_Memory_Leak__new_char_16.cpp":89:5)
#loc70 = loc("CWE401_Memory_Leak__new_char_16.cpp":80:11)
#loc71 = loc("CWE401_Memory_Leak__new_char_16.cpp":81:5)
#loc72 = loc("CWE401_Memory_Leak__new_char_16.cpp":84:9)
#loc73 = loc("CWE401_Memory_Leak__new_char_16.cpp":84:17)
#loc74 = loc("CWE401_Memory_Leak__new_char_16.cpp":86:17)
#loc75 = loc("CWE401_Memory_Leak__new_char_16.cpp":86:10)
#loc76 = loc("CWE401_Memory_Leak__new_char_16.cpp":86:9)
#loc77 = loc("CWE401_Memory_Leak__new_char_16.cpp":87:27)
#loc78 = loc("CWE401_Memory_Leak__new_char_16.cpp":87:26)
#loc79 = loc("CWE401_Memory_Leak__new_char_16.cpp":87:9)
#loc80 = loc("CWE401_Memory_Leak__new_char_16.cpp":88:9)
#loc81 = loc("CWE401_Memory_Leak__new_char_16.cpp":90:5)
#loc82 = loc("CWE401_Memory_Leak__new_char_16.cpp":95:5)
#loc83 = loc("CWE401_Memory_Leak__new_char_16.cpp":90:11)
#loc84 = loc("CWE401_Memory_Leak__new_char_16.cpp":91:5)
#loc85 = loc("CWE401_Memory_Leak__new_char_16.cpp":94:9)
#loc86 = loc("CWE401_Memory_Leak__new_char_16.cpp":98:1)
#loc87 = loc("CWE401_Memory_Leak__new_char_16.cpp":102:1)
#loc88 = loc("CWE401_Memory_Leak__new_char_16.cpp":100:5)
#loc89 = loc("CWE401_Memory_Leak__new_char_16.cpp":101:5)
#loc90 = loc(fused[#loc1, #loc2])
#loc91 = loc(fused[#loc3, #loc4])
#loc92 = loc(fused[#loc5, #loc6])
#loc93 = loc(fused[#loc7, #loc8])
#loc94 = loc(fused[#loc10, #loc9])
#loc95 = loc(fused[#loc11, #loc12])
#loc96 = loc(fused[#loc14, #loc12])
#loc97 = loc(fused[#loc15, #loc16])
#loc98 = loc(fused[#loc18, #loc16])
#loc99 = loc(fused[#loc21, #loc19])
#loc100 = loc(fused[#loc26, #loc27])
#loc101 = loc(fused[#loc29, #loc27])
#loc102 = loc(fused[#loc31, #loc32])
#loc103 = loc(fused[#loc33, #loc34])
#loc104 = loc(fused[#loc35, #loc36])
#loc105 = loc(fused[#loc38, #loc37])
#loc106 = loc(fused[#loc39, #loc40])
#loc107 = loc(fused[#loc42, #loc40])
#loc108 = loc(fused[#loc43, #loc44])
#loc109 = loc(fused[#loc46, #loc44])
#loc110 = loc(fused[#loc49, #loc47])
#loc111 = loc(fused[#loc54, #loc55])
#loc112 = loc(fused[#loc57, #loc55])
#loc113 = loc(fused[#loc60, #loc61])
#loc114 = loc(fused[#loc62, #loc63])
#loc115 = loc(fused[#loc64, #loc65])
#loc116 = loc(fused[#loc67, #loc66])
#loc117 = loc(fused[#loc68, #loc69])
#loc118 = loc(fused[#loc71, #loc69])
#loc119 = loc(fused[#loc72, #loc73])
#loc120 = loc(fused[#loc76, #loc74])
#loc121 = loc(fused[#loc81, #loc82])
#loc122 = loc(fused[#loc84, #loc82])
#loc123 = loc(fused[#loc86, #loc87])
