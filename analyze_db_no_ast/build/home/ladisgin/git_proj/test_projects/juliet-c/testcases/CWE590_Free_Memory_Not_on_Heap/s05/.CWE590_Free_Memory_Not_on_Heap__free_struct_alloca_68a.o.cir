!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global  external dsolocal @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68_badData = #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> {alignment = 8 : i64} loc(#loc111)
  cir.func no_proto private  @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68b_badSink(...) loc(#loc112)
  cir.func no_proto  @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc114)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc9)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc115)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc117)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc14)
      %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc14)
      %9 = cir.const #cir.int<8> : !u64i loc(#loc14)
      %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc14)
      %11 = cir.alloca !u8i, !cir.ptr<!u8i>, %10 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc14)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc14)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc14)
      cir.store %13, %6 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc117)
      cir.scope {
        %15 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc119)
        cir.scope {
          %16 = cir.const #cir.int<0> : !s32i loc(#loc21)
          %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc21)
          cir.store %17, %15 : !u64i, !cir.ptr<!u64i> loc(#loc121)
          cir.for : cond {
            %18 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc23)
            %19 = cir.const #cir.int<100> : !s32i loc(#loc24)
            %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc24)
            %21 = cir.cmp(lt, %18, %20) : !u64i, !s32i loc(#loc122)
            %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc25)
            cir.condition(%22) loc(#loc25)
          } body {
            cir.scope {
              %18 = cir.const #cir.int<1> : !s32i loc(#loc27)
              %19 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc28)
              %20 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc29)
              %21 = cir.ptr_stride(%19 : !cir.ptr<!ty__twoIntsStruct>, %20 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc30)
              %22 = cir.get_member %21[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc31)
              cir.store %18, %22 : !s32i, !cir.ptr<!s32i> loc(#loc124)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc32)
              %24 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc33)
              %25 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc34)
              %26 = cir.ptr_stride(%24 : !cir.ptr<!ty__twoIntsStruct>, %25 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc35)
              %27 = cir.get_member %26[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc36)
              cir.store %23, %27 : !s32i, !cir.ptr<!s32i> loc(#loc125)
            } loc(#loc123)
            cir.yield loc(#loc20)
          } step {
            %18 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc37)
            %19 = cir.unary(inc, %18) : !u64i, !u64i loc(#loc38)
            cir.store %19, %15 : !u64i, !cir.ptr<!u64i> loc(#loc126)
            cir.yield loc(#loc120)
          } loc(#loc120)
        } loc(#loc120)
      } loc(#loc118)
      %14 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc39)
      cir.store %14, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc127)
    } loc(#loc116)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc41)
    %3 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68_badData : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc111)
    cir.store %2, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc128)
    %4 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68b_badSink : !cir.ptr<!cir.func<!void (...)>> loc(#loc129)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!void (...)>>), !cir.ptr<!cir.func<!void ()>> loc(#loc129)
    cir.call %5() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc43)
    cir.return loc(#loc6)
  } loc(#loc113)
  cir.func no_proto  @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc131)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc47)
    cir.return loc(#loc46)
  } loc(#loc130)
  cir.global  external dsolocal @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68_goodG2BData = #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> {alignment = 8 : i64} loc(#loc132)
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc133)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc134)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc55)
  cir.func private  @exit(!s32i) extra(#fn_attr1) loc(#loc135)
  cir.func no_proto private  @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68b_goodG2BSink(...) loc(#loc136)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc138)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc64)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc139)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc141)
      %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc70)
      %8 = cir.const #cir.int<100> : !s32i loc(#loc71)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc71)
      %10 = cir.const #cir.int<8> : !u64i loc(#loc142)
      %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc143)
      %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc70)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc144)
      cir.store %13, %6 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc141)
      cir.scope {
        %15 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc76)
        %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc77)
        %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc77)
        %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!ty__twoIntsStruct>, !s32i loc(#loc146)
        %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc78)
        cir.if %19 {
          %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc55)
          %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc55)
          cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc80)
          %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc81)
          %23 = cir.const #cir.int<1> : !s32i loc(#loc82)
          cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr1) loc(#loc81)
        } loc(#loc147)
      } loc(#loc145)
      cir.scope {
        %15 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc149)
        cir.scope {
          %16 = cir.const #cir.int<0> : !s32i loc(#loc89)
          %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc89)
          cir.store %17, %15 : !u64i, !cir.ptr<!u64i> loc(#loc151)
          cir.for : cond {
            %18 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc91)
            %19 = cir.const #cir.int<100> : !s32i loc(#loc92)
            %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc92)
            %21 = cir.cmp(lt, %18, %20) : !u64i, !s32i loc(#loc152)
            %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc93)
            cir.condition(%22) loc(#loc93)
          } body {
            cir.scope {
              %18 = cir.const #cir.int<1> : !s32i loc(#loc95)
              %19 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc96)
              %20 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc97)
              %21 = cir.ptr_stride(%19 : !cir.ptr<!ty__twoIntsStruct>, %20 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc98)
              %22 = cir.get_member %21[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc31)
              cir.store %18, %22 : !s32i, !cir.ptr<!s32i> loc(#loc154)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc99)
              %24 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc100)
              %25 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc101)
              %26 = cir.ptr_stride(%24 : !cir.ptr<!ty__twoIntsStruct>, %25 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc102)
              %27 = cir.get_member %26[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc36)
              cir.store %23, %27 : !s32i, !cir.ptr<!s32i> loc(#loc155)
            } loc(#loc153)
            cir.yield loc(#loc88)
          } step {
            %18 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc103)
            %19 = cir.unary(inc, %18) : !u64i, !u64i loc(#loc104)
            cir.store %19, %15 : !u64i, !cir.ptr<!u64i> loc(#loc156)
            cir.yield loc(#loc150)
          } loc(#loc150)
        } loc(#loc150)
      } loc(#loc148)
      %14 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc105)
      cir.store %14, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc157)
    } loc(#loc140)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc107)
    %3 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68_goodG2BData : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc132)
    cir.store %2, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc158)
    %4 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68b_goodG2BSink : !cir.ptr<!cir.func<!void (...)>> loc(#loc159)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!void (...)>>), !cir.ptr<!cir.func<!void ()>> loc(#loc159)
    cir.call %5() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc109)
    cir.return loc(#loc61)
  } loc(#loc137)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":0:0)
#loc1 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":21:1)
#loc2 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":21:17)
#loc3 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":27:1)
#loc4 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":27:69)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":29:1)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":48:1)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":31:5)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":31:21)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":32:12)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":32:5)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":33:5)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":45:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":35:9)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":35:55)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":36:9)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":43:9)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":37:13)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":37:20)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":38:13)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":42:13)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":38:22)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":38:18)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":38:25)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":38:29)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":38:27)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":39:13)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":40:40)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":40:17)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":40:28)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":40:29)
#loc31 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":41:40)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":41:17)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":41:28)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":41:29)
#loc36 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":38:35)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":38:34)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":44:16)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":44:9)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":46:69)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":46:5)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":47:5)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":47:68)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":84:1)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":87:1)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":86:5)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":86:13)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":22:1)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":22:17)
#loc51 = loc("/usr/include/stdlib.h":672:1)
#loc52 = loc("/usr/include/stdlib.h":672:45)
#loc53 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc54 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":67:23)
#loc56 = loc("/usr/include/stdlib.h":756:1)
#loc57 = loc("/usr/include/stdlib.h":756:70)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":55:1)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":55:73)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":58:1)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":82:1)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":60:5)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":60:21)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":61:12)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":61:5)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":62:5)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":79:5)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":64:9)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":64:87)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":64:55)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":64:62)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":64:66)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":64:86)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":65:9)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":69:9)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":65:13)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":65:27)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":65:24)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":66:9)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":67:13)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":68:13)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":68:18)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":70:9)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":77:9)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":71:13)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":71:20)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":72:13)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":76:13)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":72:22)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":72:18)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":72:25)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":72:29)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":72:27)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":73:13)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":74:40)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":74:17)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":74:28)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":74:29)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":75:40)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":75:17)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":75:28)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":75:29)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":72:35)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":72:34)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":78:16)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":78:9)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":80:73)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":80:5)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":81:5)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_68a.c":81:72)
#loc111 = loc(fused[#loc1, #loc2])
#loc112 = loc(fused[#loc3, #loc4])
#loc113 = loc(fused[#loc5, #loc6])
#loc114 = loc(fused[#loc7, #loc8])
#loc115 = loc(fused[#loc10, #loc9])
#loc116 = loc(fused[#loc11, #loc12])
#loc117 = loc(fused[#loc13, #loc14])
#loc118 = loc(fused[#loc15, #loc16])
#loc119 = loc(fused[#loc17, #loc18])
#loc120 = loc(fused[#loc19, #loc20])
#loc121 = loc(fused[#loc22, #loc21])
#loc122 = loc(fused[#loc23, #loc24])
#loc123 = loc(fused[#loc26, #loc20])
#loc124 = loc(fused[#loc28, #loc27])
#loc125 = loc(fused[#loc33, #loc32])
#loc126 = loc(fused[#loc38, #loc37])
#loc127 = loc(fused[#loc40, #loc39])
#loc128 = loc(fused[#loc42, #loc41])
#loc129 = loc(fused[#loc43, #loc44])
#loc130 = loc(fused[#loc45, #loc46])
#loc131 = loc(fused[#loc47, #loc48])
#loc132 = loc(fused[#loc49, #loc50])
#loc133 = loc(fused[#loc51, #loc52])
#loc134 = loc(fused[#loc53, #loc54])
#loc135 = loc(fused[#loc56, #loc57])
#loc136 = loc(fused[#loc58, #loc59])
#loc137 = loc(fused[#loc60, #loc61])
#loc138 = loc(fused[#loc62, #loc63])
#loc139 = loc(fused[#loc65, #loc64])
#loc140 = loc(fused[#loc66, #loc67])
#loc141 = loc(fused[#loc68, #loc69])
#loc142 = loc(fused[#loc72, #loc73])
#loc143 = loc(fused[#loc71, #loc73])
#loc144 = loc(fused[#loc70, #loc69])
#loc145 = loc(fused[#loc74, #loc75])
#loc146 = loc(fused[#loc76, #loc77])
#loc147 = loc(fused[#loc79, #loc75])
#loc148 = loc(fused[#loc83, #loc84])
#loc149 = loc(fused[#loc85, #loc86])
#loc150 = loc(fused[#loc87, #loc88])
#loc151 = loc(fused[#loc90, #loc89])
#loc152 = loc(fused[#loc91, #loc92])
#loc153 = loc(fused[#loc94, #loc88])
#loc154 = loc(fused[#loc96, #loc95])
#loc155 = loc(fused[#loc100, #loc99])
#loc156 = loc(fused[#loc104, #loc103])
#loc157 = loc(fused[#loc106, #loc105])
#loc158 = loc(fused[#loc108, #loc107])
#loc159 = loc(fused[#loc109, #loc110])
