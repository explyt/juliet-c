!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc120 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":103:44)
#loc168 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":171:10)
#loc169 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":171:14)
#loc170 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":171:20)
#loc171 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":171:32)
#true = #cir.bool<true> : !cir.bool
!ty_CWE617_Reachable_Assertion__listen_socket_34_unionType = !cir.struct<union "CWE617_Reachable_Assertion__listen_socket_34_unionType" {!s32i, !s32i}>
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc270 = loc(fused[#loc168, #loc169])
#loc271 = loc(fused[#loc170, #loc171])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE617_Reachable_Assertion/CWE617_Reachable_Assertion__listen_socket_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc205)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc206)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc207)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc208)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc209)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc210)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc211)
  cir.func private @close(!s32i) -> !s32i loc(#loc212)
  cir.func private @__assert_fail(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u32i, !cir.ptr<!s8i>) extra(#fn_attr) loc(#loc213)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"data > ASSERT_VALUE\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc19)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"CWE617_Reachable_Assertion__listen_socket_34.c\00" : !cir.array<!s8i x 47>> : !cir.array<!s8i x 47> {alignment = 1 : i64} loc(#loc19)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"void CWE617_Reachable_Assertion__listen_socket_34_bad()\00" : !cir.array<!s8i x 56>> : !cir.array<!s8i x 56> {alignment = 1 : i64} loc(#loc19)
  cir.func no_proto @CWE617_Reachable_Assertion__listen_socket_34_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc215)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc216)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc217)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc218)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc219)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc220)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc221)
    %7 = cir.alloca !ty_CWE617_Reachable_Assertion__listen_socket_34_unionType, !cir.ptr<!ty_CWE617_Reachable_Assertion__listen_socket_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc222)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc38)
    %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc39)
    cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc223)
    cir.br ^bb1 loc(#loc224)
  ^bb1:  // pred: ^bb0
    %10 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc27)
    cir.store %11, %2 : !s32i, !cir.ptr<!s32i> loc(#loc217)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc29)
    cir.store %13, %3 : !s32i, !cir.ptr<!s32i> loc(#loc218)
    cir.br ^bb2 loc(#loc225)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc225)
  ^bb3:  // pred: ^bb32
    %14 = cir.const #cir.int<0> : !s32i loc(#loc45)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc45)
    cir.brcond %15 ^bb4, ^bb33 loc(#loc45)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %16 = cir.const #cir.int<2> : !s32i loc(#loc46)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc47)
    %18 = cir.const #cir.int<6> : !s32i loc(#loc48)
    %19 = cir.call @socket(%16, %17, %18) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc49)
    cir.store %19, %2 : !s32i, !cir.ptr<!s32i> loc(#loc226)
    cir.br ^bb5 loc(#loc227)
  ^bb5:  // pred: ^bb4
    %20 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc54)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc55)
    %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc55)
    %23 = cir.cmp(eq, %20, %22) : !s32i, !cir.bool loc(#loc228)
    cir.brcond %23 ^bb6, ^bb7 loc(#loc229)
  ^bb6:  // pred: ^bb5
    cir.br ^bb33 loc(#loc57)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc53)
  ^bb8:  // pred: ^bb7
    %24 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc230)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc60)
    %26 = cir.const #cir.int<16> : !u64i loc(#loc231)
    cir.libc.memset %26 bytes from %24 set to %25 : !cir.ptr<!void>, !s32i, !u64i loc(#loc232)
    %27 = cir.const #cir.int<2> : !s32i loc(#loc65)
    %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc65)
    %29 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc66)
    cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc233)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc68)
    %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc68)
    %32 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc69)
    %33 = cir.get_member %32[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc70)
    cir.store %31, %33 : !u32i, !cir.ptr<!u32i> loc(#loc234)
    %34 = cir.const #cir.int<27015> : !s32i loc(#loc72)
    %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc72)
    %36 = cir.call @htons(%35) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc73)
    %37 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
    cir.store %36, %37 : !u16i, !cir.ptr<!u16i> loc(#loc235)
    cir.br ^bb9 loc(#loc236)
  ^bb9:  // pred: ^bb8
    %38 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc79)
    %39 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc237)
    %40 = cir.const #cir.int<16> : !u64i loc(#loc238)
    %41 = cir.cast(integral, %40 : !u64i), !u32i loc(#loc238)
    %42 = cir.call @bind(%38, %39, %41) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc84)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc85)
    %44 = cir.unary(minus, %43) : !s32i, !s32i loc(#loc85)
    %45 = cir.cmp(eq, %42, %44) : !s32i, !cir.bool loc(#loc239)
    cir.brcond %45 ^bb10, ^bb11 loc(#loc240)
  ^bb10:  // pred: ^bb9
    cir.br ^bb33 loc(#loc87)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc78)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc241)
  ^bb13:  // pred: ^bb12
    %46 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc90)
    %47 = cir.const #cir.int<5> : !s32i loc(#loc91)
    %48 = cir.call @listen(%46, %47) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc92)
    %49 = cir.const #cir.int<1> : !s32i loc(#loc93)
    %50 = cir.unary(minus, %49) : !s32i, !s32i loc(#loc93)
    %51 = cir.cmp(eq, %48, %50) : !s32i, !cir.bool loc(#loc242)
    cir.brcond %51 ^bb14, ^bb15 loc(#loc243)
  ^bb14:  // pred: ^bb13
    cir.br ^bb33 loc(#loc95)
  ^bb15:  // pred: ^bb13
    cir.br ^bb16 loc(#loc89)
  ^bb16:  // pred: ^bb15
    %52 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc96)
    %53 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc97)
    %54 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc98)
    %55 = cir.call @accept(%52, %53, %54) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc99)
    cir.store %55, %3 : !s32i, !cir.ptr<!s32i> loc(#loc244)
    cir.br ^bb17 loc(#loc245)
  ^bb17:  // pred: ^bb16
    %56 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc104)
    %57 = cir.const #cir.int<1> : !s32i loc(#loc105)
    %58 = cir.unary(minus, %57) : !s32i, !s32i loc(#loc105)
    %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc246)
    cir.brcond %59 ^bb18, ^bb19 loc(#loc247)
  ^bb18:  // pred: ^bb17
    cir.br ^bb33 loc(#loc107)
  ^bb19:  // pred: ^bb17
    cir.br ^bb20 loc(#loc103)
  ^bb20:  // pred: ^bb19
    %60 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc108)
    %61 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc109)
    %62 = cir.cast(bitcast, %61 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc109)
    %63 = cir.const #cir.int<3> : !s32i loc(#loc110)
    %64 = cir.cast(integral, %63 : !s32i), !u64i loc(#loc110)
    %65 = cir.const #cir.int<4> : !u64i loc(#loc110)
    %66 = cir.binop(mul, %64, %65) : !u64i loc(#loc110)
    %67 = cir.const #cir.int<2> : !s32i loc(#loc110)
    %68 = cir.cast(integral, %67 : !s32i), !u64i loc(#loc110)
    %69 = cir.binop(add, %66, %68) : !u64i loc(#loc110)
    %70 = cir.const #cir.int<1> : !s32i loc(#loc111)
    %71 = cir.cast(integral, %70 : !s32i), !u64i loc(#loc111)
    %72 = cir.binop(sub, %69, %71) : !u64i loc(#loc248)
    %73 = cir.const #cir.int<0> : !s32i loc(#loc112)
    %74 = cir.call @recv(%60, %62, %72, %73) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc113)
    %75 = cir.cast(integral, %74 : !s64i), !s32i loc(#loc113)
    cir.store %75, %0 : !s32i, !cir.ptr<!s32i> loc(#loc249)
    cir.br ^bb21 loc(#loc250)
  ^bb21:  // pred: ^bb20
    %76 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc118)
    %77 = cir.const #cir.int<1> : !s32i loc(#loc119)
    %78 = cir.unary(minus, %77) : !s32i, !s32i loc(#loc119)
    %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc251)
    cir.brcond %79 ^bb22, ^bb23 loc(#loc120)
  ^bb22:  // pred: ^bb21
    %80 = cir.const #true loc(#loc120)
    cir.br ^bb28(%80 : !cir.bool) loc(#loc120)
  ^bb23:  // pred: ^bb21
    %81 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc121)
    %82 = cir.const #cir.int<0> : !s32i loc(#loc122)
    %83 = cir.cmp(eq, %81, %82) : !s32i, !cir.bool loc(#loc252)
    cir.brcond %83 ^bb24, ^bb25 loc(#loc120)
  ^bb24:  // pred: ^bb23
    %84 = cir.const #true loc(#loc120)
    cir.br ^bb26(%84 : !cir.bool) loc(#loc120)
  ^bb25:  // pred: ^bb23
    %85 = cir.const #false loc(#loc120)
    cir.br ^bb26(%85 : !cir.bool) loc(#loc120)
  ^bb26(%86: !cir.bool loc("CWE617_Reachable_Assertion__listen_socket_34.c":103:44)):  // 2 preds: ^bb24, ^bb25
    cir.br ^bb27 loc(#loc120)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28(%86 : !cir.bool) loc(#loc120)
  ^bb28(%87: !cir.bool loc("CWE617_Reachable_Assertion__listen_socket_34.c":103:44)):  // 2 preds: ^bb22, ^bb27
    cir.br ^bb29 loc(#loc120)
  ^bb29:  // pred: ^bb28
    cir.brcond %87 ^bb30, ^bb31 loc(#loc253)
  ^bb30:  // pred: ^bb29
    cir.br ^bb33 loc(#loc124)
  ^bb31:  // pred: ^bb29
    cir.br ^bb32 loc(#loc117)
  ^bb32:  // pred: ^bb31
    %88 = cir.const #cir.int<0> : !s32i loc(#loc125)
    %89 = cir.cast(integral, %88 : !s32i), !s8i loc(#loc125)
    %90 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc126)
    %91 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc127)
    %92 = cir.ptr_stride(%91 : !cir.ptr<!s8i>, %90 : !s32i), !cir.ptr<!s8i> loc(#loc127)
    cir.store %89, %92 : !s8i, !cir.ptr<!s8i> loc(#loc254)
    %93 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc128)
    %94 = cir.call @atoi(%93) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc129)
    cir.store %94, %6 : !s32i, !cir.ptr<!s32i> loc(#loc255)
    cir.br ^bb3 loc(#loc44)
  ^bb33:  // 6 preds: ^bb3, ^bb6, ^bb10, ^bb14, ^bb18, ^bb30
    cir.br ^bb34 loc(#loc44)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc256)
  ^bb35:  // pred: ^bb34
    %95 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc134)
    %96 = cir.const #cir.int<1> : !s32i loc(#loc135)
    %97 = cir.unary(minus, %96) : !s32i, !s32i loc(#loc135)
    %98 = cir.cmp(ne, %95, %97) : !s32i, !cir.bool loc(#loc257)
    cir.brcond %98 ^bb36, ^bb37 loc(#loc258)
  ^bb36:  // pred: ^bb35
    %99 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc137)
    %100 = cir.call @close(%99) : (!s32i) -> !s32i loc(#loc138)
    cir.br ^bb37 loc(#loc133)
  ^bb37:  // 2 preds: ^bb35, ^bb36
    cir.br ^bb38 loc(#loc133)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc259)
  ^bb39:  // pred: ^bb38
    %101 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc141)
    %102 = cir.const #cir.int<1> : !s32i loc(#loc142)
    %103 = cir.unary(minus, %102) : !s32i, !s32i loc(#loc142)
    %104 = cir.cmp(ne, %101, %103) : !s32i, !cir.bool loc(#loc260)
    cir.brcond %104 ^bb40, ^bb41 loc(#loc261)
  ^bb40:  // pred: ^bb39
    %105 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc144)
    %106 = cir.call @close(%105) : (!s32i) -> !s32i loc(#loc145)
    cir.br ^bb41 loc(#loc140)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc140)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc42)
  ^bb43:  // pred: ^bb42
    %107 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc146)
    %108 = cir.get_member %7[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE617_Reachable_Assertion__listen_socket_34_unionType> -> !cir.ptr<!s32i> loc(#loc147)
    cir.store %107, %108 : !s32i, !cir.ptr<!s32i> loc(#loc262)
    cir.br ^bb44 loc(#loc263)
  ^bb44:  // pred: ^bb43
    %109 = cir.get_member %7[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE617_Reachable_Assertion__listen_socket_34_unionType> -> !cir.ptr<!s32i> loc(#loc151)
    %110 = cir.load %109 : !cir.ptr<!s32i>, !s32i loc(#loc33)
    cir.store %110, %5 : !s32i, !cir.ptr<!s32i> loc(#loc220)
    %111 = cir.const #cir.int<4> : !u64i loc(#loc19)
    cir.br ^bb45 loc(#loc19)
  ^bb45:  // pred: ^bb44
    cir.br ^bb46 loc(#loc19)
  ^bb46:  // pred: ^bb45
    %112 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc19)
    %113 = cir.const #cir.int<5> : !s32i loc(#loc19)
    %114 = cir.cmp(gt, %112, %113) : !s32i, !cir.bool loc(#loc19)
    cir.brcond %114 ^bb47, ^bb48 loc(#loc19)
  ^bb47:  // pred: ^bb46
    cir.br ^bb49 loc(#loc19)
  ^bb48:  // pred: ^bb46
    %115 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc19)
    %116 = cir.cast(array_to_ptrdecay, %115 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc19)
    %117 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 47>> loc(#loc19)
    %118 = cir.cast(array_to_ptrdecay, %117 : !cir.ptr<!cir.array<!s8i x 47>>), !cir.ptr<!s8i> loc(#loc19)
    %119 = cir.const #cir.int<132> : !s32i loc(#loc19)
    %120 = cir.cast(integral, %119 : !s32i), !u32i loc(#loc19)
    %121 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 56>> loc(#loc19)
    %122 = cir.cast(array_to_ptrdecay, %121 : !cir.ptr<!cir.array<!s8i x 56>>), !cir.ptr<!s8i> loc(#loc19)
    cir.call @__assert_fail(%116, %118, %120, %122) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u32i, !cir.ptr<!s8i>) -> () extra(#fn_attr) loc(#loc19)
    cir.br ^bb49 loc(#loc19)
  ^bb49:  // 2 preds: ^bb47, ^bb48
    cir.br ^bb50 loc(#loc19)
  ^bb50:  // pred: ^bb49
    cir.br ^bb51 loc(#loc19)
  ^bb51:  // pred: ^bb50
    cir.br ^bb52 loc(#loc150)
  ^bb52:  // pred: ^bb51
    cir.return loc(#loc21)
  } loc(#loc214)
  cir.func no_proto @CWE617_Reachable_Assertion__listen_socket_34_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc265)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc154)
    cir.return loc(#loc153)
  } loc(#loc264)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc266)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc267)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc268)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc162)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc163)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc164)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc165)
  cir.func @main(%arg0: !s32i loc(fused[#loc168, #loc169]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc170, #loc171])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc270)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc271)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc167)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc172)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc172)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc173)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc174)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc174)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc175)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc162)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc162)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc176)
    %8 = cir.get_global @CWE617_Reachable_Assertion__listen_socket_34_good : !cir.ptr<!cir.func<!void ()>> loc(#loc272)
    cir.call @CWE617_Reachable_Assertion__listen_socket_34_good() : () -> () loc(#loc177)
    %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc163)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc163)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc179)
    %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc164)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc164)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc180)
    %13 = cir.get_global @CWE617_Reachable_Assertion__listen_socket_34_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc273)
    cir.call @CWE617_Reachable_Assertion__listen_socket_34_bad() : () -> () loc(#loc181)
    %14 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc165)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc165)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc183)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc184)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc274)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc274)
    cir.return %17 : !s32i loc(#loc274)
  } loc(#loc269)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"void goodG2B()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc186)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc276)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc277)
    %2 = cir.alloca !ty_CWE617_Reachable_Assertion__listen_socket_34_unionType, !cir.ptr<!ty_CWE617_Reachable_Assertion__listen_socket_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc278)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc195)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc196)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc279)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc198)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc199)
    %7 = cir.binop(add, %5, %6) nsw : !s32i loc(#loc198)
    cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc280)
    %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc201)
    %9 = cir.get_member %2[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE617_Reachable_Assertion__listen_socket_34_unionType> -> !cir.ptr<!s32i> loc(#loc147)
    cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc281)
    cir.br ^bb1 loc(#loc282)
  ^bb1:  // pred: ^bb0
    %10 = cir.get_member %2[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE617_Reachable_Assertion__listen_socket_34_unionType> -> !cir.ptr<!s32i> loc(#loc151)
    %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc190)
    cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc276)
    %12 = cir.const #cir.int<4> : !u64i loc(#loc186)
    cir.br ^bb2 loc(#loc186)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc186)
  ^bb3:  // pred: ^bb2
    %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc186)
    %14 = cir.const #cir.int<5> : !s32i loc(#loc186)
    %15 = cir.cmp(gt, %13, %14) : !s32i, !cir.bool loc(#loc186)
    cir.brcond %15 ^bb4, ^bb5 loc(#loc186)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc186)
  ^bb5:  // pred: ^bb3
    %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc186)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc186)
    %18 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 47>> loc(#loc186)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 47>>), !cir.ptr<!s8i> loc(#loc186)
    %20 = cir.const #cir.int<153> : !s32i loc(#loc186)
    %21 = cir.cast(integral, %20 : !s32i), !u32i loc(#loc186)
    %22 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc186)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc186)
    cir.call @__assert_fail(%17, %19, %21, %23) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u32i, !cir.ptr<!s8i>) -> () extra(#fn_attr) loc(#loc186)
    cir.br ^bb6 loc(#loc186)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc186)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc186)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc204)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc188)
  } loc(#loc275)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE617_Reachable_Assertion/CWE617_Reachable_Assertion__listen_socket_34.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":145:1)
#loc12 = loc("/usr/include/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("/usr/include/assert.h":67:1)
#loc18 = loc("/usr/include/assert.h":69:43)
#loc19 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":132:9)
#loc20 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":53:1)
#loc21 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":134:1)
#loc22 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":64:9)
#loc23 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":64:13)
#loc24 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":65:9)
#loc25 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":65:28)
#loc26 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":66:9)
#loc27 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":66:31)
#loc28 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":67:9)
#loc29 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":67:31)
#loc30 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":68:9)
#loc31 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":68:41)
#loc32 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":130:9)
#loc33 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":130:28)
#loc34 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":55:5)
#loc35 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":55:9)
#loc36 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":56:5)
#loc37 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":56:60)
#loc38 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":58:13)
#loc39 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":58:12)
#loc40 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":58:5)
#loc41 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":59:5)
#loc42 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":127:5)
#loc43 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":69:9)
#loc44 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":112:17)
#loc45 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":112:16)
#loc46 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":79:35)
#loc47 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":79:44)
#loc48 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":79:57)
#loc49 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":79:28)
#loc50 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":79:13)
#loc51 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":79:68)
#loc52 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":80:13)
#loc53 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":83:13)
#loc54 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":80:17)
#loc55 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":80:33)
#loc56 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":81:13)
#loc57 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":82:17)
#loc58 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":84:20)
#loc59 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":84:21)
#loc60 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":84:30)
#loc61 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":84:33)
#loc62 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":84:47)
#loc63 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":84:13)
#loc64 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":84:48)
#loc65 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":85:34)
#loc66 = loc("/usr/include/netinet/in.h":249:5)
#loc67 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":85:13)
#loc68 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":86:39)
#loc69 = loc("/usr/include/netinet/in.h":251:20)
#loc70 = loc("/usr/include/netinet/in.h":33:15)
#loc71 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":86:13)
#loc72 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":87:38)
#loc73 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":87:32)
#loc74 = loc("/usr/include/netinet/in.h":250:15)
#loc75 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":87:13)
#loc76 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":87:46)
#loc77 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":88:13)
#loc78 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":91:13)
#loc79 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":88:22)
#loc80 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":88:54)
#loc81 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":88:55)
#loc82 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":88:64)
#loc83 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":88:78)
#loc84 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":88:17)
#loc85 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":88:84)
#loc86 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":89:13)
#loc87 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":90:17)
#loc88 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":92:13)
#loc89 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":95:13)
#loc90 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":92:24)
#loc91 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":92:38)
#loc92 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":92:17)
#loc93 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":92:57)
#loc94 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":93:13)
#loc95 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":94:17)
#loc96 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":96:35)
#loc97 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":96:49)
#loc98 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":96:55)
#loc99 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":96:28)
#loc100 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":96:13)
#loc101 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":96:59)
#loc102 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":97:13)
#loc103 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":100:13)
#loc104 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":97:17)
#loc105 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":97:33)
#loc106 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":98:13)
#loc107 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":99:17)
#loc108 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":102:31)
#loc109 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":102:45)
#loc110 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":102:58)
#loc111 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":102:76)
#loc112 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":102:79)
#loc113 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":102:26)
#loc114 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":102:13)
#loc115 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":102:80)
#loc116 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":103:13)
#loc117 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":106:13)
#loc118 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":103:17)
#loc119 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":103:31)
#loc121 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":103:47)
#loc122 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":103:61)
#loc123 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":104:13)
#loc124 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":105:17)
#loc125 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":108:39)
#loc126 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":108:25)
#loc127 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":108:13)
#loc128 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":110:25)
#loc129 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":110:20)
#loc130 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":110:13)
#loc131 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":110:36)
#loc132 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":113:9)
#loc133 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":116:9)
#loc134 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":113:13)
#loc135 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":113:29)
#loc136 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":114:9)
#loc137 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":115:26)
#loc138 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":115:13)
#loc139 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":117:9)
#loc140 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":120:9)
#loc141 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":117:13)
#loc142 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":117:29)
#loc143 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":118:9)
#loc144 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":119:26)
#loc145 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":119:13)
#loc146 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":128:26)
#loc147 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":47:9)
#loc148 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":128:5)
#loc149 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":129:5)
#loc150 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":133:5)
#loc151 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":48:9)
#loc152 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":157:1)
#loc153 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":160:1)
#loc154 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":159:5)
#loc155 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":159:13)
#loc156 = loc("/usr/include/stdlib.h":575:1)
#loc157 = loc("/usr/include/stdlib.h":575:41)
#loc158 = loc("/usr/include/time.h":76:1)
#loc159 = loc("/usr/include/time.h":76:38)
#loc160 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc161 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc162 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":176:15)
#loc163 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":178:15)
#loc164 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":181:15)
#loc165 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":183:15)
#loc166 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":171:1)
#loc167 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":186:1)
#loc172 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":172:1)
#loc173 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":174:27)
#loc174 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":174:22)
#loc175 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":174:5)
#loc176 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":176:5)
#loc177 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":177:5)
#loc178 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":177:55)
#loc179 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":178:5)
#loc180 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":181:5)
#loc181 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":182:5)
#loc182 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":182:54)
#loc183 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":183:5)
#loc184 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":185:12)
#loc185 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":185:5)
#loc186 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":153:9)
#loc187 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":141:1)
#loc188 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":155:1)
#loc189 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":151:9)
#loc190 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":151:28)
#loc191 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":143:5)
#loc192 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":143:9)
#loc193 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":144:5)
#loc194 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":144:60)
#loc195 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":146:13)
#loc196 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":146:12)
#loc197 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":146:5)
#loc198 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":148:12)
#loc199 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":148:25)
#loc200 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":148:5)
#loc201 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":149:26)
#loc202 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":149:5)
#loc203 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":150:5)
#loc204 = loc("CWE617_Reachable_Assertion__listen_socket_34.c":154:5)
#loc205 = loc(fused[#loc1, #loc2])
#loc206 = loc(fused[#loc3, #loc4])
#loc207 = loc(fused[#loc5, #loc6])
#loc208 = loc(fused[#loc7, #loc8])
#loc209 = loc(fused[#loc9, #loc10])
#loc210 = loc(fused[#loc11, #loc12])
#loc211 = loc(fused[#loc13, #loc14])
#loc212 = loc(fused[#loc15, #loc16])
#loc213 = loc(fused[#loc17, #loc18])
#loc214 = loc(fused[#loc20, #loc21])
#loc215 = loc(fused[#loc22, #loc23])
#loc216 = loc(fused[#loc24, #loc25])
#loc217 = loc(fused[#loc26, #loc27])
#loc218 = loc(fused[#loc28, #loc29])
#loc219 = loc(fused[#loc30, #loc31])
#loc220 = loc(fused[#loc32, #loc33])
#loc221 = loc(fused[#loc34, #loc35])
#loc222 = loc(fused[#loc36, #loc37])
#loc223 = loc(fused[#loc40, #loc38])
#loc224 = loc(fused[#loc41, #loc42])
#loc225 = loc(fused[#loc43, #loc44])
#loc226 = loc(fused[#loc50, #loc51])
#loc227 = loc(fused[#loc52, #loc53])
#loc228 = loc(fused[#loc54, #loc55])
#loc229 = loc(fused[#loc56, #loc53])
#loc230 = loc(fused[#loc58, #loc59])
#loc231 = loc(fused[#loc61, #loc62])
#loc232 = loc(fused[#loc63, #loc64])
#loc233 = loc(fused[#loc67, #loc65])
#loc234 = loc(fused[#loc71, #loc68])
#loc235 = loc(fused[#loc75, #loc76])
#loc236 = loc(fused[#loc77, #loc78])
#loc237 = loc(fused[#loc80, #loc81])
#loc238 = loc(fused[#loc82, #loc83])
#loc239 = loc(fused[#loc84, #loc85])
#loc240 = loc(fused[#loc86, #loc78])
#loc241 = loc(fused[#loc88, #loc89])
#loc242 = loc(fused[#loc92, #loc93])
#loc243 = loc(fused[#loc94, #loc89])
#loc244 = loc(fused[#loc100, #loc101])
#loc245 = loc(fused[#loc102, #loc103])
#loc246 = loc(fused[#loc104, #loc105])
#loc247 = loc(fused[#loc106, #loc103])
#loc248 = loc(fused[#loc110, #loc111])
#loc249 = loc(fused[#loc114, #loc115])
#loc250 = loc(fused[#loc116, #loc117])
#loc251 = loc(fused[#loc118, #loc119])
#loc252 = loc(fused[#loc121, #loc122])
#loc253 = loc(fused[#loc123, #loc117])
#loc254 = loc(fused[#loc127, #loc125])
#loc255 = loc(fused[#loc130, #loc131])
#loc256 = loc(fused[#loc132, #loc133])
#loc257 = loc(fused[#loc134, #loc135])
#loc258 = loc(fused[#loc136, #loc133])
#loc259 = loc(fused[#loc139, #loc140])
#loc260 = loc(fused[#loc141, #loc142])
#loc261 = loc(fused[#loc143, #loc140])
#loc262 = loc(fused[#loc148, #loc146])
#loc263 = loc(fused[#loc149, #loc150])
#loc264 = loc(fused[#loc152, #loc153])
#loc265 = loc(fused[#loc154, #loc155])
#loc266 = loc(fused[#loc156, #loc157])
#loc267 = loc(fused[#loc158, #loc159])
#loc268 = loc(fused[#loc160, #loc161])
#loc269 = loc(fused[#loc166, #loc167])
#loc272 = loc(fused[#loc177, #loc178])
#loc273 = loc(fused[#loc181, #loc182])
#loc274 = loc(fused[#loc185, #loc184])
#loc275 = loc(fused[#loc187, #loc188])
#loc276 = loc(fused[#loc189, #loc190])
#loc277 = loc(fused[#loc191, #loc192])
#loc278 = loc(fused[#loc193, #loc194])
#loc279 = loc(fused[#loc197, #loc195])
#loc280 = loc(fused[#loc200, #loc199])
#loc281 = loc(fused[#loc202, #loc201])
#loc282 = loc(fused[#loc203, #loc204])
