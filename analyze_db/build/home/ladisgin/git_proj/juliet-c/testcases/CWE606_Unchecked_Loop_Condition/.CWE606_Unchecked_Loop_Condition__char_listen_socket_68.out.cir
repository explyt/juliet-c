!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" external @CWE606_Unchecked_Loop_Condition__char_listen_socket_68_badData : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc115)
  cir.func private @__isoc99_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc116)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printIntLine(!s32i) loc(#loc117)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_listen_socket_68b_badSink() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc119)
    %1 = cir.get_global @CWE606_Unchecked_Loop_Condition__char_listen_socket_68_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc115)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc11)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc119)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc121)
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc122)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc123)
      cir.scope {
        %6 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc20)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
        %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
        %10 = cir.call @__isoc99_sscanf(%7, %9, %4) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc20)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc22)
        %12 = cir.cmp(eq, %10, %11) : !s32i, !cir.bool loc(#loc125)
        cir.if %12 {
          %13 = cir.const #cir.int<0> : !s32i loc(#loc24)
          cir.store %13, %5 : !s32i, !cir.ptr<!s32i> loc(#loc127)
          cir.scope {
            %15 = cir.const #cir.int<0> : !s32i loc(#loc28)
            cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc129)
            cir.for : cond {
              %16 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc30)
              %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc31)
              %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc130)
              cir.condition(%18) loc(#loc32)
            } body {
              cir.scope {
                %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc34)
                %17 = cir.unary(inc, %16) : !s32i, !s32i loc(#loc35)
                cir.store %17, %5 : !s32i, !cir.ptr<!s32i> loc(#loc132)
              } loc(#loc131)
              cir.yield loc(#loc27)
            } step {
              %16 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc36)
              %17 = cir.unary(inc, %16) : !s32i, !s32i loc(#loc37)
              cir.store %17, %3 : !s32i, !cir.ptr<!s32i> loc(#loc133)
              cir.yield loc(#loc128)
            } loc(#loc128)
          } loc(#loc128)
          %14 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc38)
          cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc39)
        } loc(#loc126)
      } loc(#loc124)
    } loc(#loc120)
    cir.return loc(#loc9)
  } loc(#loc118)
  cir.global "private" external @CWE606_Unchecked_Loop_Condition__char_listen_socket_68_goodG2BData : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc134)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_listen_socket_68b_goodG2BSink() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc136)
    %1 = cir.get_global @CWE606_Unchecked_Loop_Condition__char_listen_socket_68_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc134)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc136)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc138)
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc139)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc140)
      cir.scope {
        %6 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc54)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
        %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc56)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc56)
        %10 = cir.call @__isoc99_sscanf(%7, %9, %4) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc54)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc57)
        %12 = cir.cmp(eq, %10, %11) : !s32i, !cir.bool loc(#loc142)
        cir.if %12 {
          %13 = cir.const #cir.int<0> : !s32i loc(#loc59)
          cir.store %13, %5 : !s32i, !cir.ptr<!s32i> loc(#loc144)
          cir.scope {
            %15 = cir.const #cir.int<0> : !s32i loc(#loc63)
            cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc146)
            cir.for : cond {
              %16 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc65)
              %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc66)
              %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc147)
              cir.condition(%18) loc(#loc67)
            } body {
              cir.scope {
                %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc69)
                %17 = cir.unary(inc, %16) : !s32i, !s32i loc(#loc70)
                cir.store %17, %5 : !s32i, !cir.ptr<!s32i> loc(#loc149)
              } loc(#loc148)
              cir.yield loc(#loc62)
            } step {
              %16 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc71)
              %17 = cir.unary(inc, %16) : !s32i, !s32i loc(#loc72)
              cir.store %17, %3 : !s32i, !cir.ptr<!s32i> loc(#loc150)
              cir.yield loc(#loc145)
            } loc(#loc145)
          } loc(#loc145)
          %14 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc73)
          cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc74)
        } loc(#loc143)
      } loc(#loc141)
    } loc(#loc137)
    cir.return loc(#loc43)
  } loc(#loc135)
  cir.global "private" external @CWE606_Unchecked_Loop_Condition__char_listen_socket_68_goodB2GData : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc151)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_listen_socket_68b_goodB2GSink() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc153)
    %1 = cir.get_global @CWE606_Unchecked_Loop_Condition__char_listen_socket_68_goodB2GData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc151)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc153)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc155)
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc156)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc157)
      cir.scope {
        %6 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc89)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
        %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc91)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc91)
        %10 = cir.call @__isoc99_sscanf(%7, %9, %4) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc89)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc92)
        %12 = cir.cmp(eq, %10, %11) : !s32i, !cir.bool loc(#loc159)
        cir.if %12 {
          cir.scope {
            %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc96)
            %14 = cir.const #cir.int<10000> : !s32i loc(#loc97)
            %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc162)
            cir.if %15 {
              %16 = cir.const #cir.int<0> : !s32i loc(#loc99)
              cir.store %16, %5 : !s32i, !cir.ptr<!s32i> loc(#loc164)
              cir.scope {
                %18 = cir.const #cir.int<0> : !s32i loc(#loc103)
                cir.store %18, %3 : !s32i, !cir.ptr<!s32i> loc(#loc166)
                cir.for : cond {
                  %19 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc105)
                  %20 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc106)
                  %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc167)
                  cir.condition(%21) loc(#loc107)
                } body {
                  cir.scope {
                    %19 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc109)
                    %20 = cir.unary(inc, %19) : !s32i, !s32i loc(#loc110)
                    cir.store %20, %5 : !s32i, !cir.ptr<!s32i> loc(#loc169)
                  } loc(#loc168)
                  cir.yield loc(#loc102)
                } step {
                  %19 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc111)
                  %20 = cir.unary(inc, %19) : !s32i, !s32i loc(#loc112)
                  cir.store %20, %3 : !s32i, !cir.ptr<!s32i> loc(#loc170)
                  cir.yield loc(#loc165)
                } loc(#loc165)
              } loc(#loc165)
              %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc113)
              cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc114)
            } loc(#loc163)
          } loc(#loc161)
        } loc(#loc160)
      } loc(#loc158)
    } loc(#loc154)
    cir.return loc(#loc78)
  } loc(#loc152)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":0:0)
#loc1 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":47:1)
#loc2 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":47:15)
#loc3 = loc("/usr/include/stdio.h":468:1)
#loc4 = loc("/usr/include/stdio.h":468:12)
#loc5 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":58:26)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc8 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":53:1)
#loc9 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":70:1)
#loc10 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":55:5)
#loc11 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":55:19)
#loc12 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":56:5)
#loc13 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":69:5)
#loc14 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":57:9)
#loc15 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":57:13)
#loc16 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":57:16)
#loc17 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":57:19)
#loc18 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":58:9)
#loc19 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":68:9)
#loc20 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":58:13)
#loc21 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":58:20)
#loc22 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":58:39)
#loc23 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":59:9)
#loc24 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":61:27)
#loc25 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":61:13)
#loc26 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":62:13)
#loc27 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":66:13)
#loc28 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":62:22)
#loc29 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":62:18)
#loc30 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":62:25)
#loc31 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":62:29)
#loc32 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":62:27)
#loc33 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":63:13)
#loc34 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":65:28)
#loc35 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":65:17)
#loc36 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":62:33)
#loc37 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":62:32)
#loc38 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":67:26)
#loc39 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":67:13)
#loc40 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":48:1)
#loc41 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":48:15)
#loc42 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":77:1)
#loc43 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":94:1)
#loc44 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":79:5)
#loc45 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":79:19)
#loc46 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":80:5)
#loc47 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":93:5)
#loc48 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":81:9)
#loc49 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":81:13)
#loc50 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":81:16)
#loc51 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":81:19)
#loc52 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":82:9)
#loc53 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":92:9)
#loc54 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":82:13)
#loc55 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":82:20)
#loc56 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":82:26)
#loc57 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":82:39)
#loc58 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":83:9)
#loc59 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":85:27)
#loc60 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":85:13)
#loc61 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":86:13)
#loc62 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":90:13)
#loc63 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":86:22)
#loc64 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":86:18)
#loc65 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":86:25)
#loc66 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":86:29)
#loc67 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":86:27)
#loc68 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":87:13)
#loc69 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":89:28)
#loc70 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":89:17)
#loc71 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":86:33)
#loc72 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":86:32)
#loc73 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":91:26)
#loc74 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":91:13)
#loc75 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":49:1)
#loc76 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":49:15)
#loc77 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":97:1)
#loc78 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":117:1)
#loc79 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":99:5)
#loc80 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":99:19)
#loc81 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":100:5)
#loc82 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":116:5)
#loc83 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":101:9)
#loc84 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":101:13)
#loc85 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":101:16)
#loc86 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":101:19)
#loc87 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":102:9)
#loc88 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":115:9)
#loc89 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":102:13)
#loc90 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":102:20)
#loc91 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":102:26)
#loc92 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":102:39)
#loc93 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":103:9)
#loc94 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":105:13)
#loc95 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":114:13)
#loc96 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":105:17)
#loc97 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":105:21)
#loc98 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":106:13)
#loc99 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":107:31)
#loc100 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":107:17)
#loc101 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":108:17)
#loc102 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":112:17)
#loc103 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":108:26)
#loc104 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":108:22)
#loc105 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":108:29)
#loc106 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":108:33)
#loc107 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":108:31)
#loc108 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":109:17)
#loc109 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":111:32)
#loc110 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":111:21)
#loc111 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":108:37)
#loc112 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":108:36)
#loc113 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":113:30)
#loc114 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_68b.c":113:17)
#loc115 = loc(fused[#loc1, #loc2])
#loc116 = loc(fused[#loc3, #loc4])
#loc117 = loc(fused[#loc6, #loc7])
#loc118 = loc(fused[#loc8, #loc9])
#loc119 = loc(fused[#loc10, #loc11])
#loc120 = loc(fused[#loc12, #loc13])
#loc121 = loc(fused[#loc14, #loc15])
#loc122 = loc(fused[#loc14, #loc16])
#loc123 = loc(fused[#loc14, #loc17])
#loc124 = loc(fused[#loc18, #loc19])
#loc125 = loc(fused[#loc20, #loc22])
#loc126 = loc(fused[#loc23, #loc19])
#loc127 = loc(fused[#loc25, #loc24])
#loc128 = loc(fused[#loc26, #loc27])
#loc129 = loc(fused[#loc29, #loc28])
#loc130 = loc(fused[#loc30, #loc31])
#loc131 = loc(fused[#loc33, #loc27])
#loc132 = loc(fused[#loc35, #loc34])
#loc133 = loc(fused[#loc37, #loc36])
#loc134 = loc(fused[#loc40, #loc41])
#loc135 = loc(fused[#loc42, #loc43])
#loc136 = loc(fused[#loc44, #loc45])
#loc137 = loc(fused[#loc46, #loc47])
#loc138 = loc(fused[#loc48, #loc49])
#loc139 = loc(fused[#loc48, #loc50])
#loc140 = loc(fused[#loc48, #loc51])
#loc141 = loc(fused[#loc52, #loc53])
#loc142 = loc(fused[#loc54, #loc57])
#loc143 = loc(fused[#loc58, #loc53])
#loc144 = loc(fused[#loc60, #loc59])
#loc145 = loc(fused[#loc61, #loc62])
#loc146 = loc(fused[#loc64, #loc63])
#loc147 = loc(fused[#loc65, #loc66])
#loc148 = loc(fused[#loc68, #loc62])
#loc149 = loc(fused[#loc70, #loc69])
#loc150 = loc(fused[#loc72, #loc71])
#loc151 = loc(fused[#loc75, #loc76])
#loc152 = loc(fused[#loc77, #loc78])
#loc153 = loc(fused[#loc79, #loc80])
#loc154 = loc(fused[#loc81, #loc82])
#loc155 = loc(fused[#loc83, #loc84])
#loc156 = loc(fused[#loc83, #loc85])
#loc157 = loc(fused[#loc83, #loc86])
#loc158 = loc(fused[#loc87, #loc88])
#loc159 = loc(fused[#loc89, #loc92])
#loc160 = loc(fused[#loc93, #loc88])
#loc161 = loc(fused[#loc94, #loc95])
#loc162 = loc(fused[#loc96, #loc97])
#loc163 = loc(fused[#loc98, #loc95])
#loc164 = loc(fused[#loc100, #loc99])
#loc165 = loc(fused[#loc101, #loc102])
#loc166 = loc(fused[#loc104, #loc103])
#loc167 = loc(fused[#loc105, #loc106])
#loc168 = loc(fused[#loc108, #loc102])
#loc169 = loc(fused[#loc110, #loc109])
#loc170 = loc(fused[#loc112, #loc111])
