!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE843_Type_Confusion/CWE843_Type_Confusion__short_63a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @CWE843_Type_Confusion__short_63b_badSink(!cir.ptr<!cir.ptr<!void>>) loc(#loc37)
  cir.func no_proto @CWE843_Type_Confusion__short_63_bad() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["shortBuffer", init] {alignment = 2 : i64} loc(#loc39)
    %1 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc40)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc9)
    cir.store %2, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc41)
    cir.br ^bb1 loc(#loc42)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<8> : !s32i loc(#loc6)
    %4 = cir.cast(integral, %3 : !s32i), !s16i loc(#loc6)
    cir.store %4, %0 : !s16i, !cir.ptr<!s16i> loc(#loc39)
    %5 = cir.cast(bitcast, %0 : !cir.ptr<!s16i>), !cir.ptr<!void> loc(#loc43)
    cir.store %5, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc44)
    cir.br ^bb2 loc(#loc12)
  ^bb2:  // pred: ^bb1
    cir.call @CWE843_Type_Confusion__short_63b_badSink(%1) : (!cir.ptr<!cir.ptr<!void>>) -> () loc(#loc16)
    cir.return loc(#loc4)
  } loc(#loc38)
  cir.func no_proto @CWE843_Type_Confusion__short_63_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc46)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc19)
    cir.return loc(#loc18)
  } loc(#loc45)
  cir.func private @CWE843_Type_Confusion__short_63b_goodG2BSink(!cir.ptr<!cir.ptr<!void>>) loc(#loc47)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intBuffer", init] {alignment = 4 : i64} loc(#loc49)
    %1 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc50)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc29)
    cir.store %2, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc51)
    cir.br ^bb1 loc(#loc52)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<8> : !s32i loc(#loc26)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc49)
    %4 = cir.cast(bitcast, %0 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc53)
    cir.store %4, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc54)
    cir.br ^bb2 loc(#loc32)
  ^bb2:  // pred: ^bb1
    cir.call @CWE843_Type_Confusion__short_63b_goodG2BSink(%1) : (!cir.ptr<!cir.ptr<!void>>) -> () loc(#loc36)
    cir.return loc(#loc24)
  } loc(#loc48)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE843_Type_Confusion/CWE843_Type_Confusion__short_63a.c":0:0)
#loc1 = loc("CWE843_Type_Confusion__short_63a.c":22:1)
#loc2 = loc("CWE843_Type_Confusion__short_63a.c":22:63)
#loc3 = loc("CWE843_Type_Confusion__short_63a.c":24:1)
#loc4 = loc("CWE843_Type_Confusion__short_63a.c":35:1)
#loc5 = loc("CWE843_Type_Confusion__short_63a.c":31:9)
#loc6 = loc("CWE843_Type_Confusion__short_63a.c":31:29)
#loc7 = loc("CWE843_Type_Confusion__short_63a.c":26:5)
#loc8 = loc("CWE843_Type_Confusion__short_63a.c":26:12)
#loc9 = loc("CWE843_Type_Confusion__short_63a.c":28:12)
#loc10 = loc("CWE843_Type_Confusion__short_63a.c":28:5)
#loc11 = loc("CWE843_Type_Confusion__short_63a.c":29:5)
#loc12 = loc("CWE843_Type_Confusion__short_63a.c":33:5)
#loc13 = loc("CWE843_Type_Confusion__short_63a.c":32:16)
#loc14 = loc("CWE843_Type_Confusion__short_63a.c":32:17)
#loc15 = loc("CWE843_Type_Confusion__short_63a.c":32:9)
#loc16 = loc("CWE843_Type_Confusion__short_63a.c":34:5)
#loc17 = loc("CWE843_Type_Confusion__short_63a.c":57:1)
#loc18 = loc("CWE843_Type_Confusion__short_63a.c":60:1)
#loc19 = loc("CWE843_Type_Confusion__short_63a.c":59:5)
#loc20 = loc("CWE843_Type_Confusion__short_63a.c":59:13)
#loc21 = loc("CWE843_Type_Confusion__short_63a.c":42:1)
#loc22 = loc("CWE843_Type_Confusion__short_63a.c":42:64)
#loc23 = loc("CWE843_Type_Confusion__short_63a.c":44:1)
#loc24 = loc("CWE843_Type_Confusion__short_63a.c":55:1)
#loc25 = loc("CWE843_Type_Confusion__short_63a.c":51:9)
#loc26 = loc("CWE843_Type_Confusion__short_63a.c":51:25)
#loc27 = loc("CWE843_Type_Confusion__short_63a.c":46:5)
#loc28 = loc("CWE843_Type_Confusion__short_63a.c":46:12)
#loc29 = loc("CWE843_Type_Confusion__short_63a.c":48:12)
#loc30 = loc("CWE843_Type_Confusion__short_63a.c":48:5)
#loc31 = loc("CWE843_Type_Confusion__short_63a.c":49:5)
#loc32 = loc("CWE843_Type_Confusion__short_63a.c":53:5)
#loc33 = loc("CWE843_Type_Confusion__short_63a.c":52:16)
#loc34 = loc("CWE843_Type_Confusion__short_63a.c":52:17)
#loc35 = loc("CWE843_Type_Confusion__short_63a.c":52:9)
#loc36 = loc("CWE843_Type_Confusion__short_63a.c":54:5)
#loc37 = loc(fused[#loc1, #loc2])
#loc38 = loc(fused[#loc3, #loc4])
#loc39 = loc(fused[#loc5, #loc6])
#loc40 = loc(fused[#loc7, #loc8])
#loc41 = loc(fused[#loc10, #loc9])
#loc42 = loc(fused[#loc11, #loc12])
#loc43 = loc(fused[#loc13, #loc14])
#loc44 = loc(fused[#loc15, #loc14])
#loc45 = loc(fused[#loc17, #loc18])
#loc46 = loc(fused[#loc19, #loc20])
#loc47 = loc(fused[#loc21, #loc22])
#loc48 = loc(fused[#loc23, #loc24])
#loc49 = loc(fused[#loc25, #loc26])
#loc50 = loc(fused[#loc27, #loc28])
#loc51 = loc(fused[#loc30, #loc29])
#loc52 = loc(fused[#loc31, #loc32])
#loc53 = loc(fused[#loc33, #loc34])
#loc54 = loc(fused[#loc35, #loc34])
