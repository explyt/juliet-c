!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc15 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":28:23)
#loc16 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":28:27)
#loc93 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":36:24)
#loc94 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":36:28)
!ty__structSigAtomic = !cir.record<struct "_structSigAtomic" {!s32i} #cir.record.decl.ast>
#loc233 = loc(fused[#loc15, #loc16])
#loc267 = loc(fused[#loc93, #loc94])
module @"/workspaces/juliet-c/testcases/CWE364_Signal_Handler_Race_Condition/CWE364_Signal_Handler_Race_Condition__basic_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global external dsolocal @CWE364_Signal_Handler_Race_Condition__basic_08StructSigAtomicBad = #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> {alignment = 8 : i64} loc(#loc226)
  cir.global external dsolocal @CWE364_Signal_Handler_Race_Condition__basic_08StructSigAtomicGood = #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> {alignment = 8 : i64} loc(#loc227)
  cir.func private @signal(!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc228)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc229)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc230)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc231)
  cir.func internal private @helperBad(%arg0: !s32i loc(fused[#loc15, #loc16])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["sig", init] {alignment = 4 : i64} loc(#loc233)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc17)
    cir.br ^bb1 loc(#loc234)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_08StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc226)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc20)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc21)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc21)
    %5 = cir.cmp(ne, %2, %4) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc235)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc236)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<2> : !s32i loc(#loc23)
    %7 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_08StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc226)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc24)
    %9 = cir.get_member %8[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
    cir.store %6, %9 : !s32i, !cir.ptr<!s32i> loc(#loc237)
    cir.br ^bb3 loc(#loc19)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc19)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc14)
  } loc(#loc232)
  cir.func no_proto @CWE364_Signal_Handler_Race_Condition__basic_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, ["gStructSigAtomic", init] {alignment = 8 : i64} loc(#loc239)
    cir.br ^bb1 loc(#loc240)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc241)
    %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc32)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc32)
    cir.brcond %3 ^bb2, ^bb17 loc(#loc242)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc243)
  ^bb3:  // pred: ^bb2
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc29)
    cir.store %4, %0 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc239)
    %5 = cir.const #cir.int<2> : !s32i loc(#loc37)
    %6 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<(!s32i)>> loc(#loc38)
    %7 = cir.call @signal(%5, %6) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc39)
    cir.br ^bb4 loc(#loc244)
  ^bb4:  // pred: ^bb3
    %8 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_08StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc226)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc42)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc43)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc43)
    %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc245)
    cir.brcond %12 ^bb5, ^bb6 loc(#loc246)
  ^bb5:  // pred: ^bb4
    %13 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc45)
    %14 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_08StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc226)
    %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc46)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc46)
    cir.call @free(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc45)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc47)
    %18 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_08StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc226)
    cir.store %17, %18 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc247)
    cir.br ^bb6 loc(#loc41)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc41)
  ^bb7:  // pred: ^bb6
    %19 = cir.const #cir.int<4> : !u64i loc(#loc248)
    %20 = cir.call @malloc(%19) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc51)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc249)
    cir.store %21, %0 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc250)
    cir.br ^bb8 loc(#loc251)
  ^bb8:  // pred: ^bb7
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc56)
    %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc57)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc57)
    %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc252)
    cir.brcond %25 ^bb9, ^bb10 loc(#loc253)
  ^bb9:  // pred: ^bb8
    %26 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc59)
    %27 = cir.const #cir.int<1> : !s32i loc(#loc60)
    %28 = cir.unary(minus, %27) nsw : !s32i, !s32i loc(#loc61)
    cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc59)
    cir.br ^bb10 loc(#loc55)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc55)
  ^bb11:  // pred: ^bb10
    %29 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc62)
    %30 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_08StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc226)
    cir.store %29, %30 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc254)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc64)
    %32 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_08StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc226)
    %33 = cir.load %32 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc65)
    %34 = cir.get_member %33[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
    cir.store %31, %34 : !s32i, !cir.ptr<!s32i> loc(#loc255)
    %35 = cir.const #cir.int<2> : !s32i loc(#loc66)
    %36 = cir.get_global @helperBad : !cir.ptr<!cir.func<(!s32i)>> loc(#loc67)
    %37 = cir.call @signal(%35, %36) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc68)
    cir.br ^bb12 loc(#loc256)
  ^bb12:  // pred: ^bb11
    %38 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_08StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc226)
    %39 = cir.load %38 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc71)
    %40 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc72)
    %41 = cir.cast(bitcast, %40 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc72)
    %42 = cir.cmp(ne, %39, %41) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc257)
    cir.brcond %42 ^bb13, ^bb14 loc(#loc258)
  ^bb13:  // pred: ^bb12
    %43 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc74)
    %44 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_08StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc226)
    %45 = cir.load %44 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc75)
    %46 = cir.cast(bitcast, %45 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc75)
    cir.call @free(%46) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc74)
    %47 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc76)
    %48 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_08StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc226)
    cir.store %47, %48 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc259)
    cir.br ^bb14 loc(#loc70)
  ^bb14:  // 2 preds: ^bb12, ^bb13
    cir.br ^bb15 loc(#loc70)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc36)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc31)
  ^bb17:  // 2 preds: ^bb1, ^bb16
    cir.br ^bb18 loc(#loc31)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc27)
  } loc(#loc238)
  cir.func no_proto @CWE364_Signal_Handler_Race_Condition__basic_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc261)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc80)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc262)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc82)
    cir.return loc(#loc79)
  } loc(#loc260)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc85)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc86)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc264)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc264)
    cir.return %2 : !s32i loc(#loc264)
  } loc(#loc263)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc265)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc90)
  cir.func internal private @helperGood(%arg0: !s32i loc(fused[#loc93, #loc94])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["sig", init] {alignment = 4 : i64} loc(#loc267)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc95)
    cir.br ^bb1 loc(#loc268)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_08StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc227)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc98)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc99)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc99)
    %5 = cir.cmp(ne, %2, %4) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc269)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc270)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<2> : !s32i loc(#loc101)
    %7 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_08StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc227)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc102)
    %9 = cir.get_member %8[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
    cir.store %6, %9 : !s32i, !cir.ptr<!s32i> loc(#loc271)
    cir.br ^bb3 loc(#loc97)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc97)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc92)
  } loc(#loc266)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, ["gStructSigAtomic", init] {alignment = 8 : i64} loc(#loc273)
    cir.br ^bb1 loc(#loc274)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc275)
    %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc109)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc109)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc276)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc90)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc90)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc114)
    cir.br ^bb18 loc(#loc112)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc277)
  ^bb4:  // pred: ^bb3
    %6 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc106)
    cir.store %6, %0 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc273)
    %7 = cir.const #cir.int<2> : !s32i loc(#loc117)
    %8 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<(!s32i)>> loc(#loc118)
    %9 = cir.call @signal(%7, %8) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc119)
    cir.br ^bb5 loc(#loc278)
  ^bb5:  // pred: ^bb4
    %10 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_08StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc227)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc122)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc123)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc123)
    %14 = cir.cmp(ne, %11, %13) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc279)
    cir.brcond %14 ^bb6, ^bb7 loc(#loc280)
  ^bb6:  // pred: ^bb5
    %15 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc125)
    %16 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_08StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc227)
    %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc126)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc126)
    cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc125)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc127)
    %20 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_08StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc227)
    cir.store %19, %20 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc281)
    cir.br ^bb7 loc(#loc121)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc121)
  ^bb8:  // pred: ^bb7
    %21 = cir.const #cir.int<4> : !u64i loc(#loc282)
    %22 = cir.call @malloc(%21) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc131)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc283)
    cir.store %23, %0 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc284)
    cir.br ^bb9 loc(#loc285)
  ^bb9:  // pred: ^bb8
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc136)
    %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc137)
    %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc137)
    %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc286)
    cir.brcond %27 ^bb10, ^bb11 loc(#loc287)
  ^bb10:  // pred: ^bb9
    %28 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc139)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc140)
    %30 = cir.unary(minus, %29) nsw : !s32i, !s32i loc(#loc141)
    cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc139)
    cir.br ^bb11 loc(#loc135)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc135)
  ^bb12:  // pred: ^bb11
    %31 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc142)
    %32 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_08StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc227)
    cir.store %31, %32 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc288)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc144)
    %34 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_08StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc227)
    %35 = cir.load %34 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc145)
    %36 = cir.get_member %35[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
    cir.store %33, %36 : !s32i, !cir.ptr<!s32i> loc(#loc289)
    %37 = cir.const #cir.int<2> : !s32i loc(#loc146)
    %38 = cir.get_global @helperGood : !cir.ptr<!cir.func<(!s32i)>> loc(#loc147)
    %39 = cir.call @signal(%37, %38) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc148)
    %40 = cir.const #cir.int<2> : !s32i loc(#loc149)
    %41 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<(!s32i)>> loc(#loc150)
    %42 = cir.call @signal(%40, %41) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc151)
    cir.br ^bb13 loc(#loc290)
  ^bb13:  // pred: ^bb12
    %43 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_08StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc227)
    %44 = cir.load %43 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc154)
    %45 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc155)
    %46 = cir.cast(bitcast, %45 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc155)
    %47 = cir.cmp(ne, %44, %46) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc291)
    cir.brcond %47 ^bb14, ^bb15 loc(#loc292)
  ^bb14:  // pred: ^bb13
    %48 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc157)
    %49 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_08StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc227)
    %50 = cir.load %49 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc158)
    %51 = cir.cast(bitcast, %50 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc158)
    cir.call @free(%51) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc157)
    %52 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc159)
    %53 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_08StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc227)
    cir.store %52, %53 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc293)
    cir.br ^bb15 loc(#loc153)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc153)
  ^bb16:  // pred: ^bb15
    %54 = cir.const #cir.int<2> : !s32i loc(#loc161)
    %55 = cir.get_global @helperGood : !cir.ptr<!cir.func<(!s32i)>> loc(#loc162)
    %56 = cir.call @signal(%54, %55) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc163)
    cir.br ^bb17 loc(#loc116)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc108)
  ^bb18:  // 2 preds: ^bb2, ^bb17
    cir.br ^bb19 loc(#loc108)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc104)
  } loc(#loc272)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc165)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc166)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc295)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc295)
    cir.return %2 : !s32i loc(#loc295)
  } loc(#loc294)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, ["gStructSigAtomic", init] {alignment = 8 : i64} loc(#loc297)
    cir.br ^bb1 loc(#loc298)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc299)
    %2 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc174)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc174)
    cir.brcond %3 ^bb2, ^bb17 loc(#loc300)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc301)
  ^bb3:  // pred: ^bb2
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc171)
    cir.store %4, %0 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc297)
    %5 = cir.const #cir.int<2> : !s32i loc(#loc179)
    %6 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<(!s32i)>> loc(#loc180)
    %7 = cir.call @signal(%5, %6) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc181)
    cir.br ^bb4 loc(#loc302)
  ^bb4:  // pred: ^bb3
    %8 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_08StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc227)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc184)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc185)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc185)
    %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc303)
    cir.brcond %12 ^bb5, ^bb6 loc(#loc304)
  ^bb5:  // pred: ^bb4
    %13 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc187)
    %14 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_08StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc227)
    %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc188)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc188)
    cir.call @free(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc187)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc189)
    %18 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_08StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc227)
    cir.store %17, %18 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc305)
    cir.br ^bb6 loc(#loc183)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc183)
  ^bb7:  // pred: ^bb6
    %19 = cir.const #cir.int<4> : !u64i loc(#loc306)
    %20 = cir.call @malloc(%19) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc193)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc307)
    cir.store %21, %0 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc308)
    cir.br ^bb8 loc(#loc309)
  ^bb8:  // pred: ^bb7
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc198)
    %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc199)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc199)
    %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc310)
    cir.brcond %25 ^bb9, ^bb10 loc(#loc311)
  ^bb9:  // pred: ^bb8
    %26 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc201)
    %27 = cir.const #cir.int<1> : !s32i loc(#loc202)
    %28 = cir.unary(minus, %27) nsw : !s32i, !s32i loc(#loc203)
    cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc201)
    cir.br ^bb10 loc(#loc197)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc197)
  ^bb11:  // pred: ^bb10
    %29 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc204)
    %30 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_08StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc227)
    cir.store %29, %30 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc312)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc206)
    %32 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_08StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc227)
    %33 = cir.load %32 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc207)
    %34 = cir.get_member %33[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
    cir.store %31, %34 : !s32i, !cir.ptr<!s32i> loc(#loc313)
    %35 = cir.const #cir.int<2> : !s32i loc(#loc208)
    %36 = cir.get_global @helperGood : !cir.ptr<!cir.func<(!s32i)>> loc(#loc209)
    %37 = cir.call @signal(%35, %36) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc210)
    %38 = cir.const #cir.int<2> : !s32i loc(#loc211)
    %39 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<(!s32i)>> loc(#loc212)
    %40 = cir.call @signal(%38, %39) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc213)
    cir.br ^bb12 loc(#loc314)
  ^bb12:  // pred: ^bb11
    %41 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_08StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc227)
    %42 = cir.load %41 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc216)
    %43 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc217)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc217)
    %45 = cir.cmp(ne, %42, %44) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc315)
    cir.brcond %45 ^bb13, ^bb14 loc(#loc316)
  ^bb13:  // pred: ^bb12
    %46 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc219)
    %47 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_08StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc227)
    %48 = cir.load %47 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc220)
    %49 = cir.cast(bitcast, %48 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc220)
    cir.call @free(%49) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc219)
    %50 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc221)
    %51 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_08StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc227)
    cir.store %50, %51 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc317)
    cir.br ^bb14 loc(#loc215)
  ^bb14:  // 2 preds: ^bb12, ^bb13
    cir.br ^bb15 loc(#loc215)
  ^bb15:  // pred: ^bb14
    %52 = cir.const #cir.int<2> : !s32i loc(#loc223)
    %53 = cir.get_global @helperGood : !cir.ptr<!cir.func<(!s32i)>> loc(#loc224)
    %54 = cir.call @signal(%52, %53) : (!s32i, !cir.ptr<!cir.func<(!s32i)>>) -> !cir.ptr<!cir.func<(!s32i)>> extra(#fn_attr) loc(#loc225)
    cir.br ^bb16 loc(#loc178)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc173)
  ^bb17:  // 2 preds: ^bb1, ^bb16
    cir.br ^bb18 loc(#loc173)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc169)
  } loc(#loc296)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE364_Signal_Handler_Race_Condition/CWE364_Signal_Handler_Race_Condition__basic_08.c":0:0)
#loc1 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":25:1)
#loc2 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":25:85)
#loc3 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":26:1)
#loc4 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":26:86)
#loc5 = loc("/usr/include/signal.h":88:1)
#loc6 = loc("/usr/include/signal.h":89:6)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("/usr/include/stdlib.h":672:1)
#loc10 = loc("/usr/include/stdlib.h":672:45)
#loc11 = loc("/usr/include/stdlib.h":756:1)
#loc12 = loc("/usr/include/stdlib.h":756:70)
#loc13 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":28:1)
#loc14 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":34:1)
#loc17 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":29:1)
#loc18 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":30:5)
#loc19 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":33:5)
#loc20 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":30:9)
#loc21 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":30:77)
#loc22 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":31:5)
#loc23 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":32:81)
#loc24 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":32:9)
#loc25 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":22:18)
#loc26 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":59:1)
#loc27 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":99:1)
#loc28 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":64:13)
#loc29 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":64:49)
#loc30 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":61:5)
#loc31 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":98:5)
#loc32 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":61:8)
#loc33 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":61:26)
#loc34 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":62:5)
#loc35 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":63:9)
#loc36 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":97:9)
#loc37 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":65:20)
#loc38 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":65:28)
#loc39 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":65:13)
#loc40 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":66:13)
#loc41 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":70:13)
#loc42 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":66:17)
#loc43 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":66:85)
#loc44 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":67:13)
#loc45 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":68:17)
#loc46 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":68:22)
#loc47 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":69:84)
#loc48 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":69:17)
#loc49 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":71:57)
#loc50 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":71:79)
#loc51 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":71:50)
#loc52 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":71:80)
#loc53 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":71:13)
#loc54 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":72:13)
#loc55 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":72:53)
#loc56 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":72:17)
#loc57 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":72:37)
#loc58 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":72:43)
#loc59 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":72:44)
#loc60 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":72:50)
#loc61 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":72:49)
#loc62 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":73:80)
#loc63 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":73:13)
#loc64 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":74:85)
#loc65 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":74:13)
#loc66 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":82:20)
#loc67 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":82:28)
#loc68 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":82:13)
#loc69 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":92:13)
#loc70 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":96:13)
#loc71 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":92:17)
#loc72 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":92:85)
#loc73 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":93:13)
#loc74 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":94:17)
#loc75 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":94:22)
#loc76 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":95:84)
#loc77 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":95:17)
#loc78 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":192:1)
#loc79 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":196:1)
#loc80 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":194:5)
#loc81 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":194:11)
#loc82 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":195:5)
#loc83 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":195:11)
#loc84 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":47:1)
#loc85 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":50:1)
#loc86 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":49:12)
#loc87 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":49:5)
#loc88 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc89 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc90 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":111:19)
#loc91 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":36:1)
#loc92 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":42:1)
#loc95 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":37:1)
#loc96 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":38:5)
#loc97 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":41:5)
#loc98 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":38:9)
#loc99 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":38:78)
#loc100 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":39:5)
#loc101 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":40:82)
#loc102 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":40:9)
#loc103 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":106:1)
#loc104 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":149:1)
#loc105 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":116:13)
#loc106 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":116:49)
#loc107 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":108:5)
#loc108 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":148:5)
#loc109 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":108:8)
#loc110 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":108:27)
#loc111 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":109:5)
#loc112 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":112:5)
#loc113 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":114:5)
#loc114 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":111:9)
#loc115 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":115:9)
#loc116 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":147:9)
#loc117 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":117:20)
#loc118 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":117:28)
#loc119 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":117:13)
#loc120 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":118:13)
#loc121 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":122:13)
#loc122 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":118:17)
#loc123 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":118:86)
#loc124 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":119:13)
#loc125 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":120:17)
#loc126 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":120:22)
#loc127 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":121:85)
#loc128 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":121:17)
#loc129 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":123:57)
#loc130 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":123:79)
#loc131 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":123:50)
#loc132 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":123:80)
#loc133 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":123:13)
#loc134 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":124:13)
#loc135 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":124:53)
#loc136 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":124:17)
#loc137 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":124:37)
#loc138 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":124:43)
#loc139 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":124:44)
#loc140 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":124:50)
#loc141 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":124:49)
#loc142 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":125:81)
#loc143 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":125:13)
#loc144 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":126:86)
#loc145 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":126:13)
#loc146 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":134:20)
#loc147 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":134:28)
#loc148 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":134:13)
#loc149 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":140:20)
#loc150 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":140:28)
#loc151 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":140:13)
#loc152 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":141:13)
#loc153 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":145:13)
#loc154 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":141:17)
#loc155 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":141:86)
#loc156 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":142:13)
#loc157 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":143:17)
#loc158 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":143:22)
#loc159 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":144:85)
#loc160 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":144:17)
#loc161 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":146:20)
#loc162 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":146:28)
#loc163 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":146:13)
#loc164 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":52:1)
#loc165 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":55:1)
#loc166 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":54:12)
#loc167 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":54:5)
#loc168 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":152:1)
#loc169 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":190:1)
#loc170 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":157:13)
#loc171 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":157:49)
#loc172 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":154:5)
#loc173 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":189:5)
#loc174 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":154:8)
#loc175 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":154:26)
#loc176 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":155:5)
#loc177 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":156:9)
#loc178 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":188:9)
#loc179 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":158:20)
#loc180 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":158:28)
#loc181 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":158:13)
#loc182 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":159:13)
#loc183 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":163:13)
#loc184 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":159:17)
#loc185 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":159:86)
#loc186 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":160:13)
#loc187 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":161:17)
#loc188 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":161:22)
#loc189 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":162:85)
#loc190 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":162:17)
#loc191 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":164:57)
#loc192 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":164:79)
#loc193 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":164:50)
#loc194 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":164:80)
#loc195 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":164:13)
#loc196 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":165:13)
#loc197 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":165:53)
#loc198 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":165:17)
#loc199 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":165:37)
#loc200 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":165:43)
#loc201 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":165:44)
#loc202 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":165:50)
#loc203 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":165:49)
#loc204 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":166:81)
#loc205 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":166:13)
#loc206 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":167:86)
#loc207 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":167:13)
#loc208 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":175:20)
#loc209 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":175:28)
#loc210 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":175:13)
#loc211 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":181:20)
#loc212 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":181:28)
#loc213 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":181:13)
#loc214 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":182:13)
#loc215 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":186:13)
#loc216 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":182:17)
#loc217 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":182:86)
#loc218 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":183:13)
#loc219 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":184:17)
#loc220 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":184:22)
#loc221 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":185:85)
#loc222 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":185:17)
#loc223 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":187:20)
#loc224 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":187:28)
#loc225 = loc("CWE364_Signal_Handler_Race_Condition__basic_08.c":187:13)
#loc226 = loc(fused[#loc1, #loc2])
#loc227 = loc(fused[#loc3, #loc4])
#loc228 = loc(fused[#loc5, #loc6])
#loc229 = loc(fused[#loc7, #loc8])
#loc230 = loc(fused[#loc9, #loc10])
#loc231 = loc(fused[#loc11, #loc12])
#loc232 = loc(fused[#loc13, #loc14])
#loc234 = loc(fused[#loc18, #loc19])
#loc235 = loc(fused[#loc20, #loc21])
#loc236 = loc(fused[#loc22, #loc19])
#loc237 = loc(fused[#loc24, #loc23])
#loc238 = loc(fused[#loc26, #loc27])
#loc239 = loc(fused[#loc28, #loc29])
#loc240 = loc(fused[#loc30, #loc31])
#loc241 = loc(fused[#loc32, #loc33])
#loc242 = loc(fused[#loc34, #loc31])
#loc243 = loc(fused[#loc35, #loc36])
#loc244 = loc(fused[#loc40, #loc41])
#loc245 = loc(fused[#loc42, #loc43])
#loc246 = loc(fused[#loc44, #loc41])
#loc247 = loc(fused[#loc48, #loc47])
#loc248 = loc(fused[#loc49, #loc50])
#loc249 = loc(fused[#loc51, #loc52])
#loc250 = loc(fused[#loc53, #loc52])
#loc251 = loc(fused[#loc54, #loc55])
#loc252 = loc(fused[#loc56, #loc57])
#loc253 = loc(fused[#loc58, #loc55])
#loc254 = loc(fused[#loc63, #loc62])
#loc255 = loc(fused[#loc65, #loc64])
#loc256 = loc(fused[#loc69, #loc70])
#loc257 = loc(fused[#loc71, #loc72])
#loc258 = loc(fused[#loc73, #loc70])
#loc259 = loc(fused[#loc77, #loc76])
#loc260 = loc(fused[#loc78, #loc79])
#loc261 = loc(fused[#loc80, #loc81])
#loc262 = loc(fused[#loc82, #loc83])
#loc263 = loc(fused[#loc84, #loc85])
#loc264 = loc(fused[#loc87, #loc86])
#loc265 = loc(fused[#loc88, #loc89])
#loc266 = loc(fused[#loc91, #loc92])
#loc268 = loc(fused[#loc96, #loc97])
#loc269 = loc(fused[#loc98, #loc99])
#loc270 = loc(fused[#loc100, #loc97])
#loc271 = loc(fused[#loc102, #loc101])
#loc272 = loc(fused[#loc103, #loc104])
#loc273 = loc(fused[#loc105, #loc106])
#loc274 = loc(fused[#loc107, #loc108])
#loc275 = loc(fused[#loc109, #loc110])
#loc276 = loc(fused[#loc111, #loc112, #loc113, #loc108])
#loc277 = loc(fused[#loc115, #loc116])
#loc278 = loc(fused[#loc120, #loc121])
#loc279 = loc(fused[#loc122, #loc123])
#loc280 = loc(fused[#loc124, #loc121])
#loc281 = loc(fused[#loc128, #loc127])
#loc282 = loc(fused[#loc129, #loc130])
#loc283 = loc(fused[#loc131, #loc132])
#loc284 = loc(fused[#loc133, #loc132])
#loc285 = loc(fused[#loc134, #loc135])
#loc286 = loc(fused[#loc136, #loc137])
#loc287 = loc(fused[#loc138, #loc135])
#loc288 = loc(fused[#loc143, #loc142])
#loc289 = loc(fused[#loc145, #loc144])
#loc290 = loc(fused[#loc152, #loc153])
#loc291 = loc(fused[#loc154, #loc155])
#loc292 = loc(fused[#loc156, #loc153])
#loc293 = loc(fused[#loc160, #loc159])
#loc294 = loc(fused[#loc164, #loc165])
#loc295 = loc(fused[#loc167, #loc166])
#loc296 = loc(fused[#loc168, #loc169])
#loc297 = loc(fused[#loc170, #loc171])
#loc298 = loc(fused[#loc172, #loc173])
#loc299 = loc(fused[#loc174, #loc175])
#loc300 = loc(fused[#loc176, #loc173])
#loc301 = loc(fused[#loc177, #loc178])
#loc302 = loc(fused[#loc182, #loc183])
#loc303 = loc(fused[#loc184, #loc185])
#loc304 = loc(fused[#loc186, #loc183])
#loc305 = loc(fused[#loc190, #loc189])
#loc306 = loc(fused[#loc191, #loc192])
#loc307 = loc(fused[#loc193, #loc194])
#loc308 = loc(fused[#loc195, #loc194])
#loc309 = loc(fused[#loc196, #loc197])
#loc310 = loc(fused[#loc198, #loc199])
#loc311 = loc(fused[#loc200, #loc197])
#loc312 = loc(fused[#loc205, #loc204])
#loc313 = loc(fused[#loc207, #loc206])
#loc314 = loc(fused[#loc214, #loc215])
#loc315 = loc(fused[#loc216, #loc217])
#loc316 = loc(fused[#loc218, #loc215])
#loc317 = loc(fused[#loc222, #loc221])
