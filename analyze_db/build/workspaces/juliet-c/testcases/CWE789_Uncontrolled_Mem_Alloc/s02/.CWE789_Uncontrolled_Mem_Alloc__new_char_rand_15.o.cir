!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc279)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc280)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc5)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc281)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc282)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc10)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc11)
  cir.func @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_153badEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc284)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc16)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc16)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc285)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc20)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc22)
          %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc22)
          cir.store %5, %0 : !u64i, !cir.ptr<!u64i> loc(#loc287)
          cir.break loc(#loc25)
        } loc(#loc21)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc5)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc5)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc27)
          cir.break loc(#loc28)
        } loc(#loc26)
        cir.yield loc(#loc18)
      } loc(#loc18)
    } loc(#loc286)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc31)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc290)
            cir.scope {
              %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc39)
              %6 = cir.const #cir.int<5> : !u64i loc(#loc292)
              %7 = cir.cmp(gt, %5, %6) : !u64i, !cir.bool loc(#loc293)
              cir.if %7 {
                %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc45)
                %9 = cir.call @_Znam(%8) : (!u64i) -> !cir.ptr<!void> loc(#loc46)
                %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc295)
                cir.store %10, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc296)
                %11 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc50)
                %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
                %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc10)
                %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc10)
                %15 = cir.call @strcpy(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc50)
                %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
                cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc53)
                %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
                cir.delete.array %17 : <!s8i> loc(#loc54)
              } else {
                %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc11)
                %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc11)
                cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc55)
              } loc(#loc294)
            } loc(#loc291)
          } loc(#loc289)
          cir.break loc(#loc56)
        } loc(#loc32)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc58)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc58)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc59)
          cir.break loc(#loc60)
        } loc(#loc57)
        cir.yield loc(#loc29)
      } loc(#loc29)
    } loc(#loc288)
    cir.return loc(#loc13)
  } loc(#loc283)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc61)
  cir.func internal private @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15L8goodB2G1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc298)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc66)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc66)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc299)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc70)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc72)
          %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc72)
          cir.store %5, %0 : !u64i, !cir.ptr<!u64i> loc(#loc301)
          cir.break loc(#loc75)
        } loc(#loc71)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc77)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc77)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc78)
          cir.break loc(#loc79)
        } loc(#loc76)
        cir.yield loc(#loc68)
      } loc(#loc68)
    } loc(#loc300)
    cir.scope {
      %3 = cir.const #cir.int<8> : !s32i loc(#loc82)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc84)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc84)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc85)
          cir.break loc(#loc86)
        } loc(#loc83)
        cir.case(default, []) {
          cir.scope {
            %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc304)
            cir.scope {
              %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc94)
              %6 = cir.const #cir.int<5> : !u64i loc(#loc306)
              %7 = cir.cmp(gt, %5, %6) : !u64i, !cir.bool loc(#loc307)
              %8 = cir.ternary(%7, true {
                %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc98)
                %10 = cir.const #cir.int<100> : !s32i loc(#loc99)
                %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc99)
                %12 = cir.cmp(lt, %9, %11) : !u64i, !cir.bool loc(#loc308)
                %13 = cir.ternary(%12, true {
                  %14 = cir.const #true loc(#loc97)
                  cir.yield %14 : !cir.bool loc(#loc97)
                }, false {
                  %14 = cir.const #false loc(#loc97)
                  cir.yield %14 : !cir.bool loc(#loc97)
                }) : (!cir.bool) -> !cir.bool loc(#loc97)
                cir.yield %13 : !cir.bool loc(#loc97)
              }, false {
                %9 = cir.const #false loc(#loc97)
                cir.yield %9 : !cir.bool loc(#loc97)
              }) : (!cir.bool) -> !cir.bool loc(#loc97)
              cir.if %8 {
                %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc103)
                %10 = cir.call @_Znam(%9) : (!u64i) -> !cir.ptr<!void> loc(#loc104)
                %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc310)
                cir.store %11, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc311)
                %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc108)
                %13 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
                %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc110)
                %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc110)
                %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc108)
                %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
                cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc112)
                %18 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
                cir.delete.array %18 : <!s8i> loc(#loc113)
              } else {
                %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc61)
                %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc61)
                cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc114)
              } loc(#loc309)
            } loc(#loc305)
          } loc(#loc303)
          cir.break loc(#loc115)
        } loc(#loc87)
        cir.yield loc(#loc80)
      } loc(#loc80)
    } loc(#loc302)
    cir.return loc(#loc63)
  } loc(#loc297)
  cir.func internal private @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15L8goodB2G2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc313)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc120)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc120)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc314)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc124)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc126)
          %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc126)
          cir.store %5, %0 : !u64i, !cir.ptr<!u64i> loc(#loc316)
          cir.break loc(#loc129)
        } loc(#loc125)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc131)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc131)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc132)
          cir.break loc(#loc133)
        } loc(#loc130)
        cir.yield loc(#loc122)
      } loc(#loc122)
    } loc(#loc315)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc136)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc319)
            cir.scope {
              %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc144)
              %6 = cir.const #cir.int<5> : !u64i loc(#loc321)
              %7 = cir.cmp(gt, %5, %6) : !u64i, !cir.bool loc(#loc322)
              %8 = cir.ternary(%7, true {
                %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc148)
                %10 = cir.const #cir.int<100> : !s32i loc(#loc149)
                %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc149)
                %12 = cir.cmp(lt, %9, %11) : !u64i, !cir.bool loc(#loc323)
                %13 = cir.ternary(%12, true {
                  %14 = cir.const #true loc(#loc147)
                  cir.yield %14 : !cir.bool loc(#loc147)
                }, false {
                  %14 = cir.const #false loc(#loc147)
                  cir.yield %14 : !cir.bool loc(#loc147)
                }) : (!cir.bool) -> !cir.bool loc(#loc147)
                cir.yield %13 : !cir.bool loc(#loc147)
              }, false {
                %9 = cir.const #false loc(#loc147)
                cir.yield %9 : !cir.bool loc(#loc147)
              }) : (!cir.bool) -> !cir.bool loc(#loc147)
              cir.if %8 {
                %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc153)
                %10 = cir.call @_Znam(%9) : (!u64i) -> !cir.ptr<!void> loc(#loc154)
                %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc325)
                cir.store %11, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc326)
                %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc158)
                %13 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc159)
                %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc160)
                %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc160)
                %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc158)
                %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
                cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc162)
                %18 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
                cir.delete.array %18 : <!s8i> loc(#loc163)
              } else {
                %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc164)
                %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc164)
                cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc165)
              } loc(#loc324)
            } loc(#loc320)
          } loc(#loc318)
          cir.break loc(#loc166)
        } loc(#loc137)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc168)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc168)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc169)
          cir.break loc(#loc170)
        } loc(#loc167)
        cir.yield loc(#loc134)
      } loc(#loc134)
    } loc(#loc317)
    cir.return loc(#loc117)
  } loc(#loc312)
  cir.func internal private @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc328)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc175)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc175)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc329)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc179)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc181)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc181)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc182)
          cir.break loc(#loc183)
        } loc(#loc180)
        cir.case(default, []) {
          %4 = cir.const #cir.int<20> : !s32i loc(#loc185)
          %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc185)
          cir.store %5, %0 : !u64i, !cir.ptr<!u64i> loc(#loc331)
          cir.break loc(#loc187)
        } loc(#loc184)
        cir.yield loc(#loc177)
      } loc(#loc177)
    } loc(#loc330)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc190)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc334)
            cir.scope {
              %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc198)
              %6 = cir.const #cir.int<5> : !u64i loc(#loc336)
              %7 = cir.cmp(gt, %5, %6) : !u64i, !cir.bool loc(#loc337)
              cir.if %7 {
                %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc204)
                %9 = cir.call @_Znam(%8) : (!u64i) -> !cir.ptr<!void> loc(#loc205)
                %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc339)
                cir.store %10, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc340)
                %11 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc209)
                %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc210)
                %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc211)
                %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc211)
                %15 = cir.call @strcpy(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc209)
                %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc212)
                cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc213)
                %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc214)
                cir.delete.array %17 : <!s8i> loc(#loc214)
              } else {
                %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc215)
                %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc215)
                cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc216)
              } loc(#loc338)
            } loc(#loc335)
          } loc(#loc333)
          cir.break loc(#loc217)
        } loc(#loc191)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc219)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc219)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc220)
          cir.break loc(#loc221)
        } loc(#loc218)
        cir.yield loc(#loc188)
      } loc(#loc188)
    } loc(#loc332)
    cir.return loc(#loc172)
  } loc(#loc327)
  cir.func internal private @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc342)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc226)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc226)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc343)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc230)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.const #cir.int<20> : !s32i loc(#loc232)
          %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc232)
          cir.store %5, %0 : !u64i, !cir.ptr<!u64i> loc(#loc345)
          cir.break loc(#loc234)
        } loc(#loc231)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc236)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc236)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc237)
          cir.break loc(#loc238)
        } loc(#loc235)
        cir.yield loc(#loc228)
      } loc(#loc228)
    } loc(#loc344)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc241)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc348)
            cir.scope {
              %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc249)
              %6 = cir.const #cir.int<5> : !u64i loc(#loc350)
              %7 = cir.cmp(gt, %5, %6) : !u64i, !cir.bool loc(#loc351)
              cir.if %7 {
                %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc255)
                %9 = cir.call @_Znam(%8) : (!u64i) -> !cir.ptr<!void> loc(#loc256)
                %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc353)
                cir.store %10, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc354)
                %11 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc260)
                %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc261)
                %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc262)
                %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc262)
                %15 = cir.call @strcpy(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc260)
                %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc263)
                cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc264)
                %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc265)
                cir.delete.array %17 : <!s8i> loc(#loc265)
              } else {
                %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc266)
                %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc266)
                cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc267)
              } loc(#loc352)
            } loc(#loc349)
          } loc(#loc347)
          cir.break loc(#loc268)
        } loc(#loc242)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc270)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc270)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc271)
          cir.break loc(#loc272)
        } loc(#loc269)
        cir.yield loc(#loc239)
      } loc(#loc239)
    } loc(#loc346)
    cir.return loc(#loc223)
  } loc(#loc341)
  cir.func @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_154goodEv() extra(#fn_attr1) {
    cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15L8goodB2G1Ev() : () -> () loc(#loc275)
    cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15L8goodB2G2Ev() : () -> () loc(#loc276)
    cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15L8goodG2B1Ev() : () -> () loc(#loc277)
    cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15L8goodG2B2Ev() : () -> () loc(#loc278)
    cir.return loc(#loc274)
  } loc(#loc355)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":43:19)
#loc6 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc7 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc8 = loc("/usr/include/string.h":141:1)
#loc9 = loc("/usr/include/string.h":142:14)
#loc10 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":58:30)
#loc11 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":64:23)
#loc12 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":30:1)
#loc13 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":73:1)
#loc14 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":32:5)
#loc15 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":32:12)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":34:12)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":34:5)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":35:5)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":45:5)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":35:12)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":37:5)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":39:16)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":39:9)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":39:21)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":40:9)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":41:5)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":43:9)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":44:9)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":46:5)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":72:5)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":46:12)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":48:5)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":49:5)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":66:5)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":50:9)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":50:16)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":54:9)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":65:9)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":54:13)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":54:20)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":54:39)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":55:9)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":61:9)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":63:9)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":56:33)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":30:6)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":56:24)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":56:37)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":56:13)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":58:13)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":58:20)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":59:23)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":59:13)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":60:23)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":64:13)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":67:5)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":68:5)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":70:19)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":70:9)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":71:9)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":118:23)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":80:1)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":123:1)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":82:5)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":82:12)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":84:12)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":84:5)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":85:5)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":95:5)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":85:12)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":87:5)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":89:16)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":89:9)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":89:21)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":90:9)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":91:5)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":93:19)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":93:9)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":94:9)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":96:5)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":122:5)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":96:12)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":98:5)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":100:19)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":100:9)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":101:9)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":102:5)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":103:5)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":120:5)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":104:9)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":104:16)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":108:9)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":119:9)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":108:13)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":108:20)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":108:39)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":108:41)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":108:44)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":108:51)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":109:9)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":115:9)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":117:9)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":110:33)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":80:13)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":110:24)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":110:37)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":110:13)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":112:13)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":112:20)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":112:30)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":113:23)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":113:13)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":114:23)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":118:13)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":121:5)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":126:1)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":169:1)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":128:5)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":128:12)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":130:12)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":130:5)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":131:5)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":141:5)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":131:12)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":133:5)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":135:16)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":135:9)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":135:21)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":136:9)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":137:5)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":139:19)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":139:9)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":140:9)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":142:5)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":168:5)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":142:12)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":144:5)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":145:5)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":162:5)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":146:9)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":146:16)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":150:9)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":161:9)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":150:13)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":150:20)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":150:39)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":150:41)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":150:44)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":150:51)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":151:9)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":157:9)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":159:9)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":152:33)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":126:13)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":152:24)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":152:37)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":152:13)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":154:13)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":154:20)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":154:30)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":155:23)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":155:13)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":156:23)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":160:23)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":160:13)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":163:5)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":164:5)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":166:19)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":166:9)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":167:9)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":172:1)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":215:1)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":174:5)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":174:12)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":176:12)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":176:5)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":177:5)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":187:5)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":177:12)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":179:5)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":181:19)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":181:9)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":182:9)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":183:5)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":185:16)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":185:9)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":186:9)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":188:5)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":214:5)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":188:12)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":190:5)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":191:5)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":208:5)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":192:9)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":192:16)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":196:9)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":207:9)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":196:13)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":196:20)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":196:39)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":197:9)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":203:9)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":205:9)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":198:33)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":172:13)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":198:24)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":198:37)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":198:13)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":200:13)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":200:20)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":200:30)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":201:23)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":201:13)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":202:23)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":206:23)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":206:13)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":209:5)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":210:5)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":212:19)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":212:9)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":213:9)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":218:1)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":261:1)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":220:5)
#loc225 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":220:12)
#loc226 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":222:12)
#loc227 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":222:5)
#loc228 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":223:5)
#loc229 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":233:5)
#loc230 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":223:12)
#loc231 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":225:5)
#loc232 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":227:16)
#loc233 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":227:9)
#loc234 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":228:9)
#loc235 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":229:5)
#loc236 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":231:19)
#loc237 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":231:9)
#loc238 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":232:9)
#loc239 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":234:5)
#loc240 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":260:5)
#loc241 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":234:12)
#loc242 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":236:5)
#loc243 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":237:5)
#loc244 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":254:5)
#loc245 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":238:9)
#loc246 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":238:16)
#loc247 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":242:9)
#loc248 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":253:9)
#loc249 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":242:13)
#loc250 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":242:20)
#loc251 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":242:39)
#loc252 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":243:9)
#loc253 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":249:9)
#loc254 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":251:9)
#loc255 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":244:33)
#loc256 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":218:13)
#loc257 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":244:24)
#loc258 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":244:37)
#loc259 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":244:13)
#loc260 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":246:13)
#loc261 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":246:20)
#loc262 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":246:30)
#loc263 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":247:23)
#loc264 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":247:13)
#loc265 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":248:23)
#loc266 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":252:23)
#loc267 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":252:13)
#loc268 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":255:5)
#loc269 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":256:5)
#loc270 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":258:19)
#loc271 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":258:9)
#loc272 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":259:9)
#loc273 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":263:1)
#loc274 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":269:1)
#loc275 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":265:5)
#loc276 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":266:5)
#loc277 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":267:5)
#loc278 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_15.cpp":268:5)
#loc279 = loc(fused[#loc1, #loc2])
#loc280 = loc(fused[#loc3, #loc4])
#loc281 = loc(fused[#loc6, #loc7])
#loc282 = loc(fused[#loc8, #loc9])
#loc283 = loc(fused[#loc12, #loc13])
#loc284 = loc(fused[#loc14, #loc15])
#loc285 = loc(fused[#loc17, #loc16])
#loc286 = loc(fused[#loc18, #loc19])
#loc287 = loc(fused[#loc23, #loc24])
#loc288 = loc(fused[#loc29, #loc30])
#loc289 = loc(fused[#loc33, #loc34])
#loc290 = loc(fused[#loc35, #loc36])
#loc291 = loc(fused[#loc37, #loc38])
#loc292 = loc(fused[#loc40, #loc41])
#loc293 = loc(fused[#loc39, #loc41])
#loc294 = loc(fused[#loc42, #loc43, #loc44, #loc38])
#loc295 = loc(fused[#loc47, #loc48])
#loc296 = loc(fused[#loc49, #loc48])
#loc297 = loc(fused[#loc62, #loc63])
#loc298 = loc(fused[#loc64, #loc65])
#loc299 = loc(fused[#loc67, #loc66])
#loc300 = loc(fused[#loc68, #loc69])
#loc301 = loc(fused[#loc73, #loc74])
#loc302 = loc(fused[#loc80, #loc81])
#loc303 = loc(fused[#loc88, #loc89])
#loc304 = loc(fused[#loc90, #loc91])
#loc305 = loc(fused[#loc92, #loc93])
#loc306 = loc(fused[#loc95, #loc96])
#loc307 = loc(fused[#loc94, #loc96])
#loc308 = loc(fused[#loc98, #loc99])
#loc309 = loc(fused[#loc100, #loc101, #loc102, #loc93])
#loc310 = loc(fused[#loc105, #loc106])
#loc311 = loc(fused[#loc107, #loc106])
#loc312 = loc(fused[#loc116, #loc117])
#loc313 = loc(fused[#loc118, #loc119])
#loc314 = loc(fused[#loc121, #loc120])
#loc315 = loc(fused[#loc122, #loc123])
#loc316 = loc(fused[#loc127, #loc128])
#loc317 = loc(fused[#loc134, #loc135])
#loc318 = loc(fused[#loc138, #loc139])
#loc319 = loc(fused[#loc140, #loc141])
#loc320 = loc(fused[#loc142, #loc143])
#loc321 = loc(fused[#loc145, #loc146])
#loc322 = loc(fused[#loc144, #loc146])
#loc323 = loc(fused[#loc148, #loc149])
#loc324 = loc(fused[#loc150, #loc151, #loc152, #loc143])
#loc325 = loc(fused[#loc155, #loc156])
#loc326 = loc(fused[#loc157, #loc156])
#loc327 = loc(fused[#loc171, #loc172])
#loc328 = loc(fused[#loc173, #loc174])
#loc329 = loc(fused[#loc176, #loc175])
#loc330 = loc(fused[#loc177, #loc178])
#loc331 = loc(fused[#loc186, #loc185])
#loc332 = loc(fused[#loc188, #loc189])
#loc333 = loc(fused[#loc192, #loc193])
#loc334 = loc(fused[#loc194, #loc195])
#loc335 = loc(fused[#loc196, #loc197])
#loc336 = loc(fused[#loc199, #loc200])
#loc337 = loc(fused[#loc198, #loc200])
#loc338 = loc(fused[#loc201, #loc202, #loc203, #loc197])
#loc339 = loc(fused[#loc206, #loc207])
#loc340 = loc(fused[#loc208, #loc207])
#loc341 = loc(fused[#loc222, #loc223])
#loc342 = loc(fused[#loc224, #loc225])
#loc343 = loc(fused[#loc227, #loc226])
#loc344 = loc(fused[#loc228, #loc229])
#loc345 = loc(fused[#loc233, #loc232])
#loc346 = loc(fused[#loc239, #loc240])
#loc347 = loc(fused[#loc243, #loc244])
#loc348 = loc(fused[#loc245, #loc246])
#loc349 = loc(fused[#loc247, #loc248])
#loc350 = loc(fused[#loc250, #loc251])
#loc351 = loc(fused[#loc249, #loc251])
#loc352 = loc(fused[#loc252, #loc253, #loc254, #loc248])
#loc353 = loc(fused[#loc257, #loc258])
#loc354 = loc(fused[#loc259, #loc258])
#loc355 = loc(fused[#loc273, #loc274])
