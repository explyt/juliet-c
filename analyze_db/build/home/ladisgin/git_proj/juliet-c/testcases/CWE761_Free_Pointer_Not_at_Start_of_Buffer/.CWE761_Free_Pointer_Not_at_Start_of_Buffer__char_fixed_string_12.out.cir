!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc109 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":129:10)
#loc110 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":129:14)
#loc111 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":129:20)
#loc112 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":129:32)
#loc257 = loc(fused[#loc109, #loc110])
#loc258 = loc(fused[#loc111, #loc112])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE761_Free_Pointer_Not_at_Start_of_Buffer/CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc215)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc216)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc217)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Fixed String\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc7)
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc218)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc219)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"We have a match!\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc12)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc220)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc221)
  cir.func no_proto @CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc223)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc21)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc22)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc22)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc224)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc225)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc21)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc226)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc227)
    cir.scope {
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
      %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc30)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc30)
      %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc229)
      cir.if %21 {
        %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc32)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc33)
        %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc34)
        cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc32)
      } loc(#loc230)
    } loc(#loc228)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc35)
    %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc35)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc37)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc38)
    cir.store %9, %12 : !s8i, !cir.ptr<!s8i> loc(#loc231)
    %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc39)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
    %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc7)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc7)
    %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc39)
    cir.scope {
      %18 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc233)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc233)
      %20 = cir.call %19() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc43)
      %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc43)
      cir.if %21 {
        cir.scope {
          cir.for : cond {
            %25 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
            %26 = cir.load %25 : !cir.ptr<!s8i>, !s8i loc(#loc51)
            %27 = cir.cast(integral, %26 : !s8i), !s32i loc(#loc51)
            %28 = cir.const #cir.int<0> : !s32i loc(#loc52)
            %29 = cir.cmp(ne, %27, %28) : !s32i, !cir.bool loc(#loc236)
            cir.condition(%29) loc(#loc53)
          } body {
            cir.scope {
              cir.scope {
                %25 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
                %26 = cir.load %25 : !cir.ptr<!s8i>, !s8i loc(#loc58)
                %27 = cir.cast(integral, %26 : !s8i), !s32i loc(#loc58)
                %28 = cir.const #cir.int<83> : !s32i loc(#loc59)
                %29 = cir.cmp(eq, %27, %28) : !s32i, !cir.bool loc(#loc239)
                cir.if %29 {
                  %30 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc12)
                  %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc12)
                  cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc61)
                  cir.break loc(#loc62)
                } loc(#loc240)
              } loc(#loc238)
            } loc(#loc237)
            cir.yield loc(#loc49)
          } step {
            %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
            %26 = cir.const #cir.int<1> : !s32i loc(#loc241)
            %27 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc241)
            cir.store %27, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc241)
            cir.yield loc(#loc235)
          } loc(#loc235)
        } loc(#loc235)
        %22 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc65)
        %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
        %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc66)
        cir.call @free(%24) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc65)
      } else {
        cir.scope {
          %22 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc243)
          cir.scope {
            %26 = cir.const #cir.int<0> : !s32i loc(#loc73)
            %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc73)
            cir.store %27, %22 : !u64i, !cir.ptr<!u64i> loc(#loc245)
            cir.for : cond {
              %28 = cir.load %22 : !cir.ptr<!u64i>, !u64i loc(#loc75)
              %29 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc76)
              %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
              %31 = cir.call @strlen(%30) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc76)
              %32 = cir.cmp(lt, %28, %31) : !u64i, !cir.bool loc(#loc246)
              cir.condition(%32) loc(#loc79)
            } body {
              cir.scope {
                cir.scope {
                  %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
                  %29 = cir.load %22 : !cir.ptr<!u64i>, !u64i loc(#loc84)
                  %30 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %29 : !u64i), !cir.ptr<!s8i> loc(#loc85)
                  %31 = cir.load %30 : !cir.ptr<!s8i>, !s8i loc(#loc83)
                  %32 = cir.cast(integral, %31 : !s8i), !s32i loc(#loc83)
                  %33 = cir.const #cir.int<83> : !s32i loc(#loc86)
                  %34 = cir.cmp(eq, %32, %33) : !s32i, !cir.bool loc(#loc249)
                  cir.if %34 {
                    %35 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc88)
                    %36 = cir.cast(array_to_ptrdecay, %35 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc88)
                    cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc89)
                    cir.break loc(#loc90)
                  } loc(#loc250)
                } loc(#loc248)
              } loc(#loc247)
              cir.yield loc(#loc72)
            } step {
              %28 = cir.load %22 : !cir.ptr<!u64i>, !u64i loc(#loc91)
              %29 = cir.unary(inc, %28) : !u64i, !u64i loc(#loc92)
              cir.store %29, %22 : !u64i, !cir.ptr<!u64i> loc(#loc251)
              cir.yield loc(#loc244)
            } loc(#loc244)
          } loc(#loc244)
          %23 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc93)
          %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
          %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc94)
          cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc93)
        } loc(#loc242)
      } loc(#loc234)
    } loc(#loc232)
    cir.return loc(#loc18)
  } loc(#loc222)
  cir.func no_proto @CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc253)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc97)
    cir.return loc(#loc96)
  } loc(#loc252)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc254)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc255)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc103)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc104)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc105)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc106)
  cir.func @main(%arg0: !s32i loc(fused[#loc109, #loc110]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc111, #loc112])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc257)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc258)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc108)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc113)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc113)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc114)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc115)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc115)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc116)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc103)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc103)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc117)
    %8 = cir.get_global @CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc259)
    cir.call @CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12_good() : () -> () loc(#loc118)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc104)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc104)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc120)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc105)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc105)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc121)
    %13 = cir.get_global @CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc260)
    cir.call @CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12_bad() : () -> () loc(#loc122)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc106)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc106)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc124)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc125)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc261)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc261)
    cir.return %17 : !s32i loc(#loc261)
  } loc(#loc256)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc263)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc131)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc132)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc132)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc264)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc265)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc131)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc266)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc267)
    cir.scope {
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
      %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc140)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc140)
      %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc269)
      cir.if %21 {
        %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc142)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc143)
        %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc144)
        cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc142)
      } loc(#loc270)
    } loc(#loc268)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc145)
    %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc145)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc147)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc148)
    cir.store %9, %12 : !s8i, !cir.ptr<!s8i> loc(#loc271)
    %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc149)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
    %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc151)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc151)
    %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc149)
    cir.scope {
      %18 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc273)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc273)
      %20 = cir.call %19() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc154)
      %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc154)
      cir.if %21 {
        cir.scope {
          %22 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc276)
          cir.scope {
            %26 = cir.const #cir.int<0> : !s32i loc(#loc165)
            %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc165)
            cir.store %27, %22 : !u64i, !cir.ptr<!u64i> loc(#loc278)
            cir.for : cond {
              %28 = cir.load %22 : !cir.ptr<!u64i>, !u64i loc(#loc167)
              %29 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc168)
              %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
              %31 = cir.call @strlen(%30) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc168)
              %32 = cir.cmp(lt, %28, %31) : !u64i, !cir.bool loc(#loc279)
              cir.condition(%32) loc(#loc171)
            } body {
              cir.scope {
                cir.scope {
                  %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc175)
                  %29 = cir.load %22 : !cir.ptr<!u64i>, !u64i loc(#loc176)
                  %30 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %29 : !u64i), !cir.ptr<!s8i> loc(#loc177)
                  %31 = cir.load %30 : !cir.ptr<!s8i>, !s8i loc(#loc175)
                  %32 = cir.cast(integral, %31 : !s8i), !s32i loc(#loc175)
                  %33 = cir.const #cir.int<83> : !s32i loc(#loc178)
                  %34 = cir.cmp(eq, %32, %33) : !s32i, !cir.bool loc(#loc282)
                  cir.if %34 {
                    %35 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc180)
                    %36 = cir.cast(array_to_ptrdecay, %35 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc180)
                    cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc181)
                    cir.break loc(#loc182)
                  } loc(#loc283)
                } loc(#loc281)
              } loc(#loc280)
              cir.yield loc(#loc164)
            } step {
              %28 = cir.load %22 : !cir.ptr<!u64i>, !u64i loc(#loc183)
              %29 = cir.unary(inc, %28) : !u64i, !u64i loc(#loc184)
              cir.store %29, %22 : !u64i, !cir.ptr<!u64i> loc(#loc284)
              cir.yield loc(#loc277)
            } loc(#loc277)
          } loc(#loc277)
          %23 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc185)
          %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc186)
          %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc186)
          cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc185)
        } loc(#loc275)
      } else {
        cir.scope {
          %22 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc286)
          cir.scope {
            %26 = cir.const #cir.int<0> : !s32i loc(#loc193)
            %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc193)
            cir.store %27, %22 : !u64i, !cir.ptr<!u64i> loc(#loc288)
            cir.for : cond {
              %28 = cir.load %22 : !cir.ptr<!u64i>, !u64i loc(#loc195)
              %29 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc196)
              %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc197)
              %31 = cir.call @strlen(%30) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc196)
              %32 = cir.cmp(lt, %28, %31) : !u64i, !cir.bool loc(#loc289)
              cir.condition(%32) loc(#loc199)
            } body {
              cir.scope {
                cir.scope {
                  %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc203)
                  %29 = cir.load %22 : !cir.ptr<!u64i>, !u64i loc(#loc204)
                  %30 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %29 : !u64i), !cir.ptr<!s8i> loc(#loc205)
                  %31 = cir.load %30 : !cir.ptr<!s8i>, !s8i loc(#loc203)
                  %32 = cir.cast(integral, %31 : !s8i), !s32i loc(#loc203)
                  %33 = cir.const #cir.int<83> : !s32i loc(#loc206)
                  %34 = cir.cmp(eq, %32, %33) : !s32i, !cir.bool loc(#loc292)
                  cir.if %34 {
                    %35 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc208)
                    %36 = cir.cast(array_to_ptrdecay, %35 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc208)
                    cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc209)
                    cir.break loc(#loc210)
                  } loc(#loc293)
                } loc(#loc291)
              } loc(#loc290)
              cir.yield loc(#loc192)
            } step {
              %28 = cir.load %22 : !cir.ptr<!u64i>, !u64i loc(#loc211)
              %29 = cir.unary(inc, %28) : !u64i, !u64i loc(#loc212)
              cir.store %29, %22 : !u64i, !cir.ptr<!u64i> loc(#loc294)
              cir.yield loc(#loc287)
            } loc(#loc287)
          } loc(#loc287)
          %23 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc213)
          %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc214)
          %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc214)
          cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc213)
        } loc(#loc285)
      } loc(#loc274)
    } loc(#loc272)
    cir.return loc(#loc128)
  } loc(#loc262)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE761_Free_Pointer_Not_at_Start_of_Buffer/CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":34:18)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc9 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc11 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc12 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":43:27)
#loc13 = loc("/usr/include/stdlib.h":687:1)
#loc14 = loc("/usr/include/stdlib.h":687:32)
#loc15 = loc("/usr/include/string.h":407:1)
#loc16 = loc("/usr/include/string.h":408:33)
#loc17 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":27:1)
#loc18 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":65:1)
#loc19 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":29:5)
#loc20 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":29:12)
#loc21 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":30:20)
#loc22 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":30:27)
#loc23 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":30:31)
#loc24 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":30:42)
#loc25 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":30:43)
#loc26 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":30:5)
#loc27 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":31:5)
#loc28 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":31:33)
#loc29 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":31:9)
#loc30 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":31:17)
#loc31 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":31:23)
#loc32 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":31:24)
#loc33 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":31:30)
#loc34 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":31:29)
#loc35 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":32:15)
#loc36 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":32:5)
#loc37 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":32:10)
#loc38 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":32:11)
#loc39 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":34:5)
#loc40 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":34:12)
#loc41 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":35:5)
#loc42 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":64:5)
#loc43 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":35:8)
#loc44 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":35:33)
#loc45 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":36:5)
#loc46 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":48:5)
#loc47 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":50:5)
#loc48 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":39:9)
#loc49 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":46:9)
#loc50 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":39:17)
#loc51 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":39:16)
#loc52 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":39:25)
#loc53 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":39:22)
#loc54 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":40:9)
#loc55 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":41:13)
#loc56 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":45:13)
#loc57 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":41:18)
#loc58 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":41:17)
#loc59 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":41:26)
#loc60 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":42:13)
#loc61 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":43:17)
#loc62 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":44:17)
#loc63 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":39:35)
#loc64 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":39:31)
#loc65 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":47:9)
#loc66 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":47:14)
#loc67 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":51:9)
#loc68 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":63:9)
#loc69 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":52:13)
#loc70 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":52:20)
#loc71 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":54:13)
#loc72 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":61:13)
#loc73 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":54:20)
#loc74 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":54:18)
#loc75 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":54:23)
#loc76 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":54:27)
#loc77 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":54:34)
#loc78 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":54:38)
#loc79 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":54:25)
#loc80 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":55:13)
#loc81 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":56:17)
#loc82 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":60:17)
#loc83 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":56:21)
#loc84 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":56:26)
#loc85 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":56:27)
#loc86 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":56:32)
#loc87 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":57:17)
#loc88 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":58:31)
#loc89 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":58:21)
#loc90 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":59:21)
#loc91 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":54:42)
#loc92 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":54:41)
#loc93 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":62:13)
#loc94 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":62:18)
#loc95 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":115:1)
#loc96 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":118:1)
#loc97 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":117:5)
#loc98 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":117:13)
#loc99 = loc("/usr/include/stdlib.h":575:1)
#loc100 = loc("/usr/include/stdlib.h":575:41)
#loc101 = loc("/usr/include/time.h":76:1)
#loc102 = loc("/usr/include/time.h":76:38)
#loc103 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":134:15)
#loc104 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":136:15)
#loc105 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":139:15)
#loc106 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":141:15)
#loc107 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":129:1)
#loc108 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":144:1)
#loc113 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":130:1)
#loc114 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":132:27)
#loc115 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":132:22)
#loc116 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":132:5)
#loc117 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":134:5)
#loc118 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":135:5)
#loc119 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":135:75)
#loc120 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":136:5)
#loc121 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":139:5)
#loc122 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":140:5)
#loc123 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":140:74)
#loc124 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":141:5)
#loc125 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":143:12)
#loc126 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":143:5)
#loc127 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":73:1)
#loc128 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":113:1)
#loc129 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":75:5)
#loc130 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":75:12)
#loc131 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":76:20)
#loc132 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":76:27)
#loc133 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":76:31)
#loc134 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":76:42)
#loc135 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":76:43)
#loc136 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":76:5)
#loc137 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":77:5)
#loc138 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":77:33)
#loc139 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":77:9)
#loc140 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":77:17)
#loc141 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":77:23)
#loc142 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":77:24)
#loc143 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":77:30)
#loc144 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":77:29)
#loc145 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":78:15)
#loc146 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":78:5)
#loc147 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":78:10)
#loc148 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":78:11)
#loc149 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":80:5)
#loc150 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":80:12)
#loc151 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":80:18)
#loc152 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":81:5)
#loc153 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":112:5)
#loc154 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":81:8)
#loc155 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":81:33)
#loc156 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":82:5)
#loc157 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":96:5)
#loc158 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":98:5)
#loc159 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":83:9)
#loc160 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":95:9)
#loc161 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":84:13)
#loc162 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":84:20)
#loc163 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":86:13)
#loc164 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":93:13)
#loc165 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":86:20)
#loc166 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":86:18)
#loc167 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":86:23)
#loc168 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":86:27)
#loc169 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":86:34)
#loc170 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":86:38)
#loc171 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":86:25)
#loc172 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":87:13)
#loc173 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":88:17)
#loc174 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":92:17)
#loc175 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":88:21)
#loc176 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":88:26)
#loc177 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":88:27)
#loc178 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":88:32)
#loc179 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":89:17)
#loc180 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":90:31)
#loc181 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":90:21)
#loc182 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":91:21)
#loc183 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":86:42)
#loc184 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":86:41)
#loc185 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":94:13)
#loc186 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":94:18)
#loc187 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":99:9)
#loc188 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":111:9)
#loc189 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":100:13)
#loc190 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":100:20)
#loc191 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":102:13)
#loc192 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":109:13)
#loc193 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":102:20)
#loc194 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":102:18)
#loc195 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":102:23)
#loc196 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":102:27)
#loc197 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":102:34)
#loc198 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":102:38)
#loc199 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":102:25)
#loc200 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":103:13)
#loc201 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":104:17)
#loc202 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":108:17)
#loc203 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":104:21)
#loc204 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":104:26)
#loc205 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":104:27)
#loc206 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":104:32)
#loc207 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":105:17)
#loc208 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":106:31)
#loc209 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":106:21)
#loc210 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":107:21)
#loc211 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":102:42)
#loc212 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":102:41)
#loc213 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":110:13)
#loc214 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_12.c":110:18)
#loc215 = loc(fused[#loc1, #loc2])
#loc216 = loc(fused[#loc3, #loc4])
#loc217 = loc(fused[#loc5, #loc6])
#loc218 = loc(fused[#loc8, #loc9])
#loc219 = loc(fused[#loc10, #loc11])
#loc220 = loc(fused[#loc13, #loc14])
#loc221 = loc(fused[#loc15, #loc16])
#loc222 = loc(fused[#loc17, #loc18])
#loc223 = loc(fused[#loc19, #loc20])
#loc224 = loc(fused[#loc23, #loc24])
#loc225 = loc(fused[#loc22, #loc24])
#loc226 = loc(fused[#loc21, #loc25])
#loc227 = loc(fused[#loc26, #loc25])
#loc228 = loc(fused[#loc27, #loc28])
#loc229 = loc(fused[#loc29, #loc30])
#loc230 = loc(fused[#loc31, #loc28])
#loc231 = loc(fused[#loc36, #loc35])
#loc232 = loc(fused[#loc41, #loc42])
#loc233 = loc(fused[#loc43, #loc44])
#loc234 = loc(fused[#loc45, #loc46, #loc47, #loc42])
#loc235 = loc(fused[#loc48, #loc49])
#loc236 = loc(fused[#loc51, #loc52])
#loc237 = loc(fused[#loc54, #loc49])
#loc238 = loc(fused[#loc55, #loc56])
#loc239 = loc(fused[#loc58, #loc59])
#loc240 = loc(fused[#loc60, #loc56])
#loc241 = loc(fused[#loc64, #loc63])
#loc242 = loc(fused[#loc67, #loc68])
#loc243 = loc(fused[#loc69, #loc70])
#loc244 = loc(fused[#loc71, #loc72])
#loc245 = loc(fused[#loc74, #loc73])
#loc246 = loc(fused[#loc75, #loc78])
#loc247 = loc(fused[#loc80, #loc72])
#loc248 = loc(fused[#loc81, #loc82])
#loc249 = loc(fused[#loc83, #loc86])
#loc250 = loc(fused[#loc87, #loc82])
#loc251 = loc(fused[#loc92, #loc91])
#loc252 = loc(fused[#loc95, #loc96])
#loc253 = loc(fused[#loc97, #loc98])
#loc254 = loc(fused[#loc99, #loc100])
#loc255 = loc(fused[#loc101, #loc102])
#loc256 = loc(fused[#loc107, #loc108])
#loc259 = loc(fused[#loc118, #loc119])
#loc260 = loc(fused[#loc122, #loc123])
#loc261 = loc(fused[#loc126, #loc125])
#loc262 = loc(fused[#loc127, #loc128])
#loc263 = loc(fused[#loc129, #loc130])
#loc264 = loc(fused[#loc133, #loc134])
#loc265 = loc(fused[#loc132, #loc134])
#loc266 = loc(fused[#loc131, #loc135])
#loc267 = loc(fused[#loc136, #loc135])
#loc268 = loc(fused[#loc137, #loc138])
#loc269 = loc(fused[#loc139, #loc140])
#loc270 = loc(fused[#loc141, #loc138])
#loc271 = loc(fused[#loc146, #loc145])
#loc272 = loc(fused[#loc152, #loc153])
#loc273 = loc(fused[#loc154, #loc155])
#loc274 = loc(fused[#loc156, #loc157, #loc158, #loc153])
#loc275 = loc(fused[#loc159, #loc160])
#loc276 = loc(fused[#loc161, #loc162])
#loc277 = loc(fused[#loc163, #loc164])
#loc278 = loc(fused[#loc166, #loc165])
#loc279 = loc(fused[#loc167, #loc170])
#loc280 = loc(fused[#loc172, #loc164])
#loc281 = loc(fused[#loc173, #loc174])
#loc282 = loc(fused[#loc175, #loc178])
#loc283 = loc(fused[#loc179, #loc174])
#loc284 = loc(fused[#loc184, #loc183])
#loc285 = loc(fused[#loc187, #loc188])
#loc286 = loc(fused[#loc189, #loc190])
#loc287 = loc(fused[#loc191, #loc192])
#loc288 = loc(fused[#loc194, #loc193])
#loc289 = loc(fused[#loc195, #loc198])
#loc290 = loc(fused[#loc200, #loc192])
#loc291 = loc(fused[#loc201, #loc202])
#loc292 = loc(fused[#loc203, #loc206])
#loc293 = loc(fused[#loc207, #loc202])
#loc294 = loc(fused[#loc212, #loc211])
