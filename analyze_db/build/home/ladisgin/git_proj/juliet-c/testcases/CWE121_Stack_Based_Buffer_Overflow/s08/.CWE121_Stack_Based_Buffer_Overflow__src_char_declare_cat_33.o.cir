!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc76)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc77)
  cir.func @_ZN59CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc79)
    %1 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc80)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc81)
    %3 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc82)
    %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc83)
    cir.store %2, %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc14)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc17)
    cir.store %5, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc84)
    %6 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc19)
    %8 = cir.const #cir.int<65> : !s8i loc(#loc20)
    %9 = cir.cast(integral, %8 : !s8i), !s32i loc(#loc20)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc21)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc21)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc21)
    cir.libc.memset %13 bytes from %7 set to %9 : !cir.ptr<!void>, !s32i, !u64i loc(#loc85)
    %14 = cir.const #cir.int<0> : !s8i loc(#loc25)
    %15 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc27)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc27)
    %19 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc29)
    cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc86)
    cir.br ^bb1 loc(#loc87)
  ^bb1:  // pred: ^bb0
    %20 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc8)
    %21 = cir.load %20 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc8)
    cir.store %21, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc79)
    cir.br ^bb2 loc(#loc88)
  ^bb2:  // pred: ^bb1
    %22 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc80)
    cir.store %22, %1 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc80)
    %23 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc34)
    %24 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc35)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    %26 = cir.call @strcat(%24, %25) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc34)
    %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc38)
    cir.br ^bb3 loc(#loc33)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc31)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc6)
  } loc(#loc78)
  cir.func internal private @_ZN59CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc90)
    %1 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc91)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc92)
    %3 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc93)
    %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc94)
    cir.store %2, %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc48)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc51)
    cir.store %5, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc95)
    %6 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc53)
    %8 = cir.const #cir.int<65> : !s8i loc(#loc54)
    %9 = cir.cast(integral, %8 : !s8i), !s32i loc(#loc54)
    %10 = cir.const #cir.int<50> : !s32i loc(#loc55)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc55)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc55)
    cir.libc.memset %13 bytes from %7 set to %9 : !cir.ptr<!void>, !s32i, !u64i loc(#loc96)
    %14 = cir.const #cir.int<0> : !s8i loc(#loc59)
    %15 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
    %16 = cir.const #cir.int<50> : !s32i loc(#loc61)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc62)
    %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc61)
    %19 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc63)
    cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc97)
    cir.br ^bb1 loc(#loc98)
  ^bb1:  // pred: ^bb0
    %20 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc42)
    %21 = cir.load %20 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
    cir.store %21, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc90)
    cir.br ^bb2 loc(#loc99)
  ^bb2:  // pred: ^bb1
    %22 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc91)
    cir.store %22, %1 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc91)
    %23 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc68)
    %24 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc69)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
    %26 = cir.call @strcat(%24, %25) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc68)
    %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    cir.br ^bb3 loc(#loc67)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc65)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc40)
  } loc(#loc89)
  cir.func @_ZN59CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN59CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33L7goodG2BEv() : () -> () loc(#loc75)
    cir.return loc(#loc74)
  } loc(#loc100)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":0:0)
#loc1 = loc("/usr/include/string.h":149:1)
#loc2 = loc("/usr/include/string.h":150:14)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":26:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":44:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":36:9)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":36:23)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":38:13)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":38:29)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":28:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":28:12)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":29:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":29:23)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":30:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":30:24)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":31:12)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":31:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":33:12)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":33:18)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":33:23)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":33:27)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":33:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":33:28)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":34:19)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":34:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":34:10)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":34:14)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":34:15)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":35:5)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":43:5)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":37:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":42:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":40:13)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":40:20)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":40:26)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":41:23)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":41:13)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":51:1)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":69:1)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":61:9)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":61:23)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":63:13)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":63:29)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":53:5)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":53:12)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":54:5)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":54:23)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":55:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":55:24)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":56:12)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":56:5)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":58:12)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":58:18)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":58:23)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":58:26)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":58:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":58:27)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":59:18)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":59:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":59:10)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":59:13)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":59:14)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":60:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":68:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":62:9)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":67:9)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":65:13)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":65:20)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":65:26)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":66:23)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":66:13)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":71:1)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":74:1)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_declare_cat_33.cpp":73:5)
#loc76 = loc(fused[#loc1, #loc2])
#loc77 = loc(fused[#loc3, #loc4])
#loc78 = loc(fused[#loc5, #loc6])
#loc79 = loc(fused[#loc7, #loc8])
#loc80 = loc(fused[#loc9, #loc10])
#loc81 = loc(fused[#loc11, #loc12])
#loc82 = loc(fused[#loc13, #loc14])
#loc83 = loc(fused[#loc15, #loc16])
#loc84 = loc(fused[#loc18, #loc17])
#loc85 = loc(fused[#loc23, #loc24])
#loc86 = loc(fused[#loc26, #loc25])
#loc87 = loc(fused[#loc30, #loc31])
#loc88 = loc(fused[#loc32, #loc33])
#loc89 = loc(fused[#loc39, #loc40])
#loc90 = loc(fused[#loc41, #loc42])
#loc91 = loc(fused[#loc43, #loc44])
#loc92 = loc(fused[#loc45, #loc46])
#loc93 = loc(fused[#loc47, #loc48])
#loc94 = loc(fused[#loc49, #loc50])
#loc95 = loc(fused[#loc52, #loc51])
#loc96 = loc(fused[#loc57, #loc58])
#loc97 = loc(fused[#loc60, #loc59])
#loc98 = loc(fused[#loc64, #loc65])
#loc99 = loc(fused[#loc66, #loc67])
#loc100 = loc(fused[#loc73, #loc74])
