!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":110:10)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":110:14)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":110:20)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":110:32)
#loc162 = loc(fused[#loc41, #loc42])
#loc163 = loc(fused[#loc43, #loc44])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2BSink.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc145)
  cir.global "private" constant cir_private @__const.badSink.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc146)
  cir.global "private" internal dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45_badData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc147)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc149)
    %1 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc150)
    %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc151)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc15)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc152)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc17)
    %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc17)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc19)
    %8 = cir.ptr_stride(%6 : !cir.ptr<!s8i>, %7 : !s32i), !cir.ptr<!s8i> loc(#loc20)
    cir.store %5, %8 : !s8i, !cir.ptr<!s8i> loc(#loc153)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
    %10 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc147)
    cir.store %9, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc154)
    %11 = cir.get_global @badSink : !cir.ptr<!cir.func<!void ()>> loc(#loc155)
    cir.call %11() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc23)
    cir.return loc(#loc8)
  } loc(#loc148)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc157)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc27)
    cir.return loc(#loc26)
  } loc(#loc156)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc158)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc159)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc160)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc35)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc36)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc37)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc38)
  cir.func @main(%arg0: !s32i loc(fused[#loc41, #loc42]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc43, #loc44])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc162)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc163)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc40)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc45)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc45)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc46)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc47)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc47)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc48)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc35)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc35)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc49)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45_good : !cir.ptr<!cir.func<!void ()>> loc(#loc164)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45_good() : () -> () loc(#loc50)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc36)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc36)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc37)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc37)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc53)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc165)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45_bad() : () -> () loc(#loc54)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc38)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc38)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc56)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc57)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc166)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc166)
    cir.return %17 : !s32i loc(#loc166)
  } loc(#loc161)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc167)
  cir.func no_proto internal private @badSink() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc169)
    %1 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc147)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc169)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc146)
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc171)
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc172)
      %6 = cir.get_global @__const.badSink.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc146)
      cir.copy %6 to %3 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc146)
      %7 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc70)
      %8 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc71)
      %9 = cir.call @strlen(%8) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc70)
      cir.store %9, %5 : !u64i, !cir.ptr<!u64i> loc(#loc173)
      cir.scope {
        %11 = cir.const #cir.int<0> : !s32i loc(#loc76)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc76)
        cir.store %12, %4 : !u64i, !cir.ptr<!u64i> loc(#loc175)
        cir.for : cond {
          %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc78)
          %14 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc79)
          %15 = cir.const #cir.int<1> : !s32i loc(#loc80)
          %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc80)
          %17 = cir.binop(add, %14, %16) : !u64i loc(#loc176)
          %18 = cir.cmp(lt, %13, %17) : !u64i, !cir.bool loc(#loc177)
          cir.condition(%18) loc(#loc81)
        } body {
          cir.scope {
            %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc83)
            %14 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc84)
            %15 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %13 : !u64i), !cir.ptr<!s8i> loc(#loc84)
            %16 = cir.load %15 : !cir.ptr<!s8i>, !s8i loc(#loc84)
            %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
            %18 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc86)
            %19 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %18 : !u64i), !cir.ptr<!s8i> loc(#loc87)
            cir.store %16, %19 : !s8i, !cir.ptr<!s8i> loc(#loc179)
          } loc(#loc178)
          cir.yield loc(#loc75)
        } step {
          %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc89)
          %14 = cir.unary(inc, %13) : !u64i, !u64i loc(#loc90)
          cir.store %14, %4 : !u64i, !cir.ptr<!u64i> loc(#loc180)
          cir.yield loc(#loc174)
        } loc(#loc174)
      } loc(#loc174)
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
      cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc92)
    } loc(#loc170)
    cir.return loc(#loc62)
  } loc(#loc168)
  cir.global "private" internal dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45_goodG2BData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc181)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc183)
    %1 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc184)
    %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc185)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc103)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc186)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc105)
    %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc105)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc107)
    %8 = cir.ptr_stride(%6 : !cir.ptr<!s8i>, %7 : !s32i), !cir.ptr<!s8i> loc(#loc108)
    cir.store %5, %8 : !s8i, !cir.ptr<!s8i> loc(#loc187)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
    %10 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc181)
    cir.store %9, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc188)
    %11 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void ()>> loc(#loc189)
    cir.call %11() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc111)
    cir.return loc(#loc96)
  } loc(#loc182)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc191)
    %1 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc181)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc191)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc145)
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc193)
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc194)
      %6 = cir.get_global @__const.goodG2BSink.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc145)
      cir.copy %6 to %3 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc145)
      %7 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc122)
      %8 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc123)
      %9 = cir.call @strlen(%8) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc122)
      cir.store %9, %5 : !u64i, !cir.ptr<!u64i> loc(#loc195)
      cir.scope {
        %11 = cir.const #cir.int<0> : !s32i loc(#loc128)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc128)
        cir.store %12, %4 : !u64i, !cir.ptr<!u64i> loc(#loc197)
        cir.for : cond {
          %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc130)
          %14 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc131)
          %15 = cir.const #cir.int<1> : !s32i loc(#loc132)
          %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc132)
          %17 = cir.binop(add, %14, %16) : !u64i loc(#loc198)
          %18 = cir.cmp(lt, %13, %17) : !u64i, !cir.bool loc(#loc199)
          cir.condition(%18) loc(#loc133)
        } body {
          cir.scope {
            %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc135)
            %14 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc136)
            %15 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %13 : !u64i), !cir.ptr<!s8i> loc(#loc136)
            %16 = cir.load %15 : !cir.ptr<!s8i>, !s8i loc(#loc136)
            %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc137)
            %18 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc138)
            %19 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %18 : !u64i), !cir.ptr<!s8i> loc(#loc139)
            cir.store %16, %19 : !s8i, !cir.ptr<!s8i> loc(#loc201)
          } loc(#loc200)
          cir.yield loc(#loc127)
        } step {
          %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc141)
          %14 = cir.unary(inc, %13) : !u64i, !u64i loc(#loc142)
          cir.store %14, %4 : !u64i, !cir.ptr<!u64i> loc(#loc202)
          cir.yield loc(#loc196)
        } loc(#loc196)
      } loc(#loc196)
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc143)
      cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc144)
    } loc(#loc192)
    cir.return loc(#loc114)
  } loc(#loc190)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":70:9)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":70:29)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":35:9)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":35:29)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":26:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":26:15)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":48:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":59:1)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":50:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":50:12)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":51:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":51:26)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":52:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":52:29)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":55:12)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":55:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":56:15)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":56:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":56:10)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":56:11)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":57:79)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":57:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":58:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":58:13)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":96:1)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":99:1)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":98:5)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":98:13)
#loc29 = loc("/usr/include/stdlib.h":575:1)
#loc30 = loc("/usr/include/stdlib.h":575:41)
#loc31 = loc("/usr/include/time.h":76:1)
#loc32 = loc("/usr/include/time.h":76:38)
#loc33 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc34 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":115:15)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":117:15)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":120:15)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":122:15)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":110:1)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":125:1)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":111:1)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":113:27)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":113:22)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":113:5)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":115:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":116:5)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":116:74)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":117:5)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":120:5)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":121:5)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":121:73)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":122:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":124:12)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":124:5)
#loc59 = loc("/usr/include/string.h":407:1)
#loc60 = loc("/usr/include/string.h":408:33)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":31:1)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":46:1)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":33:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":33:19)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":34:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":45:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":36:9)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":36:16)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":36:19)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":37:21)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":37:28)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":37:9)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":37:34)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":40:9)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":43:9)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":40:18)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":40:14)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":40:21)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":40:25)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":40:37)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":40:23)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":41:9)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":42:30)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":42:23)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":42:13)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":42:18)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":42:19)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":42:31)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":40:41)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":40:40)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":44:19)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":44:9)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":27:1)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":27:15)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":83:1)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":94:1)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":85:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":85:12)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":86:5)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":86:26)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":87:5)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":87:29)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":90:12)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":90:5)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":91:15)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":91:5)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":91:10)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":91:11)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":92:83)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":92:5)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":93:5)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":93:17)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":66:1)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":81:1)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":68:5)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":68:19)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":69:5)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":80:5)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":71:9)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":71:16)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":71:19)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":72:21)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":72:28)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":72:9)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":72:34)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":75:9)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":78:9)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":75:18)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":75:14)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":75:21)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":75:25)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":75:37)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":75:23)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":76:9)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":77:30)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":77:23)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":77:13)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":77:18)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":77:19)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":77:31)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":75:41)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":75:40)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":79:19)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_45.c":79:9)
#loc145 = loc(fused[#loc1, #loc2])
#loc146 = loc(fused[#loc3, #loc4])
#loc147 = loc(fused[#loc5, #loc6])
#loc148 = loc(fused[#loc7, #loc8])
#loc149 = loc(fused[#loc9, #loc10])
#loc150 = loc(fused[#loc11, #loc12])
#loc151 = loc(fused[#loc13, #loc14])
#loc152 = loc(fused[#loc16, #loc15])
#loc153 = loc(fused[#loc18, #loc17])
#loc154 = loc(fused[#loc22, #loc21])
#loc155 = loc(fused[#loc23, #loc24])
#loc156 = loc(fused[#loc25, #loc26])
#loc157 = loc(fused[#loc27, #loc28])
#loc158 = loc(fused[#loc29, #loc30])
#loc159 = loc(fused[#loc31, #loc32])
#loc160 = loc(fused[#loc33, #loc34])
#loc161 = loc(fused[#loc39, #loc40])
#loc164 = loc(fused[#loc50, #loc51])
#loc165 = loc(fused[#loc54, #loc55])
#loc166 = loc(fused[#loc58, #loc57])
#loc167 = loc(fused[#loc59, #loc60])
#loc168 = loc(fused[#loc61, #loc62])
#loc169 = loc(fused[#loc63, #loc64])
#loc170 = loc(fused[#loc65, #loc66])
#loc171 = loc(fused[#loc67, #loc68])
#loc172 = loc(fused[#loc67, #loc69])
#loc173 = loc(fused[#loc72, #loc73])
#loc174 = loc(fused[#loc74, #loc75])
#loc175 = loc(fused[#loc77, #loc76])
#loc176 = loc(fused[#loc79, #loc80])
#loc177 = loc(fused[#loc78, #loc80])
#loc178 = loc(fused[#loc82, #loc75])
#loc179 = loc(fused[#loc85, #loc88])
#loc180 = loc(fused[#loc90, #loc89])
#loc181 = loc(fused[#loc93, #loc94])
#loc182 = loc(fused[#loc95, #loc96])
#loc183 = loc(fused[#loc97, #loc98])
#loc184 = loc(fused[#loc99, #loc100])
#loc185 = loc(fused[#loc101, #loc102])
#loc186 = loc(fused[#loc104, #loc103])
#loc187 = loc(fused[#loc106, #loc105])
#loc188 = loc(fused[#loc110, #loc109])
#loc189 = loc(fused[#loc111, #loc112])
#loc190 = loc(fused[#loc113, #loc114])
#loc191 = loc(fused[#loc115, #loc116])
#loc192 = loc(fused[#loc117, #loc118])
#loc193 = loc(fused[#loc119, #loc120])
#loc194 = loc(fused[#loc119, #loc121])
#loc195 = loc(fused[#loc124, #loc125])
#loc196 = loc(fused[#loc126, #loc127])
#loc197 = loc(fused[#loc129, #loc128])
#loc198 = loc(fused[#loc131, #loc132])
#loc199 = loc(fused[#loc130, #loc132])
#loc200 = loc(fused[#loc134, #loc127])
#loc201 = loc(fused[#loc137, #loc140])
#loc202 = loc(fused[#loc142, #loc141])
