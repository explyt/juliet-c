!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fread(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc105)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc106)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc107)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fread failed!\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc7)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc8)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc109)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc110)
    cir.br ^bb1 loc(#loc111)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<6> : !s32i loc(#loc17)
    cir.br ^bb2 loc(#loc15)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %2 : !s32i, ^bb11 [
      6: ^bb4
    ] loc(#loc15)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc18)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc112)
  ^bb5:  // pred: ^bb4
    %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc109)
    cir.store %3, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc109)
    %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc14)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc110)
    cir.br ^bb6 loc(#loc113)
  ^bb6:  // pred: ^bb5
    %5 = cir.get_global @fread : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc23)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc114)
    %8 = cir.const #cir.int<1> : !u64i loc(#loc115)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc28)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc28)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc28)
    %13 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc106)
    %14 = cir.load %13 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc30)
    %15 = cir.call @fread(%7, %8, %12, %14) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc23)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc31)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc31)
    %18 = cir.cmp(eq, %15, %17) : !u64i, !cir.bool loc(#loc116)
    cir.brcond %18 ^bb7, ^bb8 loc(#loc117)
  ^bb7:  // pred: ^bb6
    %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc7)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc7)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc33)
    cir.br ^bb8 loc(#loc22)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc22)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc20)
  ^bb10:  // pred: ^bb9
    cir.br ^bb12 loc(#loc34)
  ^bb11:  // pred: ^bb2
    %21 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc8)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc8)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc35)
    cir.br ^bb12 loc(#loc36)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc16)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc10)
  } loc(#loc108)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc119)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc39)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc120)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc41)
    cir.return loc(#loc38)
  } loc(#loc118)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc122)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc123)
    cir.br ^bb1 loc(#loc124)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<5> : !s32i loc(#loc51)
    cir.br ^bb2 loc(#loc49)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %2 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc49)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc52)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %3 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc53)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc54)
    cir.br ^bb12 loc(#loc55)
  ^bb5:  // pred: ^bb2
    cir.br ^bb6 loc(#loc125)
  ^bb6:  // pred: ^bb5
    %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc122)
    cir.store %5, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc122)
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc48)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc123)
    cir.br ^bb7 loc(#loc126)
  ^bb7:  // pred: ^bb6
    %7 = cir.get_global @fread : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc60)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc127)
    %10 = cir.const #cir.int<1> : !u64i loc(#loc128)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc65)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc66)
    %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc65)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc65)
    %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc106)
    %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc67)
    %17 = cir.call @fread(%9, %10, %14, %16) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc60)
    %18 = cir.const #cir.int<100> : !s32i loc(#loc68)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc69)
    %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc68)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc68)
    %22 = cir.cmp(ne, %17, %21) : !u64i, !cir.bool loc(#loc129)
    cir.brcond %22 ^bb8, ^bb9 loc(#loc130)
  ^bb8:  // pred: ^bb7
    %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc71)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    cir.br ^bb9 loc(#loc59)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc59)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc57)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc73)
  ^bb12:  // 2 preds: ^bb4, ^bb11
    cir.br ^bb13 loc(#loc50)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc44)
  } loc(#loc121)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc132)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc133)
    cir.br ^bb1 loc(#loc134)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<6> : !s32i loc(#loc82)
    cir.br ^bb2 loc(#loc80)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %2 : !s32i, ^bb11 [
      6: ^bb4
    ] loc(#loc80)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc83)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc135)
  ^bb5:  // pred: ^bb4
    %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc132)
    cir.store %3, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc132)
    %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc79)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc133)
    cir.br ^bb6 loc(#loc136)
  ^bb6:  // pred: ^bb5
    %5 = cir.get_global @fread : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc88)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc137)
    %8 = cir.const #cir.int<1> : !u64i loc(#loc138)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc93)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc94)
    %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc93)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc93)
    %13 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc106)
    %14 = cir.load %13 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc95)
    %15 = cir.call @fread(%7, %8, %12, %14) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc88)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc96)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc97)
    %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc96)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc96)
    %20 = cir.cmp(ne, %15, %19) : !u64i, !cir.bool loc(#loc139)
    cir.brcond %20 ^bb7, ^bb8 loc(#loc140)
  ^bb7:  // pred: ^bb6
    %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc99)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc99)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc100)
    cir.br ^bb8 loc(#loc87)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc87)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc85)
  ^bb10:  // pred: ^bb9
    cir.br ^bb12 loc(#loc101)
  ^bb11:  // pred: ^bb2
    %23 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc102)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc102)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc103)
    cir.br ^bb12 loc(#loc104)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc81)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc75)
  } loc(#loc131)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":0:0)
#loc1 = loc("/usr/include/stdio.h":728:1)
#loc2 = loc("/usr/include/stdio.h":730:3)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":38:23)
#loc8 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":44:19)
#loc9 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":24:1)
#loc10 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":47:1)
#loc11 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":32:9)
#loc12 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":32:32)
#loc13 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":33:9)
#loc14 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":33:23)
#loc15 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":26:5)
#loc16 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":46:5)
#loc17 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":26:12)
#loc18 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":28:5)
#loc19 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":29:5)
#loc20 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":40:5)
#loc21 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":36:9)
#loc22 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":39:9)
#loc23 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":36:13)
#loc24 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":36:27)
#loc25 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":36:19)
#loc26 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":36:33)
#loc27 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":36:44)
#loc28 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":36:56)
#loc29 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":36:60)
#loc30 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":36:64)
#loc31 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":36:74)
#loc32 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":37:9)
#loc33 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":38:13)
#loc34 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":41:5)
#loc35 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":44:9)
#loc36 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":45:9)
#loc37 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":103:1)
#loc38 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":107:1)
#loc39 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":105:5)
#loc40 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":105:11)
#loc41 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":106:5)
#loc42 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":106:11)
#loc43 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":54:1)
#loc44 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":76:1)
#loc45 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":66:9)
#loc46 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":66:32)
#loc47 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":67:9)
#loc48 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":67:23)
#loc49 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":56:5)
#loc50 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":75:5)
#loc51 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":56:12)
#loc52 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":58:5)
#loc53 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":60:19)
#loc54 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":60:9)
#loc55 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":61:9)
#loc56 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":63:5)
#loc57 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":73:5)
#loc58 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":69:9)
#loc59 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":72:9)
#loc60 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":69:13)
#loc61 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":69:27)
#loc62 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":69:19)
#loc63 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":69:33)
#loc64 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":69:44)
#loc65 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":69:56)
#loc66 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":69:60)
#loc67 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":69:64)
#loc68 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":69:74)
#loc69 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":69:78)
#loc70 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":70:9)
#loc71 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":71:23)
#loc72 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":71:13)
#loc73 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":74:5)
#loc74 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":79:1)
#loc75 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":101:1)
#loc76 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":87:9)
#loc77 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":87:32)
#loc78 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":88:9)
#loc79 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":88:23)
#loc80 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":81:5)
#loc81 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":100:5)
#loc82 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":81:12)
#loc83 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":83:5)
#loc84 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":84:5)
#loc85 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":94:5)
#loc86 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":90:9)
#loc87 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":93:9)
#loc88 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":90:13)
#loc89 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":90:27)
#loc90 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":90:19)
#loc91 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":90:33)
#loc92 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":90:44)
#loc93 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":90:56)
#loc94 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":90:60)
#loc95 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":90:64)
#loc96 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":90:74)
#loc97 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":90:78)
#loc98 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":91:9)
#loc99 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":92:23)
#loc100 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":92:13)
#loc101 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":95:5)
#loc102 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":98:19)
#loc103 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":98:9)
#loc104 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_15.c":99:9)
#loc105 = loc(fused[#loc1, #loc2])
#loc106 = loc(fused[#loc3, #loc4])
#loc107 = loc(fused[#loc5, #loc6])
#loc108 = loc(fused[#loc9, #loc10])
#loc109 = loc(fused[#loc11, #loc12])
#loc110 = loc(fused[#loc13, #loc14])
#loc111 = loc(fused[#loc15, #loc16])
#loc112 = loc(fused[#loc19, #loc20])
#loc113 = loc(fused[#loc21, #loc22])
#loc114 = loc(fused[#loc25, #loc24])
#loc115 = loc(fused[#loc26, #loc27])
#loc116 = loc(fused[#loc23, #loc31])
#loc117 = loc(fused[#loc32, #loc22])
#loc118 = loc(fused[#loc37, #loc38])
#loc119 = loc(fused[#loc39, #loc40])
#loc120 = loc(fused[#loc41, #loc42])
#loc121 = loc(fused[#loc43, #loc44])
#loc122 = loc(fused[#loc45, #loc46])
#loc123 = loc(fused[#loc47, #loc48])
#loc124 = loc(fused[#loc49, #loc50])
#loc125 = loc(fused[#loc56, #loc57])
#loc126 = loc(fused[#loc58, #loc59])
#loc127 = loc(fused[#loc62, #loc61])
#loc128 = loc(fused[#loc63, #loc64])
#loc129 = loc(fused[#loc60, #loc69])
#loc130 = loc(fused[#loc70, #loc59])
#loc131 = loc(fused[#loc74, #loc75])
#loc132 = loc(fused[#loc76, #loc77])
#loc133 = loc(fused[#loc78, #loc79])
#loc134 = loc(fused[#loc80, #loc81])
#loc135 = loc(fused[#loc84, #loc85])
#loc136 = loc(fused[#loc86, #loc87])
#loc137 = loc(fused[#loc90, #loc89])
#loc138 = loc(fused[#loc91, #loc92])
#loc139 = loc(fused[#loc88, #loc97])
#loc140 = loc(fused[#loc98, #loc87])
