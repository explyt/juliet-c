!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" external @globalTrue : !s32i {alignment = 4 : i64} loc(#loc135)
  cir.func private @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc136)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc137)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc138)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc140)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc141)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc15)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc142)
    cir.scope {
      %3 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc135)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc19)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc19)
      cir.if %5 {
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc21)
        %8 = cir.const #cir.int<65> : !s32i loc(#loc22)
        %9 = cir.const #cir.int<100> : !s32i loc(#loc23)
        %10 = cir.const #cir.int<1> : !s32i loc(#loc24)
        %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc23)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc23)
        cir.libc.memset %12 bytes from %7 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc145)
        %13 = cir.const #cir.int<0> : !s32i loc(#loc27)
        %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc27)
        %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
        %16 = cir.const #cir.int<100> : !s32i loc(#loc29)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc30)
        %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc29)
        %19 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc31)
        cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc146)
      } loc(#loc144)
    } loc(#loc143)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc148)
      %4 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc148)
      cir.store %4, %3 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc148)
      %5 = cir.get_global @strncpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc36)
      %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc37)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
      %8 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc39)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
      %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc39)
      %11 = cir.call @strncpy(%6, %7, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc36)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc41)
      %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc41)
      %14 = cir.const #cir.int<50> : !s32i loc(#loc42)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc43)
      %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc42)
      %17 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc44)
      %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc44)
      cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc149)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
      cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc46)
    } loc(#loc147)
    cir.return loc(#loc10)
  } loc(#loc139)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc151)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc49)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc152)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc51)
    cir.return loc(#loc48)
  } loc(#loc150)
  cir.global "private" external @globalFalse : !s32i {alignment = 4 : i64} loc(#loc153)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc55)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc155)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc156)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc62)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc157)
    cir.scope {
      %3 = cir.get_global @globalFalse : !cir.ptr<!s32i> loc(#loc153)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc66)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc66)
      cir.if %5 {
        %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc55)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc55)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc70)
      } else {
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc71)
        %8 = cir.const #cir.int<65> : !s32i loc(#loc72)
        %9 = cir.const #cir.int<50> : !s32i loc(#loc73)
        %10 = cir.const #cir.int<1> : !s32i loc(#loc74)
        %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc73)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc73)
        cir.libc.memset %12 bytes from %7 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc160)
        %13 = cir.const #cir.int<0> : !s32i loc(#loc77)
        %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc77)
        %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
        %16 = cir.const #cir.int<50> : !s32i loc(#loc79)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc80)
        %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc79)
        %19 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc81)
        cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc161)
      } loc(#loc159)
    } loc(#loc158)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc163)
      %4 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc163)
      cir.store %4, %3 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc163)
      %5 = cir.get_global @strncpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc86)
      %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc87)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
      %8 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc89)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
      %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc89)
      %11 = cir.call @strncpy(%6, %7, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc86)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc91)
      %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc91)
      %14 = cir.const #cir.int<50> : !s32i loc(#loc92)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc93)
      %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc92)
      %17 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc94)
      %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc94)
      cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc164)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
      cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    } loc(#loc162)
    cir.return loc(#loc57)
  } loc(#loc154)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc166)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc167)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc103)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc168)
    cir.scope {
      %3 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc135)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc107)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc107)
      cir.if %5 {
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc109)
        %8 = cir.const #cir.int<65> : !s32i loc(#loc110)
        %9 = cir.const #cir.int<50> : !s32i loc(#loc111)
        %10 = cir.const #cir.int<1> : !s32i loc(#loc112)
        %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc111)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc111)
        cir.libc.memset %12 bytes from %7 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc171)
        %13 = cir.const #cir.int<0> : !s32i loc(#loc115)
        %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc115)
        %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
        %16 = cir.const #cir.int<50> : !s32i loc(#loc117)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc118)
        %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc117)
        %19 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc119)
        cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc172)
      } loc(#loc170)
    } loc(#loc169)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc174)
      %4 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc174)
      cir.store %4, %3 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc174)
      %5 = cir.get_global @strncpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc124)
      %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc125)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
      %8 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc127)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
      %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc127)
      %11 = cir.call @strncpy(%6, %7, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc124)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc129)
      %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc129)
      %14 = cir.const #cir.int<50> : !s32i loc(#loc130)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc131)
      %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc130)
      %17 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc132)
      %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc132)
      cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc175)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
      cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc134)
    } loc(#loc173)
    cir.return loc(#loc98)
  } loc(#loc165)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":116:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":116:12)
#loc3 = loc("/usr/include/string.h":144:1)
#loc4 = loc("/usr/include/string.h":146:14)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":23:1)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":41:1)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":25:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":25:12)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":26:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":26:24)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":27:12)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":27:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":28:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":33:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":28:8)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":29:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":31:16)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":31:22)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":31:27)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":31:31)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":31:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":31:32)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":32:23)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":32:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":32:14)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":32:18)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":32:19)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":34:5)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":40:5)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":35:9)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":35:25)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":37:9)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":37:17)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":37:23)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":37:29)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":37:36)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":38:22)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":38:14)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":38:17)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":38:9)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":39:19)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":39:9)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":94:1)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":98:1)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":96:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":96:14)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":97:5)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":97:14)
#loc53 = loc("../../../testcasesupport/std_testcase.h":117:1)
#loc54 = loc("../../../testcasesupport/std_testcase.h":117:12)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":56:19)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":48:1)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":71:1)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":50:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":50:12)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":51:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":51:24)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":52:12)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":52:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":53:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":63:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":53:8)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":54:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":57:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":59:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":56:9)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":61:16)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":61:22)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":61:27)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":61:30)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":61:9)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":61:31)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":62:22)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":62:9)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":62:14)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":62:17)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":62:18)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":64:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":70:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":65:9)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":65:25)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":67:9)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":67:17)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":67:23)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":67:29)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":67:36)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":68:22)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":68:14)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":68:17)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":68:9)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":69:19)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":69:9)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":74:1)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":92:1)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":76:5)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":76:12)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":77:5)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":77:24)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":78:12)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":78:5)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":79:5)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":84:5)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":79:8)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":80:5)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":82:16)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":82:22)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":82:27)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":82:30)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":82:9)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":82:31)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":83:22)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":83:9)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":83:14)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":83:17)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":83:18)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":85:5)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":91:5)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":86:9)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":86:25)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":88:9)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":88:17)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":88:23)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":88:29)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":88:36)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":89:22)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":89:14)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":89:17)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":89:9)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":90:19)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_10.c":90:9)
#loc135 = loc(fused[#loc1, #loc2])
#loc136 = loc(fused[#loc3, #loc4])
#loc137 = loc(fused[#loc5, #loc6])
#loc138 = loc(fused[#loc7, #loc8])
#loc139 = loc(fused[#loc9, #loc10])
#loc140 = loc(fused[#loc11, #loc12])
#loc141 = loc(fused[#loc13, #loc14])
#loc142 = loc(fused[#loc16, #loc15])
#loc143 = loc(fused[#loc17, #loc18])
#loc144 = loc(fused[#loc20, #loc18])
#loc145 = loc(fused[#loc25, #loc26])
#loc146 = loc(fused[#loc28, #loc27])
#loc147 = loc(fused[#loc32, #loc33])
#loc148 = loc(fused[#loc34, #loc35])
#loc149 = loc(fused[#loc44, #loc41])
#loc150 = loc(fused[#loc47, #loc48])
#loc151 = loc(fused[#loc49, #loc50])
#loc152 = loc(fused[#loc51, #loc52])
#loc153 = loc(fused[#loc53, #loc54])
#loc154 = loc(fused[#loc56, #loc57])
#loc155 = loc(fused[#loc58, #loc59])
#loc156 = loc(fused[#loc60, #loc61])
#loc157 = loc(fused[#loc63, #loc62])
#loc158 = loc(fused[#loc64, #loc65])
#loc159 = loc(fused[#loc67, #loc68, #loc69, #loc65])
#loc160 = loc(fused[#loc75, #loc76])
#loc161 = loc(fused[#loc78, #loc77])
#loc162 = loc(fused[#loc82, #loc83])
#loc163 = loc(fused[#loc84, #loc85])
#loc164 = loc(fused[#loc94, #loc91])
#loc165 = loc(fused[#loc97, #loc98])
#loc166 = loc(fused[#loc99, #loc100])
#loc167 = loc(fused[#loc101, #loc102])
#loc168 = loc(fused[#loc104, #loc103])
#loc169 = loc(fused[#loc105, #loc106])
#loc170 = loc(fused[#loc108, #loc106])
#loc171 = loc(fused[#loc113, #loc114])
#loc172 = loc(fused[#loc116, #loc115])
#loc173 = loc(fused[#loc120, #loc121])
#loc174 = loc(fused[#loc122, #loc123])
#loc175 = loc(fused[#loc132, #loc129])
