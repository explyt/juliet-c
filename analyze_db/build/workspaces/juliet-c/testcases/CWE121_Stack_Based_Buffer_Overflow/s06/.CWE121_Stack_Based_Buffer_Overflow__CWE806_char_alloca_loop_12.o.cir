!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc149)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc150)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc151)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc153)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc154)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen"] {alignment = 8 : i64} loc(#loc155)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc156)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc157)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc17)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc17)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc17)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc17)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc17)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc17)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc17)
    cir.store %11, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc157)
    %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
    cir.store %12, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc158)
    cir.br ^bb1 loc(#loc159)
  ^bb1:  // pred: ^bb0
    %13 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc160)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc160)
    %15 = cir.call %14() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc22)
    %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc22)
    cir.brcond %16 ^bb2, ^bb3 loc(#loc161)
  ^bb2:  // pred: ^bb1
    %17 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc27)
    %19 = cir.const #cir.int<65> : !s32i loc(#loc28)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc29)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc29)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc29)
    cir.libc.memset %23 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc162)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc33)
    %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc33)
    %26 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
    %27 = cir.const #cir.int<100> : !s32i loc(#loc35)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc35)
    %30 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc37)
    cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc163)
    cir.br ^bb4 loc(#loc25)
  ^bb3:  // pred: ^bb1
    %31 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc38)
    %33 = cir.const #cir.int<65> : !s32i loc(#loc39)
    %34 = cir.const #cir.int<50> : !s32i loc(#loc40)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc41)
    %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc40)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc40)
    cir.libc.memset %37 bytes from %32 set to %33 : !cir.ptr<!void>, !s32i, !u64i loc(#loc164)
    %38 = cir.const #cir.int<0> : !s32i loc(#loc44)
    %39 = cir.cast(integral, %38 : !s32i), !s8i loc(#loc44)
    %40 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
    %41 = cir.const #cir.int<50> : !s32i loc(#loc46)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc47)
    %43 = cir.binop(sub, %41, %42) nsw : !s32i loc(#loc46)
    %44 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %43 : !s32i), !cir.ptr<!s8i> loc(#loc48)
    cir.store %39, %44 : !s8i, !cir.ptr<!s8i> loc(#loc165)
    cir.br ^bb4 loc(#loc21)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc21)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc166)
  ^bb6:  // pred: ^bb5
    %45 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc153)
    cir.store %45, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc153)
    %46 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc51)
    %47 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
    %48 = cir.call @strlen(%47) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc51)
    cir.store %48, %2 : !u64i, !cir.ptr<!u64i> loc(#loc167)
    cir.br ^bb7 loc(#loc168)
  ^bb7:  // pred: ^bb6
    %49 = cir.const #cir.int<0> : !s32i loc(#loc57)
    %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc57)
    cir.store %50, %1 : !u64i, !cir.ptr<!u64i> loc(#loc169)
    cir.br ^bb8 loc(#loc168)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %51 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc59)
    %52 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc60)
    %53 = cir.cmp(lt, %51, %52) : !u64i, !cir.bool loc(#loc170)
    cir.brcond %53 ^bb9, ^bb13 loc(#loc61)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc171)
  ^bb10:  // pred: ^bb9
    %54 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
    %55 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc64)
    %56 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %55 : !u64i), !cir.ptr<!s8i> loc(#loc65)
    %57 = cir.load %56 : !cir.ptr<!s8i>, !s8i loc(#loc63)
    %58 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc66)
    %59 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc67)
    %60 = cir.ptr_stride(%59 : !cir.ptr<!s8i>, %58 : !u64i), !cir.ptr<!s8i> loc(#loc67)
    cir.store %57, %60 : !s8i, !cir.ptr<!s8i> loc(#loc172)
    cir.br ^bb11 loc(#loc56)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc56)
  ^bb12:  // pred: ^bb11
    %61 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc68)
    %62 = cir.unary(inc, %61) : !u64i, !u64i loc(#loc69)
    cir.store %62, %1 : !u64i, !cir.ptr<!u64i> loc(#loc173)
    cir.br ^bb8 loc(#loc168)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc56)
  ^bb14:  // pred: ^bb13
    %63 = cir.const #cir.int<0> : !s32i loc(#loc70)
    %64 = cir.cast(integral, %63 : !s32i), !s8i loc(#loc70)
    %65 = cir.const #cir.int<50> : !s32i loc(#loc71)
    %66 = cir.const #cir.int<1> : !s32i loc(#loc72)
    %67 = cir.binop(sub, %65, %66) nsw : !s32i loc(#loc71)
    %68 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc73)
    %69 = cir.ptr_stride(%68 : !cir.ptr<!s8i>, %67 : !s32i), !cir.ptr<!s8i> loc(#loc73)
    cir.store %64, %69 : !s8i, !cir.ptr<!s8i> loc(#loc174)
    %70 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
    cir.call @printLine(%70) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    cir.br ^bb15 loc(#loc50)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc8)
  } loc(#loc152)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc176)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc78)
    cir.return loc(#loc77)
  } loc(#loc175)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc178)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc179)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen"] {alignment = 8 : i64} loc(#loc180)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc181)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc182)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc90)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc90)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc90)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc90)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc90)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc90)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc90)
    cir.store %11, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc182)
    %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
    cir.store %12, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc183)
    cir.br ^bb1 loc(#loc184)
  ^bb1:  // pred: ^bb0
    %13 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc185)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc185)
    %15 = cir.call %14() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc95)
    %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc95)
    cir.brcond %16 ^bb2, ^bb3 loc(#loc186)
  ^bb2:  // pred: ^bb1
    %17 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc100)
    %19 = cir.const #cir.int<65> : !s32i loc(#loc101)
    %20 = cir.const #cir.int<50> : !s32i loc(#loc102)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc103)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc102)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc102)
    cir.libc.memset %23 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc187)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc106)
    %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc106)
    %26 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
    %27 = cir.const #cir.int<50> : !s32i loc(#loc108)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc109)
    %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc108)
    %30 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc110)
    cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc188)
    cir.br ^bb4 loc(#loc98)
  ^bb3:  // pred: ^bb1
    %31 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc111)
    %33 = cir.const #cir.int<65> : !s32i loc(#loc112)
    %34 = cir.const #cir.int<50> : !s32i loc(#loc113)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc114)
    %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc113)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc113)
    cir.libc.memset %37 bytes from %32 set to %33 : !cir.ptr<!void>, !s32i, !u64i loc(#loc189)
    %38 = cir.const #cir.int<0> : !s32i loc(#loc117)
    %39 = cir.cast(integral, %38 : !s32i), !s8i loc(#loc117)
    %40 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
    %41 = cir.const #cir.int<50> : !s32i loc(#loc119)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc120)
    %43 = cir.binop(sub, %41, %42) nsw : !s32i loc(#loc119)
    %44 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %43 : !s32i), !cir.ptr<!s8i> loc(#loc121)
    cir.store %39, %44 : !s8i, !cir.ptr<!s8i> loc(#loc190)
    cir.br ^bb4 loc(#loc94)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc94)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc191)
  ^bb6:  // pred: ^bb5
    %45 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc178)
    cir.store %45, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc178)
    %46 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc124)
    %47 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
    %48 = cir.call @strlen(%47) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc124)
    cir.store %48, %2 : !u64i, !cir.ptr<!u64i> loc(#loc192)
    cir.br ^bb7 loc(#loc193)
  ^bb7:  // pred: ^bb6
    %49 = cir.const #cir.int<0> : !s32i loc(#loc130)
    %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc130)
    cir.store %50, %1 : !u64i, !cir.ptr<!u64i> loc(#loc194)
    cir.br ^bb8 loc(#loc193)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %51 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc132)
    %52 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc133)
    %53 = cir.cmp(lt, %51, %52) : !u64i, !cir.bool loc(#loc195)
    cir.brcond %53 ^bb9, ^bb13 loc(#loc134)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc196)
  ^bb10:  // pred: ^bb9
    %54 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
    %55 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc137)
    %56 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %55 : !u64i), !cir.ptr<!s8i> loc(#loc138)
    %57 = cir.load %56 : !cir.ptr<!s8i>, !s8i loc(#loc136)
    %58 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc139)
    %59 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc140)
    %60 = cir.ptr_stride(%59 : !cir.ptr<!s8i>, %58 : !u64i), !cir.ptr<!s8i> loc(#loc140)
    cir.store %57, %60 : !s8i, !cir.ptr<!s8i> loc(#loc197)
    cir.br ^bb11 loc(#loc129)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc129)
  ^bb12:  // pred: ^bb11
    %61 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc141)
    %62 = cir.unary(inc, %61) : !u64i, !u64i loc(#loc142)
    cir.store %62, %1 : !u64i, !cir.ptr<!u64i> loc(#loc198)
    cir.br ^bb8 loc(#loc193)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc129)
  ^bb14:  // pred: ^bb13
    %63 = cir.const #cir.int<0> : !s32i loc(#loc143)
    %64 = cir.cast(integral, %63 : !s32i), !s8i loc(#loc143)
    %65 = cir.const #cir.int<50> : !s32i loc(#loc144)
    %66 = cir.const #cir.int<1> : !s32i loc(#loc145)
    %67 = cir.binop(sub, %65, %66) nsw : !s32i loc(#loc144)
    %68 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc146)
    %69 = cir.ptr_stride(%68 : !cir.ptr<!s8i>, %67 : !s32i), !cir.ptr<!s8i> loc(#loc146)
    cir.store %64, %69 : !s8i, !cir.ptr<!s8i> loc(#loc199)
    %70 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
    cir.call @printLine(%70) : (!cir.ptr<!s8i>) -> () loc(#loc148)
    cir.br ^bb15 loc(#loc123)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc81)
  } loc(#loc177)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":23:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":52:1)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":41:9)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":41:25)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":42:9)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":42:16)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":42:19)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":25:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":25:12)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":26:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":26:33)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":27:12)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":27:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":28:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":39:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":28:8)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":28:33)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":29:5)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":33:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":35:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":31:16)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":31:22)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":31:27)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":31:31)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":31:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":31:32)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":32:23)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":32:9)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":32:14)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":32:18)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":32:19)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":37:16)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":37:22)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":37:27)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":37:30)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":37:9)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":37:31)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":38:22)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":38:9)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":38:14)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":38:17)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":38:18)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":40:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":51:5)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":43:19)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":43:26)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":43:9)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":43:30)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":45:9)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":48:9)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":45:18)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":45:14)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":45:21)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":45:25)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":45:23)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":46:9)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":47:23)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":47:28)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":47:29)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":47:18)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":47:13)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":45:35)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":45:34)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":49:22)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":49:14)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":49:17)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":49:9)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":50:19)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":50:9)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":91:1)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":94:1)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":93:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":93:13)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":60:1)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":89:1)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":78:9)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":78:25)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":79:9)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":79:16)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":79:19)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":62:5)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":62:12)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":63:5)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":63:33)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":64:12)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":64:5)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":65:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":76:5)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":65:8)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":65:33)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":66:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":70:5)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":72:5)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":68:16)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":68:22)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":68:27)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":68:30)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":68:9)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":68:31)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":69:22)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":69:9)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":69:14)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":69:17)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":69:18)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":74:16)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":74:22)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":74:27)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":74:30)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":74:9)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":74:31)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":75:22)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":75:9)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":75:14)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":75:17)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":75:18)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":77:5)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":88:5)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":80:19)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":80:26)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":80:9)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":80:30)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":82:9)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":85:9)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":82:18)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":82:14)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":82:21)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":82:25)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":82:23)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":83:9)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":84:23)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":84:28)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":84:29)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":84:18)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":84:13)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":82:35)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":82:34)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":86:22)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":86:14)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":86:17)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":86:9)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":87:19)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_12.c":87:9)
#loc149 = loc(fused[#loc1, #loc2])
#loc150 = loc(fused[#loc3, #loc4])
#loc151 = loc(fused[#loc5, #loc6])
#loc152 = loc(fused[#loc7, #loc8])
#loc153 = loc(fused[#loc9, #loc10])
#loc154 = loc(fused[#loc11, #loc12])
#loc155 = loc(fused[#loc11, #loc13])
#loc156 = loc(fused[#loc14, #loc15])
#loc157 = loc(fused[#loc16, #loc17])
#loc158 = loc(fused[#loc19, #loc18])
#loc159 = loc(fused[#loc20, #loc21])
#loc160 = loc(fused[#loc22, #loc23])
#loc161 = loc(fused[#loc24, #loc25, #loc26, #loc21])
#loc162 = loc(fused[#loc31, #loc32])
#loc163 = loc(fused[#loc34, #loc33])
#loc164 = loc(fused[#loc42, #loc43])
#loc165 = loc(fused[#loc45, #loc44])
#loc166 = loc(fused[#loc49, #loc50])
#loc167 = loc(fused[#loc53, #loc54])
#loc168 = loc(fused[#loc55, #loc56])
#loc169 = loc(fused[#loc58, #loc57])
#loc170 = loc(fused[#loc59, #loc60])
#loc171 = loc(fused[#loc62, #loc56])
#loc172 = loc(fused[#loc67, #loc65])
#loc173 = loc(fused[#loc69, #loc68])
#loc174 = loc(fused[#loc73, #loc70])
#loc175 = loc(fused[#loc76, #loc77])
#loc176 = loc(fused[#loc78, #loc79])
#loc177 = loc(fused[#loc80, #loc81])
#loc178 = loc(fused[#loc82, #loc83])
#loc179 = loc(fused[#loc84, #loc85])
#loc180 = loc(fused[#loc84, #loc86])
#loc181 = loc(fused[#loc87, #loc88])
#loc182 = loc(fused[#loc89, #loc90])
#loc183 = loc(fused[#loc92, #loc91])
#loc184 = loc(fused[#loc93, #loc94])
#loc185 = loc(fused[#loc95, #loc96])
#loc186 = loc(fused[#loc97, #loc98, #loc99, #loc94])
#loc187 = loc(fused[#loc104, #loc105])
#loc188 = loc(fused[#loc107, #loc106])
#loc189 = loc(fused[#loc115, #loc116])
#loc190 = loc(fused[#loc118, #loc117])
#loc191 = loc(fused[#loc122, #loc123])
#loc192 = loc(fused[#loc126, #loc127])
#loc193 = loc(fused[#loc128, #loc129])
#loc194 = loc(fused[#loc131, #loc130])
#loc195 = loc(fused[#loc132, #loc133])
#loc196 = loc(fused[#loc135, #loc129])
#loc197 = loc(fused[#loc140, #loc138])
#loc198 = loc(fused[#loc142, #loc141])
#loc199 = loc(fused[#loc146, #loc143])
