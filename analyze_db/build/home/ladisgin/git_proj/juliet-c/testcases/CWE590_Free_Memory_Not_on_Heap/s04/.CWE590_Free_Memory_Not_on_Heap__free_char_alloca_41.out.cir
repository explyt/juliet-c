!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":23:66)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":23:73)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":48:70)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":48:77)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":90:10)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":90:14)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":90:20)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":90:32)
#loc125 = loc(fused[#loc7, #loc8])
#loc135 = loc(fused[#loc41, #loc42])
#loc141 = loc(fused[#loc62, #loc63])
#loc142 = loc(fused[#loc64, #loc65])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc122)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc123)
  cir.func @CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41_badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc125)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc9)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc10)
    cir.call @printLine(%1) : (!cir.ptr<!s8i>) -> () loc(#loc11)
    %2 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc12)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc13)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc13)
    cir.call @free(%4) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc12)
    cir.return loc(#loc6)
  } loc(#loc124)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc127)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc18)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc128)
    cir.scope {
      %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc130)
      %4 = cir.const #cir.int<100> : !s32i loc(#loc23)
      %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc23)
      %6 = cir.const #cir.int<1> : !u64i loc(#loc23)
      %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc23)
      %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc23)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc23)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc23)
      cir.store %10, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc130)
      %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc24)
      %13 = cir.const #cir.int<65> : !s32i loc(#loc25)
      %14 = cir.const #cir.int<100> : !s32i loc(#loc26)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc27)
      %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc26)
      %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc26)
      cir.libc.memset %17 bytes from %12 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc131)
      %18 = cir.const #cir.int<0> : !s32i loc(#loc30)
      %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc30)
      %20 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
      %21 = cir.const #cir.int<100> : !s32i loc(#loc32)
      %22 = cir.const #cir.int<1> : !s32i loc(#loc33)
      %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc32)
      %24 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc34)
      cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc132)
      %25 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
      cir.store %25, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc133)
    } loc(#loc129)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41_badSink(%2) : (!cir.ptr<!s8i>) -> () loc(#loc38)
    cir.return loc(#loc15)
  } loc(#loc126)
  cir.func @CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41_goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc41, #loc42])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc135)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc43)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%1) : (!cir.ptr<!s8i>) -> () loc(#loc45)
    %2 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc46)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc47)
    cir.call @free(%4) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc46)
    cir.return loc(#loc40)
  } loc(#loc134)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc137)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc50)
    cir.return loc(#loc49)
  } loc(#loc136)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc138)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc139)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc56)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc57)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc58)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc59)
  cir.func @main(%arg0: !s32i loc(fused[#loc62, #loc63]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc64, #loc65])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc141)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc142)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc61)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc66)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc66)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc67)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc68)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc68)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc69)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc56)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %8 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41_good : !cir.ptr<!cir.func<!void ()>> loc(#loc143)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41_good() : () -> () loc(#loc71)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc57)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc58)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    %13 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc144)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41_bad() : () -> () loc(#loc75)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc59)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc77)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc78)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc145)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc145)
    cir.return %17 : !s32i loc(#loc145)
  } loc(#loc140)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc146)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc82)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc147)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc149)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc89)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc150)
    cir.scope {
      %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc152)
      %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc95)
      %5 = cir.const #cir.int<100> : !s32i loc(#loc96)
      %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc96)
      %7 = cir.const #cir.int<1> : !u64i loc(#loc153)
      %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc154)
      %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc95)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc155)
      cir.store %10, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc152)
      cir.scope {
        %26 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc101)
        %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc102)
        %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc102)
        %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc157)
        cir.if %29 {
          %30 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc82)
          %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc82)
          cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc104)
          %32 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc105)
          %33 = cir.const #cir.int<1> : !s32i loc(#loc106)
          cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc105)
        } loc(#loc158)
      } loc(#loc156)
      %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc107)
      %13 = cir.const #cir.int<65> : !s32i loc(#loc108)
      %14 = cir.const #cir.int<100> : !s32i loc(#loc109)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc110)
      %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc109)
      %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc109)
      cir.libc.memset %17 bytes from %12 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc159)
      %18 = cir.const #cir.int<0> : !s32i loc(#loc113)
      %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc113)
      %20 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc114)
      %21 = cir.const #cir.int<100> : !s32i loc(#loc115)
      %22 = cir.const #cir.int<1> : !s32i loc(#loc116)
      %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc115)
      %24 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc117)
      cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc160)
      %25 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
      cir.store %25, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc161)
    } loc(#loc151)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc120)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41_goodG2BSink(%2) : (!cir.ptr<!s8i>) -> () loc(#loc121)
    cir.return loc(#loc86)
  } loc(#loc148)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("/usr/include/stdlib.h":687:1)
#loc4 = loc("/usr/include/stdlib.h":687:32)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":23:1)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":28:1)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":24:1)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":25:15)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":25:5)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":27:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":27:10)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":30:1)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":42:1)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":32:5)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":32:12)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":33:12)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":33:5)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":34:5)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":40:5)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":36:9)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":36:37)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":37:16)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":37:28)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":37:33)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":37:37)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":37:9)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":37:38)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":38:29)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":38:9)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":38:20)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":38:24)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":38:25)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":39:16)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":39:9)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":41:65)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":41:5)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":48:1)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":53:1)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":49:1)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":50:15)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":50:5)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":52:5)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":52:10)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":75:1)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":78:1)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":77:5)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":77:13)
#loc52 = loc("/usr/include/stdlib.h":575:1)
#loc53 = loc("/usr/include/stdlib.h":575:41)
#loc54 = loc("/usr/include/time.h":76:1)
#loc55 = loc("/usr/include/time.h":76:38)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":95:15)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":97:15)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":100:15)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":102:15)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":90:1)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":105:1)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":91:1)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":93:27)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":93:22)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":93:5)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":95:5)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":96:5)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":96:62)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":97:5)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":100:5)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":101:5)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":101:61)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":102:5)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":104:12)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":104:5)
#loc80 = loc("/usr/include/stdlib.h":672:1)
#loc81 = loc("/usr/include/stdlib.h":672:45)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":65:23)
#loc83 = loc("/usr/include/stdlib.h":756:1)
#loc84 = loc("/usr/include/stdlib.h":756:70)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":56:1)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":73:1)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":58:5)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":58:12)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":59:12)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":59:5)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":60:5)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":71:5)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":62:9)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":62:60)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":62:37)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":62:44)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":62:48)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":62:59)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":63:9)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":67:9)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":63:13)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":63:27)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":64:9)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":65:13)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":66:13)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":66:18)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":68:16)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":68:28)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":68:33)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":68:37)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":68:9)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":68:38)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":69:29)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":69:9)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":69:20)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":69:24)
#loc117 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":69:25)
#loc118 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":70:16)
#loc119 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":70:9)
#loc120 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":72:69)
#loc121 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_41.c":72:5)
#loc122 = loc(fused[#loc1, #loc2])
#loc123 = loc(fused[#loc3, #loc4])
#loc124 = loc(fused[#loc5, #loc6])
#loc126 = loc(fused[#loc14, #loc15])
#loc127 = loc(fused[#loc16, #loc17])
#loc128 = loc(fused[#loc19, #loc18])
#loc129 = loc(fused[#loc20, #loc21])
#loc130 = loc(fused[#loc22, #loc23])
#loc131 = loc(fused[#loc28, #loc29])
#loc132 = loc(fused[#loc31, #loc30])
#loc133 = loc(fused[#loc36, #loc35])
#loc134 = loc(fused[#loc39, #loc40])
#loc136 = loc(fused[#loc48, #loc49])
#loc137 = loc(fused[#loc50, #loc51])
#loc138 = loc(fused[#loc52, #loc53])
#loc139 = loc(fused[#loc54, #loc55])
#loc140 = loc(fused[#loc60, #loc61])
#loc143 = loc(fused[#loc71, #loc72])
#loc144 = loc(fused[#loc75, #loc76])
#loc145 = loc(fused[#loc79, #loc78])
#loc146 = loc(fused[#loc80, #loc81])
#loc147 = loc(fused[#loc83, #loc84])
#loc148 = loc(fused[#loc85, #loc86])
#loc149 = loc(fused[#loc87, #loc88])
#loc150 = loc(fused[#loc90, #loc89])
#loc151 = loc(fused[#loc91, #loc92])
#loc152 = loc(fused[#loc93, #loc94])
#loc153 = loc(fused[#loc97, #loc98])
#loc154 = loc(fused[#loc96, #loc98])
#loc155 = loc(fused[#loc95, #loc94])
#loc156 = loc(fused[#loc99, #loc100])
#loc157 = loc(fused[#loc101, #loc102])
#loc158 = loc(fused[#loc103, #loc100])
#loc159 = loc(fused[#loc111, #loc112])
#loc160 = loc(fused[#loc114, #loc113])
#loc161 = loc(fused[#loc119, #loc118])
