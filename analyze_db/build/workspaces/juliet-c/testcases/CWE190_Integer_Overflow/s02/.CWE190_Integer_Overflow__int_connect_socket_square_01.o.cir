!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc96 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":86:44)
#loc220 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":174:44)
#loc243 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":196:24)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_square_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc256)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc257)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc258)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc259)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc260)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc261)
  cir.func private @close(!s32i) -> !s32i loc(#loc262)
  cir.func private @printIntLine(!s32i) loc(#loc263)
  cir.func no_proto @CWE190_Integer_Overflow__int_connect_socket_square_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc265)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc266)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc267)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc268)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc269)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc270)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc32)
    cir.store %6, %5 : !s32i, !cir.ptr<!s32i> loc(#loc271)
    cir.br ^bb1 loc(#loc272)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc25)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc267)
    cir.br ^bb2 loc(#loc273)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc273)
  ^bb3:  // pred: ^bb26
    %9 = cir.const #cir.int<0> : !s32i loc(#loc38)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc38)
    cir.brcond %10 ^bb4, ^bb27 loc(#loc38)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc274)
  ^bb5:  // pred: ^bb4
    %11 = cir.const #cir.int<2> : !s32i loc(#loc41)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc42)
    %13 = cir.const #cir.int<6> : !s32i loc(#loc43)
    %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc44)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc275)
    cir.br ^bb6 loc(#loc276)
  ^bb6:  // pred: ^bb5
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc49)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc50)
    %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc50)
    %18 = cir.cmp(eq, %15, %17) : !s32i, !cir.bool loc(#loc277)
    cir.brcond %18 ^bb7, ^bb8 loc(#loc278)
  ^bb7:  // pred: ^bb6
    cir.br ^bb27 loc(#loc52)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc48)
  ^bb9:  // pred: ^bb8
    %19 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc279)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc55)
    %21 = cir.const #cir.int<16> : !u64i loc(#loc280)
    cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc281)
    %22 = cir.const #cir.int<2> : !s32i loc(#loc60)
    %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc60)
    %24 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc61)
    cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc282)
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
    %27 = cir.call @inet_addr(%26) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc63)
    %28 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc64)
    %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc65)
    cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc283)
    %30 = cir.const #cir.int<27015> : !s32i loc(#loc68)
    %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc68)
    %32 = cir.call @htons(%31) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc69)
    %33 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc70)
    cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc284)
    cir.br ^bb10 loc(#loc285)
  ^bb10:  // pred: ^bb9
    %34 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc75)
    %35 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc286)
    %36 = cir.const #cir.int<16> : !u64i loc(#loc287)
    %37 = cir.cast(integral, %36 : !u64i), !u32i loc(#loc287)
    %38 = cir.call @connect(%34, %35, %37) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc80)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc81)
    %40 = cir.unary(minus, %39) nsw : !s32i, !s32i loc(#loc81)
    %41 = cir.cmp(eq, %38, %40) : !s32i, !cir.bool loc(#loc288)
    cir.brcond %41 ^bb11, ^bb12 loc(#loc289)
  ^bb11:  // pred: ^bb10
    cir.br ^bb27 loc(#loc83)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc74)
  ^bb13:  // pred: ^bb12
    %42 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc84)
    %43 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc85)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc85)
    %45 = cir.const #cir.int<3> : !s32i loc(#loc86)
    %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc86)
    %47 = cir.const #cir.int<4> : !u64i loc(#loc86)
    %48 = cir.binop(mul, %46, %47) : !u64i loc(#loc86)
    %49 = cir.const #cir.int<2> : !s32i loc(#loc86)
    %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc86)
    %51 = cir.binop(add, %48, %50) : !u64i loc(#loc86)
    %52 = cir.const #cir.int<1> : !s32i loc(#loc87)
    %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc87)
    %54 = cir.binop(sub, %51, %53) : !u64i loc(#loc290)
    %55 = cir.const #cir.int<0> : !s32i loc(#loc88)
    %56 = cir.call @recv(%42, %44, %54, %55) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc89)
    %57 = cir.cast(integral, %56 : !s64i), !s32i loc(#loc89)
    cir.store %57, %0 : !s32i, !cir.ptr<!s32i> loc(#loc291)
    cir.br ^bb14 loc(#loc292)
  ^bb14:  // pred: ^bb13
    %58 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc94)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc95)
    %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc95)
    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc293)
    cir.brcond %61 ^bb15, ^bb16 loc(#loc96)
  ^bb15:  // pred: ^bb14
    %62 = cir.const #true loc(#loc96)
    cir.br ^bb21(%62 : !cir.bool) loc(#loc96)
  ^bb16:  // pred: ^bb14
    %63 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc97)
    %64 = cir.const #cir.int<0> : !s32i loc(#loc98)
    %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc294)
    cir.brcond %65 ^bb17, ^bb18 loc(#loc96)
  ^bb17:  // pred: ^bb16
    %66 = cir.const #true loc(#loc96)
    cir.br ^bb19(%66 : !cir.bool) loc(#loc96)
  ^bb18:  // pred: ^bb16
    %67 = cir.const #false loc(#loc96)
    cir.br ^bb19(%67 : !cir.bool) loc(#loc96)
  ^bb19(%68: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":86:44)):  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc96)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21(%68 : !cir.bool) loc(#loc96)
  ^bb21(%69: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":86:44)):  // 2 preds: ^bb15, ^bb20
    cir.br ^bb22 loc(#loc96)
  ^bb22:  // pred: ^bb21
    cir.brcond %69 ^bb23, ^bb24 loc(#loc295)
  ^bb23:  // pred: ^bb22
    cir.br ^bb27 loc(#loc100)
  ^bb24:  // pred: ^bb22
    cir.br ^bb25 loc(#loc93)
  ^bb25:  // pred: ^bb24
    %70 = cir.const #cir.int<0> : !s32i loc(#loc101)
    %71 = cir.cast(integral, %70 : !s32i), !s8i loc(#loc101)
    %72 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc102)
    %73 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc103)
    %74 = cir.ptr_stride(%73 : !cir.ptr<!s8i>, %72 : !s32i), !cir.ptr<!s8i> loc(#loc103)
    cir.store %71, %74 : !s8i, !cir.ptr<!s8i> loc(#loc296)
    %75 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc104)
    %76 = cir.call @atoi(%75) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc105)
    cir.store %76, %5 : !s32i, !cir.ptr<!s32i> loc(#loc297)
    cir.br ^bb26 loc(#loc40)
  ^bb26:  // pred: ^bb25
    cir.br ^bb3 loc(#loc37)
  ^bb27:  // 4 preds: ^bb3, ^bb7, ^bb11, ^bb23
    cir.br ^bb28 loc(#loc37)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc298)
  ^bb29:  // pred: ^bb28
    %77 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc110)
    %78 = cir.const #cir.int<1> : !s32i loc(#loc111)
    %79 = cir.unary(minus, %78) nsw : !s32i, !s32i loc(#loc111)
    %80 = cir.cmp(ne, %77, %79) : !s32i, !cir.bool loc(#loc299)
    cir.brcond %80 ^bb30, ^bb31 loc(#loc300)
  ^bb30:  // pred: ^bb29
    %81 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc113)
    %82 = cir.call @close(%81) : (!s32i) -> !s32i loc(#loc114)
    cir.br ^bb31 loc(#loc109)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc109)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc35)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc301)
  ^bb34:  // pred: ^bb33
    %83 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    %84 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc29)
    %85 = cir.binop(mul, %83, %84) nsw : !s32i loc(#loc117)
    cir.store %85, %4 : !s32i, !cir.ptr<!s32i> loc(#loc269)
    %86 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc118)
    cir.call @printIntLine(%86) : (!s32i) -> () loc(#loc119)
    cir.br ^bb35 loc(#loc116)
  ^bb35:  // pred: ^bb34
    cir.return loc(#loc19)
  } loc(#loc264)
  cir.func no_proto @CWE190_Integer_Overflow__int_connect_socket_square_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc303)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc122)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc304)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc124)
    cir.return loc(#loc121)
  } loc(#loc302)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc306)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc307)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc132)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc308)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc134)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc309)
    cir.br ^bb1 loc(#loc310)
  ^bb1:  // pred: ^bb0
    %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc138)
    %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc129)
    %6 = cir.binop(mul, %4, %5) nsw : !s32i loc(#loc138)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc306)
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc139)
    cir.call @printIntLine(%7) : (!s32i) -> () loc(#loc140)
    cir.br ^bb2 loc(#loc137)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc127)
  } loc(#loc305)
  cir.func private @sqrt(!cir.double) -> !cir.double extra(#fn_attr) loc(#loc141)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc311)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc144)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc313)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc314)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc315)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc316)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc317)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc318)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc159)
    cir.store %6, %5 : !s32i, !cir.ptr<!s32i> loc(#loc319)
    cir.br ^bb1 loc(#loc320)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<1> : !s32i loc(#loc152)
    %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc152)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc315)
    cir.br ^bb2 loc(#loc321)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc321)
  ^bb3:  // pred: ^bb26
    %9 = cir.const #cir.int<0> : !s32i loc(#loc165)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc165)
    cir.brcond %10 ^bb4, ^bb27 loc(#loc165)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc322)
  ^bb5:  // pred: ^bb4
    %11 = cir.const #cir.int<2> : !s32i loc(#loc168)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc169)
    %13 = cir.const #cir.int<6> : !s32i loc(#loc170)
    %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc171)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc323)
    cir.br ^bb6 loc(#loc324)
  ^bb6:  // pred: ^bb5
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc176)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc177)
    %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc177)
    %18 = cir.cmp(eq, %15, %17) : !s32i, !cir.bool loc(#loc325)
    cir.brcond %18 ^bb7, ^bb8 loc(#loc326)
  ^bb7:  // pred: ^bb6
    cir.br ^bb27 loc(#loc179)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc175)
  ^bb9:  // pred: ^bb8
    %19 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc327)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc182)
    %21 = cir.const #cir.int<16> : !u64i loc(#loc328)
    cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc329)
    %22 = cir.const #cir.int<2> : !s32i loc(#loc187)
    %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc187)
    %24 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc61)
    cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc330)
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc189)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc189)
    %27 = cir.call @inet_addr(%26) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc190)
    %28 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc64)
    %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc65)
    cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc331)
    %30 = cir.const #cir.int<27015> : !s32i loc(#loc193)
    %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc193)
    %32 = cir.call @htons(%31) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc194)
    %33 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc70)
    cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc332)
    cir.br ^bb10 loc(#loc333)
  ^bb10:  // pred: ^bb9
    %34 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc199)
    %35 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc334)
    %36 = cir.const #cir.int<16> : !u64i loc(#loc335)
    %37 = cir.cast(integral, %36 : !u64i), !u32i loc(#loc335)
    %38 = cir.call @connect(%34, %35, %37) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc204)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc205)
    %40 = cir.unary(minus, %39) nsw : !s32i, !s32i loc(#loc205)
    %41 = cir.cmp(eq, %38, %40) : !s32i, !cir.bool loc(#loc336)
    cir.brcond %41 ^bb11, ^bb12 loc(#loc337)
  ^bb11:  // pred: ^bb10
    cir.br ^bb27 loc(#loc207)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc198)
  ^bb13:  // pred: ^bb12
    %42 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc208)
    %43 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc209)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc209)
    %45 = cir.const #cir.int<3> : !s32i loc(#loc210)
    %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc210)
    %47 = cir.const #cir.int<4> : !u64i loc(#loc210)
    %48 = cir.binop(mul, %46, %47) : !u64i loc(#loc210)
    %49 = cir.const #cir.int<2> : !s32i loc(#loc210)
    %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc210)
    %51 = cir.binop(add, %48, %50) : !u64i loc(#loc210)
    %52 = cir.const #cir.int<1> : !s32i loc(#loc211)
    %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc211)
    %54 = cir.binop(sub, %51, %53) : !u64i loc(#loc338)
    %55 = cir.const #cir.int<0> : !s32i loc(#loc212)
    %56 = cir.call @recv(%42, %44, %54, %55) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc213)
    %57 = cir.cast(integral, %56 : !s64i), !s32i loc(#loc213)
    cir.store %57, %0 : !s32i, !cir.ptr<!s32i> loc(#loc339)
    cir.br ^bb14 loc(#loc340)
  ^bb14:  // pred: ^bb13
    %58 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc218)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc219)
    %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc219)
    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc341)
    cir.brcond %61 ^bb15, ^bb16 loc(#loc220)
  ^bb15:  // pred: ^bb14
    %62 = cir.const #true loc(#loc220)
    cir.br ^bb21(%62 : !cir.bool) loc(#loc220)
  ^bb16:  // pred: ^bb14
    %63 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc221)
    %64 = cir.const #cir.int<0> : !s32i loc(#loc222)
    %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc342)
    cir.brcond %65 ^bb17, ^bb18 loc(#loc220)
  ^bb17:  // pred: ^bb16
    %66 = cir.const #true loc(#loc220)
    cir.br ^bb19(%66 : !cir.bool) loc(#loc220)
  ^bb18:  // pred: ^bb16
    %67 = cir.const #false loc(#loc220)
    cir.br ^bb19(%67 : !cir.bool) loc(#loc220)
  ^bb19(%68: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":174:44)):  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc220)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21(%68 : !cir.bool) loc(#loc220)
  ^bb21(%69: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":174:44)):  // 2 preds: ^bb15, ^bb20
    cir.br ^bb22 loc(#loc220)
  ^bb22:  // pred: ^bb21
    cir.brcond %69 ^bb23, ^bb24 loc(#loc343)
  ^bb23:  // pred: ^bb22
    cir.br ^bb27 loc(#loc224)
  ^bb24:  // pred: ^bb22
    cir.br ^bb25 loc(#loc217)
  ^bb25:  // pred: ^bb24
    %70 = cir.const #cir.int<0> : !s32i loc(#loc225)
    %71 = cir.cast(integral, %70 : !s32i), !s8i loc(#loc225)
    %72 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc226)
    %73 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc227)
    %74 = cir.ptr_stride(%73 : !cir.ptr<!s8i>, %72 : !s32i), !cir.ptr<!s8i> loc(#loc227)
    cir.store %71, %74 : !s8i, !cir.ptr<!s8i> loc(#loc344)
    %75 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc228)
    %76 = cir.call @atoi(%75) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc229)
    cir.store %76, %5 : !s32i, !cir.ptr<!s32i> loc(#loc345)
    cir.br ^bb26 loc(#loc167)
  ^bb26:  // pred: ^bb25
    cir.br ^bb3 loc(#loc164)
  ^bb27:  // 4 preds: ^bb3, ^bb7, ^bb11, ^bb23
    cir.br ^bb28 loc(#loc164)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc346)
  ^bb29:  // pred: ^bb28
    %77 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc234)
    %78 = cir.const #cir.int<1> : !s32i loc(#loc235)
    %79 = cir.unary(minus, %78) nsw : !s32i, !s32i loc(#loc235)
    %80 = cir.cmp(ne, %77, %79) : !s32i, !cir.bool loc(#loc347)
    cir.brcond %80 ^bb30, ^bb31 loc(#loc348)
  ^bb30:  // pred: ^bb29
    %81 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc237)
    %82 = cir.call @close(%81) : (!s32i) -> !s32i loc(#loc238)
    cir.br ^bb31 loc(#loc233)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc233)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc162)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc349)
  ^bb34:  // pred: ^bb33
    %83 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc241)
    %84 = cir.const #cir.int<2147483647> : !s32i loc(#loc242)
    %85 = cir.unary(minus, %84) nsw : !s32i, !s32i loc(#loc242)
    %86 = cir.const #cir.int<1> : !s32i loc(#loc242)
    %87 = cir.binop(sub, %85, %86) nsw : !s32i loc(#loc242)
    %88 = cir.cmp(gt, %83, %87) : !s32i, !cir.bool loc(#loc350)
    cir.brcond %88 ^bb35, ^bb40 loc(#loc243)
  ^bb35:  // pred: ^bb34
    %89 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc244)
    %90 = cir.abs %89 poison : !s32i loc(#loc245)
    %91 = cir.cast(integral, %90 : !s32i), !s64i loc(#loc245)
    %92 = cir.get_global @sqrt : !cir.ptr<!cir.func<(!cir.double) -> !cir.double>> loc(#loc246)
    %93 = cir.const #cir.int<2147483647> : !s32i loc(#loc247)
    %94 = cir.cast(int_to_float, %93 : !s32i), !cir.double loc(#loc247)
    %95 = cir.call @sqrt(%94) : (!cir.double) -> !cir.double extra(#fn_attr) loc(#loc246)
    %96 = cir.cast(float_to_int, %95 : !cir.double), !s64i loc(#loc246)
    %97 = cir.cmp(lt, %91, %96) : !s64i, !cir.bool loc(#loc351)
    cir.brcond %97 ^bb36, ^bb37 loc(#loc243)
  ^bb36:  // pred: ^bb35
    %98 = cir.const #true loc(#loc243)
    cir.br ^bb38(%98 : !cir.bool) loc(#loc243)
  ^bb37:  // pred: ^bb35
    %99 = cir.const #false loc(#loc243)
    cir.br ^bb38(%99 : !cir.bool) loc(#loc243)
  ^bb38(%100: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":196:24)):  // 2 preds: ^bb36, ^bb37
    cir.br ^bb39 loc(#loc243)
  ^bb39:  // pred: ^bb38
    cir.br ^bb41(%100 : !cir.bool) loc(#loc243)
  ^bb40:  // pred: ^bb34
    %101 = cir.const #false loc(#loc243)
    cir.br ^bb41(%101 : !cir.bool) loc(#loc243)
  ^bb41(%102: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":196:24)):  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc243)
  ^bb42:  // pred: ^bb41
    cir.brcond %102 ^bb43, ^bb44 loc(#loc352)
  ^bb43:  // pred: ^bb42
    %103 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc252)
    %104 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc156)
    %105 = cir.binop(mul, %103, %104) nsw : !s32i loc(#loc252)
    cir.store %105, %4 : !s32i, !cir.ptr<!s32i> loc(#loc317)
    %106 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc253)
    cir.call @printIntLine(%106) : (!s32i) -> () loc(#loc254)
    cir.br ^bb45 loc(#loc250)
  ^bb44:  // pred: ^bb42
    %107 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc144)
    %108 = cir.cast(array_to_ptrdecay, %107 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc144)
    cir.call @printLine(%108) : (!cir.ptr<!s8i>) -> () loc(#loc255)
    cir.br ^bb45 loc(#loc240)
  ^bb45:  // 2 preds: ^bb43, ^bb44
    cir.br ^bb46 loc(#loc240)
  ^bb46:  // pred: ^bb45
    cir.return loc(#loc146)
  } loc(#loc312)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_square_01.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":77:49)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc18 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":46:1)
#loc19 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":112:1)
#loc20 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":56:9)
#loc21 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":56:13)
#loc22 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":57:9)
#loc23 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":57:28)
#loc24 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":58:9)
#loc25 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":58:32)
#loc26 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":59:9)
#loc27 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":59:41)
#loc28 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":109:9)
#loc29 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":109:29)
#loc30 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":48:5)
#loc31 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":48:9)
#loc32 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":50:12)
#loc33 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":50:5)
#loc34 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":51:5)
#loc35 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":106:5)
#loc36 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":60:9)
#loc37 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":95:17)
#loc38 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":95:16)
#loc39 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":61:9)
#loc40 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":94:9)
#loc41 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":70:36)
#loc42 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":70:45)
#loc43 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":70:58)
#loc44 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":70:29)
#loc45 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":70:13)
#loc46 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":70:69)
#loc47 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":71:13)
#loc48 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":74:13)
#loc49 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":71:17)
#loc50 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":71:34)
#loc51 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":72:13)
#loc52 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":73:17)
#loc53 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":75:20)
#loc54 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":75:21)
#loc55 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":75:30)
#loc56 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":75:33)
#loc57 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":75:47)
#loc58 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":75:13)
#loc59 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":75:48)
#loc60 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":76:34)
#loc61 = loc("/usr/include/netinet/in.h":249:5)
#loc62 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":76:13)
#loc63 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":77:39)
#loc64 = loc("/usr/include/netinet/in.h":251:20)
#loc65 = loc("/usr/include/netinet/in.h":33:15)
#loc66 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":77:13)
#loc67 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":77:59)
#loc68 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":78:38)
#loc69 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":78:32)
#loc70 = loc("/usr/include/netinet/in.h":250:15)
#loc71 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":78:13)
#loc72 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":78:46)
#loc73 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":79:13)
#loc74 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":82:13)
#loc75 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":79:25)
#loc76 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":79:58)
#loc77 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":79:59)
#loc78 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":79:68)
#loc79 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":79:82)
#loc80 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":79:17)
#loc81 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":79:88)
#loc82 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":80:13)
#loc83 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":81:17)
#loc84 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":85:31)
#loc85 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":85:46)
#loc86 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":85:59)
#loc87 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":85:77)
#loc88 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":85:80)
#loc89 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":85:26)
#loc90 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":85:13)
#loc91 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":85:81)
#loc92 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":86:13)
#loc93 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":89:13)
#loc94 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":86:17)
#loc95 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":86:31)
#loc97 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":86:47)
#loc98 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":86:61)
#loc99 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":87:13)
#loc100 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":88:17)
#loc101 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":91:39)
#loc102 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":91:25)
#loc103 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":91:13)
#loc104 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":93:25)
#loc105 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":93:20)
#loc106 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":93:13)
#loc107 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":93:36)
#loc108 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":96:9)
#loc109 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":99:9)
#loc110 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":96:13)
#loc111 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":96:30)
#loc112 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":97:9)
#loc113 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":98:26)
#loc114 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":98:13)
#loc115 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":107:5)
#loc116 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":111:5)
#loc117 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":109:22)
#loc118 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":110:22)
#loc119 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":110:9)
#loc120 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":207:1)
#loc121 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":211:1)
#loc122 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":209:5)
#loc123 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":209:13)
#loc124 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":210:5)
#loc125 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":210:13)
#loc126 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":119:1)
#loc127 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":131:1)
#loc128 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":128:9)
#loc129 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":128:29)
#loc130 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":121:5)
#loc131 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":121:9)
#loc132 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":123:12)
#loc133 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":123:5)
#loc134 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":125:12)
#loc135 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":125:5)
#loc136 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":126:5)
#loc137 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":130:5)
#loc138 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":128:22)
#loc139 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":129:22)
#loc140 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":129:9)
#loc141 = loc("/usr/include/x86_64-linux-gnu/bits/mathcalls.h":143:1)
#loc142 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc143 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc144 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":203:19)
#loc145 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":134:1)
#loc146 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":205:1)
#loc147 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":144:9)
#loc148 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":144:13)
#loc149 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":145:9)
#loc150 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":145:28)
#loc151 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":146:9)
#loc152 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":146:32)
#loc153 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":147:9)
#loc154 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":147:41)
#loc155 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":198:9)
#loc156 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":198:29)
#loc157 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":136:5)
#loc158 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":136:9)
#loc159 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":138:12)
#loc160 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":138:5)
#loc161 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":139:5)
#loc162 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":194:5)
#loc163 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":148:9)
#loc164 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":183:17)
#loc165 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":183:16)
#loc166 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":149:9)
#loc167 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":182:9)
#loc168 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":158:36)
#loc169 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":158:45)
#loc170 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":158:58)
#loc171 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":158:29)
#loc172 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":158:13)
#loc173 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":158:69)
#loc174 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":159:13)
#loc175 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":162:13)
#loc176 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":159:17)
#loc177 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":159:34)
#loc178 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":160:13)
#loc179 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":161:17)
#loc180 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":163:20)
#loc181 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":163:21)
#loc182 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":163:30)
#loc183 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":163:33)
#loc184 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":163:47)
#loc185 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":163:13)
#loc186 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":163:48)
#loc187 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":164:34)
#loc188 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":164:13)
#loc189 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":165:49)
#loc190 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":165:39)
#loc191 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":165:13)
#loc192 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":165:59)
#loc193 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":166:38)
#loc194 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":166:32)
#loc195 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":166:13)
#loc196 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":166:46)
#loc197 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":167:13)
#loc198 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":170:13)
#loc199 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":167:25)
#loc200 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":167:58)
#loc201 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":167:59)
#loc202 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":167:68)
#loc203 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":167:82)
#loc204 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":167:17)
#loc205 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":167:88)
#loc206 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":168:13)
#loc207 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":169:17)
#loc208 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":173:31)
#loc209 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":173:46)
#loc210 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":173:59)
#loc211 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":173:77)
#loc212 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":173:80)
#loc213 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":173:26)
#loc214 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":173:13)
#loc215 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":173:81)
#loc216 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":174:13)
#loc217 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":177:13)
#loc218 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":174:17)
#loc219 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":174:31)
#loc221 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":174:47)
#loc222 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":174:61)
#loc223 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":175:13)
#loc224 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":176:17)
#loc225 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":179:39)
#loc226 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":179:25)
#loc227 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":179:13)
#loc228 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":181:25)
#loc229 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":181:20)
#loc230 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":181:13)
#loc231 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":181:36)
#loc232 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":184:9)
#loc233 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":187:9)
#loc234 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":184:13)
#loc235 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":184:30)
#loc236 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":185:9)
#loc237 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":186:26)
#loc238 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":186:13)
#loc239 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":196:5)
#loc240 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":204:5)
#loc241 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":196:9)
#loc242 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":196:16)
#loc244 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":196:31)
#loc245 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":196:27)
#loc246 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":196:45)
#loc247 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":196:58)
#loc248 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":196:65)
#loc249 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":197:5)
#loc250 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":200:5)
#loc251 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":202:5)
#loc252 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":198:22)
#loc253 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":199:22)
#loc254 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":199:9)
#loc255 = loc("CWE190_Integer_Overflow__int_connect_socket_square_01.c":203:9)
#loc256 = loc(fused[#loc1, #loc2])
#loc257 = loc(fused[#loc3, #loc4])
#loc258 = loc(fused[#loc6, #loc7])
#loc259 = loc(fused[#loc8, #loc9])
#loc260 = loc(fused[#loc10, #loc11])
#loc261 = loc(fused[#loc12, #loc13])
#loc262 = loc(fused[#loc14, #loc15])
#loc263 = loc(fused[#loc16, #loc17])
#loc264 = loc(fused[#loc18, #loc19])
#loc265 = loc(fused[#loc20, #loc21])
#loc266 = loc(fused[#loc22, #loc23])
#loc267 = loc(fused[#loc24, #loc25])
#loc268 = loc(fused[#loc26, #loc27])
#loc269 = loc(fused[#loc28, #loc29])
#loc270 = loc(fused[#loc30, #loc31])
#loc271 = loc(fused[#loc33, #loc32])
#loc272 = loc(fused[#loc34, #loc35])
#loc273 = loc(fused[#loc36, #loc37])
#loc274 = loc(fused[#loc39, #loc40])
#loc275 = loc(fused[#loc45, #loc46])
#loc276 = loc(fused[#loc47, #loc48])
#loc277 = loc(fused[#loc49, #loc50])
#loc278 = loc(fused[#loc51, #loc48])
#loc279 = loc(fused[#loc53, #loc54])
#loc280 = loc(fused[#loc56, #loc57])
#loc281 = loc(fused[#loc58, #loc59])
#loc282 = loc(fused[#loc62, #loc60])
#loc283 = loc(fused[#loc66, #loc67])
#loc284 = loc(fused[#loc71, #loc72])
#loc285 = loc(fused[#loc73, #loc74])
#loc286 = loc(fused[#loc76, #loc77])
#loc287 = loc(fused[#loc78, #loc79])
#loc288 = loc(fused[#loc80, #loc81])
#loc289 = loc(fused[#loc82, #loc74])
#loc290 = loc(fused[#loc86, #loc87])
#loc291 = loc(fused[#loc90, #loc91])
#loc292 = loc(fused[#loc92, #loc93])
#loc293 = loc(fused[#loc94, #loc95])
#loc294 = loc(fused[#loc97, #loc98])
#loc295 = loc(fused[#loc99, #loc93])
#loc296 = loc(fused[#loc103, #loc101])
#loc297 = loc(fused[#loc106, #loc107])
#loc298 = loc(fused[#loc108, #loc109])
#loc299 = loc(fused[#loc110, #loc111])
#loc300 = loc(fused[#loc112, #loc109])
#loc301 = loc(fused[#loc115, #loc116])
#loc302 = loc(fused[#loc120, #loc121])
#loc303 = loc(fused[#loc122, #loc123])
#loc304 = loc(fused[#loc124, #loc125])
#loc305 = loc(fused[#loc126, #loc127])
#loc306 = loc(fused[#loc128, #loc129])
#loc307 = loc(fused[#loc130, #loc131])
#loc308 = loc(fused[#loc133, #loc132])
#loc309 = loc(fused[#loc135, #loc134])
#loc310 = loc(fused[#loc136, #loc137])
#loc311 = loc(fused[#loc142, #loc143])
#loc312 = loc(fused[#loc145, #loc146])
#loc313 = loc(fused[#loc147, #loc148])
#loc314 = loc(fused[#loc149, #loc150])
#loc315 = loc(fused[#loc151, #loc152])
#loc316 = loc(fused[#loc153, #loc154])
#loc317 = loc(fused[#loc155, #loc156])
#loc318 = loc(fused[#loc157, #loc158])
#loc319 = loc(fused[#loc160, #loc159])
#loc320 = loc(fused[#loc161, #loc162])
#loc321 = loc(fused[#loc163, #loc164])
#loc322 = loc(fused[#loc166, #loc167])
#loc323 = loc(fused[#loc172, #loc173])
#loc324 = loc(fused[#loc174, #loc175])
#loc325 = loc(fused[#loc176, #loc177])
#loc326 = loc(fused[#loc178, #loc175])
#loc327 = loc(fused[#loc180, #loc181])
#loc328 = loc(fused[#loc183, #loc184])
#loc329 = loc(fused[#loc185, #loc186])
#loc330 = loc(fused[#loc188, #loc187])
#loc331 = loc(fused[#loc191, #loc192])
#loc332 = loc(fused[#loc195, #loc196])
#loc333 = loc(fused[#loc197, #loc198])
#loc334 = loc(fused[#loc200, #loc201])
#loc335 = loc(fused[#loc202, #loc203])
#loc336 = loc(fused[#loc204, #loc205])
#loc337 = loc(fused[#loc206, #loc198])
#loc338 = loc(fused[#loc210, #loc211])
#loc339 = loc(fused[#loc214, #loc215])
#loc340 = loc(fused[#loc216, #loc217])
#loc341 = loc(fused[#loc218, #loc219])
#loc342 = loc(fused[#loc221, #loc222])
#loc343 = loc(fused[#loc223, #loc217])
#loc344 = loc(fused[#loc227, #loc225])
#loc345 = loc(fused[#loc230, #loc231])
#loc346 = loc(fused[#loc232, #loc233])
#loc347 = loc(fused[#loc234, #loc235])
#loc348 = loc(fused[#loc236, #loc233])
#loc349 = loc(fused[#loc239, #loc240])
#loc350 = loc(fused[#loc241, #loc242])
#loc351 = loc(fused[#loc245, #loc248])
#loc352 = loc(fused[#loc249, #loc250, #loc251, #loc240])
