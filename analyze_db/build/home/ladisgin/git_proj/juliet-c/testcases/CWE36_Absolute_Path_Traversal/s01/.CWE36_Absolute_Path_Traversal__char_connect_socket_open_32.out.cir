!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc253 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":203:10)
#loc254 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":203:14)
#loc255 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":203:20)
#loc256 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":203:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc369 = loc(fused[#loc253, #loc254])
#loc370 = loc(fused[#loc255, #loc256])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s01/CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc269)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc270)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc271)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc7)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc272)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc273)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc274)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc275)
  cir.func private @close(!s32i) -> !s32i loc(#loc276)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc277)
  cir.func @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_323badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc279)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc280)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc281)
    %3 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc282)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc280)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc281)
    %4 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc282)
    cir.store %4, %3 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc282)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc30)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc283)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc285)
      %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc35)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc285)
      cir.scope {
        %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc287)
        %12 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc288)
        %13 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc289)
        %14 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc290)
        %15 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc291)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc46)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc46)
        cir.store %17, %14 : !s32i, !cir.ptr<!s32i> loc(#loc290)
        %18 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc49)
        %19 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
        %20 = cir.call @strlen(%19) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc49)
        cir.store %20, %15 : !u64i, !cir.ptr<!u64i> loc(#loc291)
        cir.scope {
          cir.do {
            %21 = cir.const #cir.int<2> : !s32i loc(#loc53)
            %22 = cir.const #cir.int<1> : !u32i loc(#loc54)
            %23 = cir.cast(integral, %22 : !u32i), !s32i loc(#loc54)
            %24 = cir.const #cir.int<6> : !u32i loc(#loc55)
            %25 = cir.cast(integral, %24 : !u32i), !s32i loc(#loc55)
            %26 = cir.call @socket(%21, %23, %25) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc56)
            cir.store %26, %14 : !s32i, !cir.ptr<!s32i> loc(#loc293)
            cir.scope {
              %76 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc61)
              %77 = cir.const #cir.int<1> : !s32i loc(#loc62)
              %78 = cir.unary(minus, %77) : !s32i, !s32i loc(#loc62)
              %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc295)
              cir.if %79 {
                cir.break loc(#loc64)
              } loc(#loc296)
            } loc(#loc294)
            %27 = cir.cast(bitcast, %12 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc297)
            %28 = cir.const #cir.int<0> : !s32i loc(#loc67)
            %29 = cir.const #cir.int<16> : !u64i loc(#loc298)
            cir.libc.memset %29 bytes from %27 set to %28 : !cir.ptr<!void>, !s32i, !u64i loc(#loc299)
            %30 = cir.const #cir.int<2> : !s32i loc(#loc72)
            %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc72)
            %32 = cir.get_member %12[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
            cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc300)
            %33 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc7)
            %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc7)
            %35 = cir.call @inet_addr(%34) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc75)
            %36 = cir.get_member %12[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc76)
            %37 = cir.get_member %36[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc77)
            cir.store %35, %37 : !u32i, !cir.ptr<!u32i> loc(#loc301)
            %38 = cir.const #cir.int<27015> : !s32i loc(#loc80)
            %39 = cir.cast(integral, %38 : !s32i), !u16i loc(#loc80)
            %40 = cir.call @htons(%39) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc81)
            %41 = cir.get_member %12[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
            cir.store %40, %41 : !u16i, !cir.ptr<!u16i> loc(#loc302)
            cir.scope {
              %76 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc87)
              %77 = cir.cast(bitcast, %12 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc304)
              %78 = cir.const #cir.int<16> : !u64i loc(#loc305)
              %79 = cir.cast(integral, %78 : !u64i), !u32i loc(#loc305)
              %80 = cir.call @connect(%76, %77, %79) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc92)
              %81 = cir.const #cir.int<1> : !s32i loc(#loc93)
              %82 = cir.unary(minus, %81) : !s32i, !s32i loc(#loc93)
              %83 = cir.cmp(eq, %80, %82) : !s32i, !cir.bool loc(#loc306)
              cir.if %83 {
                cir.break loc(#loc95)
              } loc(#loc307)
            } loc(#loc303)
            %42 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc96)
            %43 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
            %44 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc98)
            %45 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc99)
            %46 = cir.cast(bitcast, %45 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc308)
            %47 = cir.const #cir.int<1> : !u64i loc(#loc309)
            %48 = cir.const #cir.int<4096> : !s32i loc(#loc104)
            %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc104)
            %50 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc105)
            %51 = cir.binop(sub, %49, %50) : !u64i loc(#loc310)
            %52 = cir.const #cir.int<1> : !s32i loc(#loc106)
            %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc106)
            %54 = cir.binop(sub, %51, %53) : !u64i loc(#loc311)
            %55 = cir.binop(mul, %47, %54) : !u64i loc(#loc312)
            %56 = cir.const #cir.int<0> : !s32i loc(#loc108)
            %57 = cir.call @recv(%42, %46, %55, %56) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc109)
            %58 = cir.cast(integral, %57 : !s64i), !s32i loc(#loc109)
            cir.store %58, %11 : !s32i, !cir.ptr<!s32i> loc(#loc313)
            cir.scope {
              %76 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc114)
              %77 = cir.const #cir.int<1> : !s32i loc(#loc115)
              %78 = cir.unary(minus, %77) : !s32i, !s32i loc(#loc115)
              %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc315)
              %80 = cir.ternary(%79, true {
                %81 = cir.const #true loc(#loc116)
                cir.yield %81 : !cir.bool loc(#loc116)
              }, false {
                %81 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc117)
                %82 = cir.const #cir.int<0> : !s32i loc(#loc118)
                %83 = cir.cmp(eq, %81, %82) : !s32i, !cir.bool loc(#loc316)
                %84 = cir.ternary(%83, true {
                  %85 = cir.const #true loc(#loc116)
                  cir.yield %85 : !cir.bool loc(#loc116)
                }, false {
                  %85 = cir.const #false loc(#loc116)
                  cir.yield %85 : !cir.bool loc(#loc116)
                }) : (!cir.bool) -> !cir.bool loc(#loc116)
                cir.yield %84 : !cir.bool loc(#loc116)
              }) : (!cir.bool) -> !cir.bool loc(#loc116)
              cir.if %80 {
                cir.break loc(#loc120)
              } loc(#loc317)
            } loc(#loc314)
            %59 = cir.const #cir.int<0> : !s8i loc(#loc121)
            %60 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
            %61 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc123)
            %62 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc124)
            %63 = cir.cast(integral, %62 : !s32i), !u64i loc(#loc124)
            %64 = cir.const #cir.int<1> : !u64i loc(#loc318)
            %65 = cir.binop(div, %63, %64) : !u64i loc(#loc319)
            %66 = cir.binop(add, %61, %65) : !u64i loc(#loc320)
            %67 = cir.ptr_stride(%60 : !cir.ptr<!s8i>, %66 : !u64i), !cir.ptr<!s8i> loc(#loc127)
            cir.store %59, %67 : !s8i, !cir.ptr<!s8i> loc(#loc321)
            %68 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
            %69 = cir.const #cir.int<13> : !s8i loc(#loc129)
            %70 = cir.cast(integral, %69 : !s8i), !s32i loc(#loc129)
            %71 = cir.call @strchr(%68, %70) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc130)
            cir.store %71, %13 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc322)
            cir.scope {
              %76 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
              %77 = cir.cast(ptr_to_bool, %76 : !cir.ptr<!s8i>), !cir.bool loc(#loc135)
              cir.if %77 {
                %78 = cir.const #cir.int<0> : !s8i loc(#loc137)
                %79 = cir.load deref %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
                cir.store %78, %79 : !s8i, !cir.ptr<!s8i> loc(#loc325)
              } loc(#loc324)
            } loc(#loc323)
            %72 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
            %73 = cir.const #cir.int<10> : !s8i loc(#loc141)
            %74 = cir.cast(integral, %73 : !s8i), !s32i loc(#loc141)
            %75 = cir.call @strchr(%72, %74) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc142)
            cir.store %75, %13 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc326)
            cir.scope {
              %76 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
              %77 = cir.cast(ptr_to_bool, %76 : !cir.ptr<!s8i>), !cir.bool loc(#loc147)
              cir.if %77 {
                %78 = cir.const #cir.int<0> : !s8i loc(#loc149)
                %79 = cir.load deref %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
                cir.store %78, %79 : !s8i, !cir.ptr<!s8i> loc(#loc329)
              } loc(#loc328)
            } loc(#loc327)
            cir.yield loc(#loc52)
          } while {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc152)
            %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc152)
            cir.condition(%22) loc(#loc152)
          } loc(#loc292)
        } loc(#loc292)
        cir.scope {
          %21 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc155)
          %22 = cir.const #cir.int<1> : !s32i loc(#loc156)
          %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc156)
          %24 = cir.cmp(ne, %21, %23) : !s32i, !cir.bool loc(#loc331)
          cir.if %24 {
            %25 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc158)
            %26 = cir.call @close(%25) : (!s32i) -> !s32i loc(#loc159)
          } loc(#loc332)
        } loc(#loc330)
      } loc(#loc286)
      %9 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
      %10 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc161)
      cir.store %9, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc333)
    } loc(#loc284)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc335)
      %7 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc166)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc167)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc335)
      cir.scope {
        %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc337)
        %10 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc172)
        %11 = cir.const #cir.int<2> : !s32i loc(#loc173)
        %12 = cir.const #cir.int<64> : !s32i loc(#loc174)
        %13 = cir.binop(or, %11, %12) : !s32i loc(#loc338)
        %14 = cir.const #cir.int<256> : !s32i loc(#loc175)
        %15 = cir.const #cir.int<128> : !s32i loc(#loc176)
        %16 = cir.binop(or, %14, %15) : !s32i loc(#loc339)
        %17 = cir.call @open(%10, %13, %16) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc177)
        cir.store %17, %9 : !s32i, !cir.ptr<!s32i> loc(#loc340)
        cir.scope {
          %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc182)
          %19 = cir.const #cir.int<1> : !s32i loc(#loc183)
          %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc184)
          %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc342)
          cir.if %21 {
            %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc186)
            %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc187)
          } loc(#loc343)
        } loc(#loc341)
      } loc(#loc336)
    } loc(#loc334)
    cir.return loc(#loc21)
  } loc(#loc278)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc344)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc190)
  cir.func internal private @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_32L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc346)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc347)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc348)
    %3 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc349)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc347)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc348)
    %4 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc349)
    cir.store %4, %3 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc349)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc201)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc350)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc352)
      %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc206)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc207)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc352)
      %9 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc208)
      %10 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc209)
      %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc190)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc190)
      %13 = cir.call @strcat(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc208)
      %14 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc210)
      %15 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc211)
      cir.store %14, %15 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc353)
    } loc(#loc351)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc355)
      %7 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc216)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc217)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc355)
      cir.scope {
        %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc357)
        %10 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc222)
        %11 = cir.const #cir.int<2> : !s32i loc(#loc223)
        %12 = cir.const #cir.int<64> : !s32i loc(#loc224)
        %13 = cir.binop(or, %11, %12) : !s32i loc(#loc358)
        %14 = cir.const #cir.int<256> : !s32i loc(#loc225)
        %15 = cir.const #cir.int<128> : !s32i loc(#loc226)
        %16 = cir.binop(or, %14, %15) : !s32i loc(#loc359)
        %17 = cir.call @open(%10, %13, %16) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc227)
        cir.store %17, %9 : !s32i, !cir.ptr<!s32i> loc(#loc360)
        cir.scope {
          %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc232)
          %19 = cir.const #cir.int<1> : !s32i loc(#loc233)
          %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc234)
          %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc362)
          cir.if %21 {
            %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc236)
            %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc237)
          } loc(#loc363)
        } loc(#loc361)
      } loc(#loc356)
    } loc(#loc354)
    cir.return loc(#loc192)
  } loc(#loc345)
  cir.func @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_324goodEv() extra(#fn_attr1) {
    cir.call @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_32L7goodG2BEv() : () -> () loc(#loc240)
    cir.return loc(#loc239)
  } loc(#loc364)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc365)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc366)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc367)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc247)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc248)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc249)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc250)
  cir.func @main(%arg0: !s32i loc(fused[#loc253, #loc254]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc255, #loc256])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc369)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc370)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc252)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc257)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc257)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc258)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc259)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc259)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc260)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc247)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc247)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc261)
    cir.call @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_324goodEv() : () -> () loc(#loc262)
    %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc248)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc248)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc263)
    %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc249)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc249)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc264)
    cir.call @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_323badEv() : () -> () loc(#loc265)
    %12 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc250)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc250)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc266)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc267)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc371)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc371)
    cir.return %15 : !s32i loc(#loc371)
  } loc(#loc368)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s01/CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/sys/socket.h":102:1)
#loc4 = loc("/usr/include/sys/socket.h":102:62)
#loc5 = loc("/usr/include/arpa/inet.h":34:1)
#loc6 = loc("/usr/include/arpa/inet.h":34:47)
#loc7 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":93:53)
#loc8 = loc("/usr/include/netinet/in.h":404:1)
#loc9 = loc("/usr/include/netinet/in.h":405:40)
#loc10 = loc("/usr/include/sys/socket.h":126:1)
#loc11 = loc("/usr/include/sys/socket.h":126:75)
#loc12 = loc("/usr/include/sys/socket.h":145:1)
#loc13 = loc("/usr/include/sys/socket.h":145:68)
#loc14 = loc("/usr/include/string.h":226:1)
#loc15 = loc("/usr/include/string.h":227:50)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("/usr/include/fcntl.h":209:1)
#loc19 = loc("/usr/include/fcntl.h":209:56)
#loc20 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":57:1)
#loc21 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":147:1)
#loc22 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":59:5)
#loc23 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":59:12)
#loc24 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":60:5)
#loc25 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":60:25)
#loc26 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":61:5)
#loc27 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":61:25)
#loc28 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":62:5)
#loc29 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":62:37)
#loc30 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":63:12)
#loc31 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":63:5)
#loc32 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":64:5)
#loc33 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":134:5)
#loc34 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":65:9)
#loc35 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":65:24)
#loc36 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":65:23)
#loc37 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":66:9)
#loc38 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":132:9)
#loc39 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":71:13)
#loc40 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":71:17)
#loc41 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":72:13)
#loc42 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":72:32)
#loc43 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":73:13)
#loc44 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":73:19)
#loc45 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":74:13)
#loc46 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":74:36)
#loc47 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":75:13)
#loc48 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":75:41)
#loc49 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":75:30)
#loc50 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":75:37)
#loc51 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":76:13)
#loc52 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":121:21)
#loc53 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":86:40)
#loc54 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":86:49)
#loc55 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":86:62)
#loc56 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":86:33)
#loc57 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":86:17)
#loc58 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":86:73)
#loc59 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":87:17)
#loc60 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":90:17)
#loc61 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":87:21)
#loc62 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":87:38)
#loc63 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":88:17)
#loc64 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":89:21)
#loc65 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":91:24)
#loc66 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":91:25)
#loc67 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":91:34)
#loc68 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":91:37)
#loc69 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":91:51)
#loc70 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":91:17)
#loc71 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":91:52)
#loc72 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":92:38)
#loc73 = loc("/usr/include/netinet/in.h":249:5)
#loc74 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":92:17)
#loc75 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":93:43)
#loc76 = loc("/usr/include/netinet/in.h":251:20)
#loc77 = loc("/usr/include/netinet/in.h":33:15)
#loc78 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":93:17)
#loc79 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":93:63)
#loc80 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":94:42)
#loc81 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":94:36)
#loc82 = loc("/usr/include/netinet/in.h":250:15)
#loc83 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":94:17)
#loc84 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":94:50)
#loc85 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":95:17)
#loc86 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":98:17)
#loc87 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":95:29)
#loc88 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":95:62)
#loc89 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":95:63)
#loc90 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":95:72)
#loc91 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":95:86)
#loc92 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":95:21)
#loc93 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":95:92)
#loc94 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":96:17)
#loc95 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":97:21)
#loc96 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":102:35)
#loc97 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":102:59)
#loc98 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":102:66)
#loc99 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":102:64)
#loc100 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":102:50)
#loc101 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":102:73)
#loc102 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":102:76)
#loc103 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":102:87)
#loc104 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":102:92)
#loc105 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":102:107)
#loc106 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":102:117)
#loc107 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":102:118)
#loc108 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":102:121)
#loc109 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":102:30)
#loc110 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":102:17)
#loc111 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":102:122)
#loc112 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":103:17)
#loc113 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":106:17)
#loc114 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":103:21)
#loc115 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":103:35)
#loc116 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":103:48)
#loc117 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":103:51)
#loc118 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":103:65)
#loc119 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":104:17)
#loc120 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":105:21)
#loc121 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":108:61)
#loc122 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":108:17)
#loc123 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":108:22)
#loc124 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":108:32)
#loc125 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":108:45)
#loc126 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":108:56)
#loc127 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":108:57)
#loc128 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":110:34)
#loc129 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":110:40)
#loc130 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":110:27)
#loc131 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":110:17)
#loc132 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":110:44)
#loc133 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":111:17)
#loc134 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":114:17)
#loc135 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":111:21)
#loc136 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":112:17)
#loc137 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":113:32)
#loc138 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":113:22)
#loc139 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":113:21)
#loc140 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":115:34)
#loc141 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":115:40)
#loc142 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":115:27)
#loc143 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":115:17)
#loc144 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":115:44)
#loc145 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":116:17)
#loc146 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":119:17)
#loc147 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":116:21)
#loc148 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":117:17)
#loc149 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":118:32)
#loc150 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":118:22)
#loc151 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":118:21)
#loc152 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":121:20)
#loc153 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":122:13)
#loc154 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":125:13)
#loc155 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":122:17)
#loc156 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":122:34)
#loc157 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":123:13)
#loc158 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":124:30)
#loc159 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":124:17)
#loc160 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":133:21)
#loc161 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":133:10)
#loc162 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":133:9)
#loc163 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":135:5)
#loc164 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":146:5)
#loc165 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":136:9)
#loc166 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":136:24)
#loc167 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":136:23)
#loc168 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":137:9)
#loc169 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":145:9)
#loc170 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":138:13)
#loc171 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":138:17)
#loc172 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":140:29)
#loc173 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":140:35)
#loc174 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":140:42)
#loc175 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":140:51)
#loc176 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":140:59)
#loc177 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":140:24)
#loc178 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":140:13)
#loc179 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":140:67)
#loc180 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":141:13)
#loc181 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":144:13)
#loc182 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":141:17)
#loc183 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":141:30)
#loc184 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":141:29)
#loc185 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":142:13)
#loc186 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":143:23)
#loc187 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":143:17)
#loc188 = loc("/usr/include/string.h":149:1)
#loc189 = loc("/usr/include/string.h":150:14)
#loc190 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":168:22)
#loc191 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":154:1)
#loc192 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":184:1)
#loc193 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":156:5)
#loc194 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":156:12)
#loc195 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":157:5)
#loc196 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":157:25)
#loc197 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":158:5)
#loc198 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":158:25)
#loc199 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":159:5)
#loc200 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":159:37)
#loc201 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":160:12)
#loc202 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":160:5)
#loc203 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":161:5)
#loc204 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":171:5)
#loc205 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":162:9)
#loc206 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":162:24)
#loc207 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":162:23)
#loc208 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":168:9)
#loc209 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":168:16)
#loc210 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":170:21)
#loc211 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":170:10)
#loc212 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":170:9)
#loc213 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":172:5)
#loc214 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":183:5)
#loc215 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":173:9)
#loc216 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":173:24)
#loc217 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":173:23)
#loc218 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":174:9)
#loc219 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":182:9)
#loc220 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":175:13)
#loc221 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":175:17)
#loc222 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":177:29)
#loc223 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":177:35)
#loc224 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":177:42)
#loc225 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":177:51)
#loc226 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":177:59)
#loc227 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":177:24)
#loc228 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":177:13)
#loc229 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":177:67)
#loc230 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":178:13)
#loc231 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":181:13)
#loc232 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":178:17)
#loc233 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":178:30)
#loc234 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":178:29)
#loc235 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":179:13)
#loc236 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":180:23)
#loc237 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":180:17)
#loc238 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":186:1)
#loc239 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":189:1)
#loc240 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":188:5)
#loc241 = loc("/usr/include/stdlib.h":575:1)
#loc242 = loc("/usr/include/stdlib.h":575:41)
#loc243 = loc("/usr/include/time.h":76:1)
#loc244 = loc("/usr/include/time.h":76:38)
#loc245 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc246 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc247 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":208:15)
#loc248 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":210:15)
#loc249 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":213:15)
#loc250 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":215:15)
#loc251 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":203:1)
#loc252 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":218:1)
#loc257 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":204:1)
#loc258 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":206:27)
#loc259 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":206:22)
#loc260 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":206:5)
#loc261 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":208:5)
#loc262 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":209:5)
#loc263 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":210:5)
#loc264 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":213:5)
#loc265 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":214:5)
#loc266 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":215:5)
#loc267 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":217:12)
#loc268 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_32.cpp":217:5)
#loc269 = loc(fused[#loc1, #loc2])
#loc270 = loc(fused[#loc3, #loc4])
#loc271 = loc(fused[#loc5, #loc6])
#loc272 = loc(fused[#loc8, #loc9])
#loc273 = loc(fused[#loc10, #loc11])
#loc274 = loc(fused[#loc12, #loc13])
#loc275 = loc(fused[#loc14, #loc15])
#loc276 = loc(fused[#loc16, #loc17])
#loc277 = loc(fused[#loc18, #loc19])
#loc278 = loc(fused[#loc20, #loc21])
#loc279 = loc(fused[#loc22, #loc23])
#loc280 = loc(fused[#loc24, #loc25])
#loc281 = loc(fused[#loc26, #loc27])
#loc282 = loc(fused[#loc28, #loc29])
#loc283 = loc(fused[#loc31, #loc30])
#loc284 = loc(fused[#loc32, #loc33])
#loc285 = loc(fused[#loc34, #loc35])
#loc286 = loc(fused[#loc37, #loc38])
#loc287 = loc(fused[#loc39, #loc40])
#loc288 = loc(fused[#loc41, #loc42])
#loc289 = loc(fused[#loc43, #loc44])
#loc290 = loc(fused[#loc45, #loc46])
#loc291 = loc(fused[#loc47, #loc48])
#loc292 = loc(fused[#loc51, #loc52])
#loc293 = loc(fused[#loc57, #loc58])
#loc294 = loc(fused[#loc59, #loc60])
#loc295 = loc(fused[#loc61, #loc62])
#loc296 = loc(fused[#loc63, #loc60])
#loc297 = loc(fused[#loc65, #loc66])
#loc298 = loc(fused[#loc68, #loc69])
#loc299 = loc(fused[#loc70, #loc71])
#loc300 = loc(fused[#loc74, #loc72])
#loc301 = loc(fused[#loc78, #loc79])
#loc302 = loc(fused[#loc83, #loc84])
#loc303 = loc(fused[#loc85, #loc86])
#loc304 = loc(fused[#loc88, #loc89])
#loc305 = loc(fused[#loc90, #loc91])
#loc306 = loc(fused[#loc92, #loc93])
#loc307 = loc(fused[#loc94, #loc86])
#loc308 = loc(fused[#loc100, #loc101])
#loc309 = loc(fused[#loc102, #loc103])
#loc310 = loc(fused[#loc104, #loc105])
#loc311 = loc(fused[#loc104, #loc106])
#loc312 = loc(fused[#loc102, #loc107])
#loc313 = loc(fused[#loc110, #loc111])
#loc314 = loc(fused[#loc112, #loc113])
#loc315 = loc(fused[#loc114, #loc115])
#loc316 = loc(fused[#loc117, #loc118])
#loc317 = loc(fused[#loc119, #loc113])
#loc318 = loc(fused[#loc125, #loc126])
#loc319 = loc(fused[#loc124, #loc126])
#loc320 = loc(fused[#loc123, #loc126])
#loc321 = loc(fused[#loc122, #loc121])
#loc322 = loc(fused[#loc131, #loc132])
#loc323 = loc(fused[#loc133, #loc134])
#loc324 = loc(fused[#loc136, #loc134])
#loc325 = loc(fused[#loc139, #loc137])
#loc326 = loc(fused[#loc143, #loc144])
#loc327 = loc(fused[#loc145, #loc146])
#loc328 = loc(fused[#loc148, #loc146])
#loc329 = loc(fused[#loc151, #loc149])
#loc330 = loc(fused[#loc153, #loc154])
#loc331 = loc(fused[#loc155, #loc156])
#loc332 = loc(fused[#loc157, #loc154])
#loc333 = loc(fused[#loc162, #loc160])
#loc334 = loc(fused[#loc163, #loc164])
#loc335 = loc(fused[#loc165, #loc166])
#loc336 = loc(fused[#loc168, #loc169])
#loc337 = loc(fused[#loc170, #loc171])
#loc338 = loc(fused[#loc173, #loc174])
#loc339 = loc(fused[#loc175, #loc176])
#loc340 = loc(fused[#loc178, #loc179])
#loc341 = loc(fused[#loc180, #loc181])
#loc342 = loc(fused[#loc182, #loc183])
#loc343 = loc(fused[#loc185, #loc181])
#loc344 = loc(fused[#loc188, #loc189])
#loc345 = loc(fused[#loc191, #loc192])
#loc346 = loc(fused[#loc193, #loc194])
#loc347 = loc(fused[#loc195, #loc196])
#loc348 = loc(fused[#loc197, #loc198])
#loc349 = loc(fused[#loc199, #loc200])
#loc350 = loc(fused[#loc202, #loc201])
#loc351 = loc(fused[#loc203, #loc204])
#loc352 = loc(fused[#loc205, #loc206])
#loc353 = loc(fused[#loc212, #loc210])
#loc354 = loc(fused[#loc213, #loc214])
#loc355 = loc(fused[#loc215, #loc216])
#loc356 = loc(fused[#loc218, #loc219])
#loc357 = loc(fused[#loc220, #loc221])
#loc358 = loc(fused[#loc223, #loc224])
#loc359 = loc(fused[#loc225, #loc226])
#loc360 = loc(fused[#loc228, #loc229])
#loc361 = loc(fused[#loc230, #loc231])
#loc362 = loc(fused[#loc232, #loc233])
#loc363 = loc(fused[#loc235, #loc231])
#loc364 = loc(fused[#loc238, #loc239])
#loc365 = loc(fused[#loc241, #loc242])
#loc366 = loc(fused[#loc243, #loc244])
#loc367 = loc(fused[#loc245, #loc246])
#loc368 = loc(fused[#loc251, #loc252])
#loc371 = loc(fused[#loc268, #loc267])
