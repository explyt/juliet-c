!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc61 = loc("CWE459_Incomplete_Cleanup__char_18.c":103:10)
#loc62 = loc("CWE459_Incomplete_Cleanup__char_18.c":103:14)
#loc63 = loc("CWE459_Incomplete_Cleanup__char_18.c":103:20)
#loc64 = loc("CWE459_Incomplete_Cleanup__char_18.c":103:32)
#loc138 = loc(fused[#loc61, #loc62])
#loc139 = loc(fused[#loc63, #loc64])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE459_Incomplete_Cleanup/CWE459_Incomplete_Cleanup__char_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.good1.filename = #cir.const_array<"goodXXXXXX\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc115)
  cir.global "private" constant cir_private @__const.CWE459_Incomplete_Cleanup__char_18_bad.filename = #cir.const_array<"badXXXXXX\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> loc(#loc116)
  cir.func private @mkstemp(!cir.ptr<!s8i>) -> !s32i loc(#loc117)
  cir.func private @fdopen(!s32i, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> extra(#fn_attr) loc(#loc118)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc9)
  cir.func private @fprintf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc119)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Temporary file\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc12)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc120)
  cir.func no_proto @CWE459_Incomplete_Cleanup__char_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["filename"] {alignment = 1 : i64} loc(#loc116)
    %1 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile"] {alignment = 8 : i64} loc(#loc122)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc123)
    cir.goto "sink" loc(#loc124)
  ^bb1:  // no predecessors
    cir.label "sink" loc(#loc23)
    %3 = cir.get_global @__const.CWE459_Incomplete_Cleanup__char_18_bad.filename : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc116)
    cir.copy %3 to %0 : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc116)
    %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc24)
    %5 = cir.call @mkstemp(%4) : (!cir.ptr<!s8i>) -> !s32i loc(#loc25)
    cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc123)
    cir.scope {
      %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc28)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc29)
      %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc30)
      %9 = cir.cmp(ne, %6, %8) : !s32i, !cir.bool loc(#loc126)
      cir.if %9 {
        %10 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc32)
        %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc9)
        %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc9)
        %13 = cir.call @fdopen(%10, %12) : (!s32i, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> extra(#fn_attr) loc(#loc33)
        cir.store %13, %1 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc128)
        cir.scope {
          %14 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc38)
          %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc39)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc39)
          %17 = cir.cmp(ne, %14, %16) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc130)
          cir.if %17 {
            %18 = cir.get_global @fprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc41)
            %19 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc42)
            %20 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc12)
            %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc12)
            %22 = cir.call @fprintf(%19, %21) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc41)
            %23 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc43)
            %24 = cir.call @fclose(%23) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc44)
          } loc(#loc131)
        } loc(#loc129)
      } loc(#loc127)
    } loc(#loc125)
    cir.return loc(#loc16)
  } loc(#loc121)
  cir.func no_proto @CWE459_Incomplete_Cleanup__char_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc133)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc47)
    cir.return loc(#loc46)
  } loc(#loc132)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc134)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc135)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc136)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc55)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc56)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc57)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc58)
  cir.func @main(%arg0: !s32i loc(fused[#loc61, #loc62]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc63, #loc64])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc138)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc139)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc60)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc65)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc65)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc66)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc67)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc67)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc68)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc55)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %8 = cir.get_global @CWE459_Incomplete_Cleanup__char_18_good : !cir.ptr<!cir.func<!void ()>> loc(#loc140)
    cir.call @CWE459_Incomplete_Cleanup__char_18_good() : () -> () loc(#loc70)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc56)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc57)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %13 = cir.get_global @CWE459_Incomplete_Cleanup__char_18_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc141)
    cir.call @CWE459_Incomplete_Cleanup__char_18_bad() : () -> () loc(#loc74)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc58)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc77)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc142)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc142)
    cir.return %17 : !s32i loc(#loc142)
  } loc(#loc137)
  cir.func private @unlink(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc143)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["filename"] {alignment = 1 : i64} loc(#loc115)
    %1 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile"] {alignment = 8 : i64} loc(#loc145)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc146)
    cir.goto "sink" loc(#loc147)
  ^bb1:  // no predecessors
    cir.label "sink" loc(#loc89)
    %3 = cir.get_global @__const.good1.filename : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc115)
    cir.copy %3 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc115)
    %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc90)
    %5 = cir.call @mkstemp(%4) : (!cir.ptr<!s8i>) -> !s32i loc(#loc91)
    cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc146)
    cir.scope {
      %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc94)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc95)
      %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc96)
      %9 = cir.cmp(ne, %6, %8) : !s32i, !cir.bool loc(#loc149)
      cir.if %9 {
        %10 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc98)
        %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc99)
        %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc99)
        %13 = cir.call @fdopen(%10, %12) : (!s32i, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> extra(#fn_attr) loc(#loc100)
        cir.store %13, %1 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc151)
        cir.scope {
          %14 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc105)
          %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc106)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc106)
          %17 = cir.cmp(ne, %14, %16) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc153)
          cir.if %17 {
            %18 = cir.get_global @fprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc108)
            %19 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc109)
            %20 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc110)
            %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc110)
            %22 = cir.call @fprintf(%19, %21) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc108)
            %23 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc111)
            %24 = cir.call @fclose(%23) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc112)
            %25 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc113)
            %26 = cir.call @unlink(%25) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc114)
          } loc(#loc154)
        } loc(#loc152)
      } loc(#loc150)
    } loc(#loc148)
    cir.return loc(#loc82)
  } loc(#loc144)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE459_Incomplete_Cleanup/CWE459_Incomplete_Cleanup__char_18.c":0:0)
#loc1 = loc("CWE459_Incomplete_Cleanup__char_18.c":71:9)
#loc2 = loc("CWE459_Incomplete_Cleanup__char_18.c":71:27)
#loc3 = loc("CWE459_Incomplete_Cleanup__char_18.c":44:9)
#loc4 = loc("CWE459_Incomplete_Cleanup__char_18.c":44:27)
#loc5 = loc("/usr/include/stdlib.h":827:1)
#loc6 = loc("/usr/include/stdlib.h":827:39)
#loc7 = loc("/usr/include/stdio.h":299:1)
#loc8 = loc("/usr/include/stdio.h":300:3)
#loc9 = loc("CWE459_Incomplete_Cleanup__char_18.c":50:38)
#loc10 = loc("/usr/include/stdio.h":357:1)
#loc11 = loc("/usr/include/stdio.h":358:45)
#loc12 = loc("CWE459_Incomplete_Cleanup__char_18.c":53:32)
#loc13 = loc("/usr/include/stdio.h":184:1)
#loc14 = loc("/usr/include/stdio.h":184:36)
#loc15 = loc("CWE459_Incomplete_Cleanup__char_18.c":39:1)
#loc16 = loc("CWE459_Incomplete_Cleanup__char_18.c":59:1)
#loc17 = loc("CWE459_Incomplete_Cleanup__char_18.c":45:9)
#loc18 = loc("CWE459_Incomplete_Cleanup__char_18.c":45:15)
#loc19 = loc("CWE459_Incomplete_Cleanup__char_18.c":47:9)
#loc20 = loc("CWE459_Incomplete_Cleanup__char_18.c":47:40)
#loc21 = loc("CWE459_Incomplete_Cleanup__char_18.c":41:5)
#loc22 = loc("CWE459_Incomplete_Cleanup__char_18.c":41:10)
#loc23 = loc("CWE459_Incomplete_Cleanup__char_18.c":42:1)
#loc24 = loc("CWE459_Incomplete_Cleanup__char_18.c":47:32)
#loc25 = loc("CWE459_Incomplete_Cleanup__char_18.c":47:24)
#loc26 = loc("CWE459_Incomplete_Cleanup__char_18.c":48:9)
#loc27 = loc("CWE459_Incomplete_Cleanup__char_18.c":57:9)
#loc28 = loc("CWE459_Incomplete_Cleanup__char_18.c":48:13)
#loc29 = loc("CWE459_Incomplete_Cleanup__char_18.c":48:26)
#loc30 = loc("CWE459_Incomplete_Cleanup__char_18.c":48:25)
#loc31 = loc("CWE459_Incomplete_Cleanup__char_18.c":49:9)
#loc32 = loc("CWE459_Incomplete_Cleanup__char_18.c":50:28)
#loc33 = loc("CWE459_Incomplete_Cleanup__char_18.c":50:21)
#loc34 = loc("CWE459_Incomplete_Cleanup__char_18.c":50:13)
#loc35 = loc("CWE459_Incomplete_Cleanup__char_18.c":50:41)
#loc36 = loc("CWE459_Incomplete_Cleanup__char_18.c":51:13)
#loc37 = loc("CWE459_Incomplete_Cleanup__char_18.c":56:13)
#loc38 = loc("CWE459_Incomplete_Cleanup__char_18.c":51:17)
#loc39 = loc("CWE459_Incomplete_Cleanup__char_18.c":51:26)
#loc40 = loc("CWE459_Incomplete_Cleanup__char_18.c":52:13)
#loc41 = loc("CWE459_Incomplete_Cleanup__char_18.c":53:17)
#loc42 = loc("CWE459_Incomplete_Cleanup__char_18.c":53:25)
#loc43 = loc("CWE459_Incomplete_Cleanup__char_18.c":54:24)
#loc44 = loc("CWE459_Incomplete_Cleanup__char_18.c":54:17)
#loc45 = loc("CWE459_Incomplete_Cleanup__char_18.c":89:1)
#loc46 = loc("CWE459_Incomplete_Cleanup__char_18.c":92:1)
#loc47 = loc("CWE459_Incomplete_Cleanup__char_18.c":91:5)
#loc48 = loc("CWE459_Incomplete_Cleanup__char_18.c":91:11)
#loc49 = loc("/usr/include/stdlib.h":575:1)
#loc50 = loc("/usr/include/stdlib.h":575:41)
#loc51 = loc("/usr/include/time.h":76:1)
#loc52 = loc("/usr/include/time.h":76:38)
#loc53 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc54 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc55 = loc("CWE459_Incomplete_Cleanup__char_18.c":108:15)
#loc56 = loc("CWE459_Incomplete_Cleanup__char_18.c":110:15)
#loc57 = loc("CWE459_Incomplete_Cleanup__char_18.c":113:15)
#loc58 = loc("CWE459_Incomplete_Cleanup__char_18.c":115:15)
#loc59 = loc("CWE459_Incomplete_Cleanup__char_18.c":103:1)
#loc60 = loc("CWE459_Incomplete_Cleanup__char_18.c":118:1)
#loc65 = loc("CWE459_Incomplete_Cleanup__char_18.c":104:1)
#loc66 = loc("CWE459_Incomplete_Cleanup__char_18.c":106:27)
#loc67 = loc("CWE459_Incomplete_Cleanup__char_18.c":106:22)
#loc68 = loc("CWE459_Incomplete_Cleanup__char_18.c":106:5)
#loc69 = loc("CWE459_Incomplete_Cleanup__char_18.c":108:5)
#loc70 = loc("CWE459_Incomplete_Cleanup__char_18.c":109:5)
#loc71 = loc("CWE459_Incomplete_Cleanup__char_18.c":109:45)
#loc72 = loc("CWE459_Incomplete_Cleanup__char_18.c":110:5)
#loc73 = loc("CWE459_Incomplete_Cleanup__char_18.c":113:5)
#loc74 = loc("CWE459_Incomplete_Cleanup__char_18.c":114:5)
#loc75 = loc("CWE459_Incomplete_Cleanup__char_18.c":114:44)
#loc76 = loc("CWE459_Incomplete_Cleanup__char_18.c":115:5)
#loc77 = loc("CWE459_Incomplete_Cleanup__char_18.c":117:12)
#loc78 = loc("CWE459_Incomplete_Cleanup__char_18.c":117:5)
#loc79 = loc("/usr/include/unistd.h":858:1)
#loc80 = loc("/usr/include/unistd.h":858:48)
#loc81 = loc("CWE459_Incomplete_Cleanup__char_18.c":66:1)
#loc82 = loc("CWE459_Incomplete_Cleanup__char_18.c":87:1)
#loc83 = loc("CWE459_Incomplete_Cleanup__char_18.c":72:9)
#loc84 = loc("CWE459_Incomplete_Cleanup__char_18.c":72:15)
#loc85 = loc("CWE459_Incomplete_Cleanup__char_18.c":74:9)
#loc86 = loc("CWE459_Incomplete_Cleanup__char_18.c":74:40)
#loc87 = loc("CWE459_Incomplete_Cleanup__char_18.c":68:5)
#loc88 = loc("CWE459_Incomplete_Cleanup__char_18.c":68:10)
#loc89 = loc("CWE459_Incomplete_Cleanup__char_18.c":69:1)
#loc90 = loc("CWE459_Incomplete_Cleanup__char_18.c":74:32)
#loc91 = loc("CWE459_Incomplete_Cleanup__char_18.c":74:24)
#loc92 = loc("CWE459_Incomplete_Cleanup__char_18.c":75:9)
#loc93 = loc("CWE459_Incomplete_Cleanup__char_18.c":85:9)
#loc94 = loc("CWE459_Incomplete_Cleanup__char_18.c":75:13)
#loc95 = loc("CWE459_Incomplete_Cleanup__char_18.c":75:26)
#loc96 = loc("CWE459_Incomplete_Cleanup__char_18.c":75:25)
#loc97 = loc("CWE459_Incomplete_Cleanup__char_18.c":76:9)
#loc98 = loc("CWE459_Incomplete_Cleanup__char_18.c":77:28)
#loc99 = loc("CWE459_Incomplete_Cleanup__char_18.c":77:38)
#loc100 = loc("CWE459_Incomplete_Cleanup__char_18.c":77:21)
#loc101 = loc("CWE459_Incomplete_Cleanup__char_18.c":77:13)
#loc102 = loc("CWE459_Incomplete_Cleanup__char_18.c":77:41)
#loc103 = loc("CWE459_Incomplete_Cleanup__char_18.c":78:13)
#loc104 = loc("CWE459_Incomplete_Cleanup__char_18.c":84:13)
#loc105 = loc("CWE459_Incomplete_Cleanup__char_18.c":78:17)
#loc106 = loc("CWE459_Incomplete_Cleanup__char_18.c":78:26)
#loc107 = loc("CWE459_Incomplete_Cleanup__char_18.c":79:13)
#loc108 = loc("CWE459_Incomplete_Cleanup__char_18.c":80:17)
#loc109 = loc("CWE459_Incomplete_Cleanup__char_18.c":80:25)
#loc110 = loc("CWE459_Incomplete_Cleanup__char_18.c":80:32)
#loc111 = loc("CWE459_Incomplete_Cleanup__char_18.c":81:24)
#loc112 = loc("CWE459_Incomplete_Cleanup__char_18.c":81:17)
#loc113 = loc("CWE459_Incomplete_Cleanup__char_18.c":83:24)
#loc114 = loc("CWE459_Incomplete_Cleanup__char_18.c":83:17)
#loc115 = loc(fused[#loc1, #loc2])
#loc116 = loc(fused[#loc3, #loc4])
#loc117 = loc(fused[#loc5, #loc6])
#loc118 = loc(fused[#loc7, #loc8])
#loc119 = loc(fused[#loc10, #loc11])
#loc120 = loc(fused[#loc13, #loc14])
#loc121 = loc(fused[#loc15, #loc16])
#loc122 = loc(fused[#loc17, #loc18])
#loc123 = loc(fused[#loc19, #loc20])
#loc124 = loc(fused[#loc21, #loc22])
#loc125 = loc(fused[#loc26, #loc27])
#loc126 = loc(fused[#loc28, #loc29])
#loc127 = loc(fused[#loc31, #loc27])
#loc128 = loc(fused[#loc34, #loc35])
#loc129 = loc(fused[#loc36, #loc37])
#loc130 = loc(fused[#loc38, #loc39])
#loc131 = loc(fused[#loc40, #loc37])
#loc132 = loc(fused[#loc45, #loc46])
#loc133 = loc(fused[#loc47, #loc48])
#loc134 = loc(fused[#loc49, #loc50])
#loc135 = loc(fused[#loc51, #loc52])
#loc136 = loc(fused[#loc53, #loc54])
#loc137 = loc(fused[#loc59, #loc60])
#loc140 = loc(fused[#loc70, #loc71])
#loc141 = loc(fused[#loc74, #loc75])
#loc142 = loc(fused[#loc78, #loc77])
#loc143 = loc(fused[#loc79, #loc80])
#loc144 = loc(fused[#loc81, #loc82])
#loc145 = loc(fused[#loc83, #loc84])
#loc146 = loc(fused[#loc85, #loc86])
#loc147 = loc(fused[#loc87, #loc88])
#loc148 = loc(fused[#loc92, #loc93])
#loc149 = loc(fused[#loc94, #loc95])
#loc150 = loc(fused[#loc97, #loc93])
#loc151 = loc(fused[#loc101, #loc102])
#loc152 = loc(fused[#loc103, #loc104])
#loc153 = loc(fused[#loc105, #loc106])
#loc154 = loc(fused[#loc107, #loc104])
