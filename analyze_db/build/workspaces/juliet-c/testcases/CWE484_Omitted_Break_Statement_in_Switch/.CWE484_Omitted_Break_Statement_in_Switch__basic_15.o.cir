!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE484_Omitted_Break_Statement_in_Switch/CWE484_Omitted_Break_Statement_in_Switch__basic_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc118)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc119)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"0\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc5)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"1\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc6)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"2\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc7)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Invalid Number\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc8)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc9)
  cir.func no_proto @CWE484_Omitted_Break_Statement_in_Switch__basic_15_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc14)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["x", init] {alignment = 4 : i64} loc(#loc123)
            %2 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc20)
            %3 = cir.const #cir.int<3> : !s32i loc(#loc21)
            %4 = cir.binop(rem, %2, %3) : !s32i loc(#loc124)
            cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc123)
            cir.scope {
              %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc24)
              cir.switch (%5 : !s32i) {
                cir.case(equal, [#cir.int<0> : !s32i]) {
                  %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc5)
                  %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc5)
                  cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc26)
                  cir.yield loc(#loc25)
                } loc(#loc25)
                cir.case(equal, [#cir.int<1> : !s32i]) {
                  %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc6)
                  %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc6)
                  cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc28)
                  cir.break loc(#loc29)
                } loc(#loc27)
                cir.case(equal, [#cir.int<2> : !s32i]) {
                  %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc7)
                  %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc7)
                  cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc31)
                  cir.break loc(#loc32)
                } loc(#loc30)
                cir.case(default, []) {
                  %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc8)
                  %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc8)
                  cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc34)
                  cir.break loc(#loc35)
                } loc(#loc33)
                cir.yield loc(#loc22)
              } loc(#loc22)
            } loc(#loc125)
          } loc(#loc122)
          cir.break loc(#loc36)
        } loc(#loc15)
        cir.case(default, []) {
          %1 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc9)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc38)
          cir.break loc(#loc39)
        } loc(#loc37)
        cir.yield loc(#loc12)
      } loc(#loc12)
    } loc(#loc121)
    cir.return loc(#loc11)
  } loc(#loc120)
  cir.func no_proto @CWE484_Omitted_Break_Statement_in_Switch__basic_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc127)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc42)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc128)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc44)
    cir.return loc(#loc41)
  } loc(#loc126)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc50)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %1 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc52)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc52)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc53)
          cir.break loc(#loc54)
        } loc(#loc51)
        cir.case(default, []) {
          cir.scope {
            %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["x", init] {alignment = 4 : i64} loc(#loc132)
            %2 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc60)
            %3 = cir.const #cir.int<3> : !s32i loc(#loc61)
            %4 = cir.binop(rem, %2, %3) : !s32i loc(#loc133)
            cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc132)
            cir.scope {
              %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc64)
              cir.switch (%5 : !s32i) {
                cir.case(equal, [#cir.int<0> : !s32i]) {
                  %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc66)
                  %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc66)
                  cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc67)
                  cir.break loc(#loc68)
                } loc(#loc65)
                cir.case(equal, [#cir.int<1> : !s32i]) {
                  %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc70)
                  %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc70)
                  cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc71)
                  cir.break loc(#loc72)
                } loc(#loc69)
                cir.case(equal, [#cir.int<2> : !s32i]) {
                  %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc74)
                  %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc74)
                  cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc75)
                  cir.break loc(#loc76)
                } loc(#loc73)
                cir.case(default, []) {
                  %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc78)
                  %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc78)
                  cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc79)
                  cir.break loc(#loc80)
                } loc(#loc77)
                cir.yield loc(#loc62)
              } loc(#loc62)
            } loc(#loc134)
          } loc(#loc131)
          cir.break loc(#loc81)
        } loc(#loc55)
        cir.yield loc(#loc48)
      } loc(#loc48)
    } loc(#loc130)
    cir.return loc(#loc47)
  } loc(#loc129)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc86)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["x", init] {alignment = 4 : i64} loc(#loc138)
            %2 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc92)
            %3 = cir.const #cir.int<3> : !s32i loc(#loc93)
            %4 = cir.binop(rem, %2, %3) : !s32i loc(#loc139)
            cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc138)
            cir.scope {
              %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc96)
              cir.switch (%5 : !s32i) {
                cir.case(equal, [#cir.int<0> : !s32i]) {
                  %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc98)
                  %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc98)
                  cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc99)
                  cir.break loc(#loc100)
                } loc(#loc97)
                cir.case(equal, [#cir.int<1> : !s32i]) {
                  %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc102)
                  %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc102)
                  cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc103)
                  cir.break loc(#loc104)
                } loc(#loc101)
                cir.case(equal, [#cir.int<2> : !s32i]) {
                  %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc106)
                  %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc106)
                  cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc107)
                  cir.break loc(#loc108)
                } loc(#loc105)
                cir.case(default, []) {
                  %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc110)
                  %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc110)
                  cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc111)
                  cir.break loc(#loc112)
                } loc(#loc109)
                cir.yield loc(#loc94)
              } loc(#loc94)
            } loc(#loc140)
          } loc(#loc137)
          cir.break loc(#loc113)
        } loc(#loc87)
        cir.case(default, []) {
          %1 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc115)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc115)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc116)
          cir.break loc(#loc117)
        } loc(#loc114)
        cir.yield loc(#loc84)
      } loc(#loc84)
    } loc(#loc136)
    cir.return loc(#loc83)
  } loc(#loc135)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE484_Omitted_Break_Statement_in_Switch/CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":31:23)
#loc6 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":33:23)
#loc7 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":36:23)
#loc8 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":39:23)
#loc9 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":46:19)
#loc10 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":20:1)
#loc11 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":49:1)
#loc12 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":22:5)
#loc13 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":48:5)
#loc14 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":22:12)
#loc15 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":24:5)
#loc16 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":25:5)
#loc17 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":42:5)
#loc18 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":26:9)
#loc19 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":26:28)
#loc20 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":26:18)
#loc21 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":26:27)
#loc22 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":28:9)
#loc23 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":41:9)
#loc24 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":28:17)
#loc25 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":30:9)
#loc26 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":31:13)
#loc27 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":32:9)
#loc28 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":33:13)
#loc29 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":34:13)
#loc30 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":35:9)
#loc31 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":36:13)
#loc32 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":37:13)
#loc33 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":38:9)
#loc34 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":39:13)
#loc35 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":40:13)
#loc36 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":43:5)
#loc37 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":44:5)
#loc38 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":46:9)
#loc39 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":47:9)
#loc40 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":123:1)
#loc41 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":127:1)
#loc42 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":125:5)
#loc43 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":125:11)
#loc44 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":126:5)
#loc45 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":126:11)
#loc46 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":56:1)
#loc47 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":87:1)
#loc48 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":58:5)
#loc49 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":86:5)
#loc50 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":58:12)
#loc51 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":60:5)
#loc52 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":62:19)
#loc53 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":62:9)
#loc54 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":63:9)
#loc55 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":64:5)
#loc56 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":65:5)
#loc57 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":84:5)
#loc58 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":66:9)
#loc59 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":66:28)
#loc60 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":66:18)
#loc61 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":66:27)
#loc62 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":69:9)
#loc63 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":83:9)
#loc64 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":69:17)
#loc65 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":71:9)
#loc66 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":72:23)
#loc67 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":72:13)
#loc68 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":73:13)
#loc69 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":74:9)
#loc70 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":75:23)
#loc71 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":75:13)
#loc72 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":76:13)
#loc73 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":77:9)
#loc74 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":78:23)
#loc75 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":78:13)
#loc76 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":79:13)
#loc77 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":80:9)
#loc78 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":81:23)
#loc79 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":81:13)
#loc80 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":82:13)
#loc81 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":85:5)
#loc82 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":90:1)
#loc83 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":121:1)
#loc84 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":92:5)
#loc85 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":120:5)
#loc86 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":92:12)
#loc87 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":94:5)
#loc88 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":95:5)
#loc89 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":114:5)
#loc90 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":96:9)
#loc91 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":96:28)
#loc92 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":96:18)
#loc93 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":96:27)
#loc94 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":99:9)
#loc95 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":113:9)
#loc96 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":99:17)
#loc97 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":101:9)
#loc98 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":102:23)
#loc99 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":102:13)
#loc100 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":103:13)
#loc101 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":104:9)
#loc102 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":105:23)
#loc103 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":105:13)
#loc104 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":106:13)
#loc105 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":107:9)
#loc106 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":108:23)
#loc107 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":108:13)
#loc108 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":109:13)
#loc109 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":110:9)
#loc110 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":111:23)
#loc111 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":111:13)
#loc112 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":112:13)
#loc113 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":115:5)
#loc114 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":116:5)
#loc115 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":118:19)
#loc116 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":118:9)
#loc117 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":119:9)
#loc118 = loc(fused[#loc1, #loc2])
#loc119 = loc(fused[#loc3, #loc4])
#loc120 = loc(fused[#loc10, #loc11])
#loc121 = loc(fused[#loc12, #loc13])
#loc122 = loc(fused[#loc16, #loc17])
#loc123 = loc(fused[#loc18, #loc19])
#loc124 = loc(fused[#loc20, #loc21])
#loc125 = loc(fused[#loc22, #loc23])
#loc126 = loc(fused[#loc40, #loc41])
#loc127 = loc(fused[#loc42, #loc43])
#loc128 = loc(fused[#loc44, #loc45])
#loc129 = loc(fused[#loc46, #loc47])
#loc130 = loc(fused[#loc48, #loc49])
#loc131 = loc(fused[#loc56, #loc57])
#loc132 = loc(fused[#loc58, #loc59])
#loc133 = loc(fused[#loc60, #loc61])
#loc134 = loc(fused[#loc62, #loc63])
#loc135 = loc(fused[#loc82, #loc83])
#loc136 = loc(fused[#loc84, #loc85])
#loc137 = loc(fused[#loc88, #loc89])
#loc138 = loc(fused[#loc90, #loc91])
#loc139 = loc(fused[#loc92, #loc93])
#loc140 = loc(fused[#loc94, #loc95])
