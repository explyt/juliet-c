!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc71 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":137:10)
#loc72 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":137:14)
#loc73 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":137:20)
#loc74 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":137:32)
#loc220 = loc(fused[#loc71, #loc72])
#loc221 = loc(fused[#loc73, #loc74])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__negative_malloc_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc193)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc194)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc195)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc196)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__negative_malloc_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc198)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc13)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc13)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc199)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc201)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc17)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc17)
      cir.if %5 {
        %6 = cir.const #cir.int<1> : !s32i loc(#loc20)
        %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc21)
        %8 = cir.cast(integral, %7 : !s32i), !s16i loc(#loc21)
        cir.store %8, %0 : !s16i, !cir.ptr<!s16i> loc(#loc203)
      } loc(#loc202)
    } loc(#loc200)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc25)
      %4 = cir.cast(integral, %3 : !s16i), !s32i loc(#loc25)
      %5 = cir.const #cir.int<100> : !s32i loc(#loc26)
      %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc205)
      cir.if %6 {
        %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc207)
        %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc30)
        %9 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc31)
        %10 = cir.cast(integral, %9 : !s16i), !u64i loc(#loc31)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc30)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc208)
        cir.store %12, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc207)
        cir.scope {
          %33 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
          %34 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc35)
          %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc35)
          %36 = cir.cmp(eq, %33, %35) : !cir.ptr<!s8i>, !cir.bool loc(#loc210)
          cir.if %36 {
            %37 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc37)
            %38 = cir.const #cir.int<1> : !s32i loc(#loc38)
            %39 = cir.unary(minus, %38) : !s32i, !s32i loc(#loc39)
            cir.call @exit(%39) : (!s32i) -> () extra(#fn_attr) loc(#loc37)
          } loc(#loc211)
        } loc(#loc209)
        %13 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc40)
        %15 = cir.const #cir.int<65> : !s32i loc(#loc41)
        %16 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc42)
        %17 = cir.cast(integral, %16 : !s16i), !s32i loc(#loc42)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc43)
        %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc42)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc42)
        cir.libc.memset %20 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc212)
        %21 = cir.const #cir.int<0> : !s32i loc(#loc46)
        %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc46)
        %23 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
        %24 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc48)
        %25 = cir.cast(integral, %24 : !s16i), !s32i loc(#loc48)
        %26 = cir.const #cir.int<1> : !s32i loc(#loc49)
        %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc48)
        %28 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc50)
        cir.store %22, %28 : !s8i, !cir.ptr<!s8i> loc(#loc213)
        %29 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
        cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc52)
        %30 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc53)
        %31 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
        %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc54)
        cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc53)
      } loc(#loc206)
    } loc(#loc204)
    cir.return loc(#loc10)
  } loc(#loc197)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__negative_malloc_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc215)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc57)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc216)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc59)
    cir.return loc(#loc56)
  } loc(#loc214)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc217)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc218)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc65)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc66)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc67)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc68)
  cir.func @main(%arg0: !s32i loc(fused[#loc71, #loc72]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc73, #loc74])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc220)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc221)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc70)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc75)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc75)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc76)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc77)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc77)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc78)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc65)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    %8 = cir.get_global @CWE194_Unexpected_Sign_Extension__negative_malloc_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc222)
    cir.call @CWE194_Unexpected_Sign_Extension__negative_malloc_08_good() : () -> () loc(#loc80)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc66)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc67)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    %13 = cir.get_global @CWE194_Unexpected_Sign_Extension__negative_malloc_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc223)
    cir.call @CWE194_Unexpected_Sign_Extension__negative_malloc_08_bad() : () -> () loc(#loc84)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc68)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc87)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc224)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc224)
    cir.return %17 : !s32i loc(#loc224)
  } loc(#loc219)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc90)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc91)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc226)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc226)
    cir.return %2 : !s32i loc(#loc226)
  } loc(#loc225)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc93)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc228)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc98)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc98)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc229)
    cir.scope {
      %3 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc231)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc102)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc102)
      cir.if %5 {
        %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc93)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc93)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc107)
      } else {
        %6 = cir.const #cir.int<100> : !s32i loc(#loc108)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc109)
        %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc108)
        %9 = cir.cast(integral, %8 : !s32i), !s16i loc(#loc108)
        cir.store %9, %0 : !s16i, !cir.ptr<!s16i> loc(#loc233)
      } loc(#loc232)
    } loc(#loc230)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc113)
      %4 = cir.cast(integral, %3 : !s16i), !s32i loc(#loc113)
      %5 = cir.const #cir.int<100> : !s32i loc(#loc114)
      %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc235)
      cir.if %6 {
        %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc237)
        %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc118)
        %9 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc119)
        %10 = cir.cast(integral, %9 : !s16i), !u64i loc(#loc119)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc118)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc238)
        cir.store %12, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc237)
        cir.scope {
          %33 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
          %34 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc123)
          %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc123)
          %36 = cir.cmp(eq, %33, %35) : !cir.ptr<!s8i>, !cir.bool loc(#loc240)
          cir.if %36 {
            %37 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc125)
            %38 = cir.const #cir.int<1> : !s32i loc(#loc126)
            %39 = cir.unary(minus, %38) : !s32i, !s32i loc(#loc127)
            cir.call @exit(%39) : (!s32i) -> () extra(#fn_attr) loc(#loc125)
          } loc(#loc241)
        } loc(#loc239)
        %13 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc128)
        %15 = cir.const #cir.int<65> : !s32i loc(#loc129)
        %16 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc130)
        %17 = cir.cast(integral, %16 : !s16i), !s32i loc(#loc130)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc131)
        %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc130)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc130)
        cir.libc.memset %20 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc242)
        %21 = cir.const #cir.int<0> : !s32i loc(#loc134)
        %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc134)
        %23 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
        %24 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc136)
        %25 = cir.cast(integral, %24 : !s16i), !s32i loc(#loc136)
        %26 = cir.const #cir.int<1> : !s32i loc(#loc137)
        %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc136)
        %28 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc138)
        cir.store %22, %28 : !s8i, !cir.ptr<!s8i> loc(#loc243)
        %29 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
        cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc140)
        %30 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc141)
        %31 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
        %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc142)
        cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc141)
      } loc(#loc236)
    } loc(#loc234)
    cir.return loc(#loc95)
  } loc(#loc227)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc144)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc145)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc245)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc245)
    cir.return %2 : !s32i loc(#loc245)
  } loc(#loc244)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc247)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc151)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc151)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc248)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc250)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc155)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc155)
      cir.if %5 {
        %6 = cir.const #cir.int<100> : !s32i loc(#loc158)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc159)
        %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc158)
        %9 = cir.cast(integral, %8 : !s32i), !s16i loc(#loc158)
        cir.store %9, %0 : !s16i, !cir.ptr<!s16i> loc(#loc252)
      } loc(#loc251)
    } loc(#loc249)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc163)
      %4 = cir.cast(integral, %3 : !s16i), !s32i loc(#loc163)
      %5 = cir.const #cir.int<100> : !s32i loc(#loc164)
      %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc254)
      cir.if %6 {
        %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc256)
        %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc168)
        %9 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc169)
        %10 = cir.cast(integral, %9 : !s16i), !u64i loc(#loc169)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc168)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc257)
        cir.store %12, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc256)
        cir.scope {
          %33 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc172)
          %34 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc173)
          %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc173)
          %36 = cir.cmp(eq, %33, %35) : !cir.ptr<!s8i>, !cir.bool loc(#loc259)
          cir.if %36 {
            %37 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc175)
            %38 = cir.const #cir.int<1> : !s32i loc(#loc176)
            %39 = cir.unary(minus, %38) : !s32i, !s32i loc(#loc177)
            cir.call @exit(%39) : (!s32i) -> () extra(#fn_attr) loc(#loc175)
          } loc(#loc260)
        } loc(#loc258)
        %13 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc178)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc178)
        %15 = cir.const #cir.int<65> : !s32i loc(#loc179)
        %16 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc180)
        %17 = cir.cast(integral, %16 : !s16i), !s32i loc(#loc180)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc181)
        %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc180)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc180)
        cir.libc.memset %20 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc261)
        %21 = cir.const #cir.int<0> : !s32i loc(#loc184)
        %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc184)
        %23 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc185)
        %24 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc186)
        %25 = cir.cast(integral, %24 : !s16i), !s32i loc(#loc186)
        %26 = cir.const #cir.int<1> : !s32i loc(#loc187)
        %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc186)
        %28 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc188)
        cir.store %22, %28 : !s8i, !cir.ptr<!s8i> loc(#loc262)
        %29 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc189)
        cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc190)
        %30 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc191)
        %31 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc192)
        %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc192)
        cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc191)
      } loc(#loc255)
    } loc(#loc253)
    cir.return loc(#loc148)
  } loc(#loc246)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":35:1)
#loc10 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":58:1)
#loc11 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":37:5)
#loc12 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":37:11)
#loc13 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":39:12)
#loc14 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":39:5)
#loc15 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":40:5)
#loc16 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":44:5)
#loc17 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":40:8)
#loc18 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":40:26)
#loc19 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":41:5)
#loc20 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":43:17)
#loc21 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":43:16)
#loc22 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":43:9)
#loc23 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":46:5)
#loc24 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":57:5)
#loc25 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":46:9)
#loc26 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":46:16)
#loc27 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":47:5)
#loc28 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":50:9)
#loc29 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":50:48)
#loc30 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":50:37)
#loc31 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":50:44)
#loc32 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":51:9)
#loc33 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":51:43)
#loc34 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":51:13)
#loc35 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":51:27)
#loc36 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":51:33)
#loc37 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":51:34)
#loc38 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":51:40)
#loc39 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":51:39)
#loc40 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":53:16)
#loc41 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":53:28)
#loc42 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":53:33)
#loc43 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":53:38)
#loc44 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":53:9)
#loc45 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":53:39)
#loc46 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":54:30)
#loc47 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":54:9)
#loc48 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":54:20)
#loc49 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":54:25)
#loc50 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":54:26)
#loc51 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":55:19)
#loc52 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":55:9)
#loc53 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":56:9)
#loc54 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":56:14)
#loc55 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":121:1)
#loc56 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":125:1)
#loc57 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":123:5)
#loc58 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":123:14)
#loc59 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":124:5)
#loc60 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":124:14)
#loc61 = loc("/usr/include/stdlib.h":575:1)
#loc62 = loc("/usr/include/stdlib.h":575:41)
#loc63 = loc("/usr/include/time.h":76:1)
#loc64 = loc("/usr/include/time.h":76:38)
#loc65 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":142:15)
#loc66 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":144:15)
#loc67 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":147:15)
#loc68 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":149:15)
#loc69 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":137:1)
#loc70 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":152:1)
#loc75 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":138:1)
#loc76 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":140:27)
#loc77 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":140:22)
#loc78 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":140:5)
#loc79 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":142:5)
#loc80 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":143:5)
#loc81 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":143:63)
#loc82 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":144:5)
#loc83 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":147:5)
#loc84 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":148:5)
#loc85 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":148:62)
#loc86 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":149:5)
#loc87 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":151:12)
#loc88 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":151:5)
#loc89 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":23:1)
#loc90 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":26:1)
#loc91 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":25:12)
#loc92 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":25:5)
#loc93 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":73:19)
#loc94 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":65:1)
#loc95 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":93:1)
#loc96 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":67:5)
#loc97 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":67:11)
#loc98 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":69:12)
#loc99 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":69:5)
#loc100 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":70:5)
#loc101 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":79:5)
#loc102 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":70:8)
#loc103 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":70:27)
#loc104 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":71:5)
#loc105 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":74:5)
#loc106 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":76:5)
#loc107 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":73:9)
#loc108 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":78:16)
#loc109 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":78:20)
#loc110 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":78:9)
#loc111 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":81:5)
#loc112 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":92:5)
#loc113 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":81:9)
#loc114 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":81:16)
#loc115 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":82:5)
#loc116 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":85:9)
#loc117 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":85:48)
#loc118 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":85:37)
#loc119 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":85:44)
#loc120 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":86:9)
#loc121 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":86:43)
#loc122 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":86:13)
#loc123 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":86:27)
#loc124 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":86:33)
#loc125 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":86:34)
#loc126 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":86:40)
#loc127 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":86:39)
#loc128 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":88:16)
#loc129 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":88:28)
#loc130 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":88:33)
#loc131 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":88:38)
#loc132 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":88:9)
#loc133 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":88:39)
#loc134 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":89:30)
#loc135 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":89:9)
#loc136 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":89:20)
#loc137 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":89:25)
#loc138 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":89:26)
#loc139 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":90:19)
#loc140 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":90:9)
#loc141 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":91:9)
#loc142 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":91:14)
#loc143 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":28:1)
#loc144 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":31:1)
#loc145 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":30:12)
#loc146 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":30:5)
#loc147 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":96:1)
#loc148 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":119:1)
#loc149 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":98:5)
#loc150 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":98:11)
#loc151 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":100:12)
#loc152 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":100:5)
#loc153 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":101:5)
#loc154 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":105:5)
#loc155 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":101:8)
#loc156 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":101:26)
#loc157 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":102:5)
#loc158 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":104:16)
#loc159 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":104:20)
#loc160 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":104:9)
#loc161 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":107:5)
#loc162 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":118:5)
#loc163 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":107:9)
#loc164 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":107:16)
#loc165 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":108:5)
#loc166 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":111:9)
#loc167 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":111:48)
#loc168 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":111:37)
#loc169 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":111:44)
#loc170 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":112:9)
#loc171 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":112:43)
#loc172 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":112:13)
#loc173 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":112:27)
#loc174 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":112:33)
#loc175 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":112:34)
#loc176 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":112:40)
#loc177 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":112:39)
#loc178 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":114:16)
#loc179 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":114:28)
#loc180 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":114:33)
#loc181 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":114:38)
#loc182 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":114:9)
#loc183 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":114:39)
#loc184 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":115:30)
#loc185 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":115:9)
#loc186 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":115:20)
#loc187 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":115:25)
#loc188 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":115:26)
#loc189 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":116:19)
#loc190 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":116:9)
#loc191 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":117:9)
#loc192 = loc("CWE194_Unexpected_Sign_Extension__negative_malloc_08.c":117:14)
#loc193 = loc(fused[#loc1, #loc2])
#loc194 = loc(fused[#loc3, #loc4])
#loc195 = loc(fused[#loc5, #loc6])
#loc196 = loc(fused[#loc7, #loc8])
#loc197 = loc(fused[#loc9, #loc10])
#loc198 = loc(fused[#loc11, #loc12])
#loc199 = loc(fused[#loc14, #loc13])
#loc200 = loc(fused[#loc15, #loc16])
#loc201 = loc(fused[#loc17, #loc18])
#loc202 = loc(fused[#loc19, #loc16])
#loc203 = loc(fused[#loc22, #loc20])
#loc204 = loc(fused[#loc23, #loc24])
#loc205 = loc(fused[#loc25, #loc26])
#loc206 = loc(fused[#loc27, #loc24])
#loc207 = loc(fused[#loc28, #loc29])
#loc208 = loc(fused[#loc30, #loc29])
#loc209 = loc(fused[#loc32, #loc33])
#loc210 = loc(fused[#loc34, #loc35])
#loc211 = loc(fused[#loc36, #loc33])
#loc212 = loc(fused[#loc44, #loc45])
#loc213 = loc(fused[#loc47, #loc46])
#loc214 = loc(fused[#loc55, #loc56])
#loc215 = loc(fused[#loc57, #loc58])
#loc216 = loc(fused[#loc59, #loc60])
#loc217 = loc(fused[#loc61, #loc62])
#loc218 = loc(fused[#loc63, #loc64])
#loc219 = loc(fused[#loc69, #loc70])
#loc222 = loc(fused[#loc80, #loc81])
#loc223 = loc(fused[#loc84, #loc85])
#loc224 = loc(fused[#loc88, #loc87])
#loc225 = loc(fused[#loc89, #loc90])
#loc226 = loc(fused[#loc92, #loc91])
#loc227 = loc(fused[#loc94, #loc95])
#loc228 = loc(fused[#loc96, #loc97])
#loc229 = loc(fused[#loc99, #loc98])
#loc230 = loc(fused[#loc100, #loc101])
#loc231 = loc(fused[#loc102, #loc103])
#loc232 = loc(fused[#loc104, #loc105, #loc106, #loc101])
#loc233 = loc(fused[#loc110, #loc109])
#loc234 = loc(fused[#loc111, #loc112])
#loc235 = loc(fused[#loc113, #loc114])
#loc236 = loc(fused[#loc115, #loc112])
#loc237 = loc(fused[#loc116, #loc117])
#loc238 = loc(fused[#loc118, #loc117])
#loc239 = loc(fused[#loc120, #loc121])
#loc240 = loc(fused[#loc122, #loc123])
#loc241 = loc(fused[#loc124, #loc121])
#loc242 = loc(fused[#loc132, #loc133])
#loc243 = loc(fused[#loc135, #loc134])
#loc244 = loc(fused[#loc143, #loc144])
#loc245 = loc(fused[#loc146, #loc145])
#loc246 = loc(fused[#loc147, #loc148])
#loc247 = loc(fused[#loc149, #loc150])
#loc248 = loc(fused[#loc152, #loc151])
#loc249 = loc(fused[#loc153, #loc154])
#loc250 = loc(fused[#loc155, #loc156])
#loc251 = loc(fused[#loc157, #loc154])
#loc252 = loc(fused[#loc160, #loc159])
#loc253 = loc(fused[#loc161, #loc162])
#loc254 = loc(fused[#loc163, #loc164])
#loc255 = loc(fused[#loc165, #loc162])
#loc256 = loc(fused[#loc166, #loc167])
#loc257 = loc(fused[#loc168, #loc167])
#loc258 = loc(fused[#loc170, #loc171])
#loc259 = loc(fused[#loc172, #loc173])
#loc260 = loc(fused[#loc174, #loc171])
#loc261 = loc(fused[#loc182, #loc183])
#loc262 = loc(fused[#loc185, #loc184])
