!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_fgets_add_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc230)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc231)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc232)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc233)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printIntLine(!s32i) loc(#loc234)
  cir.func no_proto @CWE190_Integer_Overflow__int_fgets_add_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc236)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc237)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc238)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc20)
    cir.store %3, %2 : !s32i, !cir.ptr<!s32i> loc(#loc239)
    cir.br ^bb1 loc(#loc240)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc241)
    %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc24)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc24)
    cir.brcond %6 ^bb2, ^bb10 loc(#loc242)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc243)
  ^bb3:  // pred: ^bb2
    %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc236)
    cir.store %7, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc236)
    cir.br ^bb4 loc(#loc244)
  ^bb4:  // pred: ^bb3
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc31)
    %9 = cir.const #cir.int<3> : !s32i loc(#loc32)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc32)
    %11 = cir.const #cir.int<4> : !u64i loc(#loc32)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc32)
    %13 = cir.const #cir.int<2> : !s32i loc(#loc32)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc32)
    %15 = cir.binop(add, %12, %14) : !u64i loc(#loc32)
    %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc32)
    %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc231)
    %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc33)
    %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc34)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc35)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc35)
    %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc245)
    cir.brcond %22 ^bb5, ^bb6 loc(#loc246)
  ^bb5:  // pred: ^bb4
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc39)
    %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc40)
    cir.store %24, %2 : !s32i, !cir.ptr<!s32i> loc(#loc247)
    cir.br ^bb7 loc(#loc37)
  ^bb6:  // pred: ^bb4
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc43)
    cir.br ^bb7 loc(#loc30)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc30)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc28)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc23)
  ^bb10:  // 2 preds: ^bb1, ^bb9
    cir.br ^bb11 loc(#loc23)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc248)
  ^bb12:  // pred: ^bb11
    %27 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc249)
    %28 = cir.call %27() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc46)
    %29 = cir.cast(int_to_bool, %28 : !s32i), !cir.bool loc(#loc46)
    cir.brcond %29 ^bb13, ^bb16 loc(#loc250)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc251)
  ^bb14:  // pred: ^bb13
    %30 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc51)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %32 = cir.binop(add, %30, %31) nsw : !s32i loc(#loc51)
    cir.store %32, %1 : !s32i, !cir.ptr<!s32i> loc(#loc237)
    %33 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc52)
    cir.call @printIntLine(%33) : (!s32i) -> () loc(#loc53)
    cir.br ^bb15 loc(#loc50)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc45)
  ^bb16:  // 2 preds: ^bb12, ^bb15
    cir.br ^bb17 loc(#loc45)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc13)
  } loc(#loc235)
  cir.func no_proto @CWE190_Integer_Overflow__int_fgets_add_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc253)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc56)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc254)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc58)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc255)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc60)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc256)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc62)
    cir.return loc(#loc55)
  } loc(#loc252)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc65)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc66)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc258)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc258)
    cir.return %2 : !s32i loc(#loc258)
  } loc(#loc257)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc68)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc69)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc260)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc261)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc262)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc78)
    cir.store %3, %2 : !s32i, !cir.ptr<!s32i> loc(#loc263)
    cir.br ^bb1 loc(#loc264)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc265)
    %5 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc82)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc82)
    cir.brcond %6 ^bb2, ^bb10 loc(#loc266)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc267)
  ^bb3:  // pred: ^bb2
    %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc260)
    cir.store %7, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc260)
    cir.br ^bb4 loc(#loc268)
  ^bb4:  // pred: ^bb3
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc89)
    %9 = cir.const #cir.int<3> : !s32i loc(#loc90)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc90)
    %11 = cir.const #cir.int<4> : !u64i loc(#loc90)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc90)
    %13 = cir.const #cir.int<2> : !s32i loc(#loc90)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc90)
    %15 = cir.binop(add, %12, %14) : !u64i loc(#loc90)
    %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc90)
    %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc231)
    %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc91)
    %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc92)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc93)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc93)
    %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc269)
    cir.brcond %22 ^bb5, ^bb6 loc(#loc270)
  ^bb5:  // pred: ^bb4
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc97)
    %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc98)
    cir.store %24, %2 : !s32i, !cir.ptr<!s32i> loc(#loc271)
    cir.br ^bb7 loc(#loc95)
  ^bb6:  // pred: ^bb4
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc101)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc101)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc102)
    cir.br ^bb7 loc(#loc88)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc88)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc86)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc81)
  ^bb10:  // 2 preds: ^bb1, ^bb9
    cir.br ^bb11 loc(#loc81)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc272)
  ^bb12:  // pred: ^bb11
    %27 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc273)
    %28 = cir.call %27() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc105)
    %29 = cir.cast(int_to_bool, %28 : !s32i), !cir.bool loc(#loc105)
    cir.brcond %29 ^bb13, ^bb14 loc(#loc274)
  ^bb13:  // pred: ^bb12
    %30 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc68)
    %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc110)
    cir.br ^bb20 loc(#loc108)
  ^bb14:  // pred: ^bb12
    cir.br ^bb15 loc(#loc275)
  ^bb15:  // pred: ^bb14
    %32 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc113)
    %33 = cir.const #cir.int<2147483647> : !s32i loc(#loc114)
    %34 = cir.cmp(lt, %32, %33) : !s32i, !cir.bool loc(#loc276)
    cir.brcond %34 ^bb16, ^bb17 loc(#loc277)
  ^bb16:  // pred: ^bb15
    %35 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc118)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc75)
    %37 = cir.binop(add, %35, %36) nsw : !s32i loc(#loc118)
    cir.store %37, %1 : !s32i, !cir.ptr<!s32i> loc(#loc261)
    %38 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc119)
    cir.call @printIntLine(%38) : (!s32i) -> () loc(#loc120)
    cir.br ^bb18 loc(#loc116)
  ^bb17:  // pred: ^bb15
    %39 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc69)
    %40 = cir.cast(array_to_ptrdecay, %39 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%40) : (!cir.ptr<!s8i>) -> () loc(#loc121)
    cir.br ^bb18 loc(#loc112)
  ^bb18:  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc112)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc104)
  ^bb20:  // 2 preds: ^bb13, ^bb19
    cir.br ^bb21 loc(#loc104)
  ^bb21:  // pred: ^bb20
    cir.return loc(#loc71)
  } loc(#loc259)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc123)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc124)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc279)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc279)
    cir.return %2 : !s32i loc(#loc279)
  } loc(#loc278)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc281)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc282)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc283)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc134)
    cir.store %3, %2 : !s32i, !cir.ptr<!s32i> loc(#loc284)
    cir.br ^bb1 loc(#loc285)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc286)
    %5 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc138)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc138)
    cir.brcond %6 ^bb2, ^bb10 loc(#loc287)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc288)
  ^bb3:  // pred: ^bb2
    %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc281)
    cir.store %7, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc281)
    cir.br ^bb4 loc(#loc289)
  ^bb4:  // pred: ^bb3
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc145)
    %9 = cir.const #cir.int<3> : !s32i loc(#loc146)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc146)
    %11 = cir.const #cir.int<4> : !u64i loc(#loc146)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc146)
    %13 = cir.const #cir.int<2> : !s32i loc(#loc146)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc146)
    %15 = cir.binop(add, %12, %14) : !u64i loc(#loc146)
    %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc146)
    %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc231)
    %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc147)
    %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc148)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc149)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc149)
    %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc290)
    cir.brcond %22 ^bb5, ^bb6 loc(#loc291)
  ^bb5:  // pred: ^bb4
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc153)
    %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc154)
    cir.store %24, %2 : !s32i, !cir.ptr<!s32i> loc(#loc292)
    cir.br ^bb7 loc(#loc151)
  ^bb6:  // pred: ^bb4
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc157)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc157)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc158)
    cir.br ^bb7 loc(#loc144)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc144)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc142)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc137)
  ^bb10:  // 2 preds: ^bb1, ^bb9
    cir.br ^bb11 loc(#loc137)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc293)
  ^bb12:  // pred: ^bb11
    %27 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc294)
    %28 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc161)
    %29 = cir.cast(int_to_bool, %28 : !s32i), !cir.bool loc(#loc161)
    cir.brcond %29 ^bb13, ^bb19 loc(#loc295)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc296)
  ^bb14:  // pred: ^bb13
    %30 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc166)
    %31 = cir.const #cir.int<2147483647> : !s32i loc(#loc167)
    %32 = cir.cmp(lt, %30, %31) : !s32i, !cir.bool loc(#loc297)
    cir.brcond %32 ^bb15, ^bb16 loc(#loc298)
  ^bb15:  // pred: ^bb14
    %33 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc171)
    %34 = cir.const #cir.int<1> : !s32i loc(#loc131)
    %35 = cir.binop(add, %33, %34) nsw : !s32i loc(#loc171)
    cir.store %35, %1 : !s32i, !cir.ptr<!s32i> loc(#loc282)
    %36 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc172)
    cir.call @printIntLine(%36) : (!s32i) -> () loc(#loc173)
    cir.br ^bb17 loc(#loc169)
  ^bb16:  // pred: ^bb14
    %37 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc174)
    %38 = cir.cast(array_to_ptrdecay, %37 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc174)
    cir.call @printLine(%38) : (!cir.ptr<!s8i>) -> () loc(#loc175)
    cir.br ^bb17 loc(#loc165)
  ^bb17:  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc165)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc160)
  ^bb19:  // 2 preds: ^bb12, ^bb18
    cir.br ^bb20 loc(#loc160)
  ^bb20:  // pred: ^bb19
    cir.return loc(#loc127)
  } loc(#loc280)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc300)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc301)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc182)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc302)
    cir.br ^bb1 loc(#loc303)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc304)
    %4 = cir.call @staticReturnsFalse() : () -> !s32i loc(#loc186)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc186)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc305)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc191)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc191)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc192)
    cir.br ^bb4 loc(#loc189)
  ^bb3:  // pred: ^bb1
    %8 = cir.const #cir.int<2> : !s32i loc(#loc193)
    cir.store %8, %1 : !s32i, !cir.ptr<!s32i> loc(#loc306)
    cir.br ^bb4 loc(#loc185)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc185)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc307)
  ^bb6:  // pred: ^bb5
    %9 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc308)
    %10 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc197)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc197)
    cir.brcond %11 ^bb7, ^bb10 loc(#loc309)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc310)
  ^bb8:  // pred: ^bb7
    %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc202)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc179)
    %14 = cir.binop(add, %12, %13) nsw : !s32i loc(#loc202)
    cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc300)
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc203)
    cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc204)
    cir.br ^bb9 loc(#loc201)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc196)
  ^bb10:  // 2 preds: ^bb6, ^bb9
    cir.br ^bb11 loc(#loc196)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc177)
  } loc(#loc299)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc312)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc313)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc211)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc314)
    cir.br ^bb1 loc(#loc315)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc316)
    %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc215)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc215)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc317)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<2> : !s32i loc(#loc218)
    cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc318)
    cir.br ^bb3 loc(#loc214)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc214)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc319)
  ^bb5:  // pred: ^bb4
    %7 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc320)
    %8 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc222)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc222)
    cir.brcond %9 ^bb6, ^bb9 loc(#loc321)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc322)
  ^bb7:  // pred: ^bb6
    %10 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc227)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc208)
    %12 = cir.binop(add, %10, %11) nsw : !s32i loc(#loc227)
    cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc312)
    %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc228)
    cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc229)
    cir.br ^bb8 loc(#loc226)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc221)
  ^bb9:  // 2 preds: ^bb5, ^bb8
    cir.br ^bb10 loc(#loc221)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc206)
  } loc(#loc311)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_fgets_add_08.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":54:27)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":37:1)
#loc13 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":66:1)
#loc14 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":45:13)
#loc15 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":45:49)
#loc16 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":62:13)
#loc17 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":62:33)
#loc18 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":39:5)
#loc19 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":39:9)
#loc20 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":41:12)
#loc21 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":41:5)
#loc22 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":42:5)
#loc23 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":57:5)
#loc24 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":42:8)
#loc25 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":42:26)
#loc26 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":43:5)
#loc27 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":44:9)
#loc28 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":56:9)
#loc29 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":47:13)
#loc30 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":55:13)
#loc31 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":47:23)
#loc32 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":47:36)
#loc33 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":47:53)
#loc34 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":47:17)
#loc35 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":47:63)
#loc36 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":48:13)
#loc37 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":51:13)
#loc38 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":53:13)
#loc39 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":50:29)
#loc40 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":50:24)
#loc41 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":50:17)
#loc42 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":50:40)
#loc43 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":54:17)
#loc44 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":58:5)
#loc45 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":65:5)
#loc46 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":58:8)
#loc47 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":58:26)
#loc48 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":59:5)
#loc49 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":60:9)
#loc50 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":64:9)
#loc51 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":62:26)
#loc52 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":63:26)
#loc53 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":63:13)
#loc54 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":198:1)
#loc55 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":204:1)
#loc56 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":200:5)
#loc57 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":200:14)
#loc58 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":201:5)
#loc59 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":201:14)
#loc60 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":202:5)
#loc61 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":202:14)
#loc62 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":203:5)
#loc63 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":203:14)
#loc64 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":25:1)
#loc65 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":28:1)
#loc66 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":27:12)
#loc67 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":27:5)
#loc68 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":97:19)
#loc69 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":109:23)
#loc70 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":73:1)
#loc71 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":112:1)
#loc72 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":81:13)
#loc73 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":81:49)
#loc74 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":104:13)
#loc75 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":104:33)
#loc76 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":75:5)
#loc77 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":75:9)
#loc78 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":77:12)
#loc79 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":77:5)
#loc80 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":78:5)
#loc81 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":93:5)
#loc82 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":78:8)
#loc83 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":78:26)
#loc84 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":79:5)
#loc85 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":80:9)
#loc86 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":92:9)
#loc87 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":83:13)
#loc88 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":91:13)
#loc89 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":83:23)
#loc90 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":83:36)
#loc91 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":83:53)
#loc92 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":83:17)
#loc93 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":83:63)
#loc94 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":84:13)
#loc95 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":87:13)
#loc96 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":89:13)
#loc97 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":86:29)
#loc98 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":86:24)
#loc99 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":86:17)
#loc100 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":86:40)
#loc101 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":90:27)
#loc102 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":90:17)
#loc103 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":94:5)
#loc104 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":111:5)
#loc105 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":94:8)
#loc106 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":94:27)
#loc107 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":95:5)
#loc108 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":98:5)
#loc109 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":100:5)
#loc110 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":97:9)
#loc111 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":102:9)
#loc112 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":110:9)
#loc113 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":102:13)
#loc114 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":102:20)
#loc115 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":103:9)
#loc116 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":106:9)
#loc117 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":108:9)
#loc118 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":104:26)
#loc119 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":105:26)
#loc120 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":105:13)
#loc121 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":109:13)
#loc122 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":30:1)
#loc123 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":33:1)
#loc124 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":32:12)
#loc125 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":32:5)
#loc126 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":115:1)
#loc127 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":149:1)
#loc128 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":123:13)
#loc129 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":123:49)
#loc130 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":141:13)
#loc131 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":141:33)
#loc132 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":117:5)
#loc133 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":117:9)
#loc134 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":119:12)
#loc135 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":119:5)
#loc136 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":120:5)
#loc137 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":135:5)
#loc138 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":120:8)
#loc139 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":120:26)
#loc140 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":121:5)
#loc141 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":122:9)
#loc142 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":134:9)
#loc143 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":125:13)
#loc144 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":133:13)
#loc145 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":125:23)
#loc146 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":125:36)
#loc147 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":125:53)
#loc148 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":125:17)
#loc149 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":125:63)
#loc150 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":126:13)
#loc151 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":129:13)
#loc152 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":131:13)
#loc153 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":128:29)
#loc154 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":128:24)
#loc155 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":128:17)
#loc156 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":128:40)
#loc157 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":132:27)
#loc158 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":132:17)
#loc159 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":136:5)
#loc160 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":148:5)
#loc161 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":136:8)
#loc162 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":136:26)
#loc163 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":137:5)
#loc164 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":139:9)
#loc165 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":147:9)
#loc166 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":139:13)
#loc167 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":139:20)
#loc168 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":140:9)
#loc169 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":143:9)
#loc170 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":145:9)
#loc171 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":141:26)
#loc172 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":142:26)
#loc173 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":142:13)
#loc174 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":146:23)
#loc175 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":146:13)
#loc176 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":152:1)
#loc177 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":175:1)
#loc178 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":171:13)
#loc179 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":171:33)
#loc180 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":154:5)
#loc181 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":154:9)
#loc182 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":156:12)
#loc183 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":156:5)
#loc184 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":157:5)
#loc185 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":166:5)
#loc186 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":157:8)
#loc187 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":157:27)
#loc188 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":158:5)
#loc189 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":161:5)
#loc190 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":163:5)
#loc191 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":160:19)
#loc192 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":160:9)
#loc193 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":165:16)
#loc194 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":165:9)
#loc195 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":167:5)
#loc196 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":174:5)
#loc197 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":167:8)
#loc198 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":167:26)
#loc199 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":168:5)
#loc200 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":169:9)
#loc201 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":173:9)
#loc202 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":171:26)
#loc203 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":172:26)
#loc204 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":172:13)
#loc205 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":178:1)
#loc206 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":196:1)
#loc207 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":192:13)
#loc208 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":192:33)
#loc209 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":180:5)
#loc210 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":180:9)
#loc211 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":182:12)
#loc212 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":182:5)
#loc213 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":183:5)
#loc214 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":187:5)
#loc215 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":183:8)
#loc216 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":183:26)
#loc217 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":184:5)
#loc218 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":186:16)
#loc219 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":186:9)
#loc220 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":188:5)
#loc221 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":195:5)
#loc222 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":188:8)
#loc223 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":188:26)
#loc224 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":189:5)
#loc225 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":190:9)
#loc226 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":194:9)
#loc227 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":192:26)
#loc228 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":193:26)
#loc229 = loc("CWE190_Integer_Overflow__int_fgets_add_08.c":193:13)
#loc230 = loc(fused[#loc1, #loc2])
#loc231 = loc(fused[#loc3, #loc4])
#loc232 = loc(fused[#loc5, #loc6])
#loc233 = loc(fused[#loc7, #loc8])
#loc234 = loc(fused[#loc10, #loc11])
#loc235 = loc(fused[#loc12, #loc13])
#loc236 = loc(fused[#loc14, #loc15])
#loc237 = loc(fused[#loc16, #loc17])
#loc238 = loc(fused[#loc18, #loc19])
#loc239 = loc(fused[#loc21, #loc20])
#loc240 = loc(fused[#loc22, #loc23])
#loc241 = loc(fused[#loc24, #loc25])
#loc242 = loc(fused[#loc26, #loc23])
#loc243 = loc(fused[#loc27, #loc28])
#loc244 = loc(fused[#loc29, #loc30])
#loc245 = loc(fused[#loc34, #loc35])
#loc246 = loc(fused[#loc36, #loc37, #loc38, #loc30])
#loc247 = loc(fused[#loc41, #loc42])
#loc248 = loc(fused[#loc44, #loc45])
#loc249 = loc(fused[#loc46, #loc47])
#loc250 = loc(fused[#loc48, #loc45])
#loc251 = loc(fused[#loc49, #loc50])
#loc252 = loc(fused[#loc54, #loc55])
#loc253 = loc(fused[#loc56, #loc57])
#loc254 = loc(fused[#loc58, #loc59])
#loc255 = loc(fused[#loc60, #loc61])
#loc256 = loc(fused[#loc62, #loc63])
#loc257 = loc(fused[#loc64, #loc65])
#loc258 = loc(fused[#loc67, #loc66])
#loc259 = loc(fused[#loc70, #loc71])
#loc260 = loc(fused[#loc72, #loc73])
#loc261 = loc(fused[#loc74, #loc75])
#loc262 = loc(fused[#loc76, #loc77])
#loc263 = loc(fused[#loc79, #loc78])
#loc264 = loc(fused[#loc80, #loc81])
#loc265 = loc(fused[#loc82, #loc83])
#loc266 = loc(fused[#loc84, #loc81])
#loc267 = loc(fused[#loc85, #loc86])
#loc268 = loc(fused[#loc87, #loc88])
#loc269 = loc(fused[#loc92, #loc93])
#loc270 = loc(fused[#loc94, #loc95, #loc96, #loc88])
#loc271 = loc(fused[#loc99, #loc100])
#loc272 = loc(fused[#loc103, #loc104])
#loc273 = loc(fused[#loc105, #loc106])
#loc274 = loc(fused[#loc107, #loc108, #loc109, #loc104])
#loc275 = loc(fused[#loc111, #loc112])
#loc276 = loc(fused[#loc113, #loc114])
#loc277 = loc(fused[#loc115, #loc116, #loc117, #loc112])
#loc278 = loc(fused[#loc122, #loc123])
#loc279 = loc(fused[#loc125, #loc124])
#loc280 = loc(fused[#loc126, #loc127])
#loc281 = loc(fused[#loc128, #loc129])
#loc282 = loc(fused[#loc130, #loc131])
#loc283 = loc(fused[#loc132, #loc133])
#loc284 = loc(fused[#loc135, #loc134])
#loc285 = loc(fused[#loc136, #loc137])
#loc286 = loc(fused[#loc138, #loc139])
#loc287 = loc(fused[#loc140, #loc137])
#loc288 = loc(fused[#loc141, #loc142])
#loc289 = loc(fused[#loc143, #loc144])
#loc290 = loc(fused[#loc148, #loc149])
#loc291 = loc(fused[#loc150, #loc151, #loc152, #loc144])
#loc292 = loc(fused[#loc155, #loc156])
#loc293 = loc(fused[#loc159, #loc160])
#loc294 = loc(fused[#loc161, #loc162])
#loc295 = loc(fused[#loc163, #loc160])
#loc296 = loc(fused[#loc164, #loc165])
#loc297 = loc(fused[#loc166, #loc167])
#loc298 = loc(fused[#loc168, #loc169, #loc170, #loc165])
#loc299 = loc(fused[#loc176, #loc177])
#loc300 = loc(fused[#loc178, #loc179])
#loc301 = loc(fused[#loc180, #loc181])
#loc302 = loc(fused[#loc183, #loc182])
#loc303 = loc(fused[#loc184, #loc185])
#loc304 = loc(fused[#loc186, #loc187])
#loc305 = loc(fused[#loc188, #loc189, #loc190, #loc185])
#loc306 = loc(fused[#loc194, #loc193])
#loc307 = loc(fused[#loc195, #loc196])
#loc308 = loc(fused[#loc197, #loc198])
#loc309 = loc(fused[#loc199, #loc196])
#loc310 = loc(fused[#loc200, #loc201])
#loc311 = loc(fused[#loc205, #loc206])
#loc312 = loc(fused[#loc207, #loc208])
#loc313 = loc(fused[#loc209, #loc210])
#loc314 = loc(fused[#loc212, #loc211])
#loc315 = loc(fused[#loc213, #loc214])
#loc316 = loc(fused[#loc215, #loc216])
#loc317 = loc(fused[#loc217, #loc214])
#loc318 = loc(fused[#loc219, #loc218])
#loc319 = loc(fused[#loc220, #loc221])
#loc320 = loc(fused[#loc222, #loc223])
#loc321 = loc(fused[#loc224, #loc221])
#loc322 = loc(fused[#loc225, #loc226])
