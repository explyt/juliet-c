!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":23:78)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":23:85)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":56:82)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":56:89)
#loc129 = loc(fused[#loc5, #loc6])
#loc149 = loc(fused[#loc65, #loc66])
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc127)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41_badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc130)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc131)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc129)
    cir.store %arg0, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc11)
    cir.br ^bb1 loc(#loc132)
  ^bb1:  // pred: ^bb0
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc14)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc14)
    %5 = cir.const #cir.int<67> : !s32i loc(#loc15)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc16)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc16)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc16)
    cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc133)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc20)
    %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc20)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc21)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc21)
    %15 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc23)
    %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc23)
    cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc134)
    cir.br ^bb2 loc(#loc135)
  ^bb2:  // pred: ^bb1
    %17 = cir.const #cir.int<0> : !s32i loc(#loc26)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc26)
    cir.store %18, %0 : !u64i, !cir.ptr<!u64i> loc(#loc136)
    cir.br ^bb3 loc(#loc135)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %19 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc28)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc29)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc29)
    %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc137)
    cir.brcond %22 ^bb4, ^bb8 loc(#loc30)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc138)
  ^bb5:  // pred: ^bb4
    %23 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc32)
    %24 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc33)
    %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !u64i), !cir.ptr<!s8i> loc(#loc33)
    %26 = cir.load %25 : !cir.ptr<!s8i>, !s8i loc(#loc33)
    %27 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
    %28 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc35)
    %29 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %28 : !u64i), !cir.ptr<!s8i> loc(#loc36)
    cir.store %26, %29 : !s8i, !cir.ptr<!s8i> loc(#loc139)
    cir.br ^bb6 loc(#loc25)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc25)
  ^bb7:  // pred: ^bb6
    %30 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc38)
    %31 = cir.unary(inc, %30) : !u64i, !u64i loc(#loc39)
    cir.store %31, %0 : !u64i, !cir.ptr<!u64i> loc(#loc140)
    cir.br ^bb3 loc(#loc135)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc25)
  ^bb9:  // pred: ^bb8
    %32 = cir.const #cir.int<0> : !s32i loc(#loc40)
    %33 = cir.cast(integral, %32 : !s32i), !s8i loc(#loc40)
    %34 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
    %35 = cir.const #cir.int<100> : !s32i loc(#loc42)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc43)
    %37 = cir.binop(sub, %35, %36) nsw : !s32i loc(#loc42)
    %38 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %37 : !s32i), !cir.ptr<!s8i> loc(#loc44)
    cir.store %33, %38 : !s8i, !cir.ptr<!s8i> loc(#loc141)
    %39 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%39) : (!cir.ptr<!s8i>) -> () loc(#loc46)
    cir.br ^bb10 loc(#loc13)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc4)
  } loc(#loc128)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc143)
    %1 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc144)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc145)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc55)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc146)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc57)
    %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc57)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc59)
    %8 = cir.ptr_stride(%6 : !cir.ptr<!s8i>, %7 : !s32i), !cir.ptr<!s8i> loc(#loc60)
    cir.store %5, %8 : !s8i, !cir.ptr<!s8i> loc(#loc147)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41_badSink(%9) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    cir.return loc(#loc48)
  } loc(#loc142)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41_goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc65, #loc66])) extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc150)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc151)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc149)
    cir.store %arg0, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc71)
    cir.br ^bb1 loc(#loc152)
  ^bb1:  // pred: ^bb0
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc74)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc74)
    %5 = cir.const #cir.int<67> : !s32i loc(#loc75)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc76)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc77)
    %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc76)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc76)
    cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc153)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc80)
    %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc80)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc81)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc82)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc81)
    %15 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc83)
    %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc83)
    cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc154)
    cir.br ^bb2 loc(#loc155)
  ^bb2:  // pred: ^bb1
    %17 = cir.const #cir.int<0> : !s32i loc(#loc86)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc86)
    cir.store %18, %0 : !u64i, !cir.ptr<!u64i> loc(#loc156)
    cir.br ^bb3 loc(#loc155)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %19 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc88)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc89)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc89)
    %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc157)
    cir.brcond %22 ^bb4, ^bb8 loc(#loc90)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc158)
  ^bb5:  // pred: ^bb4
    %23 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc92)
    %24 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc93)
    %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !u64i), !cir.ptr<!s8i> loc(#loc93)
    %26 = cir.load %25 : !cir.ptr<!s8i>, !s8i loc(#loc93)
    %27 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
    %28 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc95)
    %29 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %28 : !u64i), !cir.ptr<!s8i> loc(#loc96)
    cir.store %26, %29 : !s8i, !cir.ptr<!s8i> loc(#loc159)
    cir.br ^bb6 loc(#loc85)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc85)
  ^bb7:  // pred: ^bb6
    %30 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc98)
    %31 = cir.unary(inc, %30) : !u64i, !u64i loc(#loc99)
    cir.store %31, %0 : !u64i, !cir.ptr<!u64i> loc(#loc160)
    cir.br ^bb3 loc(#loc155)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc85)
  ^bb9:  // pred: ^bb8
    %32 = cir.const #cir.int<0> : !s32i loc(#loc100)
    %33 = cir.cast(integral, %32 : !s32i), !s8i loc(#loc100)
    %34 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc101)
    %35 = cir.const #cir.int<100> : !s32i loc(#loc102)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc103)
    %37 = cir.binop(sub, %35, %36) nsw : !s32i loc(#loc102)
    %38 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %37 : !s32i), !cir.ptr<!s8i> loc(#loc104)
    cir.store %33, %38 : !s8i, !cir.ptr<!s8i> loc(#loc161)
    %39 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
    cir.call @printLine(%39) : (!cir.ptr<!s8i>) -> () loc(#loc106)
    cir.br ^bb10 loc(#loc73)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc64)
  } loc(#loc148)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc163)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc109)
    cir.return loc(#loc108)
  } loc(#loc162)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc165)
    %1 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc166)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc167)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc119)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc168)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc121)
    %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc121)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc123)
    %8 = cir.ptr_stride(%6 : !cir.ptr<!s8i>, %7 : !s32i), !cir.ptr<!s8i> loc(#loc124)
    cir.store %5, %8 : !s8i, !cir.ptr<!s8i> loc(#loc169)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41_goodG2BSink(%9) : (!cir.ptr<!s8i>) -> () loc(#loc126)
    cir.return loc(#loc112)
  } loc(#loc164)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":23:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":38:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":26:9)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":26:16)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":27:9)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":27:24)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":24:1)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":25:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":37:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":28:16)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":28:24)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":28:29)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":28:33)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":28:9)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":28:34)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":29:25)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":29:16)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":29:20)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":29:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":31:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":34:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":31:18)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":31:14)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":31:21)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":31:25)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":31:23)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":32:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":33:30)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":33:23)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":33:13)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":33:18)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":33:19)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":33:31)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":31:31)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":31:30)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":35:23)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":35:9)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":35:14)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":35:18)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":35:19)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":36:19)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":36:9)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":40:1)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":50:1)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":42:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":42:12)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":43:5)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":43:26)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":44:5)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":44:28)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":47:12)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":47:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":48:15)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":48:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":48:10)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":48:11)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":49:77)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":49:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":56:1)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":71:1)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":59:9)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":59:16)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":60:9)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":60:24)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":57:1)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":58:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":70:5)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":61:16)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":61:24)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":61:29)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":61:33)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":61:9)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":61:34)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":62:25)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":62:16)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":62:20)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":62:9)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":64:9)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":67:9)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":64:18)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":64:14)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":64:21)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":64:25)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":64:23)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":65:9)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":66:30)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":66:23)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":66:13)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":66:18)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":66:19)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":66:31)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":64:31)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":64:30)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":68:23)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":68:9)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":68:14)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":68:18)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":68:19)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":69:19)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":69:9)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":85:1)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":88:1)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":87:5)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":87:13)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":74:1)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":83:1)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":76:5)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":76:12)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":77:5)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":77:26)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":78:5)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":78:28)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":80:12)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":80:5)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":81:15)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":81:5)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":81:10)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":81:11)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":82:81)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_41.c":82:5)
#loc127 = loc(fused[#loc1, #loc2])
#loc128 = loc(fused[#loc3, #loc4])
#loc130 = loc(fused[#loc7, #loc8])
#loc131 = loc(fused[#loc9, #loc10])
#loc132 = loc(fused[#loc12, #loc13])
#loc133 = loc(fused[#loc18, #loc19])
#loc134 = loc(fused[#loc23, #loc20])
#loc135 = loc(fused[#loc24, #loc25])
#loc136 = loc(fused[#loc27, #loc26])
#loc137 = loc(fused[#loc28, #loc29])
#loc138 = loc(fused[#loc31, #loc25])
#loc139 = loc(fused[#loc34, #loc37])
#loc140 = loc(fused[#loc39, #loc38])
#loc141 = loc(fused[#loc41, #loc40])
#loc142 = loc(fused[#loc47, #loc48])
#loc143 = loc(fused[#loc49, #loc50])
#loc144 = loc(fused[#loc51, #loc52])
#loc145 = loc(fused[#loc53, #loc54])
#loc146 = loc(fused[#loc56, #loc55])
#loc147 = loc(fused[#loc58, #loc57])
#loc148 = loc(fused[#loc63, #loc64])
#loc150 = loc(fused[#loc67, #loc68])
#loc151 = loc(fused[#loc69, #loc70])
#loc152 = loc(fused[#loc72, #loc73])
#loc153 = loc(fused[#loc78, #loc79])
#loc154 = loc(fused[#loc83, #loc80])
#loc155 = loc(fused[#loc84, #loc85])
#loc156 = loc(fused[#loc87, #loc86])
#loc157 = loc(fused[#loc88, #loc89])
#loc158 = loc(fused[#loc91, #loc85])
#loc159 = loc(fused[#loc94, #loc97])
#loc160 = loc(fused[#loc99, #loc98])
#loc161 = loc(fused[#loc101, #loc100])
#loc162 = loc(fused[#loc107, #loc108])
#loc163 = loc(fused[#loc109, #loc110])
#loc164 = loc(fused[#loc111, #loc112])
#loc165 = loc(fused[#loc113, #loc114])
#loc166 = loc(fused[#loc115, #loc116])
#loc167 = loc(fused[#loc117, #loc118])
#loc168 = loc(fused[#loc120, #loc119])
#loc169 = loc(fused[#loc122, #loc121])
