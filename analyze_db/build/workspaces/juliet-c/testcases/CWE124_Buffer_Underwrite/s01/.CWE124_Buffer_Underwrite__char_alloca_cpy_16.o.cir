!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__char_alloca_cpy_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc97)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc98)
  cir.func no_proto @CWE124_Buffer_Underwrite__char_alloca_cpy_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc100)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc101)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc10)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc10)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc10)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc10)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc10)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc10)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc10)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc101)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc11)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc11)
    %11 = cir.const #cir.int<65> : !s32i loc(#loc12)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc13)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc14)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc13)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc13)
    cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc102)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc17)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc17)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc19)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc19)
    %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc21)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc103)
    cir.scope {
      cir.while {
        %23 = cir.const #cir.int<1> : !s32i loc(#loc24)
        %24 = cir.cast(int_to_bool, %23 : !s32i), !cir.bool loc(#loc24)
        cir.condition(%24) loc(#loc24)
      } do {
        cir.scope {
          %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
          %24 = cir.const #cir.int<8> : !s32i loc(#loc27)
          %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc27)
          %26 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc28)
          cir.store %26, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc106)
          cir.break loc(#loc30)
        } loc(#loc105)
        cir.yield loc(#loc23)
      } loc(#loc104)
    } loc(#loc104)
    cir.scope {
      %23 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc108)
      %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc35)
      %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc35)
      %26 = cir.const #cir.int<67> : !s32i loc(#loc36)
      %27 = cir.const #cir.int<100> : !s32i loc(#loc37)
      %28 = cir.const #cir.int<1> : !s32i loc(#loc38)
      %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc37)
      %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc37)
      cir.libc.memset %30 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc109)
      %31 = cir.const #cir.int<0> : !s32i loc(#loc41)
      %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc41)
      %33 = cir.const #cir.int<100> : !s32i loc(#loc42)
      %34 = cir.const #cir.int<1> : !s32i loc(#loc43)
      %35 = cir.binop(sub, %33, %34) nsw : !s32i loc(#loc42)
      %36 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc44)
      %37 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %35 : !s32i), !cir.ptr<!s8i> loc(#loc44)
      cir.store %32, %37 : !s8i, !cir.ptr<!s8i> loc(#loc110)
      %38 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc45)
      %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
      %40 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc47)
      %41 = cir.call @strcpy(%39, %40) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc45)
      %42 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
      cir.call @printLine(%42) : (!cir.ptr<!s8i>) -> () loc(#loc49)
    } loc(#loc107)
    cir.return loc(#loc6)
  } loc(#loc99)
  cir.func no_proto @CWE124_Buffer_Underwrite__char_alloca_cpy_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc112)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc52)
    cir.return loc(#loc51)
  } loc(#loc111)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc114)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc115)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc59)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc59)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc59)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc59)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc59)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc59)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc59)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc115)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc60)
    %11 = cir.const #cir.int<65> : !s32i loc(#loc61)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc62)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc63)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc62)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc62)
    cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc116)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc66)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc66)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc68)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc69)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc68)
    %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc70)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc117)
    cir.scope {
      cir.while {
        %23 = cir.const #cir.int<1> : !s32i loc(#loc73)
        %24 = cir.cast(int_to_bool, %23 : !s32i), !cir.bool loc(#loc73)
        cir.condition(%24) loc(#loc73)
      } do {
        cir.scope {
          %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
          cir.store %23, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc120)
          cir.break loc(#loc77)
        } loc(#loc119)
        cir.yield loc(#loc72)
      } loc(#loc118)
    } loc(#loc118)
    cir.scope {
      %23 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc122)
      %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc82)
      %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc82)
      %26 = cir.const #cir.int<67> : !s32i loc(#loc83)
      %27 = cir.const #cir.int<100> : !s32i loc(#loc84)
      %28 = cir.const #cir.int<1> : !s32i loc(#loc85)
      %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc84)
      %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc84)
      cir.libc.memset %30 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc123)
      %31 = cir.const #cir.int<0> : !s32i loc(#loc88)
      %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc88)
      %33 = cir.const #cir.int<100> : !s32i loc(#loc89)
      %34 = cir.const #cir.int<1> : !s32i loc(#loc90)
      %35 = cir.binop(sub, %33, %34) nsw : !s32i loc(#loc89)
      %36 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc91)
      %37 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %35 : !s32i), !cir.ptr<!s8i> loc(#loc91)
      cir.store %32, %37 : !s8i, !cir.ptr<!s8i> loc(#loc124)
      %38 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc92)
      %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
      %40 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc94)
      %41 = cir.call @strcpy(%39, %40) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc92)
      %42 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
      cir.call @printLine(%42) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    } loc(#loc121)
    cir.return loc(#loc55)
  } loc(#loc113)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":0:0)
#loc1 = loc("/usr/include/string.h":141:1)
#loc2 = loc("/usr/include/string.h":142:14)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":23:1)
#loc6 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":43:1)
#loc7 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":25:5)
#loc8 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":25:12)
#loc9 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":26:5)
#loc10 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":26:33)
#loc11 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":27:12)
#loc12 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":27:24)
#loc13 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":27:29)
#loc14 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":27:33)
#loc15 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":27:5)
#loc16 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":27:34)
#loc17 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":28:25)
#loc18 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":28:5)
#loc19 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":28:16)
#loc20 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":28:20)
#loc21 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":28:21)
#loc22 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":29:5)
#loc23 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":34:5)
#loc24 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":29:11)
#loc25 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":30:5)
#loc26 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":32:16)
#loc27 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":32:29)
#loc28 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":32:27)
#loc29 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":32:9)
#loc30 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":33:9)
#loc31 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":35:5)
#loc32 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":42:5)
#loc33 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":36:9)
#loc34 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":36:24)
#loc35 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":37:16)
#loc36 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":37:24)
#loc37 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":37:29)
#loc38 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":37:33)
#loc39 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":37:9)
#loc40 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":37:34)
#loc41 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":38:25)
#loc42 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":38:16)
#loc43 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":38:20)
#loc44 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":38:9)
#loc45 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":40:9)
#loc46 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":40:16)
#loc47 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":40:22)
#loc48 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":41:19)
#loc49 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":41:9)
#loc50 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":72:1)
#loc51 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":75:1)
#loc52 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":74:5)
#loc53 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":74:13)
#loc54 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":50:1)
#loc55 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":70:1)
#loc56 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":52:5)
#loc57 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":52:12)
#loc58 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":53:5)
#loc59 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":53:33)
#loc60 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":54:12)
#loc61 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":54:24)
#loc62 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":54:29)
#loc63 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":54:33)
#loc64 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":54:5)
#loc65 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":54:34)
#loc66 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":55:25)
#loc67 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":55:5)
#loc68 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":55:16)
#loc69 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":55:20)
#loc70 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":55:21)
#loc71 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":56:5)
#loc72 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":61:5)
#loc73 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":56:11)
#loc74 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":57:5)
#loc75 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":59:16)
#loc76 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":59:9)
#loc77 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":60:9)
#loc78 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":62:5)
#loc79 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":69:5)
#loc80 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":63:9)
#loc81 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":63:24)
#loc82 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":64:16)
#loc83 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":64:24)
#loc84 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":64:29)
#loc85 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":64:33)
#loc86 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":64:9)
#loc87 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":64:34)
#loc88 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":65:25)
#loc89 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":65:16)
#loc90 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":65:20)
#loc91 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":65:9)
#loc92 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":67:9)
#loc93 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":67:16)
#loc94 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":67:22)
#loc95 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":68:19)
#loc96 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_16.c":68:9)
#loc97 = loc(fused[#loc1, #loc2])
#loc98 = loc(fused[#loc3, #loc4])
#loc99 = loc(fused[#loc5, #loc6])
#loc100 = loc(fused[#loc7, #loc8])
#loc101 = loc(fused[#loc9, #loc10])
#loc102 = loc(fused[#loc15, #loc16])
#loc103 = loc(fused[#loc18, #loc17])
#loc104 = loc(fused[#loc22, #loc23])
#loc105 = loc(fused[#loc25, #loc23])
#loc106 = loc(fused[#loc29, #loc27])
#loc107 = loc(fused[#loc31, #loc32])
#loc108 = loc(fused[#loc33, #loc34])
#loc109 = loc(fused[#loc39, #loc40])
#loc110 = loc(fused[#loc44, #loc41])
#loc111 = loc(fused[#loc50, #loc51])
#loc112 = loc(fused[#loc52, #loc53])
#loc113 = loc(fused[#loc54, #loc55])
#loc114 = loc(fused[#loc56, #loc57])
#loc115 = loc(fused[#loc58, #loc59])
#loc116 = loc(fused[#loc64, #loc65])
#loc117 = loc(fused[#loc67, #loc66])
#loc118 = loc(fused[#loc71, #loc72])
#loc119 = loc(fused[#loc74, #loc72])
#loc120 = loc(fused[#loc76, #loc75])
#loc121 = loc(fused[#loc78, #loc79])
#loc122 = loc(fused[#loc80, #loc81])
#loc123 = loc(fused[#loc86, #loc87])
#loc124 = loc(fused[#loc91, #loc88])
