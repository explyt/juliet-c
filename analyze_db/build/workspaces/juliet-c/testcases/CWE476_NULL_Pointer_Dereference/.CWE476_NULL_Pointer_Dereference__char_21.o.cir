!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc7 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":27:21)
#loc8 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":27:28)
#loc44 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":56:26)
#loc45 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":56:33)
#loc80 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":88:26)
#loc81 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":88:33)
#loc115 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":115:25)
#loc116 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":115:32)
#loc138 = loc(fused[#loc7, #loc8])
#loc152 = loc(fused[#loc44, #loc45])
#loc164 = loc(fused[#loc80, #loc81])
#loc176 = loc(fused[#loc115, #loc116])
module @"/workspaces/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__char_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc135)
  cir.func private @printHexCharLine(!s8i) loc(#loc136)
  cir.func internal private @badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc7, #loc8])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc138)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc9)
    cir.scope {
      %1 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc135)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc12)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc12)
      cir.if %3 {
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc14)
        %5 = cir.const #cir.int<0> : !s32i loc(#loc15)
        %6 = cir.ptr_stride(%4 : !cir.ptr<!s8i>, %5 : !s32i), !cir.ptr<!s8i> loc(#loc16)
        %7 = cir.load %6 : !cir.ptr<!s8i>, !s8i loc(#loc14)
        cir.call @printHexCharLine(%7) : (!s8i) -> () loc(#loc17)
      } loc(#loc140)
    } loc(#loc139)
    cir.return loc(#loc6)
  } loc(#loc137)
  cir.func no_proto @CWE476_NULL_Pointer_Dereference__char_21_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc142)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc22)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc143)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %3 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc135)
    cir.store %2, %3 : !s32i, !cir.ptr<!s32i> loc(#loc144)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
    cir.call @badSink(%4) : (!cir.ptr<!s8i>) -> () loc(#loc27)
    cir.return loc(#loc19)
  } loc(#loc141)
  cir.func no_proto @CWE476_NULL_Pointer_Dereference__char_21_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc146)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc30)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc147)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc32)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc148)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc34)
    cir.return loc(#loc29)
  } loc(#loc145)
  cir.global "private" internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc149)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc150)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc40)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data is NULL\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc41)
  cir.func internal private @goodB2G1Sink(%arg0: !cir.ptr<!s8i> loc(fused[#loc44, #loc45])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc152)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc46)
    cir.scope {
      %1 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc149)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc49)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc49)
      cir.if %3 {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc40)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc40)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc53)
      } else {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
          %5 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc57)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc57)
          %7 = cir.cmp(ne, %4, %6) : !cir.ptr<!s8i>, !cir.bool loc(#loc156)
          cir.if %7 {
            %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
            %9 = cir.const #cir.int<0> : !s32i loc(#loc62)
            %10 = cir.ptr_stride(%8 : !cir.ptr<!s8i>, %9 : !s32i), !cir.ptr<!s8i> loc(#loc63)
            %11 = cir.load %10 : !cir.ptr<!s8i>, !s8i loc(#loc61)
            cir.call @printHexCharLine(%11) : (!s8i) -> () loc(#loc64)
          } else {
            %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc41)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc41)
            cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc65)
          } loc(#loc157)
        } loc(#loc155)
      } loc(#loc154)
    } loc(#loc153)
    cir.return loc(#loc43)
  } loc(#loc151)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc159)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc70)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc160)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc72)
    %3 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc149)
    cir.store %2, %3 : !s32i, !cir.ptr<!s32i> loc(#loc161)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
    cir.call @goodB2G1Sink(%4) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    cir.return loc(#loc67)
  } loc(#loc158)
  cir.global "private" internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc162)
  cir.func internal private @goodB2G2Sink(%arg0: !cir.ptr<!s8i> loc(fused[#loc80, #loc81])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc164)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc82)
    cir.scope {
      %1 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc162)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc85)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc85)
      cir.if %3 {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
          %5 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc90)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc90)
          %7 = cir.cmp(ne, %4, %6) : !cir.ptr<!s8i>, !cir.bool loc(#loc168)
          cir.if %7 {
            %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
            %9 = cir.const #cir.int<0> : !s32i loc(#loc95)
            %10 = cir.ptr_stride(%8 : !cir.ptr<!s8i>, %9 : !s32i), !cir.ptr<!s8i> loc(#loc96)
            %11 = cir.load %10 : !cir.ptr<!s8i>, !s8i loc(#loc94)
            cir.call @printHexCharLine(%11) : (!s8i) -> () loc(#loc97)
          } else {
            %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc98)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc98)
            cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc99)
          } loc(#loc169)
        } loc(#loc167)
      } loc(#loc166)
    } loc(#loc165)
    cir.return loc(#loc79)
  } loc(#loc163)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc171)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc104)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc172)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc106)
    %3 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc162)
    cir.store %2, %3 : !s32i, !cir.ptr<!s32i> loc(#loc173)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
    cir.call @goodB2G2Sink(%4) : (!cir.ptr<!s8i>) -> () loc(#loc109)
    cir.return loc(#loc101)
  } loc(#loc170)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Good\00" : !cir.array<!s8i x 5>> : !cir.array<!s8i x 5> {alignment = 1 : i64} loc(#loc110)
  cir.global "private" internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc174)
  cir.func internal private @goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc115, #loc116])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc176)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc117)
    cir.scope {
      %1 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc174)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc120)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc120)
      cir.if %3 {
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
        %5 = cir.const #cir.int<0> : !s32i loc(#loc123)
        %6 = cir.ptr_stride(%4 : !cir.ptr<!s8i>, %5 : !s32i), !cir.ptr<!s8i> loc(#loc124)
        %7 = cir.load %6 : !cir.ptr<!s8i>, !s8i loc(#loc122)
        cir.call @printHexCharLine(%7) : (!s8i) -> () loc(#loc125)
      } loc(#loc178)
    } loc(#loc177)
    cir.return loc(#loc114)
  } loc(#loc175)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc180)
    %1 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 5>> loc(#loc110)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 5>>), !cir.ptr<!s8i> loc(#loc110)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc181)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc131)
    %4 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc174)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc182)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
    cir.call @goodG2BSink(%5) : (!cir.ptr<!s8i>) -> () loc(#loc134)
    cir.return loc(#loc127)
  } loc(#loc179)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__char_21.c":0:0)
#loc1 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":25:1)
#loc2 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":25:24)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":30:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":30:35)
#loc5 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":27:1)
#loc6 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":35:1)
#loc9 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":28:1)
#loc10 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":29:5)
#loc11 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":34:5)
#loc12 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":29:8)
#loc13 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":30:5)
#loc14 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":33:26)
#loc15 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":33:31)
#loc16 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":33:32)
#loc17 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":33:9)
#loc18 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":37:1)
#loc19 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":44:1)
#loc20 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":39:5)
#loc21 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":39:12)
#loc22 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":41:12)
#loc23 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":41:5)
#loc24 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":42:17)
#loc25 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":42:5)
#loc26 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":43:13)
#loc27 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":43:5)
#loc28 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":134:1)
#loc29 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":139:1)
#loc30 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":136:5)
#loc31 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":136:14)
#loc32 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":137:5)
#loc33 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":137:14)
#loc34 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":138:5)
#loc35 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":138:13)
#loc36 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":51:1)
#loc37 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":51:29)
#loc38 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc39 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc40 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":61:19)
#loc41 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":73:23)
#loc42 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":56:1)
#loc43 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":76:1)
#loc46 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":57:1)
#loc47 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":58:5)
#loc48 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":75:5)
#loc49 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":58:8)
#loc50 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":59:5)
#loc51 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":62:5)
#loc52 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":64:5)
#loc53 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":61:9)
#loc54 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":66:9)
#loc55 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":74:9)
#loc56 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":66:13)
#loc57 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":66:21)
#loc58 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":67:9)
#loc59 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":70:9)
#loc60 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":72:9)
#loc61 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":69:30)
#loc62 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":69:35)
#loc63 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":69:36)
#loc64 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":69:13)
#loc65 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":73:13)
#loc66 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":78:1)
#loc67 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":85:1)
#loc68 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":80:5)
#loc69 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":80:12)
#loc70 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":82:12)
#loc71 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":82:5)
#loc72 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":83:22)
#loc73 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":83:5)
#loc74 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":84:18)
#loc75 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":84:5)
#loc76 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":52:1)
#loc77 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":52:29)
#loc78 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":88:1)
#loc79 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":103:1)
#loc82 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":89:1)
#loc83 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":90:5)
#loc84 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":102:5)
#loc85 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":90:8)
#loc86 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":91:5)
#loc87 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":93:9)
#loc88 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":101:9)
#loc89 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":93:13)
#loc90 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":93:21)
#loc91 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":94:9)
#loc92 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":97:9)
#loc93 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":99:9)
#loc94 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":96:30)
#loc95 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":96:35)
#loc96 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":96:36)
#loc97 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":96:13)
#loc98 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":100:23)
#loc99 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":100:13)
#loc100 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":105:1)
#loc101 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":112:1)
#loc102 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":107:5)
#loc103 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":107:12)
#loc104 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":109:12)
#loc105 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":109:5)
#loc106 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":110:22)
#loc107 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":110:5)
#loc108 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":111:18)
#loc109 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":111:5)
#loc110 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":129:12)
#loc111 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":53:1)
#loc112 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":53:28)
#loc113 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":115:1)
#loc114 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":123:1)
#loc117 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":116:1)
#loc118 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":117:5)
#loc119 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":122:5)
#loc120 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":117:8)
#loc121 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":118:5)
#loc122 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":121:26)
#loc123 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":121:31)
#loc124 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":121:32)
#loc125 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":121:9)
#loc126 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":125:1)
#loc127 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":132:1)
#loc128 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":127:5)
#loc129 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":127:12)
#loc130 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":129:5)
#loc131 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":130:21)
#loc132 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":130:5)
#loc133 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":131:17)
#loc134 = loc("CWE476_NULL_Pointer_Dereference__char_21.c":131:5)
#loc135 = loc(fused[#loc1, #loc2])
#loc136 = loc(fused[#loc3, #loc4])
#loc137 = loc(fused[#loc5, #loc6])
#loc139 = loc(fused[#loc10, #loc11])
#loc140 = loc(fused[#loc13, #loc11])
#loc141 = loc(fused[#loc18, #loc19])
#loc142 = loc(fused[#loc20, #loc21])
#loc143 = loc(fused[#loc23, #loc22])
#loc144 = loc(fused[#loc25, #loc24])
#loc145 = loc(fused[#loc28, #loc29])
#loc146 = loc(fused[#loc30, #loc31])
#loc147 = loc(fused[#loc32, #loc33])
#loc148 = loc(fused[#loc34, #loc35])
#loc149 = loc(fused[#loc36, #loc37])
#loc150 = loc(fused[#loc38, #loc39])
#loc151 = loc(fused[#loc42, #loc43])
#loc153 = loc(fused[#loc47, #loc48])
#loc154 = loc(fused[#loc50, #loc51, #loc52, #loc48])
#loc155 = loc(fused[#loc54, #loc55])
#loc156 = loc(fused[#loc56, #loc57])
#loc157 = loc(fused[#loc58, #loc59, #loc60, #loc55])
#loc158 = loc(fused[#loc66, #loc67])
#loc159 = loc(fused[#loc68, #loc69])
#loc160 = loc(fused[#loc71, #loc70])
#loc161 = loc(fused[#loc73, #loc72])
#loc162 = loc(fused[#loc76, #loc77])
#loc163 = loc(fused[#loc78, #loc79])
#loc165 = loc(fused[#loc83, #loc84])
#loc166 = loc(fused[#loc86, #loc84])
#loc167 = loc(fused[#loc87, #loc88])
#loc168 = loc(fused[#loc89, #loc90])
#loc169 = loc(fused[#loc91, #loc92, #loc93, #loc88])
#loc170 = loc(fused[#loc100, #loc101])
#loc171 = loc(fused[#loc102, #loc103])
#loc172 = loc(fused[#loc105, #loc104])
#loc173 = loc(fused[#loc107, #loc106])
#loc174 = loc(fused[#loc111, #loc112])
#loc175 = loc(fused[#loc113, #loc114])
#loc177 = loc(fused[#loc118, #loc119])
#loc178 = loc(fused[#loc121, #loc119])
#loc179 = loc(fused[#loc126, #loc127])
#loc180 = loc(fused[#loc128, #loc129])
#loc181 = loc(fused[#loc130, #loc110])
#loc182 = loc(fused[#loc132, #loc131])
