!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":85:10)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":85:14)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":85:20)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":85:32)
#loc120 = loc(fused[#loc76, #loc77])
#loc121 = loc(fused[#loc78, #loc79])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @_ZN65CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_629badSourceERPc(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc92)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc93)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc94)
  cir.func @_ZN65CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_623badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc96)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc97)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc13)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc98)
    cir.call @_ZN65CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_629badSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc15)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc100)
      %4 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc100)
      cir.store %4, %3 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc100)
      %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc20)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc20)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc21)
      %9 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc22)
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
      %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc22)
      %12 = cir.const #cir.int<1> : !u64i loc(#loc101)
      %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc102)
      cir.libc.memcpy %13 bytes from %8 to %6 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc103)
      %14 = cir.const #cir.int<0> : !s8i loc(#loc28)
      %15 = cir.const #cir.int<50> : !s32i loc(#loc29)
      %16 = cir.const #cir.int<1> : !s32i loc(#loc30)
      %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc29)
      %18 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc31)
      %19 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc31)
      cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc104)
      %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
      cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc33)
    } loc(#loc99)
    cir.return loc(#loc8)
  } loc(#loc95)
  cir.func private @_ZN65CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_6213goodG2BSourceERPc(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc105)
  cir.func internal private @_ZN65CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc107)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc108)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc42)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc109)
    cir.call @_ZN65CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_6213goodG2BSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc44)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc111)
      %4 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc111)
      cir.store %4, %3 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc111)
      %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc49)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc49)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc50)
      %9 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc51)
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
      %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc51)
      %12 = cir.const #cir.int<1> : !u64i loc(#loc112)
      %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc113)
      cir.libc.memcpy %13 bytes from %8 to %6 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc114)
      %14 = cir.const #cir.int<0> : !s8i loc(#loc57)
      %15 = cir.const #cir.int<50> : !s32i loc(#loc58)
      %16 = cir.const #cir.int<1> : !s32i loc(#loc59)
      %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc58)
      %18 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc60)
      %19 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc60)
      cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc115)
      %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
      cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    } loc(#loc110)
    cir.return loc(#loc37)
  } loc(#loc106)
  cir.func @_ZN65CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_624goodEv() extra(#fn_attr1) {
    cir.call @_ZN65CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62L7goodG2BEv() : () -> () loc(#loc65)
    cir.return loc(#loc64)
  } loc(#loc116)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc117)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc118)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc70)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc71)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc72)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc73)
  cir.func @main(%arg0: !s32i loc(fused[#loc76, #loc77]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc78, #loc79])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc120)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc121)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc75)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc80)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc80)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc81)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc82)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc82)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc83)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc70)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    cir.call @_ZN65CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_624goodEv() : () -> () loc(#loc85)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc71)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc72)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc72)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    cir.call @_ZN65CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_623badEv() : () -> () loc(#loc88)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc73)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc90)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc122)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc122)
    cir.return %15 : !s32i loc(#loc122)
  } loc(#loc119)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":27:1)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":27:28)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":29:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":42:1)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":31:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":31:12)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":32:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":32:24)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":33:12)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":33:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":34:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":35:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":41:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":36:9)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":36:25)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":38:16)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":38:22)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":38:28)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":38:35)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":38:41)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":38:52)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":38:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":38:53)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":39:22)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":39:14)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":39:17)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":39:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":40:19)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":40:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":49:1)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":49:32)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":51:1)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":64:1)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":53:5)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":53:12)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":54:5)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":54:24)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":55:12)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":55:5)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":56:5)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":57:5)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":63:5)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":58:9)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":58:25)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":60:16)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":60:22)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":60:28)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":60:35)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":60:41)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":60:52)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":60:9)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":60:53)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":61:22)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":61:14)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":61:17)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":61:9)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":62:19)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":62:9)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":66:1)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":69:1)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":68:5)
#loc66 = loc("/usr/include/stdlib.h":575:1)
#loc67 = loc("/usr/include/stdlib.h":575:41)
#loc68 = loc("/usr/include/time.h":76:1)
#loc69 = loc("/usr/include/time.h":76:38)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":90:15)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":92:15)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":95:15)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":97:15)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":85:1)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":100:1)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":86:1)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":88:27)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":88:22)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":88:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":90:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":91:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":92:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":95:5)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":96:5)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":97:5)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":99:12)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_memcpy_62a.cpp":99:5)
#loc92 = loc(fused[#loc1, #loc2])
#loc93 = loc(fused[#loc3, #loc4])
#loc94 = loc(fused[#loc5, #loc6])
#loc95 = loc(fused[#loc7, #loc8])
#loc96 = loc(fused[#loc9, #loc10])
#loc97 = loc(fused[#loc11, #loc12])
#loc98 = loc(fused[#loc14, #loc13])
#loc99 = loc(fused[#loc16, #loc17])
#loc100 = loc(fused[#loc18, #loc19])
#loc101 = loc(fused[#loc24, #loc25])
#loc102 = loc(fused[#loc22, #loc25])
#loc103 = loc(fused[#loc26, #loc27])
#loc104 = loc(fused[#loc31, #loc28])
#loc105 = loc(fused[#loc34, #loc35])
#loc106 = loc(fused[#loc36, #loc37])
#loc107 = loc(fused[#loc38, #loc39])
#loc108 = loc(fused[#loc40, #loc41])
#loc109 = loc(fused[#loc43, #loc42])
#loc110 = loc(fused[#loc45, #loc46])
#loc111 = loc(fused[#loc47, #loc48])
#loc112 = loc(fused[#loc53, #loc54])
#loc113 = loc(fused[#loc51, #loc54])
#loc114 = loc(fused[#loc55, #loc56])
#loc115 = loc(fused[#loc60, #loc57])
#loc116 = loc(fused[#loc63, #loc64])
#loc117 = loc(fused[#loc66, #loc67])
#loc118 = loc(fused[#loc68, #loc69])
#loc119 = loc(fused[#loc74, #loc75])
#loc122 = loc(fused[#loc91, #loc90])
