!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc86)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc87)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc88)
  cir.func private @printIntLine(!s32i) loc(#loc89)
  cir.func no_proto @CWE758_Undefined_Behavior__int_pointer_malloc_use_01_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc92)
      %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc93)
      %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc17)
      %3 = cir.const #cir.int<8> : !u64i loc(#loc94)
      %4 = cir.call @malloc(%3) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc17)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc95)
      cir.store %5, %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc92)
      cir.scope {
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc22)
        %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc23)
        %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc23)
        %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!cir.ptr<!s32i>>, !cir.bool loc(#loc97)
        cir.if %16 {
          %17 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc25)
          %18 = cir.const #cir.int<1> : !s32i loc(#loc26)
          %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc27)
          cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc25)
        } loc(#loc98)
      } loc(#loc96)
      %6 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc16)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc28)
      cir.store %7, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc93)
      %8 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc29)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc30)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!cir.ptr<!s32i>>), !cir.ptr<!void> loc(#loc30)
      cir.call @free(%10) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc29)
      %11 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc31)
      %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc32)
      cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc33)
    } loc(#loc91)
    cir.return loc(#loc10)
  } loc(#loc90)
  cir.func no_proto @CWE758_Undefined_Behavior__int_pointer_malloc_use_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc100)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc36)
    cir.return loc(#loc35)
  } loc(#loc99)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc103)
      %1 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc104)
      %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc46)
      %3 = cir.const #cir.int<8> : !u64i loc(#loc105)
      %4 = cir.call @malloc(%3) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc46)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc106)
      cir.store %5, %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc104)
      cir.scope {
        %17 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc51)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc52)
        %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc52)
        %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!cir.ptr<!s32i>>, !cir.bool loc(#loc108)
        cir.if %20 {
          %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc54)
          %22 = cir.const #cir.int<1> : !s32i loc(#loc55)
          %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc56)
          cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc54)
        } loc(#loc109)
      } loc(#loc107)
      %6 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc57)
      %7 = cir.const #cir.int<4> : !u64i loc(#loc110)
      %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc57)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc111)
      cir.store %9, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc112)
      cir.scope {
        %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc64)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc65)
        %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc65)
        %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s32i>, !cir.bool loc(#loc114)
        cir.if %20 {
          %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc67)
          %22 = cir.const #cir.int<1> : !s32i loc(#loc68)
          %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc69)
          cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc67)
        } loc(#loc115)
      } loc(#loc113)
      %10 = cir.const #cir.int<5> : !s32i loc(#loc70)
      %11 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc71)
      cir.store %10, %11 : !s32i, !cir.ptr<!s32i> loc(#loc116)
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc73)
      %13 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc74)
      cir.store %12, %13 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc117)
      cir.scope {
        %17 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc119)
        %18 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc79)
        %19 = cir.load %18 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc80)
        cir.store %19, %17 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc119)
        %20 = cir.load deref %17 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc81)
        %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc82)
        cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc83)
      } loc(#loc118)
      %14 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc84)
      %15 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc85)
      %16 = cir.cast(bitcast, %15 : !cir.ptr<!cir.ptr<!s32i>>), !cir.ptr<!void> loc(#loc85)
      cir.call @free(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc84)
    } loc(#loc102)
    cir.return loc(#loc39)
  } loc(#loc101)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc9 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":20:1)
#loc10 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":29:1)
#loc11 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":22:5)
#loc12 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":28:5)
#loc13 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":23:9)
#loc14 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":23:56)
#loc15 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":25:9)
#loc16 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":25:23)
#loc17 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":23:36)
#loc18 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":23:43)
#loc19 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":23:55)
#loc20 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":24:9)
#loc21 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":24:40)
#loc22 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":24:13)
#loc23 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":24:24)
#loc24 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":24:30)
#loc25 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":24:31)
#loc26 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":24:37)
#loc27 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":24:36)
#loc28 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":25:22)
#loc29 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":26:9)
#loc30 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":26:14)
#loc31 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":27:23)
#loc32 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":27:22)
#loc33 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":27:9)
#loc34 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":54:1)
#loc35 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":57:1)
#loc36 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":56:5)
#loc37 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":56:11)
#loc38 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":35:1)
#loc39 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":52:1)
#loc40 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":37:5)
#loc41 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":51:5)
#loc42 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":38:9)
#loc43 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":38:15)
#loc44 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":39:9)
#loc45 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":39:56)
#loc46 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":39:36)
#loc47 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":39:43)
#loc48 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":39:55)
#loc49 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":40:9)
#loc50 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":40:40)
#loc51 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":40:13)
#loc52 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":40:24)
#loc53 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":40:30)
#loc54 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":40:31)
#loc55 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":40:37)
#loc56 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":40:36)
#loc57 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":42:23)
#loc58 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":42:30)
#loc59 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":42:40)
#loc60 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":42:41)
#loc61 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":42:9)
#loc62 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":43:9)
#loc63 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":43:37)
#loc64 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":43:13)
#loc65 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":43:21)
#loc66 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":43:27)
#loc67 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":43:28)
#loc68 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":43:34)
#loc69 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":43:33)
#loc70 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":44:17)
#loc71 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":44:10)
#loc72 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":44:9)
#loc73 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":45:20)
#loc74 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":45:10)
#loc75 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":45:9)
#loc76 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":46:9)
#loc77 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":49:9)
#loc78 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":47:13)
#loc79 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":47:27)
#loc80 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":47:26)
#loc81 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":48:27)
#loc82 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":48:26)
#loc83 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":48:13)
#loc84 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":50:9)
#loc85 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_01.c":50:14)
#loc86 = loc(fused[#loc1, #loc2])
#loc87 = loc(fused[#loc3, #loc4])
#loc88 = loc(fused[#loc5, #loc6])
#loc89 = loc(fused[#loc7, #loc8])
#loc90 = loc(fused[#loc9, #loc10])
#loc91 = loc(fused[#loc11, #loc12])
#loc92 = loc(fused[#loc13, #loc14])
#loc93 = loc(fused[#loc15, #loc16])
#loc94 = loc(fused[#loc18, #loc19])
#loc95 = loc(fused[#loc17, #loc14])
#loc96 = loc(fused[#loc20, #loc21])
#loc97 = loc(fused[#loc22, #loc23])
#loc98 = loc(fused[#loc24, #loc21])
#loc99 = loc(fused[#loc34, #loc35])
#loc100 = loc(fused[#loc36, #loc37])
#loc101 = loc(fused[#loc38, #loc39])
#loc102 = loc(fused[#loc40, #loc41])
#loc103 = loc(fused[#loc42, #loc43])
#loc104 = loc(fused[#loc44, #loc45])
#loc105 = loc(fused[#loc47, #loc48])
#loc106 = loc(fused[#loc46, #loc45])
#loc107 = loc(fused[#loc49, #loc50])
#loc108 = loc(fused[#loc51, #loc52])
#loc109 = loc(fused[#loc53, #loc50])
#loc110 = loc(fused[#loc58, #loc59])
#loc111 = loc(fused[#loc57, #loc60])
#loc112 = loc(fused[#loc61, #loc60])
#loc113 = loc(fused[#loc62, #loc63])
#loc114 = loc(fused[#loc64, #loc65])
#loc115 = loc(fused[#loc66, #loc63])
#loc116 = loc(fused[#loc72, #loc70])
#loc117 = loc(fused[#loc75, #loc73])
#loc118 = loc(fused[#loc76, #loc77])
#loc119 = loc(fused[#loc78, #loc79])
