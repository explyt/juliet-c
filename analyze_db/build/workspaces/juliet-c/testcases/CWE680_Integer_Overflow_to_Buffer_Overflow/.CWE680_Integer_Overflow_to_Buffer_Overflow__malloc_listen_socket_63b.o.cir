!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":43:83)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":43:89)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":67:87)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":67:93)
#loc110 = loc(fused[#loc11, #loc12])
#loc129 = loc(fused[#loc59, #loc60])
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc105)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc106)
  cir.func private @printIntLine(!s32i) loc(#loc107)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc108)
  cir.func @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b_badSink(%arg0: !cir.ptr<!s32i> loc(fused[#loc11, #loc12])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc110)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc111)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc15)
    %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc14)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc16)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc111)
    cir.scope {
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc113)
      %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc114)
      %6 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc23)
      %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc24)
      %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc24)
      %9 = cir.const #cir.int<4> : !u64i loc(#loc115)
      %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc116)
      %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc23)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc117)
      cir.store %12, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc118)
      cir.scope {
        %20 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc31)
        %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc32)
        %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc32)
        %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!s32i>, !cir.bool loc(#loc120)
        cir.if %23 {
          %24 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc34)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc35)
          %26 = cir.unary(minus, %25) nsw : !s32i, !s32i loc(#loc36)
          cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc34)
        } loc(#loc121)
      } loc(#loc119)
      cir.scope {
        %20 = cir.const #cir.int<0> : !s32i loc(#loc39)
        %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc39)
        cir.store %21, %4 : !u64i, !cir.ptr<!u64i> loc(#loc123)
        cir.for : cond {
          %22 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc41)
          %23 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc42)
          %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc42)
          %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc124)
          cir.condition(%25) loc(#loc43)
        } body {
          cir.scope {
            %22 = cir.const #cir.int<0> : !s32i loc(#loc45)
            %23 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc46)
            %24 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc47)
            %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !u64i), !cir.ptr<!s32i> loc(#loc48)
            cir.store %22, %25 : !s32i, !cir.ptr<!s32i> loc(#loc126)
          } loc(#loc125)
          cir.yield loc(#loc38)
        } step {
          %22 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc49)
          %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc50)
          cir.store %23, %4 : !u64i, !cir.ptr<!u64i> loc(#loc127)
          cir.yield loc(#loc122)
        } loc(#loc122)
      } loc(#loc122)
      %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc51)
      %14 = cir.const #cir.int<0> : !s32i loc(#loc52)
      %15 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc53)
      %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc51)
      cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc54)
      %17 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc55)
      %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc56)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc56)
      cir.call @free(%19) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc55)
    } loc(#loc112)
    cir.return loc(#loc10)
  } loc(#loc109)
  cir.func @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b_goodG2BSink(%arg0: !cir.ptr<!s32i> loc(fused[#loc59, #loc60])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc129)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc130)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc63)
    %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc62)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc64)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc130)
    cir.scope {
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc132)
      %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc133)
      %6 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc71)
      %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc72)
      %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc72)
      %9 = cir.const #cir.int<4> : !u64i loc(#loc134)
      %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc135)
      %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc71)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc136)
      cir.store %12, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc137)
      cir.scope {
        %20 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc79)
        %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc80)
        %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc80)
        %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!s32i>, !cir.bool loc(#loc139)
        cir.if %23 {
          %24 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc82)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc83)
          %26 = cir.unary(minus, %25) nsw : !s32i, !s32i loc(#loc84)
          cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc82)
        } loc(#loc140)
      } loc(#loc138)
      cir.scope {
        %20 = cir.const #cir.int<0> : !s32i loc(#loc87)
        %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc87)
        cir.store %21, %4 : !u64i, !cir.ptr<!u64i> loc(#loc142)
        cir.for : cond {
          %22 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc89)
          %23 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc90)
          %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc90)
          %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc143)
          cir.condition(%25) loc(#loc91)
        } body {
          cir.scope {
            %22 = cir.const #cir.int<0> : !s32i loc(#loc93)
            %23 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc94)
            %24 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc95)
            %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !u64i), !cir.ptr<!s32i> loc(#loc96)
            cir.store %22, %25 : !s32i, !cir.ptr<!s32i> loc(#loc145)
          } loc(#loc144)
          cir.yield loc(#loc86)
        } step {
          %22 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc97)
          %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc98)
          cir.store %23, %4 : !u64i, !cir.ptr<!u64i> loc(#loc146)
          cir.yield loc(#loc141)
        } loc(#loc141)
      } loc(#loc141)
      %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc99)
      %14 = cir.const #cir.int<0> : !s32i loc(#loc100)
      %15 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc101)
      %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc99)
      cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc102)
      %17 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc103)
      %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc104)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc104)
      cir.call @free(%19) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc103)
    } loc(#loc131)
    cir.return loc(#loc58)
  } loc(#loc128)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":43:1)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":60:1)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":45:5)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":45:17)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":44:1)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":45:16)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":46:5)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":59:5)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":47:9)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":47:16)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":48:9)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":48:14)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":51:28)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":51:35)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":51:42)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":51:52)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":51:53)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":51:9)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":52:9)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":52:43)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":52:13)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":52:27)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":52:33)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":52:34)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":52:40)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":52:39)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":53:9)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":56:9)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":53:18)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":53:14)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":53:21)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":53:33)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":53:23)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":54:9)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":55:29)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":55:13)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":55:24)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":55:25)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":53:40)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":53:39)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":57:22)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":57:33)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":57:34)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":57:9)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":58:9)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":58:14)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":67:1)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":84:1)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":69:5)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":69:17)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":68:1)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":69:16)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":70:5)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":83:5)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":71:9)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":71:16)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":72:9)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":72:14)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":75:28)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":75:35)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":75:42)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":75:52)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":75:53)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":75:9)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":76:9)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":76:43)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":76:13)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":76:27)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":76:33)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":76:34)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":76:40)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":76:39)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":77:9)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":80:9)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":77:18)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":77:14)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":77:21)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":77:33)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":77:23)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":78:9)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":79:29)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":79:13)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":79:24)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":79:25)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":77:40)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":77:39)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":81:22)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":81:33)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":81:34)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":81:9)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":82:9)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_63b.c":82:14)
#loc105 = loc(fused[#loc1, #loc2])
#loc106 = loc(fused[#loc3, #loc4])
#loc107 = loc(fused[#loc5, #loc6])
#loc108 = loc(fused[#loc7, #loc8])
#loc109 = loc(fused[#loc9, #loc10])
#loc111 = loc(fused[#loc13, #loc14])
#loc112 = loc(fused[#loc17, #loc18])
#loc113 = loc(fused[#loc19, #loc20])
#loc114 = loc(fused[#loc21, #loc22])
#loc115 = loc(fused[#loc25, #loc26])
#loc116 = loc(fused[#loc24, #loc26])
#loc117 = loc(fused[#loc23, #loc27])
#loc118 = loc(fused[#loc28, #loc27])
#loc119 = loc(fused[#loc29, #loc30])
#loc120 = loc(fused[#loc31, #loc32])
#loc121 = loc(fused[#loc33, #loc30])
#loc122 = loc(fused[#loc37, #loc38])
#loc123 = loc(fused[#loc40, #loc39])
#loc124 = loc(fused[#loc41, #loc42])
#loc125 = loc(fused[#loc44, #loc38])
#loc126 = loc(fused[#loc46, #loc45])
#loc127 = loc(fused[#loc50, #loc49])
#loc128 = loc(fused[#loc57, #loc58])
#loc130 = loc(fused[#loc61, #loc62])
#loc131 = loc(fused[#loc65, #loc66])
#loc132 = loc(fused[#loc67, #loc68])
#loc133 = loc(fused[#loc69, #loc70])
#loc134 = loc(fused[#loc73, #loc74])
#loc135 = loc(fused[#loc72, #loc74])
#loc136 = loc(fused[#loc71, #loc75])
#loc137 = loc(fused[#loc76, #loc75])
#loc138 = loc(fused[#loc77, #loc78])
#loc139 = loc(fused[#loc79, #loc80])
#loc140 = loc(fused[#loc81, #loc78])
#loc141 = loc(fused[#loc85, #loc86])
#loc142 = loc(fused[#loc88, #loc87])
#loc143 = loc(fused[#loc89, #loc90])
#loc144 = loc(fused[#loc92, #loc86])
#loc145 = loc(fused[#loc94, #loc93])
#loc146 = loc(fused[#loc98, #loc97])
