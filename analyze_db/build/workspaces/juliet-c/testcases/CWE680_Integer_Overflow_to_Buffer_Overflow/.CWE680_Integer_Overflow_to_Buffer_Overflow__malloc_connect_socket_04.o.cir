!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":92:48)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc282)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc283)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc284)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc285)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc286)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc287)
  cir.func private @close(!s32i) -> !s32i loc(#loc288)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc289)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc290)
  cir.func private @printIntLine(!s32i) loc(#loc291)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc292)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc294)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc295)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc296)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc297)
    %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc298)
    %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc299)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc300)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc41)
    cir.store %8, %6 : !s32i, !cir.ptr<!s32i> loc(#loc301)
    cir.br ^bb1 loc(#loc302)
  ^bb1:  // pred: ^bb0
    %9 = cir.const #cir.int<1> : !s32i loc(#loc45)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc45)
    cir.brcond %10 ^bb2, ^bb36 loc(#loc303)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc304)
  ^bb3:  // pred: ^bb2
    %11 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc31)
    cir.store %12, %2 : !s32i, !cir.ptr<!s32i> loc(#loc296)
    cir.br ^bb4 loc(#loc305)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc305)
  ^bb5:  // pred: ^bb28
    %13 = cir.const #cir.int<0> : !s32i loc(#loc51)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc51)
    cir.brcond %14 ^bb6, ^bb29 loc(#loc51)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc306)
  ^bb7:  // pred: ^bb6
    %15 = cir.const #cir.int<2> : !s32i loc(#loc54)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc55)
    %17 = cir.const #cir.int<6> : !s32i loc(#loc56)
    %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc57)
    cir.store %18, %2 : !s32i, !cir.ptr<!s32i> loc(#loc307)
    cir.br ^bb8 loc(#loc308)
  ^bb8:  // pred: ^bb7
    %19 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc62)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc63)
    %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc63)
    %22 = cir.cmp(eq, %19, %21) : !s32i, !cir.bool loc(#loc309)
    cir.brcond %22 ^bb9, ^bb10 loc(#loc310)
  ^bb9:  // pred: ^bb8
    cir.br ^bb29 loc(#loc65)
  ^bb10:  // pred: ^bb8
    cir.br ^bb11 loc(#loc61)
  ^bb11:  // pred: ^bb10
    %23 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc311)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc68)
    %25 = cir.const #cir.int<16> : !u64i loc(#loc312)
    cir.libc.memset %25 bytes from %23 set to %24 : !cir.ptr<!void>, !s32i, !u64i loc(#loc313)
    %26 = cir.const #cir.int<2> : !s32i loc(#loc73)
    %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc73)
    %28 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
    cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc314)
    %29 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
    %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
    %31 = cir.call @inet_addr(%30) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc76)
    %32 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc77)
    %33 = cir.get_member %32[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc78)
    cir.store %31, %33 : !u32i, !cir.ptr<!u32i> loc(#loc315)
    %34 = cir.const #cir.int<27015> : !s32i loc(#loc81)
    %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc81)
    %36 = cir.call @htons(%35) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc82)
    %37 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc83)
    cir.store %36, %37 : !u16i, !cir.ptr<!u16i> loc(#loc316)
    cir.br ^bb12 loc(#loc317)
  ^bb12:  // pred: ^bb11
    %38 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc88)
    %39 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc318)
    %40 = cir.const #cir.int<16> : !u64i loc(#loc319)
    %41 = cir.cast(integral, %40 : !u64i), !u32i loc(#loc319)
    %42 = cir.call @connect(%38, %39, %41) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc93)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc94)
    %44 = cir.unary(minus, %43) nsw : !s32i, !s32i loc(#loc94)
    %45 = cir.cmp(eq, %42, %44) : !s32i, !cir.bool loc(#loc320)
    cir.brcond %45 ^bb13, ^bb14 loc(#loc321)
  ^bb13:  // pred: ^bb12
    cir.br ^bb29 loc(#loc96)
  ^bb14:  // pred: ^bb12
    cir.br ^bb15 loc(#loc87)
  ^bb15:  // pred: ^bb14
    %46 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc97)
    %47 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc98)
    %48 = cir.cast(bitcast, %47 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc98)
    %49 = cir.const #cir.int<3> : !s32i loc(#loc99)
    %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc99)
    %51 = cir.const #cir.int<4> : !u64i loc(#loc99)
    %52 = cir.binop(mul, %50, %51) : !u64i loc(#loc99)
    %53 = cir.const #cir.int<2> : !s32i loc(#loc99)
    %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc99)
    %55 = cir.binop(add, %52, %54) : !u64i loc(#loc99)
    %56 = cir.const #cir.int<1> : !s32i loc(#loc100)
    %57 = cir.cast(integral, %56 : !s32i), !u64i loc(#loc100)
    %58 = cir.binop(sub, %55, %57) : !u64i loc(#loc322)
    %59 = cir.const #cir.int<0> : !s32i loc(#loc101)
    %60 = cir.call @recv(%46, %48, %58, %59) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc102)
    %61 = cir.cast(integral, %60 : !s64i), !s32i loc(#loc102)
    cir.store %61, %0 : !s32i, !cir.ptr<!s32i> loc(#loc323)
    cir.br ^bb16 loc(#loc324)
  ^bb16:  // pred: ^bb15
    %62 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc107)
    %63 = cir.const #cir.int<1> : !s32i loc(#loc108)
    %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc108)
    %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc325)
    cir.brcond %65 ^bb17, ^bb18 loc(#loc109)
  ^bb17:  // pred: ^bb16
    %66 = cir.const #true loc(#loc109)
    cir.br ^bb23(%66 : !cir.bool) loc(#loc109)
  ^bb18:  // pred: ^bb16
    %67 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc110)
    %68 = cir.const #cir.int<0> : !s32i loc(#loc111)
    %69 = cir.cmp(eq, %67, %68) : !s32i, !cir.bool loc(#loc326)
    cir.brcond %69 ^bb19, ^bb20 loc(#loc109)
  ^bb19:  // pred: ^bb18
    %70 = cir.const #true loc(#loc109)
    cir.br ^bb21(%70 : !cir.bool) loc(#loc109)
  ^bb20:  // pred: ^bb18
    %71 = cir.const #false loc(#loc109)
    cir.br ^bb21(%71 : !cir.bool) loc(#loc109)
  ^bb21(%72: !cir.bool loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":92:48)):  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc109)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23(%72 : !cir.bool) loc(#loc109)
  ^bb23(%73: !cir.bool loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":92:48)):  // 2 preds: ^bb17, ^bb22
    cir.br ^bb24 loc(#loc109)
  ^bb24:  // pred: ^bb23
    cir.brcond %73 ^bb25, ^bb26 loc(#loc327)
  ^bb25:  // pred: ^bb24
    cir.br ^bb29 loc(#loc113)
  ^bb26:  // pred: ^bb24
    cir.br ^bb27 loc(#loc106)
  ^bb27:  // pred: ^bb26
    %74 = cir.const #cir.int<0> : !s32i loc(#loc114)
    %75 = cir.cast(integral, %74 : !s32i), !s8i loc(#loc114)
    %76 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc115)
    %77 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc116)
    %78 = cir.ptr_stride(%77 : !cir.ptr<!s8i>, %76 : !s32i), !cir.ptr<!s8i> loc(#loc116)
    cir.store %75, %78 : !s8i, !cir.ptr<!s8i> loc(#loc328)
    %79 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc117)
    %80 = cir.call @atoi(%79) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc118)
    cir.store %80, %6 : !s32i, !cir.ptr<!s32i> loc(#loc329)
    cir.br ^bb28 loc(#loc53)
  ^bb28:  // pred: ^bb27
    cir.br ^bb5 loc(#loc50)
  ^bb29:  // 4 preds: ^bb5, ^bb9, ^bb13, ^bb25
    cir.br ^bb30 loc(#loc50)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc330)
  ^bb31:  // pred: ^bb30
    %81 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc123)
    %82 = cir.const #cir.int<1> : !s32i loc(#loc124)
    %83 = cir.unary(minus, %82) nsw : !s32i, !s32i loc(#loc124)
    %84 = cir.cmp(ne, %81, %83) : !s32i, !cir.bool loc(#loc331)
    cir.brcond %84 ^bb32, ^bb33 loc(#loc332)
  ^bb32:  // pred: ^bb31
    %85 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc126)
    %86 = cir.call @close(%85) : (!s32i) -> !s32i loc(#loc127)
    cir.br ^bb33 loc(#loc122)
  ^bb33:  // 2 preds: ^bb31, ^bb32
    cir.br ^bb34 loc(#loc122)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc48)
  ^bb35:  // pred: ^bb34
    cir.br ^bb36 loc(#loc44)
  ^bb36:  // 2 preds: ^bb1, ^bb35
    cir.br ^bb37 loc(#loc44)
  ^bb37:  // pred: ^bb36
    cir.br ^bb38 loc(#loc333)
  ^bb38:  // pred: ^bb37
    %87 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc130)
    %88 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc131)
    %89 = cir.cast(integral, %88 : !s32i), !u64i loc(#loc131)
    %90 = cir.const #cir.int<4> : !u64i loc(#loc334)
    %91 = cir.binop(mul, %89, %90) : !u64i loc(#loc335)
    %92 = cir.call @malloc(%91) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc130)
    %93 = cir.cast(bitcast, %92 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc336)
    cir.store %93, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc337)
    cir.br ^bb39 loc(#loc338)
  ^bb39:  // pred: ^bb38
    %94 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc138)
    %95 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc139)
    %96 = cir.cast(bitcast, %95 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc139)
    %97 = cir.cmp(eq, %94, %96) : !cir.ptr<!s32i>, !cir.bool loc(#loc339)
    cir.brcond %97 ^bb40, ^bb41 loc(#loc340)
  ^bb40:  // pred: ^bb39
    %98 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc141)
    %99 = cir.const #cir.int<1> : !s32i loc(#loc142)
    %100 = cir.unary(minus, %99) nsw : !s32i, !s32i loc(#loc143)
    cir.call @exit(%100) : (!s32i) -> () extra(#fn_attr) loc(#loc141)
    cir.br ^bb41 loc(#loc137)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc137)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc341)
  ^bb43:  // pred: ^bb42
    %101 = cir.const #cir.int<0> : !s32i loc(#loc146)
    %102 = cir.cast(integral, %101 : !s32i), !u64i loc(#loc146)
    cir.store %102, %4 : !u64i, !cir.ptr<!u64i> loc(#loc342)
    cir.br ^bb44 loc(#loc341)
  ^bb44:  // 2 preds: ^bb43, ^bb48
    %103 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc148)
    %104 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc149)
    %105 = cir.cast(integral, %104 : !s32i), !u64i loc(#loc149)
    %106 = cir.cmp(lt, %103, %105) : !u64i, !cir.bool loc(#loc343)
    cir.brcond %106 ^bb45, ^bb49 loc(#loc150)
  ^bb45:  // pred: ^bb44
    cir.br ^bb46 loc(#loc344)
  ^bb46:  // pred: ^bb45
    %107 = cir.const #cir.int<0> : !s32i loc(#loc152)
    %108 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc153)
    %109 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc154)
    %110 = cir.ptr_stride(%108 : !cir.ptr<!s32i>, %109 : !u64i), !cir.ptr<!s32i> loc(#loc155)
    cir.store %107, %110 : !s32i, !cir.ptr<!s32i> loc(#loc345)
    cir.br ^bb47 loc(#loc145)
  ^bb47:  // pred: ^bb46
    cir.br ^bb48 loc(#loc145)
  ^bb48:  // pred: ^bb47
    %111 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc156)
    %112 = cir.unary(inc, %111) : !u64i, !u64i loc(#loc157)
    cir.store %112, %4 : !u64i, !cir.ptr<!u64i> loc(#loc346)
    cir.br ^bb44 loc(#loc341)
  ^bb49:  // pred: ^bb44
    cir.br ^bb50 loc(#loc145)
  ^bb50:  // pred: ^bb49
    %113 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc158)
    %114 = cir.const #cir.int<0> : !s32i loc(#loc159)
    %115 = cir.ptr_stride(%113 : !cir.ptr<!s32i>, %114 : !s32i), !cir.ptr<!s32i> loc(#loc160)
    %116 = cir.load %115 : !cir.ptr<!s32i>, !s32i loc(#loc158)
    cir.call @printIntLine(%116) : (!s32i) -> () loc(#loc161)
    %117 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc162)
    %118 = cir.cast(bitcast, %117 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc162)
    cir.call @free(%118) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc163)
    cir.br ^bb51 loc(#loc129)
  ^bb51:  // pred: ^bb50
    cir.return loc(#loc25)
  } loc(#loc293)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc348)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc166)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc349)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc168)
    cir.return loc(#loc165)
  } loc(#loc347)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc350)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc172)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc352)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc353)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc354)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc181)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc182)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc355)
    cir.br ^bb1 loc(#loc356)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<0> : !s32i loc(#loc186)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc186)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc357)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc172)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc172)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc190)
    cir.br ^bb4 loc(#loc188)
  ^bb3:  // pred: ^bb1
    %9 = cir.const #cir.int<20> : !s32i loc(#loc191)
    cir.store %9, %2 : !s32i, !cir.ptr<!s32i> loc(#loc358)
    cir.br ^bb4 loc(#loc185)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc185)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc359)
  ^bb6:  // pred: ^bb5
    %10 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc195)
    %11 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc196)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc196)
    %13 = cir.const #cir.int<4> : !u64i loc(#loc360)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc361)
    %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc195)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc362)
    cir.store %16, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc363)
    cir.br ^bb7 loc(#loc364)
  ^bb7:  // pred: ^bb6
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc203)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc204)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc204)
    %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s32i>, !cir.bool loc(#loc365)
    cir.brcond %20 ^bb8, ^bb9 loc(#loc366)
  ^bb8:  // pred: ^bb7
    %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc206)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc207)
    %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc208)
    cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc206)
    cir.br ^bb9 loc(#loc202)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc202)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc367)
  ^bb11:  // pred: ^bb10
    %24 = cir.const #cir.int<0> : !s32i loc(#loc211)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc211)
    cir.store %25, %0 : !u64i, !cir.ptr<!u64i> loc(#loc368)
    cir.br ^bb12 loc(#loc367)
  ^bb12:  // 2 preds: ^bb11, ^bb16
    %26 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc213)
    %27 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc214)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc214)
    %29 = cir.cmp(lt, %26, %28) : !u64i, !cir.bool loc(#loc369)
    cir.brcond %29 ^bb13, ^bb17 loc(#loc215)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc370)
  ^bb14:  // pred: ^bb13
    %30 = cir.const #cir.int<0> : !s32i loc(#loc217)
    %31 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc218)
    %32 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc219)
    %33 = cir.ptr_stride(%31 : !cir.ptr<!s32i>, %32 : !u64i), !cir.ptr<!s32i> loc(#loc220)
    cir.store %30, %33 : !s32i, !cir.ptr<!s32i> loc(#loc371)
    cir.br ^bb15 loc(#loc210)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc210)
  ^bb16:  // pred: ^bb15
    %34 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc221)
    %35 = cir.unary(inc, %34) : !u64i, !u64i loc(#loc222)
    cir.store %35, %0 : !u64i, !cir.ptr<!u64i> loc(#loc372)
    cir.br ^bb12 loc(#loc367)
  ^bb17:  // pred: ^bb12
    cir.br ^bb18 loc(#loc210)
  ^bb18:  // pred: ^bb17
    %36 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc223)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc224)
    %38 = cir.ptr_stride(%36 : !cir.ptr<!s32i>, %37 : !s32i), !cir.ptr<!s32i> loc(#loc225)
    %39 = cir.load %38 : !cir.ptr<!s32i>, !s32i loc(#loc223)
    cir.call @printIntLine(%39) : (!s32i) -> () loc(#loc226)
    %40 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc227)
    %41 = cir.cast(bitcast, %40 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc227)
    cir.call @free(%41) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc228)
    cir.br ^bb19 loc(#loc194)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc174)
  } loc(#loc351)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc374)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc375)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc376)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc237)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc238)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc377)
    cir.br ^bb1 loc(#loc378)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<1> : !s32i loc(#loc242)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc242)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc379)
  ^bb2:  // pred: ^bb1
    %7 = cir.const #cir.int<20> : !s32i loc(#loc244)
    cir.store %7, %2 : !s32i, !cir.ptr<!s32i> loc(#loc380)
    cir.br ^bb3 loc(#loc241)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc241)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc381)
  ^bb5:  // pred: ^bb4
    %8 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc248)
    %9 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc249)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc249)
    %11 = cir.const #cir.int<4> : !u64i loc(#loc382)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc383)
    %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc248)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc384)
    cir.store %14, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc385)
    cir.br ^bb6 loc(#loc386)
  ^bb6:  // pred: ^bb5
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc256)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc257)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc257)
    %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s32i>, !cir.bool loc(#loc387)
    cir.brcond %18 ^bb7, ^bb8 loc(#loc388)
  ^bb7:  // pred: ^bb6
    %19 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc259)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc260)
    %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc261)
    cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc259)
    cir.br ^bb8 loc(#loc255)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc255)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc389)
  ^bb10:  // pred: ^bb9
    %22 = cir.const #cir.int<0> : !s32i loc(#loc264)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc264)
    cir.store %23, %0 : !u64i, !cir.ptr<!u64i> loc(#loc390)
    cir.br ^bb11 loc(#loc389)
  ^bb11:  // 2 preds: ^bb10, ^bb15
    %24 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc266)
    %25 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc267)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc267)
    %27 = cir.cmp(lt, %24, %26) : !u64i, !cir.bool loc(#loc391)
    cir.brcond %27 ^bb12, ^bb16 loc(#loc268)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc392)
  ^bb13:  // pred: ^bb12
    %28 = cir.const #cir.int<0> : !s32i loc(#loc270)
    %29 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc271)
    %30 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc272)
    %31 = cir.ptr_stride(%29 : !cir.ptr<!s32i>, %30 : !u64i), !cir.ptr<!s32i> loc(#loc273)
    cir.store %28, %31 : !s32i, !cir.ptr<!s32i> loc(#loc393)
    cir.br ^bb14 loc(#loc263)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc263)
  ^bb15:  // pred: ^bb14
    %32 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc274)
    %33 = cir.unary(inc, %32) : !u64i, !u64i loc(#loc275)
    cir.store %33, %0 : !u64i, !cir.ptr<!u64i> loc(#loc394)
    cir.br ^bb11 loc(#loc389)
  ^bb16:  // pred: ^bb11
    cir.br ^bb17 loc(#loc263)
  ^bb17:  // pred: ^bb16
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc276)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc277)
    %36 = cir.ptr_stride(%34 : !cir.ptr<!s32i>, %35 : !s32i), !cir.ptr<!s32i> loc(#loc278)
    %37 = cir.load %36 : !cir.ptr<!s32i>, !s32i loc(#loc276)
    cir.call @printIntLine(%37) : (!s32i) -> () loc(#loc279)
    %38 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc280)
    %39 = cir.cast(bitcast, %38 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc280)
    cir.call @free(%39) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc281)
    cir.br ^bb18 loc(#loc247)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc230)
  } loc(#loc373)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":83:53)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("/usr/include/stdlib.h":672:1)
#loc17 = loc("/usr/include/stdlib.h":672:45)
#loc18 = loc("/usr/include/stdlib.h":756:1)
#loc19 = loc("/usr/include/stdlib.h":756:70)
#loc20 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc21 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc22 = loc("/usr/include/stdlib.h":687:1)
#loc23 = loc("/usr/include/stdlib.h":687:32)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":50:1)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":128:1)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":62:13)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":62:17)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":63:13)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":63:32)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":64:13)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":64:36)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":65:13)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":65:45)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":115:9)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":115:16)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":116:9)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":116:14)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":52:5)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":52:9)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":54:13)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":54:12)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":54:5)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":55:5)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":113:5)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":55:8)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":56:5)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":57:9)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":112:9)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":66:13)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":101:21)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":101:20)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":67:13)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":100:13)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":76:40)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":76:49)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":76:62)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":76:33)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":76:17)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":76:73)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":77:17)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":80:17)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":77:21)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":77:38)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":78:17)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":79:21)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":81:24)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":81:25)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":81:34)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":81:37)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":81:51)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":81:17)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":81:52)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":82:38)
#loc74 = loc("/usr/include/netinet/in.h":249:5)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":82:17)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":83:43)
#loc77 = loc("/usr/include/netinet/in.h":251:20)
#loc78 = loc("/usr/include/netinet/in.h":33:15)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":83:17)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":83:63)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":84:42)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":84:36)
#loc83 = loc("/usr/include/netinet/in.h":250:15)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":84:17)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":84:50)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":85:17)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":88:17)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":85:29)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":85:62)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":85:63)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":85:72)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":85:86)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":85:21)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":85:92)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":86:17)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":87:21)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":91:35)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":91:50)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":91:63)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":91:81)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":91:84)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":91:30)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":91:17)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":91:85)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":92:17)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":95:17)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":92:21)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":92:35)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":92:51)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":92:65)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":93:17)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":94:21)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":97:43)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":97:29)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":97:17)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":99:29)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":99:24)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":99:17)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":99:40)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":102:13)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":105:13)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":102:17)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":102:34)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":103:13)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":104:30)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":104:17)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":114:5)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":127:5)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":119:28)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":119:35)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":119:42)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":119:52)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":119:53)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":119:9)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":120:9)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":120:43)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":120:13)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":120:27)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":120:33)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":120:34)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":120:40)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":120:39)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":121:9)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":124:9)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":121:18)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":121:14)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":121:21)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":121:33)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":121:23)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":122:9)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":123:29)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":123:13)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":123:24)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":123:25)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":121:40)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":121:39)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":125:22)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":125:33)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":125:34)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":125:9)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":126:14)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":126:9)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":193:1)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":197:1)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":195:5)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":195:14)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":196:5)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":196:14)
#loc170 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc171 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":143:19)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":135:1)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":164:1)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":151:9)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":151:16)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":152:9)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":152:14)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":137:5)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":137:9)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":139:13)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":139:12)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":139:5)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":140:5)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":149:5)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":140:8)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":141:5)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":144:5)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":146:5)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":143:9)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":148:16)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":148:9)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":150:5)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":163:5)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":155:28)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":155:35)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":155:42)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":155:52)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":155:53)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":155:9)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":156:9)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":156:43)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":156:13)
#loc204 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":156:27)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":156:33)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":156:34)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":156:40)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":156:39)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":157:9)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":160:9)
#loc211 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":157:18)
#loc212 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":157:14)
#loc213 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":157:21)
#loc214 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":157:33)
#loc215 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":157:23)
#loc216 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":158:9)
#loc217 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":159:29)
#loc218 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":159:13)
#loc219 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":159:24)
#loc220 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":159:25)
#loc221 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":157:40)
#loc222 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":157:39)
#loc223 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":161:22)
#loc224 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":161:33)
#loc225 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":161:34)
#loc226 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":161:9)
#loc227 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":162:14)
#loc228 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":162:9)
#loc229 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":167:1)
#loc230 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":191:1)
#loc231 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":178:9)
#loc232 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":178:16)
#loc233 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":179:9)
#loc234 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":179:14)
#loc235 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":169:5)
#loc236 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":169:9)
#loc237 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":171:13)
#loc238 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":171:12)
#loc239 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":171:5)
#loc240 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":172:5)
#loc241 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":176:5)
#loc242 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":172:8)
#loc243 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":173:5)
#loc244 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":175:16)
#loc245 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":175:9)
#loc246 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":177:5)
#loc247 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":190:5)
#loc248 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":182:28)
#loc249 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":182:35)
#loc250 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":182:42)
#loc251 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":182:52)
#loc252 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":182:53)
#loc253 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":182:9)
#loc254 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":183:9)
#loc255 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":183:43)
#loc256 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":183:13)
#loc257 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":183:27)
#loc258 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":183:33)
#loc259 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":183:34)
#loc260 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":183:40)
#loc261 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":183:39)
#loc262 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":184:9)
#loc263 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":187:9)
#loc264 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":184:18)
#loc265 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":184:14)
#loc266 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":184:21)
#loc267 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":184:33)
#loc268 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":184:23)
#loc269 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":185:9)
#loc270 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":186:29)
#loc271 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":186:13)
#loc272 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":186:24)
#loc273 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":186:25)
#loc274 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":184:40)
#loc275 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":184:39)
#loc276 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":188:22)
#loc277 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":188:33)
#loc278 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":188:34)
#loc279 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":188:9)
#loc280 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":189:14)
#loc281 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_04.c":189:9)
#loc282 = loc(fused[#loc1, #loc2])
#loc283 = loc(fused[#loc3, #loc4])
#loc284 = loc(fused[#loc6, #loc7])
#loc285 = loc(fused[#loc8, #loc9])
#loc286 = loc(fused[#loc10, #loc11])
#loc287 = loc(fused[#loc12, #loc13])
#loc288 = loc(fused[#loc14, #loc15])
#loc289 = loc(fused[#loc16, #loc17])
#loc290 = loc(fused[#loc18, #loc19])
#loc291 = loc(fused[#loc20, #loc21])
#loc292 = loc(fused[#loc22, #loc23])
#loc293 = loc(fused[#loc24, #loc25])
#loc294 = loc(fused[#loc26, #loc27])
#loc295 = loc(fused[#loc28, #loc29])
#loc296 = loc(fused[#loc30, #loc31])
#loc297 = loc(fused[#loc32, #loc33])
#loc298 = loc(fused[#loc34, #loc35])
#loc299 = loc(fused[#loc36, #loc37])
#loc300 = loc(fused[#loc38, #loc39])
#loc301 = loc(fused[#loc42, #loc40])
#loc302 = loc(fused[#loc43, #loc44])
#loc303 = loc(fused[#loc46, #loc44])
#loc304 = loc(fused[#loc47, #loc48])
#loc305 = loc(fused[#loc49, #loc50])
#loc306 = loc(fused[#loc52, #loc53])
#loc307 = loc(fused[#loc58, #loc59])
#loc308 = loc(fused[#loc60, #loc61])
#loc309 = loc(fused[#loc62, #loc63])
#loc310 = loc(fused[#loc64, #loc61])
#loc311 = loc(fused[#loc66, #loc67])
#loc312 = loc(fused[#loc69, #loc70])
#loc313 = loc(fused[#loc71, #loc72])
#loc314 = loc(fused[#loc75, #loc73])
#loc315 = loc(fused[#loc79, #loc80])
#loc316 = loc(fused[#loc84, #loc85])
#loc317 = loc(fused[#loc86, #loc87])
#loc318 = loc(fused[#loc89, #loc90])
#loc319 = loc(fused[#loc91, #loc92])
#loc320 = loc(fused[#loc93, #loc94])
#loc321 = loc(fused[#loc95, #loc87])
#loc322 = loc(fused[#loc99, #loc100])
#loc323 = loc(fused[#loc103, #loc104])
#loc324 = loc(fused[#loc105, #loc106])
#loc325 = loc(fused[#loc107, #loc108])
#loc326 = loc(fused[#loc110, #loc111])
#loc327 = loc(fused[#loc112, #loc106])
#loc328 = loc(fused[#loc116, #loc114])
#loc329 = loc(fused[#loc119, #loc120])
#loc330 = loc(fused[#loc121, #loc122])
#loc331 = loc(fused[#loc123, #loc124])
#loc332 = loc(fused[#loc125, #loc122])
#loc333 = loc(fused[#loc128, #loc129])
#loc334 = loc(fused[#loc132, #loc133])
#loc335 = loc(fused[#loc131, #loc133])
#loc336 = loc(fused[#loc130, #loc134])
#loc337 = loc(fused[#loc135, #loc134])
#loc338 = loc(fused[#loc136, #loc137])
#loc339 = loc(fused[#loc138, #loc139])
#loc340 = loc(fused[#loc140, #loc137])
#loc341 = loc(fused[#loc144, #loc145])
#loc342 = loc(fused[#loc147, #loc146])
#loc343 = loc(fused[#loc148, #loc149])
#loc344 = loc(fused[#loc151, #loc145])
#loc345 = loc(fused[#loc153, #loc152])
#loc346 = loc(fused[#loc157, #loc156])
#loc347 = loc(fused[#loc164, #loc165])
#loc348 = loc(fused[#loc166, #loc167])
#loc349 = loc(fused[#loc168, #loc169])
#loc350 = loc(fused[#loc170, #loc171])
#loc351 = loc(fused[#loc173, #loc174])
#loc352 = loc(fused[#loc175, #loc176])
#loc353 = loc(fused[#loc177, #loc178])
#loc354 = loc(fused[#loc179, #loc180])
#loc355 = loc(fused[#loc183, #loc181])
#loc356 = loc(fused[#loc184, #loc185])
#loc357 = loc(fused[#loc187, #loc188, #loc189, #loc185])
#loc358 = loc(fused[#loc192, #loc191])
#loc359 = loc(fused[#loc193, #loc194])
#loc360 = loc(fused[#loc197, #loc198])
#loc361 = loc(fused[#loc196, #loc198])
#loc362 = loc(fused[#loc195, #loc199])
#loc363 = loc(fused[#loc200, #loc199])
#loc364 = loc(fused[#loc201, #loc202])
#loc365 = loc(fused[#loc203, #loc204])
#loc366 = loc(fused[#loc205, #loc202])
#loc367 = loc(fused[#loc209, #loc210])
#loc368 = loc(fused[#loc212, #loc211])
#loc369 = loc(fused[#loc213, #loc214])
#loc370 = loc(fused[#loc216, #loc210])
#loc371 = loc(fused[#loc218, #loc217])
#loc372 = loc(fused[#loc222, #loc221])
#loc373 = loc(fused[#loc229, #loc230])
#loc374 = loc(fused[#loc231, #loc232])
#loc375 = loc(fused[#loc233, #loc234])
#loc376 = loc(fused[#loc235, #loc236])
#loc377 = loc(fused[#loc239, #loc237])
#loc378 = loc(fused[#loc240, #loc241])
#loc379 = loc(fused[#loc243, #loc241])
#loc380 = loc(fused[#loc245, #loc244])
#loc381 = loc(fused[#loc246, #loc247])
#loc382 = loc(fused[#loc250, #loc251])
#loc383 = loc(fused[#loc249, #loc251])
#loc384 = loc(fused[#loc248, #loc252])
#loc385 = loc(fused[#loc253, #loc252])
#loc386 = loc(fused[#loc254, #loc255])
#loc387 = loc(fused[#loc256, #loc257])
#loc388 = loc(fused[#loc258, #loc255])
#loc389 = loc(fused[#loc262, #loc263])
#loc390 = loc(fused[#loc265, #loc264])
#loc391 = loc(fused[#loc266, #loc267])
#loc392 = loc(fused[#loc269, #loc263])
#loc393 = loc(fused[#loc271, #loc270])
#loc394 = loc(fused[#loc275, #loc274])
