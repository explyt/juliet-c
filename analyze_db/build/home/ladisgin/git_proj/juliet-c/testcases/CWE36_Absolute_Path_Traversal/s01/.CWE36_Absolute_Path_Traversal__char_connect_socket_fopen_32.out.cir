!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc247 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":201:10)
#loc248 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":201:14)
#loc249 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":201:20)
#loc250 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":201:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc360 = loc(fused[#loc247, #loc248])
#loc361 = loc(fused[#loc249, #loc250])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s01/CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc263)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc264)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc265)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc7)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc266)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc267)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc268)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc269)
  cir.func private @close(!s32i) -> !s32i loc(#loc270)
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc271)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"wb+\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc20)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc272)
  cir.func @_ZN59CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_323badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc274)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc275)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc276)
    %3 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc277)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc275)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc276)
    %4 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc277)
    cir.store %4, %3 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc277)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc33)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc278)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc280)
      %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc38)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc280)
      cir.scope {
        %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc282)
        %12 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc283)
        %13 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc284)
        %14 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc285)
        %15 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc286)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc49)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc49)
        cir.store %17, %14 : !s32i, !cir.ptr<!s32i> loc(#loc285)
        %18 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc52)
        %19 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
        %20 = cir.call @strlen(%19) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc52)
        cir.store %20, %15 : !u64i, !cir.ptr<!u64i> loc(#loc286)
        cir.scope {
          cir.do {
            %21 = cir.const #cir.int<2> : !s32i loc(#loc56)
            %22 = cir.const #cir.int<1> : !u32i loc(#loc57)
            %23 = cir.cast(integral, %22 : !u32i), !s32i loc(#loc57)
            %24 = cir.const #cir.int<6> : !u32i loc(#loc58)
            %25 = cir.cast(integral, %24 : !u32i), !s32i loc(#loc58)
            %26 = cir.call @socket(%21, %23, %25) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc59)
            cir.store %26, %14 : !s32i, !cir.ptr<!s32i> loc(#loc288)
            cir.scope {
              %76 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc64)
              %77 = cir.const #cir.int<1> : !s32i loc(#loc65)
              %78 = cir.unary(minus, %77) : !s32i, !s32i loc(#loc65)
              %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc290)
              cir.if %79 {
                cir.break loc(#loc67)
              } loc(#loc291)
            } loc(#loc289)
            %27 = cir.cast(bitcast, %12 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc292)
            %28 = cir.const #cir.int<0> : !s32i loc(#loc70)
            %29 = cir.const #cir.int<16> : !u64i loc(#loc293)
            cir.libc.memset %29 bytes from %27 set to %28 : !cir.ptr<!void>, !s32i, !u64i loc(#loc294)
            %30 = cir.const #cir.int<2> : !s32i loc(#loc75)
            %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc75)
            %32 = cir.get_member %12[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
            cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc295)
            %33 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc7)
            %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc7)
            %35 = cir.call @inet_addr(%34) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc78)
            %36 = cir.get_member %12[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc79)
            %37 = cir.get_member %36[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc80)
            cir.store %35, %37 : !u32i, !cir.ptr<!u32i> loc(#loc296)
            %38 = cir.const #cir.int<27015> : !s32i loc(#loc83)
            %39 = cir.cast(integral, %38 : !s32i), !u16i loc(#loc83)
            %40 = cir.call @htons(%39) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc84)
            %41 = cir.get_member %12[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc85)
            cir.store %40, %41 : !u16i, !cir.ptr<!u16i> loc(#loc297)
            cir.scope {
              %76 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc90)
              %77 = cir.cast(bitcast, %12 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc299)
              %78 = cir.const #cir.int<16> : !u64i loc(#loc300)
              %79 = cir.cast(integral, %78 : !u64i), !u32i loc(#loc300)
              %80 = cir.call @connect(%76, %77, %79) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc95)
              %81 = cir.const #cir.int<1> : !s32i loc(#loc96)
              %82 = cir.unary(minus, %81) : !s32i, !s32i loc(#loc96)
              %83 = cir.cmp(eq, %80, %82) : !s32i, !cir.bool loc(#loc301)
              cir.if %83 {
                cir.break loc(#loc98)
              } loc(#loc302)
            } loc(#loc298)
            %42 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc99)
            %43 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
            %44 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc101)
            %45 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc102)
            %46 = cir.cast(bitcast, %45 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc303)
            %47 = cir.const #cir.int<1> : !u64i loc(#loc304)
            %48 = cir.const #cir.int<4096> : !s32i loc(#loc107)
            %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc107)
            %50 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc108)
            %51 = cir.binop(sub, %49, %50) : !u64i loc(#loc305)
            %52 = cir.const #cir.int<1> : !s32i loc(#loc109)
            %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc109)
            %54 = cir.binop(sub, %51, %53) : !u64i loc(#loc306)
            %55 = cir.binop(mul, %47, %54) : !u64i loc(#loc307)
            %56 = cir.const #cir.int<0> : !s32i loc(#loc111)
            %57 = cir.call @recv(%42, %46, %55, %56) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc112)
            %58 = cir.cast(integral, %57 : !s64i), !s32i loc(#loc112)
            cir.store %58, %11 : !s32i, !cir.ptr<!s32i> loc(#loc308)
            cir.scope {
              %76 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc117)
              %77 = cir.const #cir.int<1> : !s32i loc(#loc118)
              %78 = cir.unary(minus, %77) : !s32i, !s32i loc(#loc118)
              %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc310)
              %80 = cir.ternary(%79, true {
                %81 = cir.const #true loc(#loc119)
                cir.yield %81 : !cir.bool loc(#loc119)
              }, false {
                %81 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc120)
                %82 = cir.const #cir.int<0> : !s32i loc(#loc121)
                %83 = cir.cmp(eq, %81, %82) : !s32i, !cir.bool loc(#loc311)
                %84 = cir.ternary(%83, true {
                  %85 = cir.const #true loc(#loc119)
                  cir.yield %85 : !cir.bool loc(#loc119)
                }, false {
                  %85 = cir.const #false loc(#loc119)
                  cir.yield %85 : !cir.bool loc(#loc119)
                }) : (!cir.bool) -> !cir.bool loc(#loc119)
                cir.yield %84 : !cir.bool loc(#loc119)
              }) : (!cir.bool) -> !cir.bool loc(#loc119)
              cir.if %80 {
                cir.break loc(#loc123)
              } loc(#loc312)
            } loc(#loc309)
            %59 = cir.const #cir.int<0> : !s8i loc(#loc124)
            %60 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
            %61 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc126)
            %62 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc127)
            %63 = cir.cast(integral, %62 : !s32i), !u64i loc(#loc127)
            %64 = cir.const #cir.int<1> : !u64i loc(#loc313)
            %65 = cir.binop(div, %63, %64) : !u64i loc(#loc314)
            %66 = cir.binop(add, %61, %65) : !u64i loc(#loc315)
            %67 = cir.ptr_stride(%60 : !cir.ptr<!s8i>, %66 : !u64i), !cir.ptr<!s8i> loc(#loc130)
            cir.store %59, %67 : !s8i, !cir.ptr<!s8i> loc(#loc316)
            %68 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
            %69 = cir.const #cir.int<13> : !s8i loc(#loc132)
            %70 = cir.cast(integral, %69 : !s8i), !s32i loc(#loc132)
            %71 = cir.call @strchr(%68, %70) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc133)
            cir.store %71, %13 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc317)
            cir.scope {
              %76 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
              %77 = cir.cast(ptr_to_bool, %76 : !cir.ptr<!s8i>), !cir.bool loc(#loc138)
              cir.if %77 {
                %78 = cir.const #cir.int<0> : !s8i loc(#loc140)
                %79 = cir.load deref %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc141)
                cir.store %78, %79 : !s8i, !cir.ptr<!s8i> loc(#loc320)
              } loc(#loc319)
            } loc(#loc318)
            %72 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc143)
            %73 = cir.const #cir.int<10> : !s8i loc(#loc144)
            %74 = cir.cast(integral, %73 : !s8i), !s32i loc(#loc144)
            %75 = cir.call @strchr(%72, %74) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc145)
            cir.store %75, %13 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc321)
            cir.scope {
              %76 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
              %77 = cir.cast(ptr_to_bool, %76 : !cir.ptr<!s8i>), !cir.bool loc(#loc150)
              cir.if %77 {
                %78 = cir.const #cir.int<0> : !s8i loc(#loc152)
                %79 = cir.load deref %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
                cir.store %78, %79 : !s8i, !cir.ptr<!s8i> loc(#loc324)
              } loc(#loc323)
            } loc(#loc322)
            cir.yield loc(#loc55)
          } while {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc155)
            %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc155)
            cir.condition(%22) loc(#loc155)
          } loc(#loc287)
        } loc(#loc287)
        cir.scope {
          %21 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc158)
          %22 = cir.const #cir.int<1> : !s32i loc(#loc159)
          %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc159)
          %24 = cir.cmp(ne, %21, %23) : !s32i, !cir.bool loc(#loc326)
          cir.if %24 {
            %25 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc161)
            %26 = cir.call @close(%25) : (!s32i) -> !s32i loc(#loc162)
          } loc(#loc327)
        } loc(#loc325)
      } loc(#loc281)
      %9 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
      %10 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc164)
      cir.store %9, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc328)
    } loc(#loc279)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc330)
      %7 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc169)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc170)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc330)
      cir.scope {
        %9 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc332)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc174)
        cir.store %10, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc332)
        %11 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc175)
        %12 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc176)
        %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc20)
        %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc20)
        %15 = cir.call @fopen(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc175)
        cir.store %15, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc333)
        cir.scope {
          %16 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc181)
          %17 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc182)
          %18 = cir.cmp(ne, %16, %17) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc335)
          cir.if %18 {
            %19 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc184)
            %20 = cir.call @fclose(%19) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc185)
          } loc(#loc336)
        } loc(#loc334)
      } loc(#loc331)
    } loc(#loc329)
    cir.return loc(#loc24)
  } loc(#loc273)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc337)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc188)
  cir.func internal private @_ZN59CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc339)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc340)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc341)
    %3 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc342)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc340)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc341)
    %4 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc342)
    cir.store %4, %3 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc342)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc199)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc343)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc345)
      %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc204)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc205)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc345)
      %9 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc206)
      %10 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc207)
      %11 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc188)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc188)
      %13 = cir.call @strcat(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc206)
      %14 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc208)
      %15 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc209)
      cir.store %14, %15 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc346)
    } loc(#loc344)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc348)
      %7 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc214)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc215)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc348)
      cir.scope {
        %9 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc350)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc219)
        cir.store %10, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc350)
        %11 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc220)
        %12 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc221)
        %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc222)
        %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc222)
        %15 = cir.call @fopen(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc220)
        cir.store %15, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc351)
        cir.scope {
          %16 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc227)
          %17 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc228)
          %18 = cir.cmp(ne, %16, %17) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc353)
          cir.if %18 {
            %19 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc230)
            %20 = cir.call @fclose(%19) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc231)
          } loc(#loc354)
        } loc(#loc352)
      } loc(#loc349)
    } loc(#loc347)
    cir.return loc(#loc190)
  } loc(#loc338)
  cir.func @_ZN59CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_324goodEv() extra(#fn_attr1) {
    cir.call @_ZN59CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32L7goodG2BEv() : () -> () loc(#loc234)
    cir.return loc(#loc233)
  } loc(#loc355)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc356)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc357)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc358)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc241)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc242)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc243)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc244)
  cir.func @main(%arg0: !s32i loc(fused[#loc247, #loc248]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc249, #loc250])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc360)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc361)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc246)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc251)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc251)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc252)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc253)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc253)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc254)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc241)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc241)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc255)
    cir.call @_ZN59CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_324goodEv() : () -> () loc(#loc256)
    %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc242)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc242)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc257)
    %10 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc243)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc243)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc258)
    cir.call @_ZN59CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_323badEv() : () -> () loc(#loc259)
    %12 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc244)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc244)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc260)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc261)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc362)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc362)
    cir.return %15 : !s32i loc(#loc362)
  } loc(#loc359)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s01/CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/sys/socket.h":102:1)
#loc4 = loc("/usr/include/sys/socket.h":102:62)
#loc5 = loc("/usr/include/arpa/inet.h":34:1)
#loc6 = loc("/usr/include/arpa/inet.h":34:47)
#loc7 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":91:53)
#loc8 = loc("/usr/include/netinet/in.h":404:1)
#loc9 = loc("/usr/include/netinet/in.h":405:40)
#loc10 = loc("/usr/include/sys/socket.h":126:1)
#loc11 = loc("/usr/include/sys/socket.h":126:75)
#loc12 = loc("/usr/include/sys/socket.h":145:1)
#loc13 = loc("/usr/include/sys/socket.h":145:68)
#loc14 = loc("/usr/include/string.h":226:1)
#loc15 = loc("/usr/include/string.h":227:50)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("/usr/include/stdio.h":264:1)
#loc19 = loc("/usr/include/stdio.h":266:3)
#loc20 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":138:33)
#loc21 = loc("/usr/include/stdio.h":184:1)
#loc22 = loc("/usr/include/stdio.h":184:36)
#loc23 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":55:1)
#loc24 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":145:1)
#loc25 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":57:5)
#loc26 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":57:12)
#loc27 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":58:5)
#loc28 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":58:25)
#loc29 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":59:5)
#loc30 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":59:25)
#loc31 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":60:5)
#loc32 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":60:37)
#loc33 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":61:12)
#loc34 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":61:5)
#loc35 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":62:5)
#loc36 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":132:5)
#loc37 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":63:9)
#loc38 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":63:24)
#loc39 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":63:23)
#loc40 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":64:9)
#loc41 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":130:9)
#loc42 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":69:13)
#loc43 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":69:17)
#loc44 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":70:13)
#loc45 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":70:32)
#loc46 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":71:13)
#loc47 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":71:19)
#loc48 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":72:13)
#loc49 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":72:36)
#loc50 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":73:13)
#loc51 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":73:41)
#loc52 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":73:30)
#loc53 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":73:37)
#loc54 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":74:13)
#loc55 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":119:21)
#loc56 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":84:40)
#loc57 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":84:49)
#loc58 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":84:62)
#loc59 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":84:33)
#loc60 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":84:17)
#loc61 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":84:73)
#loc62 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":85:17)
#loc63 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":88:17)
#loc64 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":85:21)
#loc65 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":85:38)
#loc66 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":86:17)
#loc67 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":87:21)
#loc68 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":89:24)
#loc69 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":89:25)
#loc70 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":89:34)
#loc71 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":89:37)
#loc72 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":89:51)
#loc73 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":89:17)
#loc74 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":89:52)
#loc75 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":90:38)
#loc76 = loc("/usr/include/netinet/in.h":249:5)
#loc77 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":90:17)
#loc78 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":91:43)
#loc79 = loc("/usr/include/netinet/in.h":251:20)
#loc80 = loc("/usr/include/netinet/in.h":33:15)
#loc81 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":91:17)
#loc82 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":91:63)
#loc83 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":92:42)
#loc84 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":92:36)
#loc85 = loc("/usr/include/netinet/in.h":250:15)
#loc86 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":92:17)
#loc87 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":92:50)
#loc88 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":93:17)
#loc89 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":96:17)
#loc90 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":93:29)
#loc91 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":93:62)
#loc92 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":93:63)
#loc93 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":93:72)
#loc94 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":93:86)
#loc95 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":93:21)
#loc96 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":93:92)
#loc97 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":94:17)
#loc98 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":95:21)
#loc99 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":100:35)
#loc100 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":100:59)
#loc101 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":100:66)
#loc102 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":100:64)
#loc103 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":100:50)
#loc104 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":100:73)
#loc105 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":100:76)
#loc106 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":100:87)
#loc107 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":100:92)
#loc108 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":100:107)
#loc109 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":100:117)
#loc110 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":100:118)
#loc111 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":100:121)
#loc112 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":100:30)
#loc113 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":100:17)
#loc114 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":100:122)
#loc115 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":101:17)
#loc116 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":104:17)
#loc117 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":101:21)
#loc118 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":101:35)
#loc119 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":101:48)
#loc120 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":101:51)
#loc121 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":101:65)
#loc122 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":102:17)
#loc123 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":103:21)
#loc124 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":106:61)
#loc125 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":106:17)
#loc126 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":106:22)
#loc127 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":106:32)
#loc128 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":106:45)
#loc129 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":106:56)
#loc130 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":106:57)
#loc131 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":108:34)
#loc132 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":108:40)
#loc133 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":108:27)
#loc134 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":108:17)
#loc135 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":108:44)
#loc136 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":109:17)
#loc137 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":112:17)
#loc138 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":109:21)
#loc139 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":110:17)
#loc140 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":111:32)
#loc141 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":111:22)
#loc142 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":111:21)
#loc143 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":113:34)
#loc144 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":113:40)
#loc145 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":113:27)
#loc146 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":113:17)
#loc147 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":113:44)
#loc148 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":114:17)
#loc149 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":117:17)
#loc150 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":114:21)
#loc151 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":115:17)
#loc152 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":116:32)
#loc153 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":116:22)
#loc154 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":116:21)
#loc155 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":119:20)
#loc156 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":120:13)
#loc157 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":123:13)
#loc158 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":120:17)
#loc159 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":120:34)
#loc160 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":121:13)
#loc161 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":122:30)
#loc162 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":122:17)
#loc163 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":131:21)
#loc164 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":131:10)
#loc165 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":131:9)
#loc166 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":133:5)
#loc167 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":144:5)
#loc168 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":134:9)
#loc169 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":134:24)
#loc170 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":134:23)
#loc171 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":135:9)
#loc172 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":143:9)
#loc173 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":136:13)
#loc174 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":136:27)
#loc175 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":138:21)
#loc176 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":138:27)
#loc177 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":138:13)
#loc178 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":138:38)
#loc179 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":139:13)
#loc180 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":142:13)
#loc181 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":139:17)
#loc182 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":139:26)
#loc183 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":140:13)
#loc184 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":141:24)
#loc185 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":141:17)
#loc186 = loc("/usr/include/string.h":149:1)
#loc187 = loc("/usr/include/string.h":150:14)
#loc188 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":166:22)
#loc189 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":152:1)
#loc190 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":182:1)
#loc191 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":154:5)
#loc192 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":154:12)
#loc193 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":155:5)
#loc194 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":155:25)
#loc195 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":156:5)
#loc196 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":156:25)
#loc197 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":157:5)
#loc198 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":157:37)
#loc199 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":158:12)
#loc200 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":158:5)
#loc201 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":159:5)
#loc202 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":169:5)
#loc203 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":160:9)
#loc204 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":160:24)
#loc205 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":160:23)
#loc206 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":166:9)
#loc207 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":166:16)
#loc208 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":168:21)
#loc209 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":168:10)
#loc210 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":168:9)
#loc211 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":170:5)
#loc212 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":181:5)
#loc213 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":171:9)
#loc214 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":171:24)
#loc215 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":171:23)
#loc216 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":172:9)
#loc217 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":180:9)
#loc218 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":173:13)
#loc219 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":173:27)
#loc220 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":175:21)
#loc221 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":175:27)
#loc222 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":175:33)
#loc223 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":175:13)
#loc224 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":175:38)
#loc225 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":176:13)
#loc226 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":179:13)
#loc227 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":176:17)
#loc228 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":176:26)
#loc229 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":177:13)
#loc230 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":178:24)
#loc231 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":178:17)
#loc232 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":184:1)
#loc233 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":187:1)
#loc234 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":186:5)
#loc235 = loc("/usr/include/stdlib.h":575:1)
#loc236 = loc("/usr/include/stdlib.h":575:41)
#loc237 = loc("/usr/include/time.h":76:1)
#loc238 = loc("/usr/include/time.h":76:38)
#loc239 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc240 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc241 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":206:15)
#loc242 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":208:15)
#loc243 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":211:15)
#loc244 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":213:15)
#loc245 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":201:1)
#loc246 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":216:1)
#loc251 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":202:1)
#loc252 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":204:27)
#loc253 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":204:22)
#loc254 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":204:5)
#loc255 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":206:5)
#loc256 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":207:5)
#loc257 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":208:5)
#loc258 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":211:5)
#loc259 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":212:5)
#loc260 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":213:5)
#loc261 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":215:12)
#loc262 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_32.cpp":215:5)
#loc263 = loc(fused[#loc1, #loc2])
#loc264 = loc(fused[#loc3, #loc4])
#loc265 = loc(fused[#loc5, #loc6])
#loc266 = loc(fused[#loc8, #loc9])
#loc267 = loc(fused[#loc10, #loc11])
#loc268 = loc(fused[#loc12, #loc13])
#loc269 = loc(fused[#loc14, #loc15])
#loc270 = loc(fused[#loc16, #loc17])
#loc271 = loc(fused[#loc18, #loc19])
#loc272 = loc(fused[#loc21, #loc22])
#loc273 = loc(fused[#loc23, #loc24])
#loc274 = loc(fused[#loc25, #loc26])
#loc275 = loc(fused[#loc27, #loc28])
#loc276 = loc(fused[#loc29, #loc30])
#loc277 = loc(fused[#loc31, #loc32])
#loc278 = loc(fused[#loc34, #loc33])
#loc279 = loc(fused[#loc35, #loc36])
#loc280 = loc(fused[#loc37, #loc38])
#loc281 = loc(fused[#loc40, #loc41])
#loc282 = loc(fused[#loc42, #loc43])
#loc283 = loc(fused[#loc44, #loc45])
#loc284 = loc(fused[#loc46, #loc47])
#loc285 = loc(fused[#loc48, #loc49])
#loc286 = loc(fused[#loc50, #loc51])
#loc287 = loc(fused[#loc54, #loc55])
#loc288 = loc(fused[#loc60, #loc61])
#loc289 = loc(fused[#loc62, #loc63])
#loc290 = loc(fused[#loc64, #loc65])
#loc291 = loc(fused[#loc66, #loc63])
#loc292 = loc(fused[#loc68, #loc69])
#loc293 = loc(fused[#loc71, #loc72])
#loc294 = loc(fused[#loc73, #loc74])
#loc295 = loc(fused[#loc77, #loc75])
#loc296 = loc(fused[#loc81, #loc82])
#loc297 = loc(fused[#loc86, #loc87])
#loc298 = loc(fused[#loc88, #loc89])
#loc299 = loc(fused[#loc91, #loc92])
#loc300 = loc(fused[#loc93, #loc94])
#loc301 = loc(fused[#loc95, #loc96])
#loc302 = loc(fused[#loc97, #loc89])
#loc303 = loc(fused[#loc103, #loc104])
#loc304 = loc(fused[#loc105, #loc106])
#loc305 = loc(fused[#loc107, #loc108])
#loc306 = loc(fused[#loc107, #loc109])
#loc307 = loc(fused[#loc105, #loc110])
#loc308 = loc(fused[#loc113, #loc114])
#loc309 = loc(fused[#loc115, #loc116])
#loc310 = loc(fused[#loc117, #loc118])
#loc311 = loc(fused[#loc120, #loc121])
#loc312 = loc(fused[#loc122, #loc116])
#loc313 = loc(fused[#loc128, #loc129])
#loc314 = loc(fused[#loc127, #loc129])
#loc315 = loc(fused[#loc126, #loc129])
#loc316 = loc(fused[#loc125, #loc124])
#loc317 = loc(fused[#loc134, #loc135])
#loc318 = loc(fused[#loc136, #loc137])
#loc319 = loc(fused[#loc139, #loc137])
#loc320 = loc(fused[#loc142, #loc140])
#loc321 = loc(fused[#loc146, #loc147])
#loc322 = loc(fused[#loc148, #loc149])
#loc323 = loc(fused[#loc151, #loc149])
#loc324 = loc(fused[#loc154, #loc152])
#loc325 = loc(fused[#loc156, #loc157])
#loc326 = loc(fused[#loc158, #loc159])
#loc327 = loc(fused[#loc160, #loc157])
#loc328 = loc(fused[#loc165, #loc163])
#loc329 = loc(fused[#loc166, #loc167])
#loc330 = loc(fused[#loc168, #loc169])
#loc331 = loc(fused[#loc171, #loc172])
#loc332 = loc(fused[#loc173, #loc174])
#loc333 = loc(fused[#loc177, #loc178])
#loc334 = loc(fused[#loc179, #loc180])
#loc335 = loc(fused[#loc181, #loc182])
#loc336 = loc(fused[#loc183, #loc180])
#loc337 = loc(fused[#loc186, #loc187])
#loc338 = loc(fused[#loc189, #loc190])
#loc339 = loc(fused[#loc191, #loc192])
#loc340 = loc(fused[#loc193, #loc194])
#loc341 = loc(fused[#loc195, #loc196])
#loc342 = loc(fused[#loc197, #loc198])
#loc343 = loc(fused[#loc200, #loc199])
#loc344 = loc(fused[#loc201, #loc202])
#loc345 = loc(fused[#loc203, #loc204])
#loc346 = loc(fused[#loc210, #loc208])
#loc347 = loc(fused[#loc211, #loc212])
#loc348 = loc(fused[#loc213, #loc214])
#loc349 = loc(fused[#loc216, #loc217])
#loc350 = loc(fused[#loc218, #loc219])
#loc351 = loc(fused[#loc223, #loc224])
#loc352 = loc(fused[#loc225, #loc226])
#loc353 = loc(fused[#loc227, #loc228])
#loc354 = loc(fused[#loc229, #loc226])
#loc355 = loc(fused[#loc232, #loc233])
#loc356 = loc(fused[#loc235, #loc236])
#loc357 = loc(fused[#loc237, #loc238])
#loc358 = loc(fused[#loc239, #loc240])
#loc359 = loc(fused[#loc245, #loc246])
#loc362 = loc(fused[#loc262, #loc261])
