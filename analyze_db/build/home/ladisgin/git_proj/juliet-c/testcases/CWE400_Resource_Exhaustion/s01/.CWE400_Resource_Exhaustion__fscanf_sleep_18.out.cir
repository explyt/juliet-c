!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc45 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":106:10)
#loc46 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":106:14)
#loc47 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":106:20)
#loc48 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":106:32)
#true = #cir.bool<true> : !cir.bool
#loc129 = loc(fused[#loc45, #loc46])
#loc130 = loc(fused[#loc47, #loc48])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__fscanf_sleep_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc114)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc115)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @usleep(!u32i) -> !s32i loc(#loc116)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc117)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Sleep time possibly too long\00" : !cir.array<!s8i x 29>> : !cir.array<!s8i x 29> {alignment = 1 : i64} loc(#loc10)
  cir.func no_proto @CWE400_Resource_Exhaustion__fscanf_sleep_18_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc119)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc15)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc16)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc120)
    cir.goto "source" loc(#loc121)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc20)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc21)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc115)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc22)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc21)
    cir.goto "sink" loc(#loc122)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc25)
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc26)
    %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc26)
    %11 = cir.call @usleep(%10) : (!u32i) -> !s32i loc(#loc27)
    %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc10)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc10)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc28)
    cir.return loc(#loc12)
  } loc(#loc118)
  cir.func no_proto @CWE400_Resource_Exhaustion__fscanf_sleep_18_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc124)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc31)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc125)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc33)
    cir.return loc(#loc30)
  } loc(#loc123)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc126)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc127)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc39)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc40)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc41)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc42)
  cir.func @main(%arg0: !s32i loc(fused[#loc45, #loc46]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc47, #loc48])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc129)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc130)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc44)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc49)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc49)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc50)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc51)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc51)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc52)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc39)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc39)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc53)
    %8 = cir.get_global @CWE400_Resource_Exhaustion__fscanf_sleep_18_good : !cir.ptr<!cir.func<!void ()>> loc(#loc131)
    cir.call @CWE400_Resource_Exhaustion__fscanf_sleep_18_good() : () -> () loc(#loc54)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc40)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc40)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc56)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc41)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc41)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc57)
    %13 = cir.get_global @CWE400_Resource_Exhaustion__fscanf_sleep_18_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc132)
    cir.call @CWE400_Resource_Exhaustion__fscanf_sleep_18_bad() : () -> () loc(#loc58)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc42)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc61)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc133)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc133)
    cir.return %17 : !s32i loc(#loc133)
  } loc(#loc128)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Sleep time OK\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc63)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Sleep time too long\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc64)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc135)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc69)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc70)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc136)
    cir.goto "source" loc(#loc137)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc74)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc75)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc115)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc76)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc77)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc77)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc75)
    cir.goto "sink" loc(#loc138)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc80)
    cir.scope {
      %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc83)
      %10 = cir.const #cir.int<0> : !s32i loc(#loc84)
      %11 = cir.cmp(gt, %9, %10) : !s32i, !cir.bool loc(#loc140)
      %12 = cir.ternary(%11, true {
        %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc86)
        %14 = cir.const #cir.int<2000> : !s32i loc(#loc87)
        %15 = cir.cmp(le, %13, %14) : !s32i, !cir.bool loc(#loc141)
        %16 = cir.ternary(%15, true {
          %17 = cir.const #true loc(#loc85)
          cir.yield %17 : !cir.bool loc(#loc85)
        }, false {
          %17 = cir.const #false loc(#loc85)
          cir.yield %17 : !cir.bool loc(#loc85)
        }) : (!cir.bool) -> !cir.bool loc(#loc85)
        cir.yield %16 : !cir.bool loc(#loc85)
      }, false {
        %13 = cir.const #false loc(#loc85)
        cir.yield %13 : !cir.bool loc(#loc85)
      }) : (!cir.bool) -> !cir.bool loc(#loc85)
      cir.if %12 {
        %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc91)
        %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc91)
        %15 = cir.call @usleep(%14) : (!u32i) -> !s32i loc(#loc92)
        %16 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc63)
        %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc63)
        cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc93)
      } else {
        %13 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc64)
        %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc64)
        cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc94)
      } loc(#loc142)
    } loc(#loc139)
    cir.return loc(#loc66)
  } loc(#loc134)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc144)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc99)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc100)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc145)
    cir.goto "source" loc(#loc146)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc104)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc105)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc147)
    cir.goto "sink" loc(#loc148)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc109)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc110)
    %5 = cir.cast(integral, %4 : !s32i), !u32i loc(#loc110)
    %6 = cir.call @usleep(%5) : (!u32i) -> !s32i loc(#loc111)
    %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc112)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc112)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc113)
    cir.return loc(#loc96)
  } loc(#loc143)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__fscanf_sleep_18.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":38:19)
#loc6 = loc("/usr/include/unistd.h":480:1)
#loc7 = loc("/usr/include/unistd.h":480:43)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":43:15)
#loc11 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":30:1)
#loc12 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":44:1)
#loc13 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":32:5)
#loc14 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":32:9)
#loc15 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":34:14)
#loc16 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":34:13)
#loc17 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":34:5)
#loc18 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":35:5)
#loc19 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":35:10)
#loc20 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":36:1)
#loc21 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":38:5)
#loc22 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":38:12)
#loc23 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":39:5)
#loc24 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":39:10)
#loc25 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":40:1)
#loc26 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":42:11)
#loc27 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":42:5)
#loc28 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":43:5)
#loc29 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":91:1)
#loc30 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":95:1)
#loc31 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":93:5)
#loc32 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":93:13)
#loc33 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":94:5)
#loc34 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":94:13)
#loc35 = loc("/usr/include/stdlib.h":575:1)
#loc36 = loc("/usr/include/stdlib.h":575:41)
#loc37 = loc("/usr/include/time.h":76:1)
#loc38 = loc("/usr/include/time.h":76:38)
#loc39 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":111:15)
#loc40 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":113:15)
#loc41 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":116:15)
#loc42 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":118:15)
#loc43 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":106:1)
#loc44 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":121:1)
#loc49 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":107:1)
#loc50 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":109:27)
#loc51 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":109:22)
#loc52 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":109:5)
#loc53 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":111:5)
#loc54 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":112:5)
#loc55 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":112:54)
#loc56 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":113:5)
#loc57 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":116:5)
#loc58 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":117:5)
#loc59 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":117:53)
#loc60 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":118:5)
#loc61 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":120:12)
#loc62 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":120:5)
#loc63 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":66:19)
#loc64 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":70:19)
#loc65 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":51:1)
#loc66 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":72:1)
#loc67 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":53:5)
#loc68 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":53:9)
#loc69 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":55:14)
#loc70 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":55:13)
#loc71 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":55:5)
#loc72 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":56:5)
#loc73 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":56:10)
#loc74 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":57:1)
#loc75 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":59:5)
#loc76 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":59:12)
#loc77 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":59:19)
#loc78 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":60:5)
#loc79 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":60:10)
#loc80 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":61:1)
#loc81 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":63:5)
#loc82 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":71:5)
#loc83 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":63:9)
#loc84 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":63:17)
#loc85 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":63:19)
#loc86 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":63:22)
#loc87 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":63:31)
#loc88 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":64:5)
#loc89 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":67:5)
#loc90 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":69:5)
#loc91 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":65:15)
#loc92 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":65:9)
#loc93 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":66:9)
#loc94 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":70:9)
#loc95 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":75:1)
#loc96 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":89:1)
#loc97 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":77:5)
#loc98 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":77:9)
#loc99 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":79:14)
#loc100 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":79:13)
#loc101 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":79:5)
#loc102 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":80:5)
#loc103 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":80:10)
#loc104 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":81:1)
#loc105 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":83:13)
#loc106 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":83:5)
#loc107 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":84:5)
#loc108 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":84:10)
#loc109 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":85:1)
#loc110 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":87:11)
#loc111 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":87:5)
#loc112 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":88:15)
#loc113 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_18.c":88:5)
#loc114 = loc(fused[#loc1, #loc2])
#loc115 = loc(fused[#loc3, #loc4])
#loc116 = loc(fused[#loc6, #loc7])
#loc117 = loc(fused[#loc8, #loc9])
#loc118 = loc(fused[#loc11, #loc12])
#loc119 = loc(fused[#loc13, #loc14])
#loc120 = loc(fused[#loc17, #loc15])
#loc121 = loc(fused[#loc18, #loc19])
#loc122 = loc(fused[#loc23, #loc24])
#loc123 = loc(fused[#loc29, #loc30])
#loc124 = loc(fused[#loc31, #loc32])
#loc125 = loc(fused[#loc33, #loc34])
#loc126 = loc(fused[#loc35, #loc36])
#loc127 = loc(fused[#loc37, #loc38])
#loc128 = loc(fused[#loc43, #loc44])
#loc131 = loc(fused[#loc54, #loc55])
#loc132 = loc(fused[#loc58, #loc59])
#loc133 = loc(fused[#loc62, #loc61])
#loc134 = loc(fused[#loc65, #loc66])
#loc135 = loc(fused[#loc67, #loc68])
#loc136 = loc(fused[#loc71, #loc69])
#loc137 = loc(fused[#loc72, #loc73])
#loc138 = loc(fused[#loc78, #loc79])
#loc139 = loc(fused[#loc81, #loc82])
#loc140 = loc(fused[#loc83, #loc84])
#loc141 = loc(fused[#loc86, #loc87])
#loc142 = loc(fused[#loc88, #loc89, #loc90, #loc82])
#loc143 = loc(fused[#loc95, #loc96])
#loc144 = loc(fused[#loc97, #loc98])
#loc145 = loc(fused[#loc101, #loc99])
#loc146 = loc(fused[#loc102, #loc103])
#loc147 = loc(fused[#loc106, #loc105])
#loc148 = loc(fused[#loc107, #loc108])
