!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
module @"/workspaces/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrue(...) -> !s32i loc(#loc180)
  cir.func private @printDoubleLine(!cir.double) loc(#loc181)
  cir.func no_proto @CWE457_Use_of_Uninitialized_Variable__double_pointer_11_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc183)
    cir.br ^bb1 loc(#loc184)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc185)
    %2 = cir.cast(bitcast, %1 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc185)
    %3 = cir.call %2() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc11)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc11)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc186)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc10)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc10)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc187)
  ^bb5:  // pred: ^bb4
    %5 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc188)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc188)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc16)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc16)
    cir.brcond %8 ^bb6, ^bb7 loc(#loc189)
  ^bb6:  // pred: ^bb5
    %9 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc19)
    %10 = cir.load %9 : !cir.ptr<!cir.double>, !cir.double loc(#loc20)
    cir.call @printDoubleLine(%10) : (!cir.double) -> () loc(#loc21)
    cir.br ^bb7 loc(#loc15)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc15)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc6)
  } loc(#loc182)
  cir.func no_proto @CWE457_Use_of_Uninitialized_Variable__double_pointer_11_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc191)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc24)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc192)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc26)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc193)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc28)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc194)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc30)
    cir.return loc(#loc23)
  } loc(#loc190)
  cir.func no_proto private @globalReturnsFalse(...) -> !s32i loc(#loc195)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc196)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc36)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc197)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc198)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc200)
    cir.br ^bb1 loc(#loc201)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc202)
    %2 = cir.cast(bitcast, %1 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc202)
    %3 = cir.call %2() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc47)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc47)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc203)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc46)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc46)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc204)
  ^bb5:  // pred: ^bb4
    %5 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc205)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc205)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc52)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc52)
    cir.brcond %8 ^bb6, ^bb7 loc(#loc206)
  ^bb6:  // pred: ^bb5
    %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc36)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc36)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc57)
    cir.br ^bb12 loc(#loc55)
  ^bb7:  // pred: ^bb5
    %11 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc58)
    %12 = cir.const #cir.int<8> : !u64i loc(#loc207)
    %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc58)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc208)
    cir.store %14, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc209)
    cir.br ^bb8 loc(#loc210)
  ^bb8:  // pred: ^bb7
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc65)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc66)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc66)
    %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!cir.double>, !cir.bool loc(#loc211)
    cir.brcond %18 ^bb9, ^bb10 loc(#loc212)
  ^bb9:  // pred: ^bb8
    %19 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc68)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc69)
    %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc70)
    cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr1) loc(#loc68)
    cir.br ^bb10 loc(#loc64)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc64)
  ^bb11:  // pred: ^bb10
    %22 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc71)
    %23 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc72)
    cir.store %22, %23 : !cir.double, !cir.ptr<!cir.double> loc(#loc213)
    %24 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc74)
    %25 = cir.load %24 : !cir.ptr<!cir.double>, !cir.double loc(#loc75)
    cir.call @printDoubleLine(%25) : (!cir.double) -> () loc(#loc76)
    cir.br ^bb12 loc(#loc51)
  ^bb12:  // 2 preds: ^bb6, ^bb11
    cir.br ^bb13 loc(#loc51)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc42)
  } loc(#loc199)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc215)
    cir.br ^bb1 loc(#loc216)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc217)
    %2 = cir.cast(bitcast, %1 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc217)
    %3 = cir.call %2() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc83)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc83)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc218)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc82)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc82)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc219)
  ^bb5:  // pred: ^bb4
    %5 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc220)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc220)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc88)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc88)
    cir.brcond %8 ^bb6, ^bb11 loc(#loc221)
  ^bb6:  // pred: ^bb5
    %9 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc91)
    %10 = cir.const #cir.int<8> : !u64i loc(#loc222)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc91)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc223)
    cir.store %12, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc224)
    cir.br ^bb7 loc(#loc225)
  ^bb7:  // pred: ^bb6
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc98)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc99)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc99)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!cir.double>, !cir.bool loc(#loc226)
    cir.brcond %16 ^bb8, ^bb9 loc(#loc227)
  ^bb8:  // pred: ^bb7
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc101)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc102)
    %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc103)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr1) loc(#loc101)
    cir.br ^bb9 loc(#loc97)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc97)
  ^bb10:  // pred: ^bb9
    %20 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc104)
    %21 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc105)
    cir.store %20, %21 : !cir.double, !cir.ptr<!cir.double> loc(#loc228)
    %22 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc107)
    %23 = cir.load %22 : !cir.ptr<!cir.double>, !cir.double loc(#loc108)
    cir.call @printDoubleLine(%23) : (!cir.double) -> () loc(#loc109)
    cir.br ^bb11 loc(#loc87)
  ^bb11:  // 2 preds: ^bb5, ^bb10
    cir.br ^bb12 loc(#loc87)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc78)
  } loc(#loc214)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc230)
    cir.br ^bb1 loc(#loc231)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc232)
    %2 = cir.cast(bitcast, %1 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc232)
    %3 = cir.call %2() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc116)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc116)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc233)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc121)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc121)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc122)
    cir.br ^bb8 loc(#loc119)
  ^bb3:  // pred: ^bb1
    %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc123)
    %8 = cir.const #cir.int<8> : !u64i loc(#loc234)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc123)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc235)
    cir.store %10, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc236)
    cir.br ^bb4 loc(#loc237)
  ^bb4:  // pred: ^bb3
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc130)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc131)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc131)
    %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!cir.double>, !cir.bool loc(#loc238)
    cir.brcond %14 ^bb5, ^bb6 loc(#loc239)
  ^bb5:  // pred: ^bb4
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc133)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc134)
    %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc135)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr1) loc(#loc133)
    cir.br ^bb6 loc(#loc129)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc129)
  ^bb7:  // pred: ^bb6
    %18 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc136)
    %19 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc137)
    cir.store %18, %19 : !cir.double, !cir.ptr<!cir.double> loc(#loc240)
    cir.br ^bb8 loc(#loc115)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc115)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc241)
  ^bb10:  // pred: ^bb9
    %20 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc242)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc242)
    %22 = cir.call %21() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc141)
    %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc141)
    cir.brcond %23 ^bb11, ^bb12 loc(#loc243)
  ^bb11:  // pred: ^bb10
    %24 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc144)
    %25 = cir.load %24 : !cir.ptr<!cir.double>, !cir.double loc(#loc145)
    cir.call @printDoubleLine(%25) : (!cir.double) -> () loc(#loc146)
    cir.br ^bb12 loc(#loc140)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc140)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc111)
  } loc(#loc229)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc245)
    cir.br ^bb1 loc(#loc246)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc247)
    %2 = cir.cast(bitcast, %1 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc247)
    %3 = cir.call %2() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc153)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc153)
    cir.brcond %4 ^bb2, ^bb7 loc(#loc248)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc156)
    %6 = cir.const #cir.int<8> : !u64i loc(#loc249)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc156)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc250)
    cir.store %8, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc251)
    cir.br ^bb3 loc(#loc252)
  ^bb3:  // pred: ^bb2
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc163)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc164)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc164)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!cir.double>, !cir.bool loc(#loc253)
    cir.brcond %12 ^bb4, ^bb5 loc(#loc254)
  ^bb4:  // pred: ^bb3
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc166)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc167)
    %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc168)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr1) loc(#loc166)
    cir.br ^bb5 loc(#loc162)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc162)
  ^bb6:  // pred: ^bb5
    %16 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc169)
    %17 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc170)
    cir.store %16, %17 : !cir.double, !cir.ptr<!cir.double> loc(#loc255)
    cir.br ^bb7 loc(#loc152)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc152)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc256)
  ^bb9:  // pred: ^bb8
    %18 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc257)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc257)
    %20 = cir.call %19() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc174)
    %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc174)
    cir.brcond %21 ^bb10, ^bb11 loc(#loc258)
  ^bb10:  // pred: ^bb9
    %22 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc177)
    %23 = cir.load %22 : !cir.ptr<!cir.double>, !cir.double loc(#loc178)
    cir.call @printDoubleLine(%23) : (!cir.double) -> () loc(#loc179)
    cir.br ^bb11 loc(#loc173)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc173)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc148)
  } loc(#loc244)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":38:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":38:41)
#loc5 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":24:1)
#loc6 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":37:1)
#loc7 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":26:5)
#loc8 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":26:14)
#loc9 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":27:5)
#loc10 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":31:5)
#loc11 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":27:8)
#loc12 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":27:26)
#loc13 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":28:5)
#loc14 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":32:5)
#loc15 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":36:5)
#loc16 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":32:8)
#loc17 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":32:26)
#loc18 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":33:5)
#loc19 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":35:26)
#loc20 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":35:25)
#loc21 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":35:9)
#loc22 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":131:1)
#loc23 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":137:1)
#loc24 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":133:5)
#loc25 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":133:14)
#loc26 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":134:5)
#loc27 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":134:14)
#loc28 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":135:5)
#loc29 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":135:14)
#loc30 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":136:5)
#loc31 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":136:14)
#loc32 = loc("../../../testcasesupport/std_testcase_io.h":50:1)
#loc33 = loc("../../../testcasesupport/std_testcase_io.h":50:24)
#loc34 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc35 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc36 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":55:19)
#loc37 = loc("/usr/include/stdlib.h":672:1)
#loc38 = loc("/usr/include/stdlib.h":672:45)
#loc39 = loc("/usr/include/stdlib.h":756:1)
#loc40 = loc("/usr/include/stdlib.h":756:70)
#loc41 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":44:1)
#loc42 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":66:1)
#loc43 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":46:5)
#loc44 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":46:14)
#loc45 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":47:5)
#loc46 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":51:5)
#loc47 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":47:8)
#loc48 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":47:26)
#loc49 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":48:5)
#loc50 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":52:5)
#loc51 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":65:5)
#loc52 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":52:8)
#loc53 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":52:27)
#loc54 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":53:5)
#loc55 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":56:5)
#loc56 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":58:5)
#loc57 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":55:9)
#loc58 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":61:26)
#loc59 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":61:33)
#loc60 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":61:46)
#loc61 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":61:47)
#loc62 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":61:9)
#loc63 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":62:9)
#loc64 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":62:37)
#loc65 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":62:13)
#loc66 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":62:21)
#loc67 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":62:27)
#loc68 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":62:28)
#loc69 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":62:34)
#loc70 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":62:33)
#loc71 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":63:17)
#loc72 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":63:10)
#loc73 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":63:9)
#loc74 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":64:26)
#loc75 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":64:25)
#loc76 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":64:9)
#loc77 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":69:1)
#loc78 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":86:1)
#loc79 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":71:5)
#loc80 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":71:14)
#loc81 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":72:5)
#loc82 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":76:5)
#loc83 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":72:8)
#loc84 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":72:26)
#loc85 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":73:5)
#loc86 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":77:5)
#loc87 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":85:5)
#loc88 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":77:8)
#loc89 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":77:26)
#loc90 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":78:5)
#loc91 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":81:26)
#loc92 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":81:33)
#loc93 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":81:46)
#loc94 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":81:47)
#loc95 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":81:9)
#loc96 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":82:9)
#loc97 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":82:37)
#loc98 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":82:13)
#loc99 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":82:21)
#loc100 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":82:27)
#loc101 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":82:28)
#loc102 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":82:34)
#loc103 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":82:33)
#loc104 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":83:17)
#loc105 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":83:10)
#loc106 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":83:9)
#loc107 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":84:26)
#loc108 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":84:25)
#loc109 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":84:9)
#loc110 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":89:1)
#loc111 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":110:1)
#loc112 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":91:5)
#loc113 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":91:14)
#loc114 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":92:5)
#loc115 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":104:5)
#loc116 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":92:8)
#loc117 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":92:27)
#loc118 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":93:5)
#loc119 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":96:5)
#loc120 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":98:5)
#loc121 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":95:19)
#loc122 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":95:9)
#loc123 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":101:26)
#loc124 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":101:33)
#loc125 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":101:46)
#loc126 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":101:47)
#loc127 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":101:9)
#loc128 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":102:9)
#loc129 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":102:37)
#loc130 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":102:13)
#loc131 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":102:21)
#loc132 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":102:27)
#loc133 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":102:28)
#loc134 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":102:34)
#loc135 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":102:33)
#loc136 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":103:17)
#loc137 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":103:10)
#loc138 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":103:9)
#loc139 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":105:5)
#loc140 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":109:5)
#loc141 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":105:8)
#loc142 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":105:26)
#loc143 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":106:5)
#loc144 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":108:26)
#loc145 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":108:25)
#loc146 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":108:9)
#loc147 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":113:1)
#loc148 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":129:1)
#loc149 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":115:5)
#loc150 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":115:14)
#loc151 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":116:5)
#loc152 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":123:5)
#loc153 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":116:8)
#loc154 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":116:26)
#loc155 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":117:5)
#loc156 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":120:26)
#loc157 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":120:33)
#loc158 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":120:46)
#loc159 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":120:47)
#loc160 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":120:9)
#loc161 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":121:9)
#loc162 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":121:37)
#loc163 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":121:13)
#loc164 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":121:21)
#loc165 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":121:27)
#loc166 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":121:28)
#loc167 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":121:34)
#loc168 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":121:33)
#loc169 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":122:17)
#loc170 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":122:10)
#loc171 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":122:9)
#loc172 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":124:5)
#loc173 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":128:5)
#loc174 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":124:8)
#loc175 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":124:26)
#loc176 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":125:5)
#loc177 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":127:26)
#loc178 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":127:25)
#loc179 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_11.c":127:9)
#loc180 = loc(fused[#loc1, #loc2])
#loc181 = loc(fused[#loc3, #loc4])
#loc182 = loc(fused[#loc5, #loc6])
#loc183 = loc(fused[#loc7, #loc8])
#loc184 = loc(fused[#loc9, #loc10])
#loc185 = loc(fused[#loc11, #loc12])
#loc186 = loc(fused[#loc13, #loc10])
#loc187 = loc(fused[#loc14, #loc15])
#loc188 = loc(fused[#loc16, #loc17])
#loc189 = loc(fused[#loc18, #loc15])
#loc190 = loc(fused[#loc22, #loc23])
#loc191 = loc(fused[#loc24, #loc25])
#loc192 = loc(fused[#loc26, #loc27])
#loc193 = loc(fused[#loc28, #loc29])
#loc194 = loc(fused[#loc30, #loc31])
#loc195 = loc(fused[#loc32, #loc33])
#loc196 = loc(fused[#loc34, #loc35])
#loc197 = loc(fused[#loc37, #loc38])
#loc198 = loc(fused[#loc39, #loc40])
#loc199 = loc(fused[#loc41, #loc42])
#loc200 = loc(fused[#loc43, #loc44])
#loc201 = loc(fused[#loc45, #loc46])
#loc202 = loc(fused[#loc47, #loc48])
#loc203 = loc(fused[#loc49, #loc46])
#loc204 = loc(fused[#loc50, #loc51])
#loc205 = loc(fused[#loc52, #loc53])
#loc206 = loc(fused[#loc54, #loc55, #loc56, #loc51])
#loc207 = loc(fused[#loc59, #loc60])
#loc208 = loc(fused[#loc58, #loc61])
#loc209 = loc(fused[#loc62, #loc61])
#loc210 = loc(fused[#loc63, #loc64])
#loc211 = loc(fused[#loc65, #loc66])
#loc212 = loc(fused[#loc67, #loc64])
#loc213 = loc(fused[#loc73, #loc71])
#loc214 = loc(fused[#loc77, #loc78])
#loc215 = loc(fused[#loc79, #loc80])
#loc216 = loc(fused[#loc81, #loc82])
#loc217 = loc(fused[#loc83, #loc84])
#loc218 = loc(fused[#loc85, #loc82])
#loc219 = loc(fused[#loc86, #loc87])
#loc220 = loc(fused[#loc88, #loc89])
#loc221 = loc(fused[#loc90, #loc87])
#loc222 = loc(fused[#loc92, #loc93])
#loc223 = loc(fused[#loc91, #loc94])
#loc224 = loc(fused[#loc95, #loc94])
#loc225 = loc(fused[#loc96, #loc97])
#loc226 = loc(fused[#loc98, #loc99])
#loc227 = loc(fused[#loc100, #loc97])
#loc228 = loc(fused[#loc106, #loc104])
#loc229 = loc(fused[#loc110, #loc111])
#loc230 = loc(fused[#loc112, #loc113])
#loc231 = loc(fused[#loc114, #loc115])
#loc232 = loc(fused[#loc116, #loc117])
#loc233 = loc(fused[#loc118, #loc119, #loc120, #loc115])
#loc234 = loc(fused[#loc124, #loc125])
#loc235 = loc(fused[#loc123, #loc126])
#loc236 = loc(fused[#loc127, #loc126])
#loc237 = loc(fused[#loc128, #loc129])
#loc238 = loc(fused[#loc130, #loc131])
#loc239 = loc(fused[#loc132, #loc129])
#loc240 = loc(fused[#loc138, #loc136])
#loc241 = loc(fused[#loc139, #loc140])
#loc242 = loc(fused[#loc141, #loc142])
#loc243 = loc(fused[#loc143, #loc140])
#loc244 = loc(fused[#loc147, #loc148])
#loc245 = loc(fused[#loc149, #loc150])
#loc246 = loc(fused[#loc151, #loc152])
#loc247 = loc(fused[#loc153, #loc154])
#loc248 = loc(fused[#loc155, #loc152])
#loc249 = loc(fused[#loc157, #loc158])
#loc250 = loc(fused[#loc156, #loc159])
#loc251 = loc(fused[#loc160, #loc159])
#loc252 = loc(fused[#loc161, #loc162])
#loc253 = loc(fused[#loc163, #loc164])
#loc254 = loc(fused[#loc165, #loc162])
#loc255 = loc(fused[#loc171, #loc169])
#loc256 = loc(fused[#loc172, #loc173])
#loc257 = loc(fused[#loc174, #loc175])
#loc258 = loc(fused[#loc176, #loc173])
