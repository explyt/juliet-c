!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc233 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":190:10)
#loc234 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":190:14)
#loc235 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":190:20)
#loc236 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":190:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc342 = loc(fused[#loc233, #loc234])
#loc343 = loc(fused[#loc235, #loc236])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const._ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17L7goodG2BEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc249)
  cir.global "private" constant cir_private @__const._ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_173badEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc250)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc251)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc252)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc253)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc11)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc254)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc255)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc256)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc257)
  cir.func private @close(!s32i) -> !s32i loc(#loc258)
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc259)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"wb+\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc24)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc260)
  cir.func @_ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_173badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc262)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc263)
    %2 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc250)
    %3 = cir.get_global @__const._ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_173badEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc250)
    cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc250)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc33)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc264)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc37)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc266)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc39)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc40)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc267)
        cir.condition(%8) loc(#loc267)
      } body {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc269)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc270)
          %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc271)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc272)
          %10 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc273)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc50)
          %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc50)
          cir.store %12, %9 : !s32i, !cir.ptr<!s32i> loc(#loc272)
          %13 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc53)
          %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
          %15 = cir.call @strlen(%14) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc53)
          cir.store %15, %10 : !u64i, !cir.ptr<!u64i> loc(#loc273)
          cir.scope {
            cir.do {
              %16 = cir.const #cir.int<2> : !s32i loc(#loc57)
              %17 = cir.const #cir.int<1> : !u32i loc(#loc58)
              %18 = cir.cast(integral, %17 : !u32i), !s32i loc(#loc58)
              %19 = cir.const #cir.int<6> : !u32i loc(#loc59)
              %20 = cir.cast(integral, %19 : !u32i), !s32i loc(#loc59)
              %21 = cir.call @socket(%16, %18, %20) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc60)
              cir.store %21, %9 : !s32i, !cir.ptr<!s32i> loc(#loc275)
              cir.scope {
                %71 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc65)
                %72 = cir.const #cir.int<1> : !s32i loc(#loc66)
                %73 = cir.unary(minus, %72) : !s32i, !s32i loc(#loc66)
                %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc277)
                cir.if %74 {
                  cir.break loc(#loc68)
                } loc(#loc278)
              } loc(#loc276)
              %22 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc279)
              %23 = cir.const #cir.int<0> : !s32i loc(#loc71)
              %24 = cir.const #cir.int<16> : !u64i loc(#loc280)
              cir.libc.memset %24 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc281)
              %25 = cir.const #cir.int<2> : !s32i loc(#loc76)
              %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc76)
              %27 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc77)
              cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc282)
              %28 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc11)
              %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc11)
              %30 = cir.call @inet_addr(%29) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc79)
              %31 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc80)
              %32 = cir.get_member %31[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc81)
              cir.store %30, %32 : !u32i, !cir.ptr<!u32i> loc(#loc283)
              %33 = cir.const #cir.int<27015> : !s32i loc(#loc84)
              %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc84)
              %35 = cir.call @htons(%34) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc85)
              %36 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc86)
              cir.store %35, %36 : !u16i, !cir.ptr<!u16i> loc(#loc284)
              cir.scope {
                %71 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc91)
                %72 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc286)
                %73 = cir.const #cir.int<16> : !u64i loc(#loc287)
                %74 = cir.cast(integral, %73 : !u64i), !u32i loc(#loc287)
                %75 = cir.call @connect(%71, %72, %74) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc96)
                %76 = cir.const #cir.int<1> : !s32i loc(#loc97)
                %77 = cir.unary(minus, %76) : !s32i, !s32i loc(#loc97)
                %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc288)
                cir.if %78 {
                  cir.break loc(#loc99)
                } loc(#loc289)
              } loc(#loc285)
              %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc100)
              %38 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc101)
              %39 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc102)
              %40 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %39 : !u64i), !cir.ptr<!s8i> loc(#loc103)
              %41 = cir.cast(bitcast, %40 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc290)
              %42 = cir.const #cir.int<1> : !u64i loc(#loc291)
              %43 = cir.const #cir.int<4096> : !s32i loc(#loc108)
              %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc108)
              %45 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc109)
              %46 = cir.binop(sub, %44, %45) : !u64i loc(#loc292)
              %47 = cir.const #cir.int<1> : !s32i loc(#loc110)
              %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc110)
              %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc293)
              %50 = cir.binop(mul, %42, %49) : !u64i loc(#loc294)
              %51 = cir.const #cir.int<0> : !s32i loc(#loc112)
              %52 = cir.call @recv(%37, %41, %50, %51) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc113)
              %53 = cir.cast(integral, %52 : !s64i), !s32i loc(#loc113)
              cir.store %53, %6 : !s32i, !cir.ptr<!s32i> loc(#loc295)
              cir.scope {
                %71 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc118)
                %72 = cir.const #cir.int<1> : !s32i loc(#loc119)
                %73 = cir.unary(minus, %72) : !s32i, !s32i loc(#loc119)
                %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc297)
                %75 = cir.ternary(%74, true {
                  %76 = cir.const #true loc(#loc120)
                  cir.yield %76 : !cir.bool loc(#loc120)
                }, false {
                  %76 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc121)
                  %77 = cir.const #cir.int<0> : !s32i loc(#loc122)
                  %78 = cir.cmp(eq, %76, %77) : !s32i, !cir.bool loc(#loc298)
                  %79 = cir.ternary(%78, true {
                    %80 = cir.const #true loc(#loc120)
                    cir.yield %80 : !cir.bool loc(#loc120)
                  }, false {
                    %80 = cir.const #false loc(#loc120)
                    cir.yield %80 : !cir.bool loc(#loc120)
                  }) : (!cir.bool) -> !cir.bool loc(#loc120)
                  cir.yield %79 : !cir.bool loc(#loc120)
                }) : (!cir.bool) -> !cir.bool loc(#loc120)
                cir.if %75 {
                  cir.break loc(#loc124)
                } loc(#loc299)
              } loc(#loc296)
              %54 = cir.const #cir.int<0> : !s8i loc(#loc125)
              %55 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
              %56 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc127)
              %57 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc128)
              %58 = cir.cast(integral, %57 : !s32i), !u64i loc(#loc128)
              %59 = cir.const #cir.int<1> : !u64i loc(#loc300)
              %60 = cir.binop(div, %58, %59) : !u64i loc(#loc301)
              %61 = cir.binop(add, %56, %60) : !u64i loc(#loc302)
              %62 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %61 : !u64i), !cir.ptr<!s8i> loc(#loc131)
              cir.store %54, %62 : !s8i, !cir.ptr<!s8i> loc(#loc303)
              %63 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
              %64 = cir.const #cir.int<13> : !s8i loc(#loc133)
              %65 = cir.cast(integral, %64 : !s8i), !s32i loc(#loc133)
              %66 = cir.call @strchr(%63, %65) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc134)
              cir.store %66, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc304)
              cir.scope {
                %71 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
                %72 = cir.cast(ptr_to_bool, %71 : !cir.ptr<!s8i>), !cir.bool loc(#loc139)
                cir.if %72 {
                  %73 = cir.const #cir.int<0> : !s8i loc(#loc141)
                  %74 = cir.load deref %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
                  cir.store %73, %74 : !s8i, !cir.ptr<!s8i> loc(#loc307)
                } loc(#loc306)
              } loc(#loc305)
              %67 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
              %68 = cir.const #cir.int<10> : !s8i loc(#loc145)
              %69 = cir.cast(integral, %68 : !s8i), !s32i loc(#loc145)
              %70 = cir.call @strchr(%67, %69) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc146)
              cir.store %70, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc308)
              cir.scope {
                %71 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
                %72 = cir.cast(ptr_to_bool, %71 : !cir.ptr<!s8i>), !cir.bool loc(#loc151)
                cir.if %72 {
                  %73 = cir.const #cir.int<0> : !s8i loc(#loc153)
                  %74 = cir.load deref %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
                  cir.store %73, %74 : !s8i, !cir.ptr<!s8i> loc(#loc311)
                } loc(#loc310)
              } loc(#loc309)
              cir.yield loc(#loc56)
            } while {
              %16 = cir.const #cir.int<0> : !s32i loc(#loc156)
              %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc156)
              cir.condition(%17) loc(#loc156)
            } loc(#loc274)
          } loc(#loc274)
          cir.scope {
            %16 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc159)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc160)
            %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc160)
            %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc313)
            cir.if %19 {
              %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc162)
              %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc163)
            } loc(#loc314)
          } loc(#loc312)
        } loc(#loc268)
        cir.yield loc(#loc36)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc164)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc165)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc315)
        cir.yield loc(#loc265)
      } loc(#loc265)
    } loc(#loc265)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc317)
      %6 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc169)
      cir.store %6, %5 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc317)
      %7 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc170)
      %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc171)
      %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc24)
      %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc24)
      %11 = cir.call @fopen(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc170)
      cir.store %11, %5 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc318)
      cir.scope {
        %12 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc176)
        %13 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc177)
        %14 = cir.cmp(ne, %12, %13) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc320)
        cir.if %14 {
          %15 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc179)
          %16 = cir.call @fclose(%15) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc180)
        } loc(#loc321)
      } loc(#loc319)
    } loc(#loc316)
    cir.return loc(#loc28)
  } loc(#loc261)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc322)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc183)
  cir.func internal private @_ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc324)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc325)
    %2 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc249)
    %3 = cir.get_global @__const._ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17L7goodG2BEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc249)
    cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc249)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc190)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc326)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc194)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc328)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc196)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc197)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc329)
        cir.condition(%8) loc(#loc329)
      } body {
        %6 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc198)
        %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc199)
        %8 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc183)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc183)
        %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc198)
        cir.yield loc(#loc193)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc200)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc201)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc330)
        cir.yield loc(#loc327)
      } loc(#loc327)
    } loc(#loc327)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc332)
      %6 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc205)
      cir.store %6, %5 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc332)
      %7 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc206)
      %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc207)
      %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc208)
      %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc208)
      %11 = cir.call @fopen(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc206)
      cir.store %11, %5 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc333)
      cir.scope {
        %12 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc213)
        %13 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc214)
        %14 = cir.cmp(ne, %12, %13) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc335)
        cir.if %14 {
          %15 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc216)
          %16 = cir.call @fclose(%15) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc217)
        } loc(#loc336)
      } loc(#loc334)
    } loc(#loc331)
    cir.return loc(#loc185)
  } loc(#loc323)
  cir.func @_ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_174goodEv() extra(#fn_attr1) {
    cir.call @_ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17L7goodG2BEv() : () -> () loc(#loc220)
    cir.return loc(#loc219)
  } loc(#loc337)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc338)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc339)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc340)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc227)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc228)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc229)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc230)
  cir.func @main(%arg0: !s32i loc(fused[#loc233, #loc234]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc235, #loc236])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc342)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc343)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc232)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc237)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc237)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc238)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc239)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc239)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc240)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc227)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc227)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc241)
    cir.call @_ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_174goodEv() : () -> () loc(#loc242)
    %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc228)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc228)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc243)
    %10 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc229)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc229)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc244)
    cir.call @_ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_173badEv() : () -> () loc(#loc245)
    %12 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc230)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc230)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc246)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc247)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc344)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc344)
    cir.return %15 : !s32i loc(#loc344)
  } loc(#loc341)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":154:5)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":154:37)
#loc3 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":62:5)
#loc4 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":62:37)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/sys/socket.h":102:1)
#loc8 = loc("/usr/include/sys/socket.h":102:62)
#loc9 = loc("/usr/include/arpa/inet.h":34:1)
#loc10 = loc("/usr/include/arpa/inet.h":34:47)
#loc11 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":93:53)
#loc12 = loc("/usr/include/netinet/in.h":404:1)
#loc13 = loc("/usr/include/netinet/in.h":405:40)
#loc14 = loc("/usr/include/sys/socket.h":126:1)
#loc15 = loc("/usr/include/sys/socket.h":126:75)
#loc16 = loc("/usr/include/sys/socket.h":145:1)
#loc17 = loc("/usr/include/sys/socket.h":145:68)
#loc18 = loc("/usr/include/string.h":226:1)
#loc19 = loc("/usr/include/string.h":227:50)
#loc20 = loc("/usr/include/unistd.h":358:1)
#loc21 = loc("/usr/include/unistd.h":358:27)
#loc22 = loc("/usr/include/stdio.h":264:1)
#loc23 = loc("/usr/include/stdio.h":266:3)
#loc24 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":137:29)
#loc25 = loc("/usr/include/stdio.h":184:1)
#loc26 = loc("/usr/include/stdio.h":184:36)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":58:1)
#loc28 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":143:1)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":60:5)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":60:9)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":61:5)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":61:12)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":63:12)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":63:5)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":64:5)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":133:5)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":64:13)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":64:9)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":64:16)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":64:20)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":66:9)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":132:9)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":71:13)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":71:17)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":72:13)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":72:32)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":73:13)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":73:19)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":74:13)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":74:36)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":75:13)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":75:41)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":75:30)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":75:37)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":76:13)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":121:21)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":86:40)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":86:49)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":86:62)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":86:33)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":86:17)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":86:73)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":87:17)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":90:17)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":87:21)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":87:38)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":88:17)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":89:21)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":91:24)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":91:25)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":91:34)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":91:37)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":91:51)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":91:17)
#loc75 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":91:52)
#loc76 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":92:38)
#loc77 = loc("/usr/include/netinet/in.h":249:5)
#loc78 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":92:17)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":93:43)
#loc80 = loc("/usr/include/netinet/in.h":251:20)
#loc81 = loc("/usr/include/netinet/in.h":33:15)
#loc82 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":93:17)
#loc83 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":93:63)
#loc84 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":94:42)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":94:36)
#loc86 = loc("/usr/include/netinet/in.h":250:15)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":94:17)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":94:50)
#loc89 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":95:17)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":98:17)
#loc91 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":95:29)
#loc92 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":95:62)
#loc93 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":95:63)
#loc94 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":95:72)
#loc95 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":95:86)
#loc96 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":95:21)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":95:92)
#loc98 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":96:17)
#loc99 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":97:21)
#loc100 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":102:35)
#loc101 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":102:59)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":102:66)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":102:64)
#loc104 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":102:50)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":102:73)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":102:76)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":102:87)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":102:92)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":102:107)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":102:117)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":102:118)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":102:121)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":102:30)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":102:17)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":102:122)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":103:17)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":106:17)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":103:21)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":103:35)
#loc120 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":103:48)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":103:51)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":103:65)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":104:17)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":105:21)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":108:61)
#loc126 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":108:17)
#loc127 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":108:22)
#loc128 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":108:32)
#loc129 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":108:45)
#loc130 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":108:56)
#loc131 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":108:57)
#loc132 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":110:34)
#loc133 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":110:40)
#loc134 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":110:27)
#loc135 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":110:17)
#loc136 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":110:44)
#loc137 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":111:17)
#loc138 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":114:17)
#loc139 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":111:21)
#loc140 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":112:17)
#loc141 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":113:32)
#loc142 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":113:22)
#loc143 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":113:21)
#loc144 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":115:34)
#loc145 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":115:40)
#loc146 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":115:27)
#loc147 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":115:17)
#loc148 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":115:44)
#loc149 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":116:17)
#loc150 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":119:17)
#loc151 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":116:21)
#loc152 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":117:17)
#loc153 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":118:32)
#loc154 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":118:22)
#loc155 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":118:21)
#loc156 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":121:20)
#loc157 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":122:13)
#loc158 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":125:13)
#loc159 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":122:17)
#loc160 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":122:34)
#loc161 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":123:13)
#loc162 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":124:30)
#loc163 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":124:17)
#loc164 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":64:24)
#loc165 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":64:23)
#loc166 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":134:5)
#loc167 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":142:5)
#loc168 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":135:9)
#loc169 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":135:23)
#loc170 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":137:17)
#loc171 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":137:23)
#loc172 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":137:9)
#loc173 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":137:34)
#loc174 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":138:9)
#loc175 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":141:9)
#loc176 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":138:13)
#loc177 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":138:22)
#loc178 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":139:9)
#loc179 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":140:20)
#loc180 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":140:13)
#loc181 = loc("/usr/include/string.h":149:1)
#loc182 = loc("/usr/include/string.h":150:14)
#loc183 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":159:22)
#loc184 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":150:1)
#loc185 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":170:1)
#loc186 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":152:5)
#loc187 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":152:9)
#loc188 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":153:5)
#loc189 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":153:12)
#loc190 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":155:12)
#loc191 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":155:5)
#loc192 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":156:5)
#loc193 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":160:5)
#loc194 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":156:13)
#loc195 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":156:9)
#loc196 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":156:16)
#loc197 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":156:20)
#loc198 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":159:9)
#loc199 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":159:16)
#loc200 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":156:24)
#loc201 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":156:23)
#loc202 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":161:5)
#loc203 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":169:5)
#loc204 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":162:9)
#loc205 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":162:23)
#loc206 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":164:17)
#loc207 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":164:23)
#loc208 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":164:29)
#loc209 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":164:9)
#loc210 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":164:34)
#loc211 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":165:9)
#loc212 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":168:9)
#loc213 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":165:13)
#loc214 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":165:22)
#loc215 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":166:9)
#loc216 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":167:20)
#loc217 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":167:13)
#loc218 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":172:1)
#loc219 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":175:1)
#loc220 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":174:5)
#loc221 = loc("/usr/include/stdlib.h":575:1)
#loc222 = loc("/usr/include/stdlib.h":575:41)
#loc223 = loc("/usr/include/time.h":76:1)
#loc224 = loc("/usr/include/time.h":76:38)
#loc225 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc226 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc227 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":195:15)
#loc228 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":197:15)
#loc229 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":200:15)
#loc230 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":202:15)
#loc231 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":190:1)
#loc232 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":205:1)
#loc237 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":191:1)
#loc238 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":193:27)
#loc239 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":193:22)
#loc240 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":193:5)
#loc241 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":195:5)
#loc242 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":196:5)
#loc243 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":197:5)
#loc244 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":200:5)
#loc245 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":201:5)
#loc246 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":202:5)
#loc247 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":204:12)
#loc248 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_17.cpp":204:5)
#loc249 = loc(fused[#loc1, #loc2])
#loc250 = loc(fused[#loc3, #loc4])
#loc251 = loc(fused[#loc5, #loc6])
#loc252 = loc(fused[#loc7, #loc8])
#loc253 = loc(fused[#loc9, #loc10])
#loc254 = loc(fused[#loc12, #loc13])
#loc255 = loc(fused[#loc14, #loc15])
#loc256 = loc(fused[#loc16, #loc17])
#loc257 = loc(fused[#loc18, #loc19])
#loc258 = loc(fused[#loc20, #loc21])
#loc259 = loc(fused[#loc22, #loc23])
#loc260 = loc(fused[#loc25, #loc26])
#loc261 = loc(fused[#loc27, #loc28])
#loc262 = loc(fused[#loc29, #loc30])
#loc263 = loc(fused[#loc31, #loc32])
#loc264 = loc(fused[#loc34, #loc33])
#loc265 = loc(fused[#loc35, #loc36])
#loc266 = loc(fused[#loc38, #loc37])
#loc267 = loc(fused[#loc39, #loc40])
#loc268 = loc(fused[#loc41, #loc42])
#loc269 = loc(fused[#loc43, #loc44])
#loc270 = loc(fused[#loc45, #loc46])
#loc271 = loc(fused[#loc47, #loc48])
#loc272 = loc(fused[#loc49, #loc50])
#loc273 = loc(fused[#loc51, #loc52])
#loc274 = loc(fused[#loc55, #loc56])
#loc275 = loc(fused[#loc61, #loc62])
#loc276 = loc(fused[#loc63, #loc64])
#loc277 = loc(fused[#loc65, #loc66])
#loc278 = loc(fused[#loc67, #loc64])
#loc279 = loc(fused[#loc69, #loc70])
#loc280 = loc(fused[#loc72, #loc73])
#loc281 = loc(fused[#loc74, #loc75])
#loc282 = loc(fused[#loc78, #loc76])
#loc283 = loc(fused[#loc82, #loc83])
#loc284 = loc(fused[#loc87, #loc88])
#loc285 = loc(fused[#loc89, #loc90])
#loc286 = loc(fused[#loc92, #loc93])
#loc287 = loc(fused[#loc94, #loc95])
#loc288 = loc(fused[#loc96, #loc97])
#loc289 = loc(fused[#loc98, #loc90])
#loc290 = loc(fused[#loc104, #loc105])
#loc291 = loc(fused[#loc106, #loc107])
#loc292 = loc(fused[#loc108, #loc109])
#loc293 = loc(fused[#loc108, #loc110])
#loc294 = loc(fused[#loc106, #loc111])
#loc295 = loc(fused[#loc114, #loc115])
#loc296 = loc(fused[#loc116, #loc117])
#loc297 = loc(fused[#loc118, #loc119])
#loc298 = loc(fused[#loc121, #loc122])
#loc299 = loc(fused[#loc123, #loc117])
#loc300 = loc(fused[#loc129, #loc130])
#loc301 = loc(fused[#loc128, #loc130])
#loc302 = loc(fused[#loc127, #loc130])
#loc303 = loc(fused[#loc126, #loc125])
#loc304 = loc(fused[#loc135, #loc136])
#loc305 = loc(fused[#loc137, #loc138])
#loc306 = loc(fused[#loc140, #loc138])
#loc307 = loc(fused[#loc143, #loc141])
#loc308 = loc(fused[#loc147, #loc148])
#loc309 = loc(fused[#loc149, #loc150])
#loc310 = loc(fused[#loc152, #loc150])
#loc311 = loc(fused[#loc155, #loc153])
#loc312 = loc(fused[#loc157, #loc158])
#loc313 = loc(fused[#loc159, #loc160])
#loc314 = loc(fused[#loc161, #loc158])
#loc315 = loc(fused[#loc165, #loc164])
#loc316 = loc(fused[#loc166, #loc167])
#loc317 = loc(fused[#loc168, #loc169])
#loc318 = loc(fused[#loc172, #loc173])
#loc319 = loc(fused[#loc174, #loc175])
#loc320 = loc(fused[#loc176, #loc177])
#loc321 = loc(fused[#loc178, #loc175])
#loc322 = loc(fused[#loc181, #loc182])
#loc323 = loc(fused[#loc184, #loc185])
#loc324 = loc(fused[#loc186, #loc187])
#loc325 = loc(fused[#loc188, #loc189])
#loc326 = loc(fused[#loc191, #loc190])
#loc327 = loc(fused[#loc192, #loc193])
#loc328 = loc(fused[#loc195, #loc194])
#loc329 = loc(fused[#loc196, #loc197])
#loc330 = loc(fused[#loc201, #loc200])
#loc331 = loc(fused[#loc202, #loc203])
#loc332 = loc(fused[#loc204, #loc205])
#loc333 = loc(fused[#loc209, #loc210])
#loc334 = loc(fused[#loc211, #loc212])
#loc335 = loc(fused[#loc213, #loc214])
#loc336 = loc(fused[#loc215, #loc212])
#loc337 = loc(fused[#loc218, #loc219])
#loc338 = loc(fused[#loc221, #loc222])
#loc339 = loc(fused[#loc223, #loc224])
#loc340 = loc(fused[#loc225, #loc226])
#loc341 = loc(fused[#loc231, #loc232])
#loc344 = loc(fused[#loc248, #loc247])
