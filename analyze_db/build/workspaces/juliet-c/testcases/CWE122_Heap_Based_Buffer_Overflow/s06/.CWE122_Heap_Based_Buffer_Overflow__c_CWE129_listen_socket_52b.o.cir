!s32i = !cir.int<s, 32>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_52b.c":47:76)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_52b.c":47:80)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_52b.c":59:80)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_52b.c":59:84)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_52b.c":67:80)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_52b.c":67:84)
#loc30 = loc(fused[#loc5, #loc6])
#loc33 = loc(fused[#loc14, #loc15])
#loc36 = loc(fused[#loc23, #loc24])
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_52b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_52c_badSink(!s32i) loc(#loc28)
  cir.func @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_52b_badSink(%arg0: !s32i loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc30)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc7)
    %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc8)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_52c_badSink(%1) : (!s32i) -> () loc(#loc9)
    cir.return loc(#loc4)
  } loc(#loc29)
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_52c_goodG2BSink(!s32i) loc(#loc31)
  cir.func @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_52b_goodG2BSink(%arg0: !s32i loc(fused[#loc14, #loc15])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc33)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc16)
    %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc17)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_52c_goodG2BSink(%1) : (!s32i) -> () loc(#loc18)
    cir.return loc(#loc13)
  } loc(#loc32)
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_52c_goodB2GSink(!s32i) loc(#loc34)
  cir.func @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_52b_goodB2GSink(%arg0: !s32i loc(fused[#loc23, #loc24])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc36)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc25)
    %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc26)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_52c_goodB2GSink(%1) : (!s32i) -> () loc(#loc27)
    cir.return loc(#loc22)
  } loc(#loc35)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_52b.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_52b.c":45:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_52b.c":45:84)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_52b.c":47:1)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_52b.c":50:1)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_52b.c":48:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_52b.c":49:75)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_52b.c":49:5)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_52b.c":57:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_52b.c":57:88)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_52b.c":59:1)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_52b.c":62:1)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_52b.c":60:1)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_52b.c":61:79)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_52b.c":61:5)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_52b.c":65:1)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_52b.c":65:88)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_52b.c":67:1)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_52b.c":70:1)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_52b.c":68:1)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_52b.c":69:79)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_52b.c":69:5)
#loc28 = loc(fused[#loc1, #loc2])
#loc29 = loc(fused[#loc3, #loc4])
#loc31 = loc(fused[#loc10, #loc11])
#loc32 = loc(fused[#loc12, #loc13])
#loc34 = loc(fused[#loc19, #loc20])
#loc35 = loc(fused[#loc21, #loc22])
