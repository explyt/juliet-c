!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc78 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":125:10)
#loc79 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":125:14)
#loc80 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":125:20)
#loc81 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":125:32)
#loc235 = loc(fused[#loc78, #loc79])
#loc236 = loc(fused[#loc80, #loc81])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_10.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" external @globalTrue : !s32i {alignment = 4 : i64} loc(#loc204)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc205)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc206)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc207)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"A String\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc208)
  cir.func private @realloc(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc209)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"New String\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> {alignment = 1 : i64} loc(#loc14)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc210)
  cir.func no_proto @CWE401_Memory_Leak__malloc_realloc_char_10_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc204)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc21)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc21)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc215)
          %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc27)
          %5 = cir.const #cir.int<100> : !s32i loc(#loc28)
          %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc28)
          %7 = cir.const #cir.int<1> : !u64i loc(#loc216)
          %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc217)
          %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc27)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc218)
          cir.store %10, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc215)
          cir.scope {
            %26 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
            %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc34)
            %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc34)
            %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc220)
            cir.if %29 {
              %30 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc36)
              %31 = cir.const #cir.int<1> : !s32i loc(#loc37)
              %32 = cir.unary(minus, %31) : !s32i, !s32i loc(#loc38)
              cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc36)
            } loc(#loc221)
          } loc(#loc219)
          %11 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc39)
          %12 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
          %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc9)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc9)
          %15 = cir.call @strcpy(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc39)
          %16 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
          cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc42)
          %17 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc43)
          %18 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
          %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc44)
          %20 = cir.const #cir.int<130000> : !s32i loc(#loc45)
          %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc45)
          %22 = cir.const #cir.int<1> : !u64i loc(#loc222)
          %23 = cir.binop(mul, %21, %22) : !u64i loc(#loc223)
          %24 = cir.call @realloc(%19, %23) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc43)
          %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc224)
          cir.store %25, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc225)
          cir.scope {
            %26 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
            %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc54)
            %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc54)
            %29 = cir.cmp(ne, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc227)
            cir.if %29 {
              %30 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc56)
              %31 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
              %32 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc14)
              %33 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc14)
              %34 = cir.call @strcpy(%31, %33) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc56)
              %35 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
              cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc59)
              %36 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc60)
              %37 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
              %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc61)
              cir.call @free(%38) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc60)
            } loc(#loc228)
          } loc(#loc226)
        } loc(#loc214)
      } loc(#loc213)
    } loc(#loc212)
    cir.return loc(#loc18)
  } loc(#loc211)
  cir.func no_proto @CWE401_Memory_Leak__malloc_realloc_char_10_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc230)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc64)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc231)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc66)
    cir.return loc(#loc63)
  } loc(#loc229)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc232)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc233)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc72)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc73)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc74)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc75)
  cir.func @main(%arg0: !s32i loc(fused[#loc78, #loc79]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc80, #loc81])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc235)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc236)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc77)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc82)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc82)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc83)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc84)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc84)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc85)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc72)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc72)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    %8 = cir.get_global @CWE401_Memory_Leak__malloc_realloc_char_10_good : !cir.ptr<!cir.func<!void ()>> loc(#loc237)
    cir.call @CWE401_Memory_Leak__malloc_realloc_char_10_good() : () -> () loc(#loc87)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc73)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc74)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc74)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    %13 = cir.get_global @CWE401_Memory_Leak__malloc_realloc_char_10_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc238)
    cir.call @CWE401_Memory_Leak__malloc_realloc_char_10_bad() : () -> () loc(#loc91)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc75)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc75)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc94)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc239)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc239)
    cir.return %17 : !s32i loc(#loc239)
  } loc(#loc234)
  cir.global "private" external @globalFalse : !s32i {alignment = 4 : i64} loc(#loc240)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc98)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalFalse : !cir.ptr<!s32i> loc(#loc240)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc103)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc103)
      cir.if %2 {
        %3 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc98)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc98)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc107)
      } else {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc245)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["tmpData"] {alignment = 8 : i64} loc(#loc246)
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc114)
          %6 = cir.const #cir.int<100> : !s32i loc(#loc115)
          %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc115)
          %8 = cir.const #cir.int<1> : !u64i loc(#loc247)
          %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc248)
          %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc114)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc249)
          cir.store %11, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc245)
          cir.scope {
            %30 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc120)
            %31 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc121)
            %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc121)
            %33 = cir.cmp(eq, %30, %32) : !cir.ptr<!s8i>, !cir.bool loc(#loc251)
            cir.if %33 {
              %34 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc123)
              %35 = cir.const #cir.int<1> : !s32i loc(#loc124)
              %36 = cir.unary(minus, %35) : !s32i, !s32i loc(#loc125)
              cir.call @exit(%36) : (!s32i) -> () extra(#fn_attr) loc(#loc123)
            } loc(#loc252)
          } loc(#loc250)
          %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc126)
          %13 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
          %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc128)
          %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc128)
          %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc126)
          %17 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
          cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc130)
          %18 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc131)
          %19 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
          %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc132)
          %21 = cir.const #cir.int<130000> : !s32i loc(#loc133)
          %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc133)
          %23 = cir.const #cir.int<1> : !u64i loc(#loc253)
          %24 = cir.binop(mul, %22, %23) : !u64i loc(#loc254)
          %25 = cir.call @realloc(%20, %24) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc131)
          %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc255)
          cir.store %26, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc256)
          cir.scope {
            %30 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc141)
            %31 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc142)
            %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc142)
            %33 = cir.cmp(ne, %30, %32) : !cir.ptr<!s8i>, !cir.bool loc(#loc258)
            cir.if %33 {
              %34 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
              cir.store %34, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc260)
              %35 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc146)
              %36 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
              %37 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc148)
              %38 = cir.cast(array_to_ptrdecay, %37 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc148)
              %39 = cir.call @strcpy(%36, %38) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc146)
              %40 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc149)
              cir.call @printLine(%40) : (!cir.ptr<!s8i>) -> () loc(#loc150)
            } loc(#loc259)
          } loc(#loc257)
          %27 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc151)
          %28 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
          %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc152)
          cir.call @free(%29) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc151)
        } loc(#loc244)
      } loc(#loc243)
    } loc(#loc242)
    cir.return loc(#loc100)
  } loc(#loc241)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc204)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc157)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc157)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc265)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["tmpData"] {alignment = 8 : i64} loc(#loc266)
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc165)
          %6 = cir.const #cir.int<100> : !s32i loc(#loc166)
          %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc166)
          %8 = cir.const #cir.int<1> : !u64i loc(#loc267)
          %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc268)
          %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc165)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc269)
          cir.store %11, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc265)
          cir.scope {
            %30 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc171)
            %31 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc172)
            %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc172)
            %33 = cir.cmp(eq, %30, %32) : !cir.ptr<!s8i>, !cir.bool loc(#loc271)
            cir.if %33 {
              %34 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc174)
              %35 = cir.const #cir.int<1> : !s32i loc(#loc175)
              %36 = cir.unary(minus, %35) : !s32i, !s32i loc(#loc176)
              cir.call @exit(%36) : (!s32i) -> () extra(#fn_attr) loc(#loc174)
            } loc(#loc272)
          } loc(#loc270)
          %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc177)
          %13 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc178)
          %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc179)
          %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc179)
          %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc177)
          %17 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc180)
          cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc181)
          %18 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc182)
          %19 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc183)
          %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc183)
          %21 = cir.const #cir.int<130000> : !s32i loc(#loc184)
          %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc184)
          %23 = cir.const #cir.int<1> : !u64i loc(#loc273)
          %24 = cir.binop(mul, %22, %23) : !u64i loc(#loc274)
          %25 = cir.call @realloc(%20, %24) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc182)
          %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc275)
          cir.store %26, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc276)
          cir.scope {
            %30 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc192)
            %31 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc193)
            %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc193)
            %33 = cir.cmp(ne, %30, %32) : !cir.ptr<!s8i>, !cir.bool loc(#loc278)
            cir.if %33 {
              %34 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc195)
              cir.store %34, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc280)
              %35 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc197)
              %36 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc198)
              %37 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc199)
              %38 = cir.cast(array_to_ptrdecay, %37 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc199)
              %39 = cir.call @strcpy(%36, %38) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc197)
              %40 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc200)
              cir.call @printLine(%40) : (!cir.ptr<!s8i>) -> () loc(#loc201)
            } loc(#loc279)
          } loc(#loc277)
          %27 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc202)
          %28 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc203)
          %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc203)
          cir.call @free(%29) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc202)
        } loc(#loc264)
      } loc(#loc263)
    } loc(#loc262)
    cir.return loc(#loc154)
  } loc(#loc261)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_10.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":116:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":116:12)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("/usr/include/string.h":141:1)
#loc8 = loc("/usr/include/string.h":142:14)
#loc9 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":32:26)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc12 = loc("/usr/include/stdlib.h":683:1)
#loc13 = loc("/usr/include/stdlib.h":684:14)
#loc14 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":39:30)
#loc15 = loc("/usr/include/stdlib.h":687:1)
#loc16 = loc("/usr/include/stdlib.h":687:32)
#loc17 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":24:1)
#loc18 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":45:1)
#loc19 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":26:5)
#loc20 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":44:5)
#loc21 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":26:8)
#loc22 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":27:5)
#loc23 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":28:9)
#loc24 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":43:9)
#loc25 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":29:13)
#loc26 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":29:58)
#loc27 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":29:35)
#loc28 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":29:42)
#loc29 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":29:46)
#loc30 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":29:57)
#loc31 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":30:13)
#loc32 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":30:41)
#loc33 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":30:17)
#loc34 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":30:25)
#loc35 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":30:31)
#loc36 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":30:32)
#loc37 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":30:38)
#loc38 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":30:37)
#loc39 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":32:13)
#loc40 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":32:20)
#loc41 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":33:23)
#loc42 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":33:13)
#loc43 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":35:28)
#loc44 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":35:36)
#loc45 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":35:43)
#loc46 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":35:51)
#loc47 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":35:62)
#loc48 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":35:42)
#loc49 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":35:63)
#loc50 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":35:13)
#loc51 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":36:13)
#loc52 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":42:13)
#loc53 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":36:17)
#loc54 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":36:25)
#loc55 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":37:13)
#loc56 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":39:17)
#loc57 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":39:24)
#loc58 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":40:27)
#loc59 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":40:17)
#loc60 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":41:17)
#loc61 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":41:22)
#loc62 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":110:1)
#loc63 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":114:1)
#loc64 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":112:5)
#loc65 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":112:11)
#loc66 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":113:5)
#loc67 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":113:11)
#loc68 = loc("/usr/include/stdlib.h":575:1)
#loc69 = loc("/usr/include/stdlib.h":575:41)
#loc70 = loc("/usr/include/time.h":76:1)
#loc71 = loc("/usr/include/time.h":76:38)
#loc72 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":130:15)
#loc73 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":132:15)
#loc74 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":135:15)
#loc75 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":137:15)
#loc76 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":125:1)
#loc77 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":140:1)
#loc82 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":126:1)
#loc83 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":128:27)
#loc84 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":128:22)
#loc85 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":128:5)
#loc86 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":130:5)
#loc87 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":131:5)
#loc88 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":131:53)
#loc89 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":132:5)
#loc90 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":135:5)
#loc91 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":136:5)
#loc92 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":136:52)
#loc93 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":137:5)
#loc94 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":139:12)
#loc95 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":139:5)
#loc96 = loc("../../../testcasesupport/std_testcase.h":117:1)
#loc97 = loc("../../../testcasesupport/std_testcase.h":117:12)
#loc98 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":57:19)
#loc99 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":52:1)
#loc100 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":81:1)
#loc101 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":54:5)
#loc102 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":80:5)
#loc103 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":54:8)
#loc104 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":55:5)
#loc105 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":58:5)
#loc106 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":60:5)
#loc107 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":57:9)
#loc108 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":61:9)
#loc109 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":79:9)
#loc110 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":62:13)
#loc111 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":62:58)
#loc112 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":64:13)
#loc113 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":64:20)
#loc114 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":62:35)
#loc115 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":62:42)
#loc116 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":62:46)
#loc117 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":62:57)
#loc118 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":63:13)
#loc119 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":63:41)
#loc120 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":63:17)
#loc121 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":63:25)
#loc122 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":63:31)
#loc123 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":63:32)
#loc124 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":63:38)
#loc125 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":63:37)
#loc126 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":66:13)
#loc127 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":66:20)
#loc128 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":66:26)
#loc129 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":67:23)
#loc130 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":67:13)
#loc131 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":68:31)
#loc132 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":68:39)
#loc133 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":68:46)
#loc134 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":68:54)
#loc135 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":68:65)
#loc136 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":68:45)
#loc137 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":68:66)
#loc138 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":68:13)
#loc139 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":71:13)
#loc140 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":77:13)
#loc141 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":71:17)
#loc142 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":71:28)
#loc143 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":72:13)
#loc144 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":73:24)
#loc145 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":73:17)
#loc146 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":75:17)
#loc147 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":75:24)
#loc148 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":75:30)
#loc149 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":76:27)
#loc150 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":76:17)
#loc151 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":78:13)
#loc152 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":78:18)
#loc153 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":84:1)
#loc154 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":108:1)
#loc155 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":86:5)
#loc156 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":107:5)
#loc157 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":86:8)
#loc158 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":87:5)
#loc159 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":88:9)
#loc160 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":106:9)
#loc161 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":89:13)
#loc162 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":89:58)
#loc163 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":91:13)
#loc164 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":91:20)
#loc165 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":89:35)
#loc166 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":89:42)
#loc167 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":89:46)
#loc168 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":89:57)
#loc169 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":90:13)
#loc170 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":90:41)
#loc171 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":90:17)
#loc172 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":90:25)
#loc173 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":90:31)
#loc174 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":90:32)
#loc175 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":90:38)
#loc176 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":90:37)
#loc177 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":93:13)
#loc178 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":93:20)
#loc179 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":93:26)
#loc180 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":94:23)
#loc181 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":94:13)
#loc182 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":95:31)
#loc183 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":95:39)
#loc184 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":95:46)
#loc185 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":95:54)
#loc186 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":95:65)
#loc187 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":95:45)
#loc188 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":95:66)
#loc189 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":95:13)
#loc190 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":98:13)
#loc191 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":104:13)
#loc192 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":98:17)
#loc193 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":98:28)
#loc194 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":99:13)
#loc195 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":100:24)
#loc196 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":100:17)
#loc197 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":102:17)
#loc198 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":102:24)
#loc199 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":102:30)
#loc200 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":103:27)
#loc201 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":103:17)
#loc202 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":105:13)
#loc203 = loc("CWE401_Memory_Leak__malloc_realloc_char_10.c":105:18)
#loc204 = loc(fused[#loc1, #loc2])
#loc205 = loc(fused[#loc3, #loc4])
#loc206 = loc(fused[#loc5, #loc6])
#loc207 = loc(fused[#loc7, #loc8])
#loc208 = loc(fused[#loc10, #loc11])
#loc209 = loc(fused[#loc12, #loc13])
#loc210 = loc(fused[#loc15, #loc16])
#loc211 = loc(fused[#loc17, #loc18])
#loc212 = loc(fused[#loc19, #loc20])
#loc213 = loc(fused[#loc22, #loc20])
#loc214 = loc(fused[#loc23, #loc24])
#loc215 = loc(fused[#loc25, #loc26])
#loc216 = loc(fused[#loc29, #loc30])
#loc217 = loc(fused[#loc28, #loc30])
#loc218 = loc(fused[#loc27, #loc26])
#loc219 = loc(fused[#loc31, #loc32])
#loc220 = loc(fused[#loc33, #loc34])
#loc221 = loc(fused[#loc35, #loc32])
#loc222 = loc(fused[#loc46, #loc47])
#loc223 = loc(fused[#loc48, #loc47])
#loc224 = loc(fused[#loc43, #loc49])
#loc225 = loc(fused[#loc50, #loc49])
#loc226 = loc(fused[#loc51, #loc52])
#loc227 = loc(fused[#loc53, #loc54])
#loc228 = loc(fused[#loc55, #loc52])
#loc229 = loc(fused[#loc62, #loc63])
#loc230 = loc(fused[#loc64, #loc65])
#loc231 = loc(fused[#loc66, #loc67])
#loc232 = loc(fused[#loc68, #loc69])
#loc233 = loc(fused[#loc70, #loc71])
#loc234 = loc(fused[#loc76, #loc77])
#loc237 = loc(fused[#loc87, #loc88])
#loc238 = loc(fused[#loc91, #loc92])
#loc239 = loc(fused[#loc95, #loc94])
#loc240 = loc(fused[#loc96, #loc97])
#loc241 = loc(fused[#loc99, #loc100])
#loc242 = loc(fused[#loc101, #loc102])
#loc243 = loc(fused[#loc104, #loc105, #loc106, #loc102])
#loc244 = loc(fused[#loc108, #loc109])
#loc245 = loc(fused[#loc110, #loc111])
#loc246 = loc(fused[#loc112, #loc113])
#loc247 = loc(fused[#loc116, #loc117])
#loc248 = loc(fused[#loc115, #loc117])
#loc249 = loc(fused[#loc114, #loc111])
#loc250 = loc(fused[#loc118, #loc119])
#loc251 = loc(fused[#loc120, #loc121])
#loc252 = loc(fused[#loc122, #loc119])
#loc253 = loc(fused[#loc134, #loc135])
#loc254 = loc(fused[#loc136, #loc135])
#loc255 = loc(fused[#loc131, #loc137])
#loc256 = loc(fused[#loc138, #loc137])
#loc257 = loc(fused[#loc139, #loc140])
#loc258 = loc(fused[#loc141, #loc142])
#loc259 = loc(fused[#loc143, #loc140])
#loc260 = loc(fused[#loc145, #loc144])
#loc261 = loc(fused[#loc153, #loc154])
#loc262 = loc(fused[#loc155, #loc156])
#loc263 = loc(fused[#loc158, #loc156])
#loc264 = loc(fused[#loc159, #loc160])
#loc265 = loc(fused[#loc161, #loc162])
#loc266 = loc(fused[#loc163, #loc164])
#loc267 = loc(fused[#loc167, #loc168])
#loc268 = loc(fused[#loc166, #loc168])
#loc269 = loc(fused[#loc165, #loc162])
#loc270 = loc(fused[#loc169, #loc170])
#loc271 = loc(fused[#loc171, #loc172])
#loc272 = loc(fused[#loc173, #loc170])
#loc273 = loc(fused[#loc185, #loc186])
#loc274 = loc(fused[#loc187, #loc186])
#loc275 = loc(fused[#loc182, #loc188])
#loc276 = loc(fused[#loc189, #loc188])
#loc277 = loc(fused[#loc190, #loc191])
#loc278 = loc(fused[#loc192, #loc193])
#loc279 = loc(fused[#loc194, #loc191])
#loc280 = loc(fused[#loc196, #loc195])
