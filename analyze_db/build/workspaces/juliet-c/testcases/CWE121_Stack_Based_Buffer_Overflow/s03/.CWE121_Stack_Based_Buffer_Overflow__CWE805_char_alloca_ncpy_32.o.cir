!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc123)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc124)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc126)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc127)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc128)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc129)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc127)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc128)
    %4 = cir.const #cir.int<50> : !s32i loc(#loc14)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc14)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc14)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc14)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc14)
    %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc130)
    %10 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc14)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc14)
    cir.store %11, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc129)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc16)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc16)
    %14 = cir.const #cir.int<1> : !u64i loc(#loc16)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc16)
    %16 = cir.alloca !u8i, !cir.ptr<!u8i>, %15 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc16)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc16)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc16)
    cir.store %18, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc130)
    cir.scope {
      %19 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc132)
      %20 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc20)
      %21 = cir.load %20 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
      cir.store %21, %19 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc132)
      %22 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
      cir.store %22, %19 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc133)
      %23 = cir.const #cir.int<0> : !s32i loc(#loc24)
      %24 = cir.cast(integral, %23 : !s32i), !s8i loc(#loc24)
      %25 = cir.load %19 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
      %26 = cir.const #cir.int<0> : !s32i loc(#loc26)
      %27 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc27)
      cir.store %24, %27 : !s8i, !cir.ptr<!s8i> loc(#loc134)
      %28 = cir.load %19 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
      %29 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc29)
      cir.store %28, %29 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc135)
    } loc(#loc131)
    cir.scope {
      %19 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc137)
      %20 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc34)
      %21 = cir.load %20 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
      cir.store %21, %19 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc137)
      cir.scope {
        %22 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc139)
        %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc40)
        %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc40)
        %25 = cir.const #cir.int<67> : !s32i loc(#loc41)
        %26 = cir.const #cir.int<100> : !s32i loc(#loc42)
        %27 = cir.const #cir.int<1> : !s32i loc(#loc43)
        %28 = cir.binop(sub, %26, %27) nsw : !s32i loc(#loc42)
        %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc42)
        cir.libc.memset %29 bytes from %24 set to %25 : !cir.ptr<!void>, !s32i, !u64i loc(#loc140)
        %30 = cir.const #cir.int<0> : !s32i loc(#loc46)
        %31 = cir.cast(integral, %30 : !s32i), !s8i loc(#loc46)
        %32 = cir.const #cir.int<100> : !s32i loc(#loc47)
        %33 = cir.const #cir.int<1> : !s32i loc(#loc48)
        %34 = cir.binop(sub, %32, %33) nsw : !s32i loc(#loc47)
        %35 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc49)
        %36 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %34 : !s32i), !cir.ptr<!s8i> loc(#loc49)
        cir.store %31, %36 : !s8i, !cir.ptr<!s8i> loc(#loc141)
        %37 = cir.get_global @strncpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc50)
        %38 = cir.load %19 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
        %39 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc52)
        %40 = cir.const #cir.int<100> : !s32i loc(#loc53)
        %41 = cir.const #cir.int<1> : !s32i loc(#loc54)
        %42 = cir.binop(sub, %40, %41) nsw : !s32i loc(#loc53)
        %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc53)
        %44 = cir.call @strncpy(%38, %39, %43) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc50)
        %45 = cir.const #cir.int<0> : !s32i loc(#loc55)
        %46 = cir.cast(integral, %45 : !s32i), !s8i loc(#loc55)
        %47 = cir.load %19 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
        %48 = cir.const #cir.int<100> : !s32i loc(#loc57)
        %49 = cir.const #cir.int<1> : !s32i loc(#loc58)
        %50 = cir.binop(sub, %48, %49) nsw : !s32i loc(#loc57)
        %51 = cir.ptr_stride(%47 : !cir.ptr<!s8i>, %50 : !s32i), !cir.ptr<!s8i> loc(#loc59)
        cir.store %46, %51 : !s8i, !cir.ptr<!s8i> loc(#loc142)
        %52 = cir.load %19 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
        cir.call @printLine(%52) : (!cir.ptr<!s8i>) -> () loc(#loc61)
      } loc(#loc138)
    } loc(#loc136)
    cir.return loc(#loc6)
  } loc(#loc125)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc144)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc64)
    cir.return loc(#loc63)
  } loc(#loc143)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc146)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc147)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc148)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc149)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc147)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc148)
    %4 = cir.const #cir.int<50> : !s32i loc(#loc75)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc75)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc75)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc75)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc75)
    %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc150)
    %10 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc75)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc75)
    cir.store %11, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc149)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc77)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc77)
    %14 = cir.const #cir.int<1> : !u64i loc(#loc77)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc77)
    %16 = cir.alloca !u8i, !cir.ptr<!u8i>, %15 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc77)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc77)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc77)
    cir.store %18, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc150)
    cir.scope {
      %19 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc152)
      %20 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc81)
      %21 = cir.load %20 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
      cir.store %21, %19 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc152)
      %22 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
      cir.store %22, %19 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc153)
      %23 = cir.const #cir.int<0> : !s32i loc(#loc85)
      %24 = cir.cast(integral, %23 : !s32i), !s8i loc(#loc85)
      %25 = cir.load %19 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
      %26 = cir.const #cir.int<0> : !s32i loc(#loc87)
      %27 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc88)
      cir.store %24, %27 : !s8i, !cir.ptr<!s8i> loc(#loc154)
      %28 = cir.load %19 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
      %29 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc90)
      cir.store %28, %29 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc155)
    } loc(#loc151)
    cir.scope {
      %19 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc157)
      %20 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc95)
      %21 = cir.load %20 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc96)
      cir.store %21, %19 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc157)
      cir.scope {
        %22 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc159)
        %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc101)
        %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc101)
        %25 = cir.const #cir.int<67> : !s32i loc(#loc102)
        %26 = cir.const #cir.int<100> : !s32i loc(#loc103)
        %27 = cir.const #cir.int<1> : !s32i loc(#loc104)
        %28 = cir.binop(sub, %26, %27) nsw : !s32i loc(#loc103)
        %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc103)
        cir.libc.memset %29 bytes from %24 set to %25 : !cir.ptr<!void>, !s32i, !u64i loc(#loc160)
        %30 = cir.const #cir.int<0> : !s32i loc(#loc107)
        %31 = cir.cast(integral, %30 : !s32i), !s8i loc(#loc107)
        %32 = cir.const #cir.int<100> : !s32i loc(#loc108)
        %33 = cir.const #cir.int<1> : !s32i loc(#loc109)
        %34 = cir.binop(sub, %32, %33) nsw : !s32i loc(#loc108)
        %35 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc110)
        %36 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %34 : !s32i), !cir.ptr<!s8i> loc(#loc110)
        cir.store %31, %36 : !s8i, !cir.ptr<!s8i> loc(#loc161)
        %37 = cir.get_global @strncpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc111)
        %38 = cir.load %19 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc112)
        %39 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc113)
        %40 = cir.const #cir.int<100> : !s32i loc(#loc114)
        %41 = cir.const #cir.int<1> : !s32i loc(#loc115)
        %42 = cir.binop(sub, %40, %41) nsw : !s32i loc(#loc114)
        %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc114)
        %44 = cir.call @strncpy(%38, %39, %43) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc111)
        %45 = cir.const #cir.int<0> : !s32i loc(#loc116)
        %46 = cir.cast(integral, %45 : !s32i), !s8i loc(#loc116)
        %47 = cir.load %19 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
        %48 = cir.const #cir.int<100> : !s32i loc(#loc118)
        %49 = cir.const #cir.int<1> : !s32i loc(#loc119)
        %50 = cir.binop(sub, %48, %49) nsw : !s32i loc(#loc118)
        %51 = cir.ptr_stride(%47 : !cir.ptr<!s8i>, %50 : !s32i), !cir.ptr<!s8i> loc(#loc120)
        cir.store %46, %51 : !s8i, !cir.ptr<!s8i> loc(#loc162)
        %52 = cir.load %19 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
        cir.call @printLine(%52) : (!cir.ptr<!s8i>) -> () loc(#loc122)
      } loc(#loc158)
    } loc(#loc156)
    cir.return loc(#loc67)
  } loc(#loc145)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":0:0)
#loc1 = loc("/usr/include/string.h":144:1)
#loc2 = loc("/usr/include/string.h":146:14)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":23:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":50:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":25:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":25:12)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":26:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":26:25)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":27:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":27:25)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":28:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":28:36)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":29:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":29:37)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":30:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":37:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":31:9)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":31:24)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":31:23)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":34:16)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":34:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":35:19)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":35:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":35:14)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":35:15)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":36:21)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":36:10)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":36:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":38:5)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":49:5)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":39:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":39:24)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":39:23)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":40:9)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":48:9)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":41:13)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":41:28)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":42:20)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":42:28)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":42:33)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":42:37)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":42:13)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":42:38)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":43:29)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":43:20)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":43:24)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":43:13)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":45:13)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":45:21)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":45:27)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":45:35)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":45:39)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":46:27)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":46:13)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":46:18)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":46:22)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":46:23)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":47:23)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":47:13)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":85:1)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":88:1)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":87:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":87:13)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":57:1)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":83:1)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":59:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":59:12)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":60:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":60:25)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":61:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":61:25)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":62:5)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":62:36)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":63:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":63:37)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":64:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":70:5)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":65:9)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":65:24)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":65:23)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":67:16)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":67:9)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":68:19)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":68:9)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":68:14)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":68:15)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":69:21)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":69:10)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":69:9)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":71:5)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":82:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":72:9)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":72:24)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":72:23)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":73:9)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":81:9)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":74:13)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":74:28)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":75:20)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":75:28)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":75:33)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":75:37)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":75:13)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":75:38)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":76:29)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":76:20)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":76:24)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":76:13)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":78:13)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":78:21)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":78:27)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":78:35)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":78:39)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":79:27)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":79:13)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":79:18)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":79:22)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":79:23)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":80:23)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_32.c":80:13)
#loc123 = loc(fused[#loc1, #loc2])
#loc124 = loc(fused[#loc3, #loc4])
#loc125 = loc(fused[#loc5, #loc6])
#loc126 = loc(fused[#loc7, #loc8])
#loc127 = loc(fused[#loc9, #loc10])
#loc128 = loc(fused[#loc11, #loc12])
#loc129 = loc(fused[#loc13, #loc14])
#loc130 = loc(fused[#loc15, #loc16])
#loc131 = loc(fused[#loc17, #loc18])
#loc132 = loc(fused[#loc19, #loc20])
#loc133 = loc(fused[#loc23, #loc22])
#loc134 = loc(fused[#loc25, #loc24])
#loc135 = loc(fused[#loc30, #loc28])
#loc136 = loc(fused[#loc31, #loc32])
#loc137 = loc(fused[#loc33, #loc34])
#loc138 = loc(fused[#loc36, #loc37])
#loc139 = loc(fused[#loc38, #loc39])
#loc140 = loc(fused[#loc44, #loc45])
#loc141 = loc(fused[#loc49, #loc46])
#loc142 = loc(fused[#loc56, #loc55])
#loc143 = loc(fused[#loc62, #loc63])
#loc144 = loc(fused[#loc64, #loc65])
#loc145 = loc(fused[#loc66, #loc67])
#loc146 = loc(fused[#loc68, #loc69])
#loc147 = loc(fused[#loc70, #loc71])
#loc148 = loc(fused[#loc72, #loc73])
#loc149 = loc(fused[#loc74, #loc75])
#loc150 = loc(fused[#loc76, #loc77])
#loc151 = loc(fused[#loc78, #loc79])
#loc152 = loc(fused[#loc80, #loc81])
#loc153 = loc(fused[#loc84, #loc83])
#loc154 = loc(fused[#loc86, #loc85])
#loc155 = loc(fused[#loc91, #loc89])
#loc156 = loc(fused[#loc92, #loc93])
#loc157 = loc(fused[#loc94, #loc95])
#loc158 = loc(fused[#loc97, #loc98])
#loc159 = loc(fused[#loc99, #loc100])
#loc160 = loc(fused[#loc105, #loc106])
#loc161 = loc(fused[#loc110, #loc107])
#loc162 = loc(fused[#loc117, #loc116])
