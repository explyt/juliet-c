!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":23:21)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":23:28)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":52:25)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":52:32)
#loc101 = loc(fused[#loc7, #loc8])
#loc114 = loc(fused[#loc47, #loc48])
module @"/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc98)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc99)
  cir.func internal private @badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc101)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc9)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc10)
    cir.call @printLine(%1) : (!cir.ptr<!s8i>) -> () loc(#loc11)
    %2 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc12)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc13)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc13)
    cir.call @free(%4) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc12)
    cir.return loc(#loc6)
  } loc(#loc100)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc103)
    %1 = cir.alloca !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc104)
    %2 = cir.get_global @badSink : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc19)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>> loc(#loc104)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc20)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc105)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc107)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc25)
      %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc25)
      %9 = cir.const #cir.int<1> : !u64i loc(#loc25)
      %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc25)
      %11 = cir.alloca !u8i, !cir.ptr<!u8i>, %10 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc25)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc25)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc25)
      cir.store %13, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc107)
      %14 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
      %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc26)
      %16 = cir.const #cir.int<65> : !s32i loc(#loc27)
      %17 = cir.const #cir.int<100> : !s32i loc(#loc28)
      %18 = cir.const #cir.int<1> : !s32i loc(#loc29)
      %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc28)
      %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc28)
      cir.libc.memset %20 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc108)
      %21 = cir.const #cir.int<0> : !s32i loc(#loc32)
      %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc32)
      %23 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
      %24 = cir.const #cir.int<100> : !s32i loc(#loc34)
      %25 = cir.const #cir.int<1> : !s32i loc(#loc35)
      %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc34)
      %27 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc36)
      cir.store %22, %27 : !s8i, !cir.ptr<!s8i> loc(#loc109)
      %28 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
      cir.store %28, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc110)
    } loc(#loc106)
    %4 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc39)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
    cir.call %4(%5) : (!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc39)
    cir.return loc(#loc15)
  } loc(#loc102)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc112)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc43)
    cir.return loc(#loc42)
  } loc(#loc111)
  cir.func internal private @goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc47, #loc48])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc114)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc49)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%1) : (!cir.ptr<!s8i>) -> () loc(#loc51)
    %2 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc52)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc53)
    cir.call @free(%4) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc52)
    cir.return loc(#loc46)
  } loc(#loc113)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc115)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc56)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc116)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc118)
    %1 = cir.alloca !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc119)
    %2 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc64)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>> loc(#loc119)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc65)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc120)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc122)
      %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc71)
      %8 = cir.const #cir.int<100> : !s32i loc(#loc72)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc72)
      %10 = cir.const #cir.int<1> : !u64i loc(#loc123)
      %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc124)
      %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc71)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc125)
      cir.store %13, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc122)
      cir.scope {
        %29 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
        %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc78)
        %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc78)
        %32 = cir.cmp(eq, %29, %31) : !cir.ptr<!s8i>, !cir.bool loc(#loc127)
        cir.if %32 {
          %33 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc56)
          %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc56)
          cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc80)
          %35 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc81)
          %36 = cir.const #cir.int<1> : !s32i loc(#loc82)
          cir.call @exit(%36) : (!s32i) -> () extra(#fn_attr) loc(#loc81)
        } loc(#loc128)
      } loc(#loc126)
      %14 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
      %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc83)
      %16 = cir.const #cir.int<65> : !s32i loc(#loc84)
      %17 = cir.const #cir.int<100> : !s32i loc(#loc85)
      %18 = cir.const #cir.int<1> : !s32i loc(#loc86)
      %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc85)
      %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc85)
      cir.libc.memset %20 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc129)
      %21 = cir.const #cir.int<0> : !s32i loc(#loc89)
      %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc89)
      %23 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
      %24 = cir.const #cir.int<100> : !s32i loc(#loc91)
      %25 = cir.const #cir.int<1> : !s32i loc(#loc92)
      %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc91)
      %27 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc93)
      cir.store %22, %27 : !s8i, !cir.ptr<!s8i> loc(#loc130)
      %28 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
      cir.store %28, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc131)
    } loc(#loc121)
    %4 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc96)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
    cir.call %4(%5) : (!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc96)
    cir.return loc(#loc60)
  } loc(#loc117)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("/usr/include/stdlib.h":687:1)
#loc4 = loc("/usr/include/stdlib.h":687:32)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":23:1)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":28:1)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":24:1)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":25:15)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":25:5)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":27:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":27:10)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":30:1)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":45:1)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":32:5)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":32:12)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":34:5)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":34:32)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":35:12)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":35:5)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":36:5)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":42:5)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":38:9)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":38:37)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":39:16)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":39:28)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":39:33)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":39:37)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":39:9)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":39:38)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":40:29)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":40:9)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":40:20)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":40:24)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":40:25)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":41:16)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":41:9)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":44:5)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":44:13)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":79:1)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":82:1)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":81:5)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":81:13)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":52:1)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":57:1)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":53:1)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":54:15)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":54:5)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":56:5)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":56:10)
#loc54 = loc("/usr/include/stdlib.h":672:1)
#loc55 = loc("/usr/include/stdlib.h":672:45)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":69:23)
#loc57 = loc("/usr/include/stdlib.h":756:1)
#loc58 = loc("/usr/include/stdlib.h":756:70)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":59:1)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":77:1)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":61:5)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":61:12)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":62:5)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":62:32)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":63:12)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":63:5)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":64:5)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":75:5)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":66:9)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":66:60)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":66:37)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":66:44)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":66:48)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":66:59)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":67:9)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":71:9)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":67:13)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":67:27)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":68:9)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":69:13)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":70:13)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":70:18)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":72:16)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":72:28)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":72:33)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":72:37)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":72:9)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":72:38)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":73:29)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":73:9)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":73:20)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":73:24)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":73:25)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":74:16)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":74:9)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":76:5)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_44.c":76:13)
#loc98 = loc(fused[#loc1, #loc2])
#loc99 = loc(fused[#loc3, #loc4])
#loc100 = loc(fused[#loc5, #loc6])
#loc102 = loc(fused[#loc14, #loc15])
#loc103 = loc(fused[#loc16, #loc17])
#loc104 = loc(fused[#loc18, #loc19])
#loc105 = loc(fused[#loc21, #loc20])
#loc106 = loc(fused[#loc22, #loc23])
#loc107 = loc(fused[#loc24, #loc25])
#loc108 = loc(fused[#loc30, #loc31])
#loc109 = loc(fused[#loc33, #loc32])
#loc110 = loc(fused[#loc38, #loc37])
#loc111 = loc(fused[#loc41, #loc42])
#loc112 = loc(fused[#loc43, #loc44])
#loc113 = loc(fused[#loc45, #loc46])
#loc115 = loc(fused[#loc54, #loc55])
#loc116 = loc(fused[#loc57, #loc58])
#loc117 = loc(fused[#loc59, #loc60])
#loc118 = loc(fused[#loc61, #loc62])
#loc119 = loc(fused[#loc63, #loc64])
#loc120 = loc(fused[#loc66, #loc65])
#loc121 = loc(fused[#loc67, #loc68])
#loc122 = loc(fused[#loc69, #loc70])
#loc123 = loc(fused[#loc73, #loc74])
#loc124 = loc(fused[#loc72, #loc74])
#loc125 = loc(fused[#loc71, #loc70])
#loc126 = loc(fused[#loc75, #loc76])
#loc127 = loc(fused[#loc77, #loc78])
#loc128 = loc(fused[#loc79, #loc76])
#loc129 = loc(fused[#loc87, #loc88])
#loc130 = loc(fused[#loc90, #loc89])
#loc131 = loc(fused[#loc95, #loc94])
