!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc222 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":480:10)
#loc223 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":480:14)
#loc224 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":480:20)
#loc225 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":480:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc804 = loc(fused[#loc222, #loc223])
#loc805 = loc(fused[#loc224, #loc225])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc718)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc719)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc720)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc7)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc721)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc722)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc723)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc724)
  cir.func private @close(!s32i) -> !s32i loc(#loc725)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc726)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc20)
  cir.func private @__isoc99_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc727)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc23)
  cir.func private @printIntLine(!s32i) loc(#loc728)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_connect_socket_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc730)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc731)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc731)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc731)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc32)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc732)
    cir.scope {
      %4 = cir.const #cir.int<6> : !s32i loc(#loc36)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc735)
            %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc736)
            %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc737)
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc738)
            %9 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc739)
            %10 = cir.const #cir.int<1> : !s32i loc(#loc47)
            %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc47)
            cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc738)
            %12 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc50)
            %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
            %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc50)
            cir.store %14, %9 : !u64i, !cir.ptr<!u64i> loc(#loc739)
            cir.scope {
              cir.do {
                %15 = cir.const #cir.int<2> : !s32i loc(#loc54)
                %16 = cir.const #cir.int<1> : !s32i loc(#loc55)
                %17 = cir.const #cir.int<6> : !s32i loc(#loc56)
                %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc57)
                cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc741)
                cir.scope {
                  %69 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc62)
                  %70 = cir.const #cir.int<1> : !s32i loc(#loc63)
                  %71 = cir.unary(minus, %70) : !s32i, !s32i loc(#loc63)
                  %72 = cir.cmp(eq, %69, %71) : !s32i, !cir.bool loc(#loc743)
                  cir.if %72 {
                    cir.break loc(#loc65)
                  } loc(#loc744)
                } loc(#loc742)
                %19 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc745)
                %20 = cir.const #cir.int<0> : !s32i loc(#loc68)
                %21 = cir.const #cir.int<16> : !u64i loc(#loc746)
                cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc747)
                %22 = cir.const #cir.int<2> : !s32i loc(#loc73)
                %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc73)
                %24 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
                cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc748)
                %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc7)
                %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc7)
                %27 = cir.call @inet_addr(%26) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc76)
                %28 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc77)
                %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc78)
                cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc749)
                %30 = cir.const #cir.int<27015> : !s32i loc(#loc81)
                %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc81)
                %32 = cir.call @htons(%31) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc82)
                %33 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc83)
                cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc750)
                cir.scope {
                  %69 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc88)
                  %70 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc752)
                  %71 = cir.const #cir.int<16> : !u64i loc(#loc753)
                  %72 = cir.cast(integral, %71 : !u64i), !u32i loc(#loc753)
                  %73 = cir.call @connect(%69, %70, %72) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc93)
                  %74 = cir.const #cir.int<1> : !s32i loc(#loc94)
                  %75 = cir.unary(minus, %74) : !s32i, !s32i loc(#loc94)
                  %76 = cir.cmp(eq, %73, %75) : !s32i, !cir.bool loc(#loc754)
                  cir.if %76 {
                    cir.break loc(#loc96)
                  } loc(#loc755)
                } loc(#loc751)
                %34 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc97)
                %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
                %36 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc99)
                %37 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %36 : !u64i), !cir.ptr<!s8i> loc(#loc100)
                %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc756)
                %39 = cir.const #cir.int<1> : !u64i loc(#loc757)
                %40 = cir.const #cir.int<100> : !s32i loc(#loc105)
                %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc105)
                %42 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc106)
                %43 = cir.binop(sub, %41, %42) : !u64i loc(#loc758)
                %44 = cir.const #cir.int<1> : !s32i loc(#loc107)
                %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc107)
                %46 = cir.binop(sub, %43, %45) : !u64i loc(#loc759)
                %47 = cir.binop(mul, %39, %46) : !u64i loc(#loc760)
                %48 = cir.const #cir.int<0> : !s32i loc(#loc109)
                %49 = cir.call @recv(%34, %38, %47, %48) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc110)
                %50 = cir.cast(integral, %49 : !s64i), !s32i loc(#loc110)
                cir.store %50, %5 : !s32i, !cir.ptr<!s32i> loc(#loc761)
                cir.scope {
                  %69 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc115)
                  %70 = cir.const #cir.int<1> : !s32i loc(#loc116)
                  %71 = cir.unary(minus, %70) : !s32i, !s32i loc(#loc116)
                  %72 = cir.cmp(eq, %69, %71) : !s32i, !cir.bool loc(#loc763)
                  %73 = cir.ternary(%72, true {
                    %74 = cir.const #true loc(#loc117)
                    cir.yield %74 : !cir.bool loc(#loc117)
                  }, false {
                    %74 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc118)
                    %75 = cir.const #cir.int<0> : !s32i loc(#loc119)
                    %76 = cir.cmp(eq, %74, %75) : !s32i, !cir.bool loc(#loc764)
                    %77 = cir.ternary(%76, true {
                      %78 = cir.const #true loc(#loc117)
                      cir.yield %78 : !cir.bool loc(#loc117)
                    }, false {
                      %78 = cir.const #false loc(#loc117)
                      cir.yield %78 : !cir.bool loc(#loc117)
                    }) : (!cir.bool) -> !cir.bool loc(#loc117)
                    cir.yield %77 : !cir.bool loc(#loc117)
                  }) : (!cir.bool) -> !cir.bool loc(#loc117)
                  cir.if %73 {
                    cir.break loc(#loc121)
                  } loc(#loc765)
                } loc(#loc762)
                %51 = cir.const #cir.int<0> : !s32i loc(#loc122)
                %52 = cir.cast(integral, %51 : !s32i), !s8i loc(#loc122)
                %53 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
                %54 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc124)
                %55 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc125)
                %56 = cir.cast(integral, %55 : !s32i), !u64i loc(#loc125)
                %57 = cir.const #cir.int<1> : !u64i loc(#loc766)
                %58 = cir.binop(div, %56, %57) : !u64i loc(#loc767)
                %59 = cir.binop(add, %54, %58) : !u64i loc(#loc768)
                %60 = cir.ptr_stride(%53 : !cir.ptr<!s8i>, %59 : !u64i), !cir.ptr<!s8i> loc(#loc128)
                cir.store %52, %60 : !s8i, !cir.ptr<!s8i> loc(#loc769)
                %61 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc129)
                %62 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
                %63 = cir.const #cir.int<13> : !s32i loc(#loc131)
                %64 = cir.call @strchr(%62, %63) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc129)
                cir.store %64, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc770)
                cir.scope {
                  %69 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
                  %70 = cir.cast(ptr_to_bool, %69 : !cir.ptr<!s8i>), !cir.bool loc(#loc136)
                  cir.if %70 {
                    %71 = cir.const #cir.int<0> : !s32i loc(#loc138)
                    %72 = cir.cast(integral, %71 : !s32i), !s8i loc(#loc138)
                    %73 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
                    cir.store %72, %73 : !s8i, !cir.ptr<!s8i> loc(#loc773)
                  } loc(#loc772)
                } loc(#loc771)
                %65 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc141)
                %66 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
                %67 = cir.const #cir.int<10> : !s32i loc(#loc143)
                %68 = cir.call @strchr(%66, %67) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc141)
                cir.store %68, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc774)
                cir.scope {
                  %69 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc148)
                  %70 = cir.cast(ptr_to_bool, %69 : !cir.ptr<!s8i>), !cir.bool loc(#loc148)
                  cir.if %70 {
                    %71 = cir.const #cir.int<0> : !s32i loc(#loc150)
                    %72 = cir.cast(integral, %71 : !s32i), !s8i loc(#loc150)
                    %73 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
                    cir.store %72, %73 : !s8i, !cir.ptr<!s8i> loc(#loc777)
                  } loc(#loc776)
                } loc(#loc775)
                cir.yield loc(#loc53)
              } while {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc153)
                %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc153)
                cir.condition(%16) loc(#loc153)
              } loc(#loc740)
            } loc(#loc740)
            cir.scope {
              %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc156)
              %16 = cir.const #cir.int<1> : !s32i loc(#loc157)
              %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc157)
              %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc779)
              cir.if %18 {
                %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc159)
                %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc160)
              } loc(#loc780)
            } loc(#loc778)
          } loc(#loc734)
          cir.break loc(#loc161)
        } loc(#loc37)
        cir.case(default, []) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc20)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc20)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc163)
          cir.break loc(#loc164)
        } loc(#loc162)
        cir.yield loc(#loc34)
      } loc(#loc34)
    } loc(#loc733)
    cir.scope {
      %4 = cir.const #cir.int<7> : !s32i loc(#loc167)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc783)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc784)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc785)
            cir.scope {
              %8 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc177)
              %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc178)
              %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc23)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc23)
              %12 = cir.call @__isoc99_sscanf(%9, %11, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc177)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc179)
              %14 = cir.cmp(eq, %12, %13) : !s32i, !cir.bool loc(#loc787)
              cir.if %14 {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc181)
                cir.store %15, %7 : !s32i, !cir.ptr<!s32i> loc(#loc789)
                cir.scope {
                  %17 = cir.const #cir.int<0> : !s32i loc(#loc185)
                  cir.store %17, %5 : !s32i, !cir.ptr<!s32i> loc(#loc791)
                  cir.for : cond {
                    %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc187)
                    %19 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc188)
                    %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc792)
                    cir.condition(%20) loc(#loc189)
                  } body {
                    cir.scope {
                      %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc191)
                      %19 = cir.unary(inc, %18) : !s32i, !s32i loc(#loc192)
                      cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc794)
                    } loc(#loc793)
                    cir.yield loc(#loc184)
                  } step {
                    %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc193)
                    %19 = cir.unary(inc, %18) : !s32i, !s32i loc(#loc194)
                    cir.store %19, %5 : !s32i, !cir.ptr<!s32i> loc(#loc795)
                    cir.yield loc(#loc790)
                  } loc(#loc790)
                } loc(#loc790)
                %16 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc195)
                cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc196)
              } loc(#loc788)
            } loc(#loc786)
          } loc(#loc782)
          cir.break loc(#loc197)
        } loc(#loc168)
        cir.case(default, []) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc199)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc199)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc200)
          cir.break loc(#loc201)
        } loc(#loc198)
        cir.yield loc(#loc165)
      } loc(#loc165)
    } loc(#loc781)
    cir.return loc(#loc27)
  } loc(#loc729)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_connect_socket_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc797)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc204)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc798)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc206)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc799)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc208)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc800)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc210)
    cir.return loc(#loc203)
  } loc(#loc796)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc801)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc802)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc216)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc217)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc218)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc219)
  cir.func @main(%arg0: !s32i loc(fused[#loc222, #loc223]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc224, #loc225])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc804)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc805)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc221)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc226)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc226)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc227)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc228)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc228)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc229)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc216)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc216)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc230)
    %8 = cir.get_global @CWE606_Unchecked_Loop_Condition__char_connect_socket_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc806)
    cir.call @CWE606_Unchecked_Loop_Condition__char_connect_socket_15_good() : () -> () loc(#loc231)
    %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc217)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc217)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc233)
    %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc218)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc218)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc234)
    %13 = cir.get_global @CWE606_Unchecked_Loop_Condition__char_connect_socket_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc807)
    cir.call @CWE606_Unchecked_Loop_Condition__char_connect_socket_15_bad() : () -> () loc(#loc235)
    %14 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc219)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc219)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc237)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc238)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc808)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc808)
    cir.return %17 : !s32i loc(#loc808)
  } loc(#loc803)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc810)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc811)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc811)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc811)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc246)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc812)
    cir.scope {
      %4 = cir.const #cir.int<6> : !s32i loc(#loc250)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc815)
            %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc816)
            %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc817)
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc818)
            %9 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc819)
            %10 = cir.const #cir.int<1> : !s32i loc(#loc261)
            %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc261)
            cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc818)
            %12 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc264)
            %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc265)
            %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc264)
            cir.store %14, %9 : !u64i, !cir.ptr<!u64i> loc(#loc819)
            cir.scope {
              cir.do {
                %15 = cir.const #cir.int<2> : !s32i loc(#loc268)
                %16 = cir.const #cir.int<1> : !s32i loc(#loc269)
                %17 = cir.const #cir.int<6> : !s32i loc(#loc270)
                %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc271)
                cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc821)
                cir.scope {
                  %69 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc276)
                  %70 = cir.const #cir.int<1> : !s32i loc(#loc277)
                  %71 = cir.unary(minus, %70) : !s32i, !s32i loc(#loc277)
                  %72 = cir.cmp(eq, %69, %71) : !s32i, !cir.bool loc(#loc823)
                  cir.if %72 {
                    cir.break loc(#loc279)
                  } loc(#loc824)
                } loc(#loc822)
                %19 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc825)
                %20 = cir.const #cir.int<0> : !s32i loc(#loc282)
                %21 = cir.const #cir.int<16> : !u64i loc(#loc826)
                cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc827)
                %22 = cir.const #cir.int<2> : !s32i loc(#loc287)
                %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc287)
                %24 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
                cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc828)
                %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc289)
                %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc289)
                %27 = cir.call @inet_addr(%26) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc290)
                %28 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc77)
                %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc78)
                cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc829)
                %30 = cir.const #cir.int<27015> : !s32i loc(#loc293)
                %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc293)
                %32 = cir.call @htons(%31) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc294)
                %33 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc83)
                cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc830)
                cir.scope {
                  %69 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc299)
                  %70 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc832)
                  %71 = cir.const #cir.int<16> : !u64i loc(#loc833)
                  %72 = cir.cast(integral, %71 : !u64i), !u32i loc(#loc833)
                  %73 = cir.call @connect(%69, %70, %72) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc304)
                  %74 = cir.const #cir.int<1> : !s32i loc(#loc305)
                  %75 = cir.unary(minus, %74) : !s32i, !s32i loc(#loc305)
                  %76 = cir.cmp(eq, %73, %75) : !s32i, !cir.bool loc(#loc834)
                  cir.if %76 {
                    cir.break loc(#loc307)
                  } loc(#loc835)
                } loc(#loc831)
                %34 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc308)
                %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc309)
                %36 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc310)
                %37 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %36 : !u64i), !cir.ptr<!s8i> loc(#loc311)
                %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc836)
                %39 = cir.const #cir.int<1> : !u64i loc(#loc837)
                %40 = cir.const #cir.int<100> : !s32i loc(#loc316)
                %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc316)
                %42 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc317)
                %43 = cir.binop(sub, %41, %42) : !u64i loc(#loc838)
                %44 = cir.const #cir.int<1> : !s32i loc(#loc318)
                %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc318)
                %46 = cir.binop(sub, %43, %45) : !u64i loc(#loc839)
                %47 = cir.binop(mul, %39, %46) : !u64i loc(#loc840)
                %48 = cir.const #cir.int<0> : !s32i loc(#loc320)
                %49 = cir.call @recv(%34, %38, %47, %48) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc321)
                %50 = cir.cast(integral, %49 : !s64i), !s32i loc(#loc321)
                cir.store %50, %5 : !s32i, !cir.ptr<!s32i> loc(#loc841)
                cir.scope {
                  %69 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc326)
                  %70 = cir.const #cir.int<1> : !s32i loc(#loc327)
                  %71 = cir.unary(minus, %70) : !s32i, !s32i loc(#loc327)
                  %72 = cir.cmp(eq, %69, %71) : !s32i, !cir.bool loc(#loc843)
                  %73 = cir.ternary(%72, true {
                    %74 = cir.const #true loc(#loc328)
                    cir.yield %74 : !cir.bool loc(#loc328)
                  }, false {
                    %74 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc329)
                    %75 = cir.const #cir.int<0> : !s32i loc(#loc330)
                    %76 = cir.cmp(eq, %74, %75) : !s32i, !cir.bool loc(#loc844)
                    %77 = cir.ternary(%76, true {
                      %78 = cir.const #true loc(#loc328)
                      cir.yield %78 : !cir.bool loc(#loc328)
                    }, false {
                      %78 = cir.const #false loc(#loc328)
                      cir.yield %78 : !cir.bool loc(#loc328)
                    }) : (!cir.bool) -> !cir.bool loc(#loc328)
                    cir.yield %77 : !cir.bool loc(#loc328)
                  }) : (!cir.bool) -> !cir.bool loc(#loc328)
                  cir.if %73 {
                    cir.break loc(#loc332)
                  } loc(#loc845)
                } loc(#loc842)
                %51 = cir.const #cir.int<0> : !s32i loc(#loc333)
                %52 = cir.cast(integral, %51 : !s32i), !s8i loc(#loc333)
                %53 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc334)
                %54 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc335)
                %55 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc336)
                %56 = cir.cast(integral, %55 : !s32i), !u64i loc(#loc336)
                %57 = cir.const #cir.int<1> : !u64i loc(#loc846)
                %58 = cir.binop(div, %56, %57) : !u64i loc(#loc847)
                %59 = cir.binop(add, %54, %58) : !u64i loc(#loc848)
                %60 = cir.ptr_stride(%53 : !cir.ptr<!s8i>, %59 : !u64i), !cir.ptr<!s8i> loc(#loc339)
                cir.store %52, %60 : !s8i, !cir.ptr<!s8i> loc(#loc849)
                %61 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc340)
                %62 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc341)
                %63 = cir.const #cir.int<13> : !s32i loc(#loc342)
                %64 = cir.call @strchr(%62, %63) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc340)
                cir.store %64, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc850)
                cir.scope {
                  %69 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc347)
                  %70 = cir.cast(ptr_to_bool, %69 : !cir.ptr<!s8i>), !cir.bool loc(#loc347)
                  cir.if %70 {
                    %71 = cir.const #cir.int<0> : !s32i loc(#loc349)
                    %72 = cir.cast(integral, %71 : !s32i), !s8i loc(#loc349)
                    %73 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc350)
                    cir.store %72, %73 : !s8i, !cir.ptr<!s8i> loc(#loc853)
                  } loc(#loc852)
                } loc(#loc851)
                %65 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc352)
                %66 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc353)
                %67 = cir.const #cir.int<10> : !s32i loc(#loc354)
                %68 = cir.call @strchr(%66, %67) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc352)
                cir.store %68, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc854)
                cir.scope {
                  %69 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc359)
                  %70 = cir.cast(ptr_to_bool, %69 : !cir.ptr<!s8i>), !cir.bool loc(#loc359)
                  cir.if %70 {
                    %71 = cir.const #cir.int<0> : !s32i loc(#loc361)
                    %72 = cir.cast(integral, %71 : !s32i), !s8i loc(#loc361)
                    %73 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc362)
                    cir.store %72, %73 : !s8i, !cir.ptr<!s8i> loc(#loc857)
                  } loc(#loc856)
                } loc(#loc855)
                cir.yield loc(#loc267)
              } while {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc364)
                %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc364)
                cir.condition(%16) loc(#loc364)
              } loc(#loc820)
            } loc(#loc820)
            cir.scope {
              %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc367)
              %16 = cir.const #cir.int<1> : !s32i loc(#loc368)
              %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc368)
              %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc859)
              cir.if %18 {
                %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc370)
                %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc371)
              } loc(#loc860)
            } loc(#loc858)
          } loc(#loc814)
          cir.break loc(#loc372)
        } loc(#loc251)
        cir.case(default, []) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc374)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc374)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc375)
          cir.break loc(#loc376)
        } loc(#loc373)
        cir.yield loc(#loc248)
      } loc(#loc248)
    } loc(#loc813)
    cir.scope {
      %4 = cir.const #cir.int<8> : !s32i loc(#loc379)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc381)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc381)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc382)
          cir.break loc(#loc383)
        } loc(#loc380)
        cir.case(default, []) {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc863)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc864)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc865)
            cir.scope {
              %8 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc393)
              %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc394)
              %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc395)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc395)
              %12 = cir.call @__isoc99_sscanf(%9, %11, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc393)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc396)
              %14 = cir.cmp(eq, %12, %13) : !s32i, !cir.bool loc(#loc867)
              cir.if %14 {
                cir.scope {
                  %15 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc400)
                  %16 = cir.const #cir.int<10000> : !s32i loc(#loc401)
                  %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc870)
                  cir.if %17 {
                    %18 = cir.const #cir.int<0> : !s32i loc(#loc403)
                    cir.store %18, %7 : !s32i, !cir.ptr<!s32i> loc(#loc872)
                    cir.scope {
                      %20 = cir.const #cir.int<0> : !s32i loc(#loc407)
                      cir.store %20, %5 : !s32i, !cir.ptr<!s32i> loc(#loc874)
                      cir.for : cond {
                        %21 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc409)
                        %22 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc410)
                        %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc875)
                        cir.condition(%23) loc(#loc411)
                      } body {
                        cir.scope {
                          %21 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc413)
                          %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc414)
                          cir.store %22, %7 : !s32i, !cir.ptr<!s32i> loc(#loc877)
                        } loc(#loc876)
                        cir.yield loc(#loc406)
                      } step {
                        %21 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc415)
                        %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc416)
                        cir.store %22, %5 : !s32i, !cir.ptr<!s32i> loc(#loc878)
                        cir.yield loc(#loc873)
                      } loc(#loc873)
                    } loc(#loc873)
                    %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc417)
                    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc418)
                  } loc(#loc871)
                } loc(#loc869)
              } loc(#loc868)
            } loc(#loc866)
          } loc(#loc862)
          cir.break loc(#loc419)
        } loc(#loc384)
        cir.yield loc(#loc377)
      } loc(#loc377)
    } loc(#loc861)
    cir.return loc(#loc241)
  } loc(#loc809)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc880)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc881)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc881)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc881)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc426)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc882)
    cir.scope {
      %4 = cir.const #cir.int<6> : !s32i loc(#loc430)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc885)
            %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc886)
            %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc887)
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc888)
            %9 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc889)
            %10 = cir.const #cir.int<1> : !s32i loc(#loc441)
            %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc441)
            cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc888)
            %12 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc444)
            %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc445)
            %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc444)
            cir.store %14, %9 : !u64i, !cir.ptr<!u64i> loc(#loc889)
            cir.scope {
              cir.do {
                %15 = cir.const #cir.int<2> : !s32i loc(#loc448)
                %16 = cir.const #cir.int<1> : !s32i loc(#loc449)
                %17 = cir.const #cir.int<6> : !s32i loc(#loc450)
                %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc451)
                cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc891)
                cir.scope {
                  %69 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc456)
                  %70 = cir.const #cir.int<1> : !s32i loc(#loc457)
                  %71 = cir.unary(minus, %70) : !s32i, !s32i loc(#loc457)
                  %72 = cir.cmp(eq, %69, %71) : !s32i, !cir.bool loc(#loc893)
                  cir.if %72 {
                    cir.break loc(#loc459)
                  } loc(#loc894)
                } loc(#loc892)
                %19 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc895)
                %20 = cir.const #cir.int<0> : !s32i loc(#loc462)
                %21 = cir.const #cir.int<16> : !u64i loc(#loc896)
                cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc897)
                %22 = cir.const #cir.int<2> : !s32i loc(#loc467)
                %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc467)
                %24 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
                cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc898)
                %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc469)
                %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc469)
                %27 = cir.call @inet_addr(%26) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc470)
                %28 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc77)
                %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc78)
                cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc899)
                %30 = cir.const #cir.int<27015> : !s32i loc(#loc473)
                %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc473)
                %32 = cir.call @htons(%31) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc474)
                %33 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc83)
                cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc900)
                cir.scope {
                  %69 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc479)
                  %70 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc902)
                  %71 = cir.const #cir.int<16> : !u64i loc(#loc903)
                  %72 = cir.cast(integral, %71 : !u64i), !u32i loc(#loc903)
                  %73 = cir.call @connect(%69, %70, %72) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc484)
                  %74 = cir.const #cir.int<1> : !s32i loc(#loc485)
                  %75 = cir.unary(minus, %74) : !s32i, !s32i loc(#loc485)
                  %76 = cir.cmp(eq, %73, %75) : !s32i, !cir.bool loc(#loc904)
                  cir.if %76 {
                    cir.break loc(#loc487)
                  } loc(#loc905)
                } loc(#loc901)
                %34 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc488)
                %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc489)
                %36 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc490)
                %37 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %36 : !u64i), !cir.ptr<!s8i> loc(#loc491)
                %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc906)
                %39 = cir.const #cir.int<1> : !u64i loc(#loc907)
                %40 = cir.const #cir.int<100> : !s32i loc(#loc496)
                %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc496)
                %42 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc497)
                %43 = cir.binop(sub, %41, %42) : !u64i loc(#loc908)
                %44 = cir.const #cir.int<1> : !s32i loc(#loc498)
                %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc498)
                %46 = cir.binop(sub, %43, %45) : !u64i loc(#loc909)
                %47 = cir.binop(mul, %39, %46) : !u64i loc(#loc910)
                %48 = cir.const #cir.int<0> : !s32i loc(#loc500)
                %49 = cir.call @recv(%34, %38, %47, %48) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc501)
                %50 = cir.cast(integral, %49 : !s64i), !s32i loc(#loc501)
                cir.store %50, %5 : !s32i, !cir.ptr<!s32i> loc(#loc911)
                cir.scope {
                  %69 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc506)
                  %70 = cir.const #cir.int<1> : !s32i loc(#loc507)
                  %71 = cir.unary(minus, %70) : !s32i, !s32i loc(#loc507)
                  %72 = cir.cmp(eq, %69, %71) : !s32i, !cir.bool loc(#loc913)
                  %73 = cir.ternary(%72, true {
                    %74 = cir.const #true loc(#loc508)
                    cir.yield %74 : !cir.bool loc(#loc508)
                  }, false {
                    %74 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc509)
                    %75 = cir.const #cir.int<0> : !s32i loc(#loc510)
                    %76 = cir.cmp(eq, %74, %75) : !s32i, !cir.bool loc(#loc914)
                    %77 = cir.ternary(%76, true {
                      %78 = cir.const #true loc(#loc508)
                      cir.yield %78 : !cir.bool loc(#loc508)
                    }, false {
                      %78 = cir.const #false loc(#loc508)
                      cir.yield %78 : !cir.bool loc(#loc508)
                    }) : (!cir.bool) -> !cir.bool loc(#loc508)
                    cir.yield %77 : !cir.bool loc(#loc508)
                  }) : (!cir.bool) -> !cir.bool loc(#loc508)
                  cir.if %73 {
                    cir.break loc(#loc512)
                  } loc(#loc915)
                } loc(#loc912)
                %51 = cir.const #cir.int<0> : !s32i loc(#loc513)
                %52 = cir.cast(integral, %51 : !s32i), !s8i loc(#loc513)
                %53 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc514)
                %54 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc515)
                %55 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc516)
                %56 = cir.cast(integral, %55 : !s32i), !u64i loc(#loc516)
                %57 = cir.const #cir.int<1> : !u64i loc(#loc916)
                %58 = cir.binop(div, %56, %57) : !u64i loc(#loc917)
                %59 = cir.binop(add, %54, %58) : !u64i loc(#loc918)
                %60 = cir.ptr_stride(%53 : !cir.ptr<!s8i>, %59 : !u64i), !cir.ptr<!s8i> loc(#loc519)
                cir.store %52, %60 : !s8i, !cir.ptr<!s8i> loc(#loc919)
                %61 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc520)
                %62 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc521)
                %63 = cir.const #cir.int<13> : !s32i loc(#loc522)
                %64 = cir.call @strchr(%62, %63) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc520)
                cir.store %64, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc920)
                cir.scope {
                  %69 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc527)
                  %70 = cir.cast(ptr_to_bool, %69 : !cir.ptr<!s8i>), !cir.bool loc(#loc527)
                  cir.if %70 {
                    %71 = cir.const #cir.int<0> : !s32i loc(#loc529)
                    %72 = cir.cast(integral, %71 : !s32i), !s8i loc(#loc529)
                    %73 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc530)
                    cir.store %72, %73 : !s8i, !cir.ptr<!s8i> loc(#loc923)
                  } loc(#loc922)
                } loc(#loc921)
                %65 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc532)
                %66 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc533)
                %67 = cir.const #cir.int<10> : !s32i loc(#loc534)
                %68 = cir.call @strchr(%66, %67) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc532)
                cir.store %68, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc924)
                cir.scope {
                  %69 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc539)
                  %70 = cir.cast(ptr_to_bool, %69 : !cir.ptr<!s8i>), !cir.bool loc(#loc539)
                  cir.if %70 {
                    %71 = cir.const #cir.int<0> : !s32i loc(#loc541)
                    %72 = cir.cast(integral, %71 : !s32i), !s8i loc(#loc541)
                    %73 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc542)
                    cir.store %72, %73 : !s8i, !cir.ptr<!s8i> loc(#loc927)
                  } loc(#loc926)
                } loc(#loc925)
                cir.yield loc(#loc447)
              } while {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc544)
                %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc544)
                cir.condition(%16) loc(#loc544)
              } loc(#loc890)
            } loc(#loc890)
            cir.scope {
              %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc547)
              %16 = cir.const #cir.int<1> : !s32i loc(#loc548)
              %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc548)
              %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc929)
              cir.if %18 {
                %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc550)
                %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc551)
              } loc(#loc930)
            } loc(#loc928)
          } loc(#loc884)
          cir.break loc(#loc552)
        } loc(#loc431)
        cir.case(default, []) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc554)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc554)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc555)
          cir.break loc(#loc556)
        } loc(#loc553)
        cir.yield loc(#loc428)
      } loc(#loc428)
    } loc(#loc883)
    cir.scope {
      %4 = cir.const #cir.int<7> : !s32i loc(#loc559)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc933)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc934)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc935)
            cir.scope {
              %8 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc569)
              %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc570)
              %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc571)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc571)
              %12 = cir.call @__isoc99_sscanf(%9, %11, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc569)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc572)
              %14 = cir.cmp(eq, %12, %13) : !s32i, !cir.bool loc(#loc937)
              cir.if %14 {
                cir.scope {
                  %15 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc576)
                  %16 = cir.const #cir.int<10000> : !s32i loc(#loc577)
                  %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc940)
                  cir.if %17 {
                    %18 = cir.const #cir.int<0> : !s32i loc(#loc579)
                    cir.store %18, %7 : !s32i, !cir.ptr<!s32i> loc(#loc942)
                    cir.scope {
                      %20 = cir.const #cir.int<0> : !s32i loc(#loc583)
                      cir.store %20, %5 : !s32i, !cir.ptr<!s32i> loc(#loc944)
                      cir.for : cond {
                        %21 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc585)
                        %22 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc586)
                        %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc945)
                        cir.condition(%23) loc(#loc587)
                      } body {
                        cir.scope {
                          %21 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc589)
                          %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc590)
                          cir.store %22, %7 : !s32i, !cir.ptr<!s32i> loc(#loc947)
                        } loc(#loc946)
                        cir.yield loc(#loc582)
                      } step {
                        %21 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc591)
                        %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc592)
                        cir.store %22, %5 : !s32i, !cir.ptr<!s32i> loc(#loc948)
                        cir.yield loc(#loc943)
                      } loc(#loc943)
                    } loc(#loc943)
                    %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc593)
                    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc594)
                  } loc(#loc941)
                } loc(#loc939)
              } loc(#loc938)
            } loc(#loc936)
          } loc(#loc932)
          cir.break loc(#loc595)
        } loc(#loc560)
        cir.case(default, []) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc597)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc597)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc598)
          cir.break loc(#loc599)
        } loc(#loc596)
        cir.yield loc(#loc557)
      } loc(#loc557)
    } loc(#loc931)
    cir.return loc(#loc421)
  } loc(#loc879)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc949)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"15\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc602)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc951)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc952)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc952)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc952)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc609)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc953)
    cir.scope {
      %4 = cir.const #cir.int<5> : !s32i loc(#loc613)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc615)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc615)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc616)
          cir.break loc(#loc617)
        } loc(#loc614)
        cir.case(default, []) {
          %5 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc619)
          %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc620)
          %7 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc602)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc602)
          %9 = cir.call @strcpy(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc619)
          cir.break loc(#loc621)
        } loc(#loc618)
        cir.yield loc(#loc611)
      } loc(#loc611)
    } loc(#loc954)
    cir.scope {
      %4 = cir.const #cir.int<7> : !s32i loc(#loc624)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc957)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc958)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc959)
            cir.scope {
              %8 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc634)
              %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc635)
              %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc636)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc636)
              %12 = cir.call @__isoc99_sscanf(%9, %11, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc634)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc637)
              %14 = cir.cmp(eq, %12, %13) : !s32i, !cir.bool loc(#loc961)
              cir.if %14 {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc639)
                cir.store %15, %7 : !s32i, !cir.ptr<!s32i> loc(#loc963)
                cir.scope {
                  %17 = cir.const #cir.int<0> : !s32i loc(#loc643)
                  cir.store %17, %5 : !s32i, !cir.ptr<!s32i> loc(#loc965)
                  cir.for : cond {
                    %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc645)
                    %19 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc646)
                    %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc966)
                    cir.condition(%20) loc(#loc647)
                  } body {
                    cir.scope {
                      %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc649)
                      %19 = cir.unary(inc, %18) : !s32i, !s32i loc(#loc650)
                      cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc968)
                    } loc(#loc967)
                    cir.yield loc(#loc642)
                  } step {
                    %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc651)
                    %19 = cir.unary(inc, %18) : !s32i, !s32i loc(#loc652)
                    cir.store %19, %5 : !s32i, !cir.ptr<!s32i> loc(#loc969)
                    cir.yield loc(#loc964)
                  } loc(#loc964)
                } loc(#loc964)
                %16 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc653)
                cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc654)
              } loc(#loc962)
            } loc(#loc960)
          } loc(#loc956)
          cir.break loc(#loc655)
        } loc(#loc625)
        cir.case(default, []) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc657)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc657)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc658)
          cir.break loc(#loc659)
        } loc(#loc656)
        cir.yield loc(#loc622)
      } loc(#loc622)
    } loc(#loc955)
    cir.return loc(#loc604)
  } loc(#loc950)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc971)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc972)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc972)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc972)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc666)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc973)
    cir.scope {
      %4 = cir.const #cir.int<6> : !s32i loc(#loc670)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %5 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc672)
          %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc673)
          %7 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc674)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc674)
          %9 = cir.call @strcpy(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc672)
          cir.break loc(#loc675)
        } loc(#loc671)
        cir.case(default, []) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc677)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc677)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc678)
          cir.break loc(#loc679)
        } loc(#loc676)
        cir.yield loc(#loc668)
      } loc(#loc668)
    } loc(#loc974)
    cir.scope {
      %4 = cir.const #cir.int<7> : !s32i loc(#loc682)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc977)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc978)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc979)
            cir.scope {
              %8 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc692)
              %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc693)
              %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc694)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc694)
              %12 = cir.call @__isoc99_sscanf(%9, %11, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc692)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc695)
              %14 = cir.cmp(eq, %12, %13) : !s32i, !cir.bool loc(#loc981)
              cir.if %14 {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc697)
                cir.store %15, %7 : !s32i, !cir.ptr<!s32i> loc(#loc983)
                cir.scope {
                  %17 = cir.const #cir.int<0> : !s32i loc(#loc701)
                  cir.store %17, %5 : !s32i, !cir.ptr<!s32i> loc(#loc985)
                  cir.for : cond {
                    %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc703)
                    %19 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc704)
                    %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc986)
                    cir.condition(%20) loc(#loc705)
                  } body {
                    cir.scope {
                      %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc707)
                      %19 = cir.unary(inc, %18) : !s32i, !s32i loc(#loc708)
                      cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc988)
                    } loc(#loc987)
                    cir.yield loc(#loc700)
                  } step {
                    %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc709)
                    %19 = cir.unary(inc, %18) : !s32i, !s32i loc(#loc710)
                    cir.store %19, %5 : !s32i, !cir.ptr<!s32i> loc(#loc989)
                    cir.yield loc(#loc984)
                  } loc(#loc984)
                } loc(#loc984)
                %16 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc711)
                cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc712)
              } loc(#loc982)
            } loc(#loc980)
          } loc(#loc976)
          cir.break loc(#loc713)
        } loc(#loc683)
        cir.case(default, []) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc715)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc715)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc716)
          cir.break loc(#loc717)
        } loc(#loc714)
        cir.yield loc(#loc680)
      } loc(#loc680)
    } loc(#loc975)
    cir.return loc(#loc661)
  } loc(#loc970)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/sys/socket.h":102:1)
#loc4 = loc("/usr/include/sys/socket.h":102:62)
#loc5 = loc("/usr/include/arpa/inet.h":34:1)
#loc6 = loc("/usr/include/arpa/inet.h":34:47)
#loc7 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":84:49)
#loc8 = loc("/usr/include/netinet/in.h":404:1)
#loc9 = loc("/usr/include/netinet/in.h":405:40)
#loc10 = loc("/usr/include/sys/socket.h":126:1)
#loc11 = loc("/usr/include/sys/socket.h":126:75)
#loc12 = loc("/usr/include/sys/socket.h":145:1)
#loc13 = loc("/usr/include/sys/socket.h":145:68)
#loc14 = loc("/usr/include/string.h":246:1)
#loc15 = loc("/usr/include/string.h":247:33)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc19 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc20 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":127:19)
#loc21 = loc("/usr/include/stdio.h":468:1)
#loc22 = loc("/usr/include/stdio.h":468:12)
#loc23 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":135:26)
#loc24 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc25 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc26 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":49:1)
#loc27 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":153:1)
#loc28 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":51:5)
#loc29 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":51:12)
#loc30 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":52:5)
#loc31 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":52:28)
#loc32 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":53:12)
#loc33 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":53:5)
#loc34 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":54:5)
#loc35 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":129:5)
#loc36 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":54:12)
#loc37 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":56:5)
#loc38 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":57:5)
#loc39 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":123:5)
#loc40 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":62:9)
#loc41 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":62:13)
#loc42 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":63:9)
#loc43 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":63:28)
#loc44 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":64:9)
#loc45 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":64:15)
#loc46 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":65:9)
#loc47 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":65:32)
#loc48 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":66:9)
#loc49 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":66:37)
#loc50 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":66:26)
#loc51 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":66:33)
#loc52 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":67:9)
#loc53 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":112:17)
#loc54 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":77:36)
#loc55 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":77:45)
#loc56 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":77:58)
#loc57 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":77:29)
#loc58 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":77:13)
#loc59 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":77:69)
#loc60 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":78:13)
#loc61 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":81:13)
#loc62 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":78:17)
#loc63 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":78:34)
#loc64 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":79:13)
#loc65 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":80:17)
#loc66 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":82:20)
#loc67 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":82:21)
#loc68 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":82:30)
#loc69 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":82:33)
#loc70 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":82:47)
#loc71 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":82:13)
#loc72 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":82:48)
#loc73 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":83:34)
#loc74 = loc("/usr/include/netinet/in.h":249:5)
#loc75 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":83:13)
#loc76 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":84:39)
#loc77 = loc("/usr/include/netinet/in.h":251:20)
#loc78 = loc("/usr/include/netinet/in.h":33:15)
#loc79 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":84:13)
#loc80 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":84:59)
#loc81 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":85:38)
#loc82 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":85:32)
#loc83 = loc("/usr/include/netinet/in.h":250:15)
#loc84 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":85:13)
#loc85 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":85:46)
#loc86 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":86:13)
#loc87 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":89:13)
#loc88 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":86:25)
#loc89 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":86:58)
#loc90 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":86:59)
#loc91 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":86:68)
#loc92 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":86:82)
#loc93 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":86:17)
#loc94 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":86:88)
#loc95 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":87:13)
#loc96 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":88:17)
#loc97 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":93:31)
#loc98 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":93:55)
#loc99 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":93:62)
#loc100 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":93:60)
#loc101 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":93:46)
#loc102 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":93:69)
#loc103 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":93:72)
#loc104 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":93:83)
#loc105 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":93:88)
#loc106 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":93:94)
#loc107 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":93:104)
#loc108 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":93:105)
#loc109 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":93:108)
#loc110 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":93:26)
#loc111 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":93:13)
#loc112 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":93:109)
#loc113 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":94:13)
#loc114 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":97:13)
#loc115 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":94:17)
#loc116 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":94:31)
#loc117 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":94:44)
#loc118 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":94:47)
#loc119 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":94:61)
#loc120 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":95:13)
#loc121 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":96:17)
#loc122 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":99:57)
#loc123 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":99:13)
#loc124 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":99:18)
#loc125 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":99:28)
#loc126 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":99:41)
#loc127 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":99:52)
#loc128 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":99:53)
#loc129 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":101:23)
#loc130 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":101:30)
#loc131 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":101:36)
#loc132 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":101:13)
#loc133 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":101:40)
#loc134 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":102:13)
#loc135 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":105:13)
#loc136 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":102:17)
#loc137 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":103:13)
#loc138 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":104:28)
#loc139 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":104:18)
#loc140 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":104:17)
#loc141 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":106:23)
#loc142 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":106:30)
#loc143 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":106:36)
#loc144 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":106:13)
#loc145 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":106:40)
#loc146 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":107:13)
#loc147 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":110:13)
#loc148 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":107:17)
#loc149 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":108:13)
#loc150 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":109:28)
#loc151 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":109:18)
#loc152 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":109:17)
#loc153 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":112:16)
#loc154 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":113:9)
#loc155 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":116:9)
#loc156 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":113:13)
#loc157 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":113:30)
#loc158 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":114:9)
#loc159 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":115:26)
#loc160 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":115:13)
#loc161 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":124:5)
#loc162 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":125:5)
#loc163 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":127:9)
#loc164 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":128:9)
#loc165 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":130:5)
#loc166 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":152:5)
#loc167 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":130:12)
#loc168 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":132:5)
#loc169 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":133:5)
#loc170 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":146:5)
#loc171 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":134:9)
#loc172 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":134:13)
#loc173 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":134:16)
#loc174 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":134:19)
#loc175 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":135:9)
#loc176 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":145:9)
#loc177 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":135:13)
#loc178 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":135:20)
#loc179 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":135:39)
#loc180 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":136:9)
#loc181 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":138:27)
#loc182 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":138:13)
#loc183 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":139:13)
#loc184 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":143:13)
#loc185 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":139:22)
#loc186 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":139:18)
#loc187 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":139:25)
#loc188 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":139:29)
#loc189 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":139:27)
#loc190 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":140:13)
#loc191 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":142:28)
#loc192 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":142:17)
#loc193 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":139:33)
#loc194 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":139:32)
#loc195 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":144:26)
#loc196 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":144:13)
#loc197 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":147:5)
#loc198 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":148:5)
#loc199 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":150:19)
#loc200 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":150:9)
#loc201 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":151:9)
#loc202 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":463:1)
#loc203 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":469:1)
#loc204 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":465:5)
#loc205 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":465:14)
#loc206 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":466:5)
#loc207 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":466:14)
#loc208 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":467:5)
#loc209 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":467:14)
#loc210 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":468:5)
#loc211 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":468:14)
#loc212 = loc("/usr/include/stdlib.h":575:1)
#loc213 = loc("/usr/include/stdlib.h":575:41)
#loc214 = loc("/usr/include/time.h":76:1)
#loc215 = loc("/usr/include/time.h":76:38)
#loc216 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":485:15)
#loc217 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":487:15)
#loc218 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":490:15)
#loc219 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":492:15)
#loc220 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":480:1)
#loc221 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":495:1)
#loc226 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":481:1)
#loc227 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":483:27)
#loc228 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":483:22)
#loc229 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":483:5)
#loc230 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":485:5)
#loc231 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":486:5)
#loc232 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":486:66)
#loc233 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":487:5)
#loc234 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":490:5)
#loc235 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":491:5)
#loc236 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":491:65)
#loc237 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":492:5)
#loc238 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":494:12)
#loc239 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":494:5)
#loc240 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":160:1)
#loc241 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":267:1)
#loc242 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":162:5)
#loc243 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":162:12)
#loc244 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":163:5)
#loc245 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":163:28)
#loc246 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":164:12)
#loc247 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":164:5)
#loc248 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":165:5)
#loc249 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":240:5)
#loc250 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":165:12)
#loc251 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":167:5)
#loc252 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":168:5)
#loc253 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":234:5)
#loc254 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":173:9)
#loc255 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":173:13)
#loc256 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":174:9)
#loc257 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":174:28)
#loc258 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":175:9)
#loc259 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":175:15)
#loc260 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":176:9)
#loc261 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":176:32)
#loc262 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":177:9)
#loc263 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":177:37)
#loc264 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":177:26)
#loc265 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":177:33)
#loc266 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":178:9)
#loc267 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":223:17)
#loc268 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":188:36)
#loc269 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":188:45)
#loc270 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":188:58)
#loc271 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":188:29)
#loc272 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":188:13)
#loc273 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":188:69)
#loc274 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":189:13)
#loc275 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":192:13)
#loc276 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":189:17)
#loc277 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":189:34)
#loc278 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":190:13)
#loc279 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":191:17)
#loc280 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":193:20)
#loc281 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":193:21)
#loc282 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":193:30)
#loc283 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":193:33)
#loc284 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":193:47)
#loc285 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":193:13)
#loc286 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":193:48)
#loc287 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":194:34)
#loc288 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":194:13)
#loc289 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":195:49)
#loc290 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":195:39)
#loc291 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":195:13)
#loc292 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":195:59)
#loc293 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":196:38)
#loc294 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":196:32)
#loc295 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":196:13)
#loc296 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":196:46)
#loc297 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":197:13)
#loc298 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":200:13)
#loc299 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":197:25)
#loc300 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":197:58)
#loc301 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":197:59)
#loc302 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":197:68)
#loc303 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":197:82)
#loc304 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":197:17)
#loc305 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":197:88)
#loc306 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":198:13)
#loc307 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":199:17)
#loc308 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":204:31)
#loc309 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":204:55)
#loc310 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":204:62)
#loc311 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":204:60)
#loc312 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":204:46)
#loc313 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":204:69)
#loc314 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":204:72)
#loc315 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":204:83)
#loc316 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":204:88)
#loc317 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":204:94)
#loc318 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":204:104)
#loc319 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":204:105)
#loc320 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":204:108)
#loc321 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":204:26)
#loc322 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":204:13)
#loc323 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":204:109)
#loc324 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":205:13)
#loc325 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":208:13)
#loc326 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":205:17)
#loc327 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":205:31)
#loc328 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":205:44)
#loc329 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":205:47)
#loc330 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":205:61)
#loc331 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":206:13)
#loc332 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":207:17)
#loc333 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":210:57)
#loc334 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":210:13)
#loc335 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":210:18)
#loc336 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":210:28)
#loc337 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":210:41)
#loc338 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":210:52)
#loc339 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":210:53)
#loc340 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":212:23)
#loc341 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":212:30)
#loc342 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":212:36)
#loc343 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":212:13)
#loc344 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":212:40)
#loc345 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":213:13)
#loc346 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":216:13)
#loc347 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":213:17)
#loc348 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":214:13)
#loc349 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":215:28)
#loc350 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":215:18)
#loc351 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":215:17)
#loc352 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":217:23)
#loc353 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":217:30)
#loc354 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":217:36)
#loc355 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":217:13)
#loc356 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":217:40)
#loc357 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":218:13)
#loc358 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":221:13)
#loc359 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":218:17)
#loc360 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":219:13)
#loc361 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":220:28)
#loc362 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":220:18)
#loc363 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":220:17)
#loc364 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":223:16)
#loc365 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":224:9)
#loc366 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":227:9)
#loc367 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":224:13)
#loc368 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":224:30)
#loc369 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":225:9)
#loc370 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":226:26)
#loc371 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":226:13)
#loc372 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":235:5)
#loc373 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":236:5)
#loc374 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":238:19)
#loc375 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":238:9)
#loc376 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":239:9)
#loc377 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":241:5)
#loc378 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":266:5)
#loc379 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":241:12)
#loc380 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":243:5)
#loc381 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":245:19)
#loc382 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":245:9)
#loc383 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":246:9)
#loc384 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":247:5)
#loc385 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":248:5)
#loc386 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":264:5)
#loc387 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":249:9)
#loc388 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":249:13)
#loc389 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":249:16)
#loc390 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":249:19)
#loc391 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":250:9)
#loc392 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":263:9)
#loc393 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":250:13)
#loc394 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":250:20)
#loc395 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":250:26)
#loc396 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":250:39)
#loc397 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":251:9)
#loc398 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":253:13)
#loc399 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":262:13)
#loc400 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":253:17)
#loc401 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":253:21)
#loc402 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":254:13)
#loc403 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":255:31)
#loc404 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":255:17)
#loc405 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":256:17)
#loc406 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":260:17)
#loc407 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":256:26)
#loc408 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":256:22)
#loc409 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":256:29)
#loc410 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":256:33)
#loc411 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":256:31)
#loc412 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":257:17)
#loc413 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":259:32)
#loc414 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":259:21)
#loc415 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":256:37)
#loc416 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":256:36)
#loc417 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":261:30)
#loc418 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":261:17)
#loc419 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":265:5)
#loc420 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":270:1)
#loc421 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":377:1)
#loc422 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":272:5)
#loc423 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":272:12)
#loc424 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":273:5)
#loc425 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":273:28)
#loc426 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":274:12)
#loc427 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":274:5)
#loc428 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":275:5)
#loc429 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":350:5)
#loc430 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":275:12)
#loc431 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":277:5)
#loc432 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":278:5)
#loc433 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":344:5)
#loc434 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":283:9)
#loc435 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":283:13)
#loc436 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":284:9)
#loc437 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":284:28)
#loc438 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":285:9)
#loc439 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":285:15)
#loc440 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":286:9)
#loc441 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":286:32)
#loc442 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":287:9)
#loc443 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":287:37)
#loc444 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":287:26)
#loc445 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":287:33)
#loc446 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":288:9)
#loc447 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":333:17)
#loc448 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":298:36)
#loc449 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":298:45)
#loc450 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":298:58)
#loc451 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":298:29)
#loc452 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":298:13)
#loc453 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":298:69)
#loc454 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":299:13)
#loc455 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":302:13)
#loc456 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":299:17)
#loc457 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":299:34)
#loc458 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":300:13)
#loc459 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":301:17)
#loc460 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":303:20)
#loc461 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":303:21)
#loc462 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":303:30)
#loc463 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":303:33)
#loc464 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":303:47)
#loc465 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":303:13)
#loc466 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":303:48)
#loc467 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":304:34)
#loc468 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":304:13)
#loc469 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":305:49)
#loc470 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":305:39)
#loc471 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":305:13)
#loc472 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":305:59)
#loc473 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":306:38)
#loc474 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":306:32)
#loc475 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":306:13)
#loc476 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":306:46)
#loc477 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":307:13)
#loc478 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":310:13)
#loc479 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":307:25)
#loc480 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":307:58)
#loc481 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":307:59)
#loc482 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":307:68)
#loc483 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":307:82)
#loc484 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":307:17)
#loc485 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":307:88)
#loc486 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":308:13)
#loc487 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":309:17)
#loc488 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":314:31)
#loc489 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":314:55)
#loc490 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":314:62)
#loc491 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":314:60)
#loc492 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":314:46)
#loc493 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":314:69)
#loc494 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":314:72)
#loc495 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":314:83)
#loc496 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":314:88)
#loc497 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":314:94)
#loc498 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":314:104)
#loc499 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":314:105)
#loc500 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":314:108)
#loc501 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":314:26)
#loc502 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":314:13)
#loc503 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":314:109)
#loc504 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":315:13)
#loc505 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":318:13)
#loc506 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":315:17)
#loc507 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":315:31)
#loc508 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":315:44)
#loc509 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":315:47)
#loc510 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":315:61)
#loc511 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":316:13)
#loc512 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":317:17)
#loc513 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":320:57)
#loc514 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":320:13)
#loc515 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":320:18)
#loc516 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":320:28)
#loc517 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":320:41)
#loc518 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":320:52)
#loc519 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":320:53)
#loc520 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":322:23)
#loc521 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":322:30)
#loc522 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":322:36)
#loc523 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":322:13)
#loc524 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":322:40)
#loc525 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":323:13)
#loc526 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":326:13)
#loc527 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":323:17)
#loc528 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":324:13)
#loc529 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":325:28)
#loc530 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":325:18)
#loc531 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":325:17)
#loc532 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":327:23)
#loc533 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":327:30)
#loc534 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":327:36)
#loc535 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":327:13)
#loc536 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":327:40)
#loc537 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":328:13)
#loc538 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":331:13)
#loc539 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":328:17)
#loc540 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":329:13)
#loc541 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":330:28)
#loc542 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":330:18)
#loc543 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":330:17)
#loc544 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":333:16)
#loc545 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":334:9)
#loc546 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":337:9)
#loc547 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":334:13)
#loc548 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":334:30)
#loc549 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":335:9)
#loc550 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":336:26)
#loc551 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":336:13)
#loc552 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":345:5)
#loc553 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":346:5)
#loc554 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":348:19)
#loc555 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":348:9)
#loc556 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":349:9)
#loc557 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":351:5)
#loc558 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":376:5)
#loc559 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":351:12)
#loc560 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":353:5)
#loc561 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":354:5)
#loc562 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":370:5)
#loc563 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":355:9)
#loc564 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":355:13)
#loc565 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":355:16)
#loc566 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":355:19)
#loc567 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":356:9)
#loc568 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":369:9)
#loc569 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":356:13)
#loc570 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":356:20)
#loc571 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":356:26)
#loc572 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":356:39)
#loc573 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":357:9)
#loc574 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":359:13)
#loc575 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":368:13)
#loc576 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":359:17)
#loc577 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":359:21)
#loc578 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":360:13)
#loc579 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":361:31)
#loc580 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":361:17)
#loc581 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":362:17)
#loc582 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":366:17)
#loc583 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":362:26)
#loc584 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":362:22)
#loc585 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":362:29)
#loc586 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":362:33)
#loc587 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":362:31)
#loc588 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":363:17)
#loc589 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":365:32)
#loc590 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":365:21)
#loc591 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":362:37)
#loc592 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":362:36)
#loc593 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":367:30)
#loc594 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":367:17)
#loc595 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":371:5)
#loc596 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":372:5)
#loc597 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":374:19)
#loc598 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":374:9)
#loc599 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":375:9)
#loc600 = loc("/usr/include/string.h":141:1)
#loc601 = loc("/usr/include/string.h":142:14)
#loc602 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":393:22)
#loc603 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":380:1)
#loc604 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":419:1)
#loc605 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":382:5)
#loc606 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":382:12)
#loc607 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":383:5)
#loc608 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":383:28)
#loc609 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":384:12)
#loc610 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":384:5)
#loc611 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":385:5)
#loc612 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":395:5)
#loc613 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":385:12)
#loc614 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":387:5)
#loc615 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":389:19)
#loc616 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":389:9)
#loc617 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":390:9)
#loc618 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":391:5)
#loc619 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":393:9)
#loc620 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":393:16)
#loc621 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":394:9)
#loc622 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":396:5)
#loc623 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":418:5)
#loc624 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":396:12)
#loc625 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":398:5)
#loc626 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":399:5)
#loc627 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":412:5)
#loc628 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":400:9)
#loc629 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":400:13)
#loc630 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":400:16)
#loc631 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":400:19)
#loc632 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":401:9)
#loc633 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":411:9)
#loc634 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":401:13)
#loc635 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":401:20)
#loc636 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":401:26)
#loc637 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":401:39)
#loc638 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":402:9)
#loc639 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":404:27)
#loc640 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":404:13)
#loc641 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":405:13)
#loc642 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":409:13)
#loc643 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":405:22)
#loc644 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":405:18)
#loc645 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":405:25)
#loc646 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":405:29)
#loc647 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":405:27)
#loc648 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":406:13)
#loc649 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":408:28)
#loc650 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":408:17)
#loc651 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":405:33)
#loc652 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":405:32)
#loc653 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":410:26)
#loc654 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":410:13)
#loc655 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":413:5)
#loc656 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":414:5)
#loc657 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":416:19)
#loc658 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":416:9)
#loc659 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":417:9)
#loc660 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":422:1)
#loc661 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":461:1)
#loc662 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":424:5)
#loc663 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":424:12)
#loc664 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":425:5)
#loc665 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":425:28)
#loc666 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":426:12)
#loc667 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":426:5)
#loc668 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":427:5)
#loc669 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":437:5)
#loc670 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":427:12)
#loc671 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":429:5)
#loc672 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":431:9)
#loc673 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":431:16)
#loc674 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":431:22)
#loc675 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":432:9)
#loc676 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":433:5)
#loc677 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":435:19)
#loc678 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":435:9)
#loc679 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":436:9)
#loc680 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":438:5)
#loc681 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":460:5)
#loc682 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":438:12)
#loc683 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":440:5)
#loc684 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":441:5)
#loc685 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":454:5)
#loc686 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":442:9)
#loc687 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":442:13)
#loc688 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":442:16)
#loc689 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":442:19)
#loc690 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":443:9)
#loc691 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":453:9)
#loc692 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":443:13)
#loc693 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":443:20)
#loc694 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":443:26)
#loc695 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":443:39)
#loc696 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":444:9)
#loc697 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":446:27)
#loc698 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":446:13)
#loc699 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":447:13)
#loc700 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":451:13)
#loc701 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":447:22)
#loc702 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":447:18)
#loc703 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":447:25)
#loc704 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":447:29)
#loc705 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":447:27)
#loc706 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":448:13)
#loc707 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":450:28)
#loc708 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":450:17)
#loc709 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":447:33)
#loc710 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":447:32)
#loc711 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":452:26)
#loc712 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":452:13)
#loc713 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":455:5)
#loc714 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":456:5)
#loc715 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":458:19)
#loc716 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":458:9)
#loc717 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":459:9)
#loc718 = loc(fused[#loc1, #loc2])
#loc719 = loc(fused[#loc3, #loc4])
#loc720 = loc(fused[#loc5, #loc6])
#loc721 = loc(fused[#loc8, #loc9])
#loc722 = loc(fused[#loc10, #loc11])
#loc723 = loc(fused[#loc12, #loc13])
#loc724 = loc(fused[#loc14, #loc15])
#loc725 = loc(fused[#loc16, #loc17])
#loc726 = loc(fused[#loc18, #loc19])
#loc727 = loc(fused[#loc21, #loc22])
#loc728 = loc(fused[#loc24, #loc25])
#loc729 = loc(fused[#loc26, #loc27])
#loc730 = loc(fused[#loc28, #loc29])
#loc731 = loc(fused[#loc30, #loc31])
#loc732 = loc(fused[#loc33, #loc32])
#loc733 = loc(fused[#loc34, #loc35])
#loc734 = loc(fused[#loc38, #loc39])
#loc735 = loc(fused[#loc40, #loc41])
#loc736 = loc(fused[#loc42, #loc43])
#loc737 = loc(fused[#loc44, #loc45])
#loc738 = loc(fused[#loc46, #loc47])
#loc739 = loc(fused[#loc48, #loc49])
#loc740 = loc(fused[#loc52, #loc53])
#loc741 = loc(fused[#loc58, #loc59])
#loc742 = loc(fused[#loc60, #loc61])
#loc743 = loc(fused[#loc62, #loc63])
#loc744 = loc(fused[#loc64, #loc61])
#loc745 = loc(fused[#loc66, #loc67])
#loc746 = loc(fused[#loc69, #loc70])
#loc747 = loc(fused[#loc71, #loc72])
#loc748 = loc(fused[#loc75, #loc73])
#loc749 = loc(fused[#loc79, #loc80])
#loc750 = loc(fused[#loc84, #loc85])
#loc751 = loc(fused[#loc86, #loc87])
#loc752 = loc(fused[#loc89, #loc90])
#loc753 = loc(fused[#loc91, #loc92])
#loc754 = loc(fused[#loc93, #loc94])
#loc755 = loc(fused[#loc95, #loc87])
#loc756 = loc(fused[#loc101, #loc102])
#loc757 = loc(fused[#loc103, #loc104])
#loc758 = loc(fused[#loc105, #loc106])
#loc759 = loc(fused[#loc105, #loc107])
#loc760 = loc(fused[#loc103, #loc108])
#loc761 = loc(fused[#loc111, #loc112])
#loc762 = loc(fused[#loc113, #loc114])
#loc763 = loc(fused[#loc115, #loc116])
#loc764 = loc(fused[#loc118, #loc119])
#loc765 = loc(fused[#loc120, #loc114])
#loc766 = loc(fused[#loc126, #loc127])
#loc767 = loc(fused[#loc125, #loc127])
#loc768 = loc(fused[#loc124, #loc127])
#loc769 = loc(fused[#loc123, #loc122])
#loc770 = loc(fused[#loc132, #loc133])
#loc771 = loc(fused[#loc134, #loc135])
#loc772 = loc(fused[#loc137, #loc135])
#loc773 = loc(fused[#loc140, #loc138])
#loc774 = loc(fused[#loc144, #loc145])
#loc775 = loc(fused[#loc146, #loc147])
#loc776 = loc(fused[#loc149, #loc147])
#loc777 = loc(fused[#loc152, #loc150])
#loc778 = loc(fused[#loc154, #loc155])
#loc779 = loc(fused[#loc156, #loc157])
#loc780 = loc(fused[#loc158, #loc155])
#loc781 = loc(fused[#loc165, #loc166])
#loc782 = loc(fused[#loc169, #loc170])
#loc783 = loc(fused[#loc171, #loc172])
#loc784 = loc(fused[#loc171, #loc173])
#loc785 = loc(fused[#loc171, #loc174])
#loc786 = loc(fused[#loc175, #loc176])
#loc787 = loc(fused[#loc177, #loc179])
#loc788 = loc(fused[#loc180, #loc176])
#loc789 = loc(fused[#loc182, #loc181])
#loc790 = loc(fused[#loc183, #loc184])
#loc791 = loc(fused[#loc186, #loc185])
#loc792 = loc(fused[#loc187, #loc188])
#loc793 = loc(fused[#loc190, #loc184])
#loc794 = loc(fused[#loc192, #loc191])
#loc795 = loc(fused[#loc194, #loc193])
#loc796 = loc(fused[#loc202, #loc203])
#loc797 = loc(fused[#loc204, #loc205])
#loc798 = loc(fused[#loc206, #loc207])
#loc799 = loc(fused[#loc208, #loc209])
#loc800 = loc(fused[#loc210, #loc211])
#loc801 = loc(fused[#loc212, #loc213])
#loc802 = loc(fused[#loc214, #loc215])
#loc803 = loc(fused[#loc220, #loc221])
#loc806 = loc(fused[#loc231, #loc232])
#loc807 = loc(fused[#loc235, #loc236])
#loc808 = loc(fused[#loc239, #loc238])
#loc809 = loc(fused[#loc240, #loc241])
#loc810 = loc(fused[#loc242, #loc243])
#loc811 = loc(fused[#loc244, #loc245])
#loc812 = loc(fused[#loc247, #loc246])
#loc813 = loc(fused[#loc248, #loc249])
#loc814 = loc(fused[#loc252, #loc253])
#loc815 = loc(fused[#loc254, #loc255])
#loc816 = loc(fused[#loc256, #loc257])
#loc817 = loc(fused[#loc258, #loc259])
#loc818 = loc(fused[#loc260, #loc261])
#loc819 = loc(fused[#loc262, #loc263])
#loc820 = loc(fused[#loc266, #loc267])
#loc821 = loc(fused[#loc272, #loc273])
#loc822 = loc(fused[#loc274, #loc275])
#loc823 = loc(fused[#loc276, #loc277])
#loc824 = loc(fused[#loc278, #loc275])
#loc825 = loc(fused[#loc280, #loc281])
#loc826 = loc(fused[#loc283, #loc284])
#loc827 = loc(fused[#loc285, #loc286])
#loc828 = loc(fused[#loc288, #loc287])
#loc829 = loc(fused[#loc291, #loc292])
#loc830 = loc(fused[#loc295, #loc296])
#loc831 = loc(fused[#loc297, #loc298])
#loc832 = loc(fused[#loc300, #loc301])
#loc833 = loc(fused[#loc302, #loc303])
#loc834 = loc(fused[#loc304, #loc305])
#loc835 = loc(fused[#loc306, #loc298])
#loc836 = loc(fused[#loc312, #loc313])
#loc837 = loc(fused[#loc314, #loc315])
#loc838 = loc(fused[#loc316, #loc317])
#loc839 = loc(fused[#loc316, #loc318])
#loc840 = loc(fused[#loc314, #loc319])
#loc841 = loc(fused[#loc322, #loc323])
#loc842 = loc(fused[#loc324, #loc325])
#loc843 = loc(fused[#loc326, #loc327])
#loc844 = loc(fused[#loc329, #loc330])
#loc845 = loc(fused[#loc331, #loc325])
#loc846 = loc(fused[#loc337, #loc338])
#loc847 = loc(fused[#loc336, #loc338])
#loc848 = loc(fused[#loc335, #loc338])
#loc849 = loc(fused[#loc334, #loc333])
#loc850 = loc(fused[#loc343, #loc344])
#loc851 = loc(fused[#loc345, #loc346])
#loc852 = loc(fused[#loc348, #loc346])
#loc853 = loc(fused[#loc351, #loc349])
#loc854 = loc(fused[#loc355, #loc356])
#loc855 = loc(fused[#loc357, #loc358])
#loc856 = loc(fused[#loc360, #loc358])
#loc857 = loc(fused[#loc363, #loc361])
#loc858 = loc(fused[#loc365, #loc366])
#loc859 = loc(fused[#loc367, #loc368])
#loc860 = loc(fused[#loc369, #loc366])
#loc861 = loc(fused[#loc377, #loc378])
#loc862 = loc(fused[#loc385, #loc386])
#loc863 = loc(fused[#loc387, #loc388])
#loc864 = loc(fused[#loc387, #loc389])
#loc865 = loc(fused[#loc387, #loc390])
#loc866 = loc(fused[#loc391, #loc392])
#loc867 = loc(fused[#loc393, #loc396])
#loc868 = loc(fused[#loc397, #loc392])
#loc869 = loc(fused[#loc398, #loc399])
#loc870 = loc(fused[#loc400, #loc401])
#loc871 = loc(fused[#loc402, #loc399])
#loc872 = loc(fused[#loc404, #loc403])
#loc873 = loc(fused[#loc405, #loc406])
#loc874 = loc(fused[#loc408, #loc407])
#loc875 = loc(fused[#loc409, #loc410])
#loc876 = loc(fused[#loc412, #loc406])
#loc877 = loc(fused[#loc414, #loc413])
#loc878 = loc(fused[#loc416, #loc415])
#loc879 = loc(fused[#loc420, #loc421])
#loc880 = loc(fused[#loc422, #loc423])
#loc881 = loc(fused[#loc424, #loc425])
#loc882 = loc(fused[#loc427, #loc426])
#loc883 = loc(fused[#loc428, #loc429])
#loc884 = loc(fused[#loc432, #loc433])
#loc885 = loc(fused[#loc434, #loc435])
#loc886 = loc(fused[#loc436, #loc437])
#loc887 = loc(fused[#loc438, #loc439])
#loc888 = loc(fused[#loc440, #loc441])
#loc889 = loc(fused[#loc442, #loc443])
#loc890 = loc(fused[#loc446, #loc447])
#loc891 = loc(fused[#loc452, #loc453])
#loc892 = loc(fused[#loc454, #loc455])
#loc893 = loc(fused[#loc456, #loc457])
#loc894 = loc(fused[#loc458, #loc455])
#loc895 = loc(fused[#loc460, #loc461])
#loc896 = loc(fused[#loc463, #loc464])
#loc897 = loc(fused[#loc465, #loc466])
#loc898 = loc(fused[#loc468, #loc467])
#loc899 = loc(fused[#loc471, #loc472])
#loc900 = loc(fused[#loc475, #loc476])
#loc901 = loc(fused[#loc477, #loc478])
#loc902 = loc(fused[#loc480, #loc481])
#loc903 = loc(fused[#loc482, #loc483])
#loc904 = loc(fused[#loc484, #loc485])
#loc905 = loc(fused[#loc486, #loc478])
#loc906 = loc(fused[#loc492, #loc493])
#loc907 = loc(fused[#loc494, #loc495])
#loc908 = loc(fused[#loc496, #loc497])
#loc909 = loc(fused[#loc496, #loc498])
#loc910 = loc(fused[#loc494, #loc499])
#loc911 = loc(fused[#loc502, #loc503])
#loc912 = loc(fused[#loc504, #loc505])
#loc913 = loc(fused[#loc506, #loc507])
#loc914 = loc(fused[#loc509, #loc510])
#loc915 = loc(fused[#loc511, #loc505])
#loc916 = loc(fused[#loc517, #loc518])
#loc917 = loc(fused[#loc516, #loc518])
#loc918 = loc(fused[#loc515, #loc518])
#loc919 = loc(fused[#loc514, #loc513])
#loc920 = loc(fused[#loc523, #loc524])
#loc921 = loc(fused[#loc525, #loc526])
#loc922 = loc(fused[#loc528, #loc526])
#loc923 = loc(fused[#loc531, #loc529])
#loc924 = loc(fused[#loc535, #loc536])
#loc925 = loc(fused[#loc537, #loc538])
#loc926 = loc(fused[#loc540, #loc538])
#loc927 = loc(fused[#loc543, #loc541])
#loc928 = loc(fused[#loc545, #loc546])
#loc929 = loc(fused[#loc547, #loc548])
#loc930 = loc(fused[#loc549, #loc546])
#loc931 = loc(fused[#loc557, #loc558])
#loc932 = loc(fused[#loc561, #loc562])
#loc933 = loc(fused[#loc563, #loc564])
#loc934 = loc(fused[#loc563, #loc565])
#loc935 = loc(fused[#loc563, #loc566])
#loc936 = loc(fused[#loc567, #loc568])
#loc937 = loc(fused[#loc569, #loc572])
#loc938 = loc(fused[#loc573, #loc568])
#loc939 = loc(fused[#loc574, #loc575])
#loc940 = loc(fused[#loc576, #loc577])
#loc941 = loc(fused[#loc578, #loc575])
#loc942 = loc(fused[#loc580, #loc579])
#loc943 = loc(fused[#loc581, #loc582])
#loc944 = loc(fused[#loc584, #loc583])
#loc945 = loc(fused[#loc585, #loc586])
#loc946 = loc(fused[#loc588, #loc582])
#loc947 = loc(fused[#loc590, #loc589])
#loc948 = loc(fused[#loc592, #loc591])
#loc949 = loc(fused[#loc600, #loc601])
#loc950 = loc(fused[#loc603, #loc604])
#loc951 = loc(fused[#loc605, #loc606])
#loc952 = loc(fused[#loc607, #loc608])
#loc953 = loc(fused[#loc610, #loc609])
#loc954 = loc(fused[#loc611, #loc612])
#loc955 = loc(fused[#loc622, #loc623])
#loc956 = loc(fused[#loc626, #loc627])
#loc957 = loc(fused[#loc628, #loc629])
#loc958 = loc(fused[#loc628, #loc630])
#loc959 = loc(fused[#loc628, #loc631])
#loc960 = loc(fused[#loc632, #loc633])
#loc961 = loc(fused[#loc634, #loc637])
#loc962 = loc(fused[#loc638, #loc633])
#loc963 = loc(fused[#loc640, #loc639])
#loc964 = loc(fused[#loc641, #loc642])
#loc965 = loc(fused[#loc644, #loc643])
#loc966 = loc(fused[#loc645, #loc646])
#loc967 = loc(fused[#loc648, #loc642])
#loc968 = loc(fused[#loc650, #loc649])
#loc969 = loc(fused[#loc652, #loc651])
#loc970 = loc(fused[#loc660, #loc661])
#loc971 = loc(fused[#loc662, #loc663])
#loc972 = loc(fused[#loc664, #loc665])
#loc973 = loc(fused[#loc667, #loc666])
#loc974 = loc(fused[#loc668, #loc669])
#loc975 = loc(fused[#loc680, #loc681])
#loc976 = loc(fused[#loc684, #loc685])
#loc977 = loc(fused[#loc686, #loc687])
#loc978 = loc(fused[#loc686, #loc688])
#loc979 = loc(fused[#loc686, #loc689])
#loc980 = loc(fused[#loc690, #loc691])
#loc981 = loc(fused[#loc692, #loc695])
#loc982 = loc(fused[#loc696, #loc691])
#loc983 = loc(fused[#loc698, #loc697])
#loc984 = loc(fused[#loc699, #loc700])
#loc985 = loc(fused[#loc702, #loc701])
#loc986 = loc(fused[#loc703, #loc704])
#loc987 = loc(fused[#loc706, #loc700])
#loc988 = loc(fused[#loc708, #loc707])
#loc989 = loc(fused[#loc710, #loc709])
