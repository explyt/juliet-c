!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":74:10)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":74:14)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":74:20)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":74:32)
#loc99 = loc(fused[#loc42, #loc43])
#loc100 = loc(fused[#loc44, #loc45])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65b_badSink(!cir.ptr<!s8i>) loc(#loc85)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc87)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc88)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc89)
    %3 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65b_badSink : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc8)
    cir.store %3, %1 : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>> loc(#loc88)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc10)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc10)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc10)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc10)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc10)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc10)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc10)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc89)
    %11 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc11)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc90)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc13)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc13)
    %14 = cir.const #cir.int<65> : !s32i loc(#loc14)
    %15 = cir.const #cir.int<100> : !s32i loc(#loc15)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc15)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc15)
    cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc91)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc19)
    %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc19)
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
    %22 = cir.const #cir.int<100> : !s32i loc(#loc21)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc21)
    %25 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc23)
    cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc92)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc24)
    %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
    cir.call %26(%27) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc24)
    cir.return loc(#loc4)
  } loc(#loc86)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc94)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc28)
    cir.return loc(#loc27)
  } loc(#loc93)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc95)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc96)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc97)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc36)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc37)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc38)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc39)
  cir.func @main(%arg0: !s32i loc(fused[#loc42, #loc43]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc44, #loc45])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc99)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc100)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc41)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc46)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc46)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc47)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc48)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc48)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc49)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc36)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc36)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc50)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65_good : !cir.ptr<!cir.func<!void ()>> loc(#loc101)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65_good() : () -> () loc(#loc51)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc37)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc37)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc53)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc38)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc38)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc54)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc102)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65_bad() : () -> () loc(#loc55)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc39)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc39)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc57)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc58)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc103)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    cir.return %17 : !s32i loc(#loc103)
  } loc(#loc98)
  cir.func private @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65b_goodG2BSink(!cir.ptr<!s8i>) loc(#loc104)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc106)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc107)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc108)
    %3 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65b_goodG2BSink : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc67)
    cir.store %3, %1 : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>> loc(#loc107)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc69)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc69)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc69)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc69)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc69)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc69)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc69)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc108)
    %11 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc109)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc72)
    %14 = cir.const #cir.int<65> : !s32i loc(#loc73)
    %15 = cir.const #cir.int<50> : !s32i loc(#loc74)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc75)
    %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc74)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc74)
    cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc110)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc78)
    %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc78)
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
    %22 = cir.const #cir.int<50> : !s32i loc(#loc80)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc81)
    %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc80)
    %25 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc82)
    cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc111)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc83)
    %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
    cir.call %26(%27) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc83)
    cir.return loc(#loc63)
  } loc(#loc105)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":24:1)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":24:89)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":26:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":38:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":28:5)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":28:12)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":30:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":30:32)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":31:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":31:33)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":32:12)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":32:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":34:12)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":34:18)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":34:23)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":34:27)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":34:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":34:28)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":35:19)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":35:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":35:10)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":35:14)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":35:15)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":37:5)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":37:13)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":59:1)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":62:1)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":61:5)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":61:13)
#loc30 = loc("/usr/include/stdlib.h":575:1)
#loc31 = loc("/usr/include/stdlib.h":575:41)
#loc32 = loc("/usr/include/time.h":76:1)
#loc33 = loc("/usr/include/time.h":76:38)
#loc34 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc35 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":79:15)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":81:15)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":84:15)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":86:15)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":74:1)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":89:1)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":75:1)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":77:27)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":77:22)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":77:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":79:5)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":80:5)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":80:73)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":81:5)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":84:5)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":85:5)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":85:72)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":86:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":88:12)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":88:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":45:1)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":45:93)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":47:1)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":57:1)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":49:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":49:12)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":50:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":50:32)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":51:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":51:33)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":52:12)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":52:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":54:12)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":54:18)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":54:23)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":54:26)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":54:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":54:27)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":55:18)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":55:5)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":55:10)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":55:13)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":55:14)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":56:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_65a.c":56:13)
#loc85 = loc(fused[#loc1, #loc2])
#loc86 = loc(fused[#loc3, #loc4])
#loc87 = loc(fused[#loc5, #loc6])
#loc88 = loc(fused[#loc7, #loc8])
#loc89 = loc(fused[#loc9, #loc10])
#loc90 = loc(fused[#loc12, #loc11])
#loc91 = loc(fused[#loc17, #loc18])
#loc92 = loc(fused[#loc20, #loc19])
#loc93 = loc(fused[#loc26, #loc27])
#loc94 = loc(fused[#loc28, #loc29])
#loc95 = loc(fused[#loc30, #loc31])
#loc96 = loc(fused[#loc32, #loc33])
#loc97 = loc(fused[#loc34, #loc35])
#loc98 = loc(fused[#loc40, #loc41])
#loc101 = loc(fused[#loc51, #loc52])
#loc102 = loc(fused[#loc55, #loc56])
#loc103 = loc(fused[#loc59, #loc58])
#loc104 = loc(fused[#loc60, #loc61])
#loc105 = loc(fused[#loc62, #loc63])
#loc106 = loc(fused[#loc64, #loc65])
#loc107 = loc(fused[#loc66, #loc67])
#loc108 = loc(fused[#loc68, #loc69])
#loc109 = loc(fused[#loc71, #loc70])
#loc110 = loc(fused[#loc76, #loc77])
#loc111 = loc(fused[#loc79, #loc78])
