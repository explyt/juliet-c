!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc168)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc169)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc170)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc171)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc10)
  cir.func @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_323badEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc173)
    %1 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc174)
    %2 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc175)
    cir.store %0, %1 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc174)
    cir.store %0, %2 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc175)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc19)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc19)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc176)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc178)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc24)
      %7 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc25)
      cir.store %7, %5 : !u64i, !cir.ptr<!u64i> loc(#loc178)
      %8 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc26)
      cir.store %9, %5 : !u64i, !cir.ptr<!u64i> loc(#loc179)
      %10 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc29)
      %11 = cir.load deref %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc30)
      cir.store %10, %11 : !u64i, !cir.ptr<!u64i> loc(#loc180)
    } loc(#loc177)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc182)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc35)
      %7 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc36)
      cir.store %7, %5 : !u64i, !cir.ptr<!u64i> loc(#loc182)
      cir.scope {
        %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc184)
        cir.scope {
          %9 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc43)
          %10 = cir.const #cir.int<5> : !u64i loc(#loc186)
          %11 = cir.cmp(gt, %9, %10) : !u64i, !cir.bool loc(#loc187)
          cir.if %11 {
            %12 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc49)
            %13 = cir.call @_Znam(%12) : (!u64i) -> !cir.ptr<!void> loc(#loc50)
            %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc189)
            cir.store %14, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc190)
            %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc54)
            %16 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
            %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc7)
            %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc7)
            %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc54)
            %20 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
            cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc57)
            %21 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
            cir.delete.array %21 : <!s8i> loc(#loc58)
          } else {
            %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc10)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc10)
            cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc59)
          } loc(#loc188)
        } loc(#loc185)
      } loc(#loc183)
    } loc(#loc181)
    cir.return loc(#loc12)
  } loc(#loc172)
  cir.func internal private @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc192)
    %1 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc193)
    %2 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc194)
    cir.store %0, %1 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc193)
    cir.store %0, %2 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc194)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc68)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc68)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc195)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc197)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc73)
      %7 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc74)
      cir.store %7, %5 : !u64i, !cir.ptr<!u64i> loc(#loc197)
      %8 = cir.const #cir.int<20> : !s32i loc(#loc75)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc75)
      cir.store %9, %5 : !u64i, !cir.ptr<!u64i> loc(#loc198)
      %10 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc77)
      %11 = cir.load deref %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc78)
      cir.store %10, %11 : !u64i, !cir.ptr<!u64i> loc(#loc199)
    } loc(#loc196)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc201)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc83)
      %7 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc84)
      cir.store %7, %5 : !u64i, !cir.ptr<!u64i> loc(#loc201)
      cir.scope {
        %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc203)
        cir.scope {
          %9 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc91)
          %10 = cir.const #cir.int<5> : !u64i loc(#loc205)
          %11 = cir.cmp(gt, %9, %10) : !u64i, !cir.bool loc(#loc206)
          cir.if %11 {
            %12 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc97)
            %13 = cir.call @_Znam(%12) : (!u64i) -> !cir.ptr<!void> loc(#loc98)
            %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc208)
            cir.store %14, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc209)
            %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc102)
            %16 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
            %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc104)
            %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc104)
            %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc102)
            %20 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
            cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc106)
            %21 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
            cir.delete.array %21 : <!s8i> loc(#loc107)
          } else {
            %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc108)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc108)
            cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc109)
          } loc(#loc207)
        } loc(#loc204)
      } loc(#loc202)
    } loc(#loc200)
    cir.return loc(#loc61)
  } loc(#loc191)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc110)
  cir.func internal private @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc211)
    %1 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc212)
    %2 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc213)
    cir.store %0, %1 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc212)
    cir.store %0, %2 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc213)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc119)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc119)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc214)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc216)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc124)
      %7 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc125)
      cir.store %7, %5 : !u64i, !cir.ptr<!u64i> loc(#loc216)
      %8 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc126)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc126)
      cir.store %9, %5 : !u64i, !cir.ptr<!u64i> loc(#loc217)
      %10 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc129)
      %11 = cir.load deref %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc130)
      cir.store %10, %11 : !u64i, !cir.ptr<!u64i> loc(#loc218)
    } loc(#loc215)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc220)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc135)
      %7 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc136)
      cir.store %7, %5 : !u64i, !cir.ptr<!u64i> loc(#loc220)
      cir.scope {
        %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc222)
        cir.scope {
          %9 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc143)
          %10 = cir.const #cir.int<5> : !u64i loc(#loc224)
          %11 = cir.cmp(gt, %9, %10) : !u64i, !cir.bool loc(#loc225)
          %12 = cir.ternary(%11, true {
            %13 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc147)
            %14 = cir.const #cir.int<100> : !s32i loc(#loc148)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc148)
            %16 = cir.cmp(lt, %13, %15) : !u64i, !cir.bool loc(#loc226)
            %17 = cir.ternary(%16, true {
              %18 = cir.const #true loc(#loc146)
              cir.yield %18 : !cir.bool loc(#loc146)
            }, false {
              %18 = cir.const #false loc(#loc146)
              cir.yield %18 : !cir.bool loc(#loc146)
            }) : (!cir.bool) -> !cir.bool loc(#loc146)
            cir.yield %17 : !cir.bool loc(#loc146)
          }, false {
            %13 = cir.const #false loc(#loc146)
            cir.yield %13 : !cir.bool loc(#loc146)
          }) : (!cir.bool) -> !cir.bool loc(#loc146)
          cir.if %12 {
            %13 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc152)
            %14 = cir.call @_Znam(%13) : (!u64i) -> !cir.ptr<!void> loc(#loc153)
            %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc228)
            cir.store %15, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc229)
            %16 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc157)
            %17 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
            %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc159)
            %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc159)
            %20 = cir.call @strcpy(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc157)
            %21 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
            cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc161)
            %22 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc162)
            cir.delete.array %22 : <!s8i> loc(#loc162)
          } else {
            %13 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc110)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc110)
            cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc163)
          } loc(#loc227)
        } loc(#loc223)
      } loc(#loc221)
    } loc(#loc219)
    cir.return loc(#loc112)
  } loc(#loc210)
  cir.func @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_324goodEv() extra(#fn_attr1) {
    cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32L7goodG2BEv() : () -> () loc(#loc166)
    cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32L7goodB2GEv() : () -> () loc(#loc167)
    cir.return loc(#loc165)
  } loc(#loc230)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc4 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":55:34)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":61:27)
#loc11 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":31:1)
#loc12 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":65:1)
#loc13 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":33:5)
#loc14 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":33:12)
#loc15 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":34:5)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":34:25)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":35:5)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":35:25)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":37:12)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":37:5)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":38:5)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":43:5)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":39:9)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":39:24)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":39:23)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":41:16)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":41:9)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":41:21)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":42:21)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":42:10)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":42:9)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":44:5)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":64:5)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":45:9)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":45:24)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":45:23)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":46:9)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":63:9)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":47:13)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":47:20)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":51:13)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":62:13)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":51:17)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":51:24)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":51:43)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":52:13)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":58:13)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":60:13)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":53:37)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":31:6)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":53:28)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":53:41)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":53:17)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":55:17)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":55:24)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":56:27)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":56:17)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":57:27)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":61:17)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":72:1)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":106:1)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":74:5)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":74:12)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":75:5)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":75:25)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":76:5)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":76:25)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":78:12)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":78:5)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":79:5)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":84:5)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":80:9)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":80:24)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":80:23)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":82:16)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":82:9)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":83:21)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":83:10)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":83:9)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":85:5)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":105:5)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":86:9)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":86:24)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":86:23)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":87:9)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":104:9)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":88:13)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":88:20)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":92:13)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":103:13)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":92:17)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":92:24)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":92:43)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":93:13)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":99:13)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":101:13)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":94:37)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":72:13)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":94:28)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":94:41)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":94:17)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":96:17)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":96:24)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":96:34)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":97:27)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":97:17)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":98:27)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":102:27)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":102:17)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":139:27)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":109:1)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":143:1)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":111:5)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":111:12)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":112:5)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":112:25)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":113:5)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":113:25)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":115:12)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":115:5)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":116:5)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":121:5)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":117:9)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":117:24)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":117:23)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":119:16)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":119:9)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":119:21)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":120:21)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":120:10)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":120:9)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":122:5)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":142:5)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":123:9)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":123:24)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":123:23)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":124:9)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":141:9)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":125:13)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":125:20)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":129:13)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":140:13)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":129:17)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":129:24)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":129:43)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":129:45)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":129:48)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":129:55)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":130:13)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":136:13)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":138:13)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":131:37)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":109:13)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":131:28)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":131:41)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":131:17)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":133:17)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":133:24)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":133:34)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":134:27)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":134:17)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":135:27)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":139:17)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":145:1)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":149:1)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":147:5)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_32.cpp":148:5)
#loc168 = loc(fused[#loc1, #loc2])
#loc169 = loc(fused[#loc3, #loc4])
#loc170 = loc(fused[#loc5, #loc6])
#loc171 = loc(fused[#loc8, #loc9])
#loc172 = loc(fused[#loc11, #loc12])
#loc173 = loc(fused[#loc13, #loc14])
#loc174 = loc(fused[#loc15, #loc16])
#loc175 = loc(fused[#loc17, #loc18])
#loc176 = loc(fused[#loc20, #loc19])
#loc177 = loc(fused[#loc21, #loc22])
#loc178 = loc(fused[#loc23, #loc24])
#loc179 = loc(fused[#loc27, #loc28])
#loc180 = loc(fused[#loc31, #loc29])
#loc181 = loc(fused[#loc32, #loc33])
#loc182 = loc(fused[#loc34, #loc35])
#loc183 = loc(fused[#loc37, #loc38])
#loc184 = loc(fused[#loc39, #loc40])
#loc185 = loc(fused[#loc41, #loc42])
#loc186 = loc(fused[#loc44, #loc45])
#loc187 = loc(fused[#loc43, #loc45])
#loc188 = loc(fused[#loc46, #loc47, #loc48, #loc42])
#loc189 = loc(fused[#loc51, #loc52])
#loc190 = loc(fused[#loc53, #loc52])
#loc191 = loc(fused[#loc60, #loc61])
#loc192 = loc(fused[#loc62, #loc63])
#loc193 = loc(fused[#loc64, #loc65])
#loc194 = loc(fused[#loc66, #loc67])
#loc195 = loc(fused[#loc69, #loc68])
#loc196 = loc(fused[#loc70, #loc71])
#loc197 = loc(fused[#loc72, #loc73])
#loc198 = loc(fused[#loc76, #loc75])
#loc199 = loc(fused[#loc79, #loc77])
#loc200 = loc(fused[#loc80, #loc81])
#loc201 = loc(fused[#loc82, #loc83])
#loc202 = loc(fused[#loc85, #loc86])
#loc203 = loc(fused[#loc87, #loc88])
#loc204 = loc(fused[#loc89, #loc90])
#loc205 = loc(fused[#loc92, #loc93])
#loc206 = loc(fused[#loc91, #loc93])
#loc207 = loc(fused[#loc94, #loc95, #loc96, #loc90])
#loc208 = loc(fused[#loc99, #loc100])
#loc209 = loc(fused[#loc101, #loc100])
#loc210 = loc(fused[#loc111, #loc112])
#loc211 = loc(fused[#loc113, #loc114])
#loc212 = loc(fused[#loc115, #loc116])
#loc213 = loc(fused[#loc117, #loc118])
#loc214 = loc(fused[#loc120, #loc119])
#loc215 = loc(fused[#loc121, #loc122])
#loc216 = loc(fused[#loc123, #loc124])
#loc217 = loc(fused[#loc127, #loc128])
#loc218 = loc(fused[#loc131, #loc129])
#loc219 = loc(fused[#loc132, #loc133])
#loc220 = loc(fused[#loc134, #loc135])
#loc221 = loc(fused[#loc137, #loc138])
#loc222 = loc(fused[#loc139, #loc140])
#loc223 = loc(fused[#loc141, #loc142])
#loc224 = loc(fused[#loc144, #loc145])
#loc225 = loc(fused[#loc143, #loc145])
#loc226 = loc(fused[#loc147, #loc148])
#loc227 = loc(fused[#loc149, #loc150, #loc151, #loc142])
#loc228 = loc(fused[#loc154, #loc155])
#loc229 = loc(fused[#loc156, #loc155])
#loc230 = loc(fused[#loc164, #loc165])
