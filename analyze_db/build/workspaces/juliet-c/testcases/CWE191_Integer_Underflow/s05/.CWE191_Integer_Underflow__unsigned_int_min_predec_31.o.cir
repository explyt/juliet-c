!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__unsigned_int_min_predec_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printUnsignedLine(!u32i) loc(#loc85)
  cir.func no_proto @CWE191_Integer_Underflow__unsigned_int_min_predec_31_bad() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc87)
    %1 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data", init] {alignment = 4 : i64} loc(#loc88)
    %2 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc89)
    %3 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc90)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc13)
    %5 = cir.cast(integral, %4 : !s32i), !u32i loc(#loc13)
    cir.store %5, %3 : !u32i, !cir.ptr<!u32i> loc(#loc91)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc15)
    %7 = cir.cast(integral, %6 : !s32i), !u32i loc(#loc15)
    cir.store %7, %3 : !u32i, !cir.ptr<!u32i> loc(#loc92)
    cir.br ^bb1 loc(#loc93)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %3 : !cir.ptr<!u32i>, !u32i loc(#loc6)
    cir.store %8, %0 : !u32i, !cir.ptr<!u32i> loc(#loc87)
    %9 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc8)
    cir.store %9, %1 : !u32i, !cir.ptr<!u32i> loc(#loc88)
    cir.br ^bb2 loc(#loc94)
  ^bb2:  // pred: ^bb1
    %10 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc21)
    %11 = cir.unary(dec, %10) : !u32i, !u32i loc(#loc21)
    cir.store %11, %1 : !u32i, !cir.ptr<!u32i> loc(#loc95)
    %12 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc10)
    cir.store %12, %2 : !u32i, !cir.ptr<!u32i> loc(#loc89)
    %13 = cir.load %2 : !cir.ptr<!u32i>, !u32i loc(#loc23)
    cir.call @printUnsignedLine(%13) : (!u32i) -> () loc(#loc24)
    cir.br ^bb3 loc(#loc20)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc18)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc4)
  } loc(#loc86)
  cir.func no_proto @CWE191_Integer_Underflow__unsigned_int_min_predec_31_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc97)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc27)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc98)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc29)
    cir.return loc(#loc26)
  } loc(#loc96)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc100)
    %1 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data", init] {alignment = 4 : i64} loc(#loc101)
    %2 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc102)
    %3 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc103)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc41)
    %5 = cir.cast(integral, %4 : !s32i), !u32i loc(#loc41)
    cir.store %5, %3 : !u32i, !cir.ptr<!u32i> loc(#loc104)
    %6 = cir.const #cir.int<2> : !s32i loc(#loc43)
    %7 = cir.unary(minus, %6) nsw : !s32i, !s32i loc(#loc44)
    %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc44)
    cir.store %8, %3 : !u32i, !cir.ptr<!u32i> loc(#loc105)
    cir.br ^bb1 loc(#loc106)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %3 : !cir.ptr<!u32i>, !u32i loc(#loc34)
    cir.store %9, %0 : !u32i, !cir.ptr<!u32i> loc(#loc100)
    %10 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc36)
    cir.store %10, %1 : !u32i, !cir.ptr<!u32i> loc(#loc101)
    cir.br ^bb2 loc(#loc107)
  ^bb2:  // pred: ^bb1
    %11 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc50)
    %12 = cir.unary(dec, %11) : !u32i, !u32i loc(#loc50)
    cir.store %12, %1 : !u32i, !cir.ptr<!u32i> loc(#loc108)
    %13 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc38)
    cir.store %13, %2 : !u32i, !cir.ptr<!u32i> loc(#loc102)
    %14 = cir.load %2 : !cir.ptr<!u32i>, !u32i loc(#loc52)
    cir.call @printUnsignedLine(%14) : (!u32i) -> () loc(#loc53)
    cir.br ^bb3 loc(#loc49)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc47)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc32)
  } loc(#loc99)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc109)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc56)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc111)
    %1 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data", init] {alignment = 4 : i64} loc(#loc112)
    %2 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc113)
    %3 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc114)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc67)
    %5 = cir.cast(integral, %4 : !s32i), !u32i loc(#loc67)
    cir.store %5, %3 : !u32i, !cir.ptr<!u32i> loc(#loc115)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc69)
    %7 = cir.cast(integral, %6 : !s32i), !u32i loc(#loc69)
    cir.store %7, %3 : !u32i, !cir.ptr<!u32i> loc(#loc116)
    cir.br ^bb1 loc(#loc117)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %3 : !cir.ptr<!u32i>, !u32i loc(#loc60)
    cir.store %8, %0 : !u32i, !cir.ptr<!u32i> loc(#loc111)
    %9 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc62)
    cir.store %9, %1 : !u32i, !cir.ptr<!u32i> loc(#loc112)
    cir.br ^bb2 loc(#loc118)
  ^bb2:  // pred: ^bb1
    %10 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc75)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc76)
    %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc76)
    %13 = cir.cmp(gt, %10, %12) : !u32i, !cir.bool loc(#loc119)
    cir.brcond %13 ^bb3, ^bb4 loc(#loc120)
  ^bb3:  // pred: ^bb2
    %14 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc80)
    %15 = cir.unary(dec, %14) : !u32i, !u32i loc(#loc80)
    cir.store %15, %1 : !u32i, !cir.ptr<!u32i> loc(#loc121)
    %16 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc64)
    cir.store %16, %2 : !u32i, !cir.ptr<!u32i> loc(#loc113)
    %17 = cir.load %2 : !cir.ptr<!u32i>, !u32i loc(#loc82)
    cir.call @printUnsignedLine(%17) : (!u32i) -> () loc(#loc83)
    cir.br ^bb5 loc(#loc78)
  ^bb4:  // pred: ^bb2
    %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc56)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    cir.br ^bb5 loc(#loc74)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc74)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc72)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc58)
  } loc(#loc110)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":34:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":34:47)
#loc3 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":22:1)
#loc4 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":38:1)
#loc5 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":29:9)
#loc6 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":29:33)
#loc7 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":30:9)
#loc8 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":30:29)
#loc9 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":34:13)
#loc10 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":34:35)
#loc11 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":24:5)
#loc12 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":24:18)
#loc13 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":25:12)
#loc14 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":25:5)
#loc15 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":27:12)
#loc16 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":27:5)
#loc17 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":28:5)
#loc18 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":37:5)
#loc19 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":31:9)
#loc20 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":36:9)
#loc21 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":33:13)
#loc22 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":33:15)
#loc23 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":35:31)
#loc24 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":35:13)
#loc25 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":87:1)
#loc26 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":91:1)
#loc27 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":89:5)
#loc28 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":89:13)
#loc29 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":90:5)
#loc30 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":90:13)
#loc31 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":45:1)
#loc32 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":61:1)
#loc33 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":52:9)
#loc34 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":52:33)
#loc35 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":53:9)
#loc36 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":53:29)
#loc37 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":57:13)
#loc38 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":57:35)
#loc39 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":47:5)
#loc40 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":47:18)
#loc41 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":48:12)
#loc42 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":48:5)
#loc43 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":50:13)
#loc44 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":50:12)
#loc45 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":50:5)
#loc46 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":51:5)
#loc47 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":60:5)
#loc48 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":54:9)
#loc49 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":59:9)
#loc50 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":56:13)
#loc51 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":56:15)
#loc52 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":58:31)
#loc53 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":58:13)
#loc54 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc55 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc56 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":82:23)
#loc57 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":64:1)
#loc58 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":85:1)
#loc59 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":71:9)
#loc60 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":71:33)
#loc61 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":72:9)
#loc62 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":72:29)
#loc63 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":77:13)
#loc64 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":77:35)
#loc65 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":66:5)
#loc66 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":66:18)
#loc67 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":67:12)
#loc68 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":67:5)
#loc69 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":69:12)
#loc70 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":69:5)
#loc71 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":70:5)
#loc72 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":84:5)
#loc73 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":74:9)
#loc74 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":83:9)
#loc75 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":74:13)
#loc76 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":74:20)
#loc77 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":75:9)
#loc78 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":79:9)
#loc79 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":81:9)
#loc80 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":76:13)
#loc81 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":76:15)
#loc82 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":78:31)
#loc83 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":78:13)
#loc84 = loc("CWE191_Integer_Underflow__unsigned_int_min_predec_31.c":82:13)
#loc85 = loc(fused[#loc1, #loc2])
#loc86 = loc(fused[#loc3, #loc4])
#loc87 = loc(fused[#loc5, #loc6])
#loc88 = loc(fused[#loc7, #loc8])
#loc89 = loc(fused[#loc9, #loc10])
#loc90 = loc(fused[#loc11, #loc12])
#loc91 = loc(fused[#loc14, #loc13])
#loc92 = loc(fused[#loc16, #loc15])
#loc93 = loc(fused[#loc17, #loc18])
#loc94 = loc(fused[#loc19, #loc20])
#loc95 = loc(fused[#loc21, #loc22])
#loc96 = loc(fused[#loc25, #loc26])
#loc97 = loc(fused[#loc27, #loc28])
#loc98 = loc(fused[#loc29, #loc30])
#loc99 = loc(fused[#loc31, #loc32])
#loc100 = loc(fused[#loc33, #loc34])
#loc101 = loc(fused[#loc35, #loc36])
#loc102 = loc(fused[#loc37, #loc38])
#loc103 = loc(fused[#loc39, #loc40])
#loc104 = loc(fused[#loc42, #loc41])
#loc105 = loc(fused[#loc45, #loc43])
#loc106 = loc(fused[#loc46, #loc47])
#loc107 = loc(fused[#loc48, #loc49])
#loc108 = loc(fused[#loc50, #loc51])
#loc109 = loc(fused[#loc54, #loc55])
#loc110 = loc(fused[#loc57, #loc58])
#loc111 = loc(fused[#loc59, #loc60])
#loc112 = loc(fused[#loc61, #loc62])
#loc113 = loc(fused[#loc63, #loc64])
#loc114 = loc(fused[#loc65, #loc66])
#loc115 = loc(fused[#loc68, #loc67])
#loc116 = loc(fused[#loc70, #loc69])
#loc117 = loc(fused[#loc71, #loc72])
#loc118 = loc(fused[#loc73, #loc74])
#loc119 = loc(fused[#loc75, #loc76])
#loc120 = loc(fused[#loc77, #loc78, #loc79, #loc74])
#loc121 = loc(fused[#loc80, #loc81])
