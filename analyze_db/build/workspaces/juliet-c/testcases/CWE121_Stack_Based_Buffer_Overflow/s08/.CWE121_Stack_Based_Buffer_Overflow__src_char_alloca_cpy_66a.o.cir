!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66b_badSink(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc61)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc63)
    %1 = cir.alloca !cir.array<!cir.ptr<!s8i> x 5>, !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>, ["dataArray"] {alignment = 16 : i64} loc(#loc64)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc65)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc10)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc10)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc10)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc10)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc10)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc10)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc10)
    cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc65)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc11)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc66)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc13)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc13)
    %13 = cir.const #cir.int<65> : !s32i loc(#loc14)
    %14 = cir.const #cir.int<100> : !s32i loc(#loc15)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc15)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc15)
    cir.libc.memset %17 bytes from %12 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc67)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc19)
    %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc19)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
    %21 = cir.const #cir.int<100> : !s32i loc(#loc21)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc21)
    %24 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc23)
    cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc68)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    %26 = cir.const #cir.int<2> : !s32i loc(#loc25)
    %27 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc26)
    %28 = cir.ptr_stride(%27 : !cir.ptr<!cir.ptr<!s8i>>, %26 : !s32i), !cir.ptr<!cir.ptr<!s8i>> loc(#loc26)
    cir.store %25, %28 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc69)
    %29 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc27)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66b_badSink(%29) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc28)
    cir.return loc(#loc4)
  } loc(#loc62)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc71)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc31)
    cir.return loc(#loc30)
  } loc(#loc70)
  cir.func private @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66b_goodG2BSink(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc72)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc74)
    %1 = cir.alloca !cir.array<!cir.ptr<!s8i> x 5>, !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>, ["dataArray"] {alignment = 16 : i64} loc(#loc75)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc76)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc42)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc42)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc42)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc42)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc42)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc42)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc42)
    cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc76)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc77)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc45)
    %13 = cir.const #cir.int<65> : !s32i loc(#loc46)
    %14 = cir.const #cir.int<50> : !s32i loc(#loc47)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc48)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc47)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc47)
    cir.libc.memset %17 bytes from %12 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc78)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc51)
    %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc51)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
    %21 = cir.const #cir.int<50> : !s32i loc(#loc53)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc54)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc53)
    %24 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc55)
    cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc79)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
    %26 = cir.const #cir.int<2> : !s32i loc(#loc57)
    %27 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc58)
    %28 = cir.ptr_stride(%27 : !cir.ptr<!cir.ptr<!s8i>>, %26 : !s32i), !cir.ptr<!cir.ptr<!s8i>> loc(#loc58)
    cir.store %25, %28 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc80)
    %29 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc59)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66b_goodG2BSink(%29) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc60)
    cir.return loc(#loc36)
  } loc(#loc73)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":24:1)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":24:92)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":26:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":38:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":28:5)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":28:12)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":29:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":29:23)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":30:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":30:33)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":31:12)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":31:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":33:12)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":33:18)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":33:23)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":33:27)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":33:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":33:28)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":34:19)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":34:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":34:10)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":34:14)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":34:15)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":36:20)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":36:15)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":36:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":37:73)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":37:5)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":60:1)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":63:1)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":62:5)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":62:13)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":45:1)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":45:96)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":47:1)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":58:1)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":49:5)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":49:12)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":50:5)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":50:23)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":51:5)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":51:33)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":52:12)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":52:5)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":54:12)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":54:18)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":54:23)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":54:26)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":54:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":54:27)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":55:18)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":55:5)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":55:10)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":55:13)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":55:14)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":56:20)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":56:15)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":56:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":57:77)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cpy_66a.c":57:5)
#loc61 = loc(fused[#loc1, #loc2])
#loc62 = loc(fused[#loc3, #loc4])
#loc63 = loc(fused[#loc5, #loc6])
#loc64 = loc(fused[#loc7, #loc8])
#loc65 = loc(fused[#loc9, #loc10])
#loc66 = loc(fused[#loc12, #loc11])
#loc67 = loc(fused[#loc17, #loc18])
#loc68 = loc(fused[#loc20, #loc19])
#loc69 = loc(fused[#loc26, #loc24])
#loc70 = loc(fused[#loc29, #loc30])
#loc71 = loc(fused[#loc31, #loc32])
#loc72 = loc(fused[#loc33, #loc34])
#loc73 = loc(fused[#loc35, #loc36])
#loc74 = loc(fused[#loc37, #loc38])
#loc75 = loc(fused[#loc39, #loc40])
#loc76 = loc(fused[#loc41, #loc42])
#loc77 = loc(fused[#loc44, #loc43])
#loc78 = loc(fused[#loc49, #loc50])
#loc79 = loc(fused[#loc52, #loc51])
#loc80 = loc(fused[#loc58, #loc56])
