!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_fputs_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @fputs(!cir.ptr<!s8i>, !cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc33)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"string\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" external @stdout : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc34)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc35)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"fputs failed!\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc8)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_fputs_01_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc3)
      %1 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc3)
      %2 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc34)
      %3 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc13)
      %4 = cir.call @fputs(%1, %3) : (!cir.ptr<!s8i>, !cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc14)
      %5 = cir.const #cir.int<0> : !s32i loc(#loc15)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc38)
      cir.if %6 {
        %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc8)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc8)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc17)
      } loc(#loc39)
    } loc(#loc37)
    cir.return loc(#loc10)
  } loc(#loc36)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_fputs_01_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc41)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc20)
    cir.return loc(#loc19)
  } loc(#loc40)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc26)
      %1 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc26)
      %2 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc34)
      %3 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc27)
      %4 = cir.call @fputs(%1, %3) : (!cir.ptr<!s8i>, !cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc28)
      %5 = cir.const #cir.int<1> : !s32i loc(#loc29)
      %6 = cir.unary(minus, %5) nsw : !s32i, !s32i loc(#loc29)
      %7 = cir.cmp(eq, %4, %6) : !s32i, !cir.bool loc(#loc44)
      cir.if %7 {
        %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc31)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc31)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc32)
      } loc(#loc45)
    } loc(#loc43)
    cir.return loc(#loc23)
  } loc(#loc42)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_fputs_01.c":0:0)
#loc1 = loc("/usr/include/stdio.h":717:1)
#loc2 = loc("/usr/include/stdio.h":718:3)
#loc3 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fputs_01.c":28:15)
#loc4 = loc("/usr/include/stdio.h":150:1)
#loc5 = loc("/usr/include/stdio.h":150:14)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fputs_01.c":30:19)
#loc9 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fputs_01.c":24:1)
#loc10 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fputs_01.c":32:1)
#loc11 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fputs_01.c":28:5)
#loc12 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fputs_01.c":31:5)
#loc13 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fputs_01.c":28:25)
#loc14 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fputs_01.c":28:9)
#loc15 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fputs_01.c":28:36)
#loc16 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fputs_01.c":29:5)
#loc17 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fputs_01.c":30:9)
#loc18 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fputs_01.c":47:1)
#loc19 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fputs_01.c":50:1)
#loc20 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fputs_01.c":49:5)
#loc21 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fputs_01.c":49:11)
#loc22 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fputs_01.c":38:1)
#loc23 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fputs_01.c":45:1)
#loc24 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fputs_01.c":41:5)
#loc25 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fputs_01.c":44:5)
#loc26 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fputs_01.c":41:15)
#loc27 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fputs_01.c":41:25)
#loc28 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fputs_01.c":41:9)
#loc29 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fputs_01.c":41:36)
#loc30 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fputs_01.c":42:5)
#loc31 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fputs_01.c":43:19)
#loc32 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fputs_01.c":43:9)
#loc33 = loc(fused[#loc1, #loc2])
#loc34 = loc(fused[#loc4, #loc5])
#loc35 = loc(fused[#loc6, #loc7])
#loc36 = loc(fused[#loc9, #loc10])
#loc37 = loc(fused[#loc11, #loc12])
#loc38 = loc(fused[#loc14, #loc15])
#loc39 = loc(fused[#loc16, #loc12])
#loc40 = loc(fused[#loc18, #loc19])
#loc41 = loc(fused[#loc20, #loc21])
#loc42 = loc(fused[#loc22, #loc23])
#loc43 = loc(fused[#loc24, #loc25])
#loc44 = loc(fused[#loc28, #loc29])
#loc45 = loc(fused[#loc30, #loc25])
