!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc128 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":104:48)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const._ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32L7goodG2BEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc237)
  cir.global "private" constant cir_private @__const._ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_323badEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc238)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc239)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc240)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc241)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc11)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc242)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc243)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc244)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc245)
  cir.func private @close(!s32i) -> !s32i loc(#loc246)
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc247)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"wb+\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc24)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc248)
  cir.func @_ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_323badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc250)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc251)
    %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc252)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc253)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc254)
    %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc255)
    %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc256)
    %7 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc257)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc258)
    %9 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc259)
    %10 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc260)
    %11 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc238)
    cir.store %8, %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc259)
    cir.store %8, %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc260)
    %12 = cir.get_global @__const._ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_323badEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc238)
    cir.copy %12 to %11 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc238)
    %13 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc51)
    cir.store %13, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc261)
    cir.br ^bb1 loc(#loc262)
  ^bb1:  // pred: ^bb0
    %14 = cir.load deref %9 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc30)
    %15 = cir.load %14 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
    cir.store %15, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc250)
    cir.br ^bb2 loc(#loc263)
  ^bb2:  // pred: ^bb1
    %16 = cir.const #cir.int<1> : !s32i loc(#loc38)
    %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc38)
    cir.store %17, %4 : !s32i, !cir.ptr<!s32i> loc(#loc254)
    %18 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc58)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
    %20 = cir.call @strlen(%19) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc58)
    cir.store %20, %5 : !u64i, !cir.ptr<!u64i> loc(#loc255)
    cir.br ^bb3 loc(#loc264)
  ^bb3:  // pred: ^bb2
    cir.br ^bb5 loc(#loc264)
  ^bb4:  // pred: ^bb35
    %21 = cir.const #cir.int<0> : !s32i loc(#loc62)
    %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc62)
    cir.brcond %22 ^bb5, ^bb36 loc(#loc62)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc265)
  ^bb6:  // pred: ^bb5
    %23 = cir.const #cir.int<2> : !s32i loc(#loc65)
    %24 = cir.const #cir.int<1> : !u32i loc(#loc66)
    %25 = cir.cast(integral, %24 : !u32i), !s32i loc(#loc66)
    %26 = cir.const #cir.int<6> : !u32i loc(#loc67)
    %27 = cir.cast(integral, %26 : !u32i), !s32i loc(#loc67)
    %28 = cir.call @socket(%23, %25, %27) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc68)
    cir.store %28, %4 : !s32i, !cir.ptr<!s32i> loc(#loc266)
    cir.br ^bb7 loc(#loc267)
  ^bb7:  // pred: ^bb6
    %29 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc73)
    %30 = cir.const #cir.int<1> : !s32i loc(#loc74)
    %31 = cir.unary(minus, %30) nsw : !s32i, !s32i loc(#loc74)
    %32 = cir.cmp(eq, %29, %31) : !s32i, !cir.bool loc(#loc268)
    cir.brcond %32 ^bb8, ^bb9 loc(#loc269)
  ^bb8:  // pred: ^bb7
    cir.br ^bb36 loc(#loc76)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc72)
  ^bb10:  // pred: ^bb9
    %33 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc270)
    %34 = cir.const #cir.int<0> : !s32i loc(#loc79)
    %35 = cir.const #cir.int<16> : !u64i loc(#loc271)
    cir.libc.memset %35 bytes from %33 set to %34 : !cir.ptr<!void>, !s32i, !u64i loc(#loc272)
    %36 = cir.const #cir.int<2> : !s32i loc(#loc84)
    %37 = cir.cast(integral, %36 : !s32i), !u16i loc(#loc84)
    %38 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc85)
    cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc273)
    %39 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc11)
    %40 = cir.cast(array_to_ptrdecay, %39 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc11)
    %41 = cir.call @inet_addr(%40) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc87)
    %42 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc88)
    %43 = cir.get_member %42[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc89)
    cir.store %41, %43 : !u32i, !cir.ptr<!u32i> loc(#loc274)
    %44 = cir.const #cir.int<27015> : !s32i loc(#loc92)
    %45 = cir.cast(integral, %44 : !s32i), !u16i loc(#loc92)
    %46 = cir.call @htons(%45) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc93)
    %47 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc94)
    cir.store %46, %47 : !u16i, !cir.ptr<!u16i> loc(#loc275)
    cir.br ^bb11 loc(#loc276)
  ^bb11:  // pred: ^bb10
    %48 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc99)
    %49 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc277)
    %50 = cir.const #cir.int<16> : !u64i loc(#loc278)
    %51 = cir.cast(integral, %50 : !u64i), !u32i loc(#loc278)
    %52 = cir.call @connect(%48, %49, %51) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc104)
    %53 = cir.const #cir.int<1> : !s32i loc(#loc105)
    %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc105)
    %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc279)
    cir.brcond %55 ^bb12, ^bb13 loc(#loc280)
  ^bb12:  // pred: ^bb11
    cir.br ^bb36 loc(#loc107)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc98)
  ^bb14:  // pred: ^bb13
    %56 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc108)
    %57 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
    %58 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc110)
    %59 = cir.ptr_stride(%57 : !cir.ptr<!s8i>, %58 : !u64i), !cir.ptr<!s8i> loc(#loc111)
    %60 = cir.cast(bitcast, %59 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc281)
    %61 = cir.const #cir.int<1> : !u64i loc(#loc282)
    %62 = cir.const #cir.int<4096> : !s32i loc(#loc116)
    %63 = cir.cast(integral, %62 : !s32i), !u64i loc(#loc116)
    %64 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc117)
    %65 = cir.binop(sub, %63, %64) : !u64i loc(#loc283)
    %66 = cir.const #cir.int<1> : !s32i loc(#loc118)
    %67 = cir.cast(integral, %66 : !s32i), !u64i loc(#loc118)
    %68 = cir.binop(sub, %65, %67) : !u64i loc(#loc284)
    %69 = cir.binop(mul, %61, %68) : !u64i loc(#loc285)
    %70 = cir.const #cir.int<0> : !s32i loc(#loc120)
    %71 = cir.call @recv(%56, %60, %69, %70) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc121)
    %72 = cir.cast(integral, %71 : !s64i), !s32i loc(#loc121)
    cir.store %72, %1 : !s32i, !cir.ptr<!s32i> loc(#loc286)
    cir.br ^bb15 loc(#loc287)
  ^bb15:  // pred: ^bb14
    %73 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc126)
    %74 = cir.const #cir.int<1> : !s32i loc(#loc127)
    %75 = cir.unary(minus, %74) nsw : !s32i, !s32i loc(#loc127)
    %76 = cir.cmp(eq, %73, %75) : !s32i, !cir.bool loc(#loc288)
    cir.brcond %76 ^bb16, ^bb17 loc(#loc128)
  ^bb16:  // pred: ^bb15
    %77 = cir.const #true loc(#loc128)
    cir.br ^bb22(%77 : !cir.bool) loc(#loc128)
  ^bb17:  // pred: ^bb15
    %78 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc129)
    %79 = cir.const #cir.int<0> : !s32i loc(#loc130)
    %80 = cir.cmp(eq, %78, %79) : !s32i, !cir.bool loc(#loc289)
    cir.brcond %80 ^bb18, ^bb19 loc(#loc128)
  ^bb18:  // pred: ^bb17
    %81 = cir.const #true loc(#loc128)
    cir.br ^bb20(%81 : !cir.bool) loc(#loc128)
  ^bb19:  // pred: ^bb17
    %82 = cir.const #false loc(#loc128)
    cir.br ^bb20(%82 : !cir.bool) loc(#loc128)
  ^bb20(%83: !cir.bool loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":104:48)):  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc128)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22(%83 : !cir.bool) loc(#loc128)
  ^bb22(%84: !cir.bool loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":104:48)):  // 2 preds: ^bb16, ^bb21
    cir.br ^bb23 loc(#loc128)
  ^bb23:  // pred: ^bb22
    cir.brcond %84 ^bb24, ^bb25 loc(#loc290)
  ^bb24:  // pred: ^bb23
    cir.br ^bb36 loc(#loc132)
  ^bb25:  // pred: ^bb23
    cir.br ^bb26 loc(#loc125)
  ^bb26:  // pred: ^bb25
    %85 = cir.const #cir.int<0> : !s8i loc(#loc133)
    %86 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc134)
    %87 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc135)
    %88 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc136)
    %89 = cir.cast(integral, %88 : !s32i), !u64i loc(#loc136)
    %90 = cir.const #cir.int<1> : !u64i loc(#loc291)
    %91 = cir.binop(div, %89, %90) : !u64i loc(#loc292)
    %92 = cir.binop(add, %87, %91) : !u64i loc(#loc293)
    %93 = cir.ptr_stride(%86 : !cir.ptr<!s8i>, %92 : !u64i), !cir.ptr<!s8i> loc(#loc139)
    cir.store %85, %93 : !s8i, !cir.ptr<!s8i> loc(#loc294)
    %94 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
    %95 = cir.const #cir.int<13> : !s8i loc(#loc141)
    %96 = cir.cast(integral, %95 : !s8i), !s32i loc(#loc141)
    %97 = cir.call @strchr(%94, %96) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc142)
    cir.store %97, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc295)
    cir.br ^bb27 loc(#loc296)
  ^bb27:  // pred: ^bb26
    %98 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
    %99 = cir.cast(ptr_to_bool, %98 : !cir.ptr<!s8i>), !cir.bool loc(#loc147)
    cir.brcond %99 ^bb28, ^bb29 loc(#loc297)
  ^bb28:  // pred: ^bb27
    %100 = cir.const #cir.int<0> : !s8i loc(#loc149)
    %101 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
    cir.store %100, %101 : !s8i, !cir.ptr<!s8i> loc(#loc298)
    cir.br ^bb29 loc(#loc146)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc146)
  ^bb30:  // pred: ^bb29
    %102 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
    %103 = cir.const #cir.int<10> : !s8i loc(#loc153)
    %104 = cir.cast(integral, %103 : !s8i), !s32i loc(#loc153)
    %105 = cir.call @strchr(%102, %104) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc154)
    cir.store %105, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc299)
    cir.br ^bb31 loc(#loc300)
  ^bb31:  // pred: ^bb30
    %106 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc159)
    %107 = cir.cast(ptr_to_bool, %106 : !cir.ptr<!s8i>), !cir.bool loc(#loc159)
    cir.brcond %107 ^bb32, ^bb33 loc(#loc301)
  ^bb32:  // pred: ^bb31
    %108 = cir.const #cir.int<0> : !s8i loc(#loc161)
    %109 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc162)
    cir.store %108, %109 : !s8i, !cir.ptr<!s8i> loc(#loc302)
    cir.br ^bb33 loc(#loc158)
  ^bb33:  // 2 preds: ^bb31, ^bb32
    cir.br ^bb34 loc(#loc158)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc64)
  ^bb35:  // pred: ^bb34
    cir.br ^bb4 loc(#loc61)
  ^bb36:  // 4 preds: ^bb4, ^bb8, ^bb12, ^bb24
    cir.br ^bb37 loc(#loc61)
  ^bb37:  // pred: ^bb36
    cir.br ^bb38 loc(#loc303)
  ^bb38:  // pred: ^bb37
    %110 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc166)
    %111 = cir.const #cir.int<1> : !s32i loc(#loc167)
    %112 = cir.unary(minus, %111) nsw : !s32i, !s32i loc(#loc167)
    %113 = cir.cmp(ne, %110, %112) : !s32i, !cir.bool loc(#loc304)
    cir.brcond %113 ^bb39, ^bb40 loc(#loc305)
  ^bb39:  // pred: ^bb38
    %114 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc169)
    %115 = cir.call @close(%114) : (!s32i) -> !s32i loc(#loc170)
    cir.br ^bb40 loc(#loc165)
  ^bb40:  // 2 preds: ^bb38, ^bb39
    cir.br ^bb41 loc(#loc165)
  ^bb41:  // pred: ^bb40
    cir.br ^bb42 loc(#loc57)
  ^bb42:  // pred: ^bb41
    %116 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc171)
    %117 = cir.load deref %9 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc172)
    cir.store %116, %117 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc306)
    cir.br ^bb43 loc(#loc54)
  ^bb43:  // pred: ^bb42
    cir.br ^bb44 loc(#loc307)
  ^bb44:  // pred: ^bb43
    %118 = cir.load deref %10 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc42)
    %119 = cir.load %118 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc176)
    cir.store %119, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc256)
    cir.br ^bb45 loc(#loc308)
  ^bb45:  // pred: ^bb44
    %120 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc44)
    cir.store %120, %7 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc257)
    %121 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc179)
    %122 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc180)
    %123 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc24)
    %124 = cir.cast(array_to_ptrdecay, %123 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc24)
    %125 = cir.call @fopen(%122, %124) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc179)
    cir.store %125, %7 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc309)
    cir.br ^bb46 loc(#loc310)
  ^bb46:  // pred: ^bb45
    %126 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc185)
    %127 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc186)
    %128 = cir.cmp(ne, %126, %127) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc311)
    cir.brcond %128 ^bb47, ^bb48 loc(#loc312)
  ^bb47:  // pred: ^bb46
    %129 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc188)
    %130 = cir.call @fclose(%129) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc189)
    cir.br ^bb48 loc(#loc184)
  ^bb48:  // 2 preds: ^bb46, ^bb47
    cir.br ^bb49 loc(#loc184)
  ^bb49:  // pred: ^bb48
    cir.br ^bb50 loc(#loc178)
  ^bb50:  // pred: ^bb49
    cir.br ^bb51 loc(#loc175)
  ^bb51:  // pred: ^bb50
    cir.return loc(#loc28)
  } loc(#loc249)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc313)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc192)
  cir.func internal private @_ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc315)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc316)
    %2 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc317)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc318)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc319)
    %5 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc320)
    %6 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc237)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc319)
    cir.store %3, %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc320)
    %7 = cir.get_global @__const._ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32L7goodG2BEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc237)
    cir.copy %7 to %6 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc237)
    %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc207)
    cir.store %8, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc321)
    cir.br ^bb1 loc(#loc322)
  ^bb1:  // pred: ^bb0
    %9 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc196)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc211)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc315)
    %11 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc212)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc213)
    %13 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc192)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc192)
    %15 = cir.call @strcat(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc212)
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc214)
    %17 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc215)
    cir.store %16, %17 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc323)
    cir.br ^bb2 loc(#loc210)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc324)
  ^bb3:  // pred: ^bb2
    %18 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc198)
    %19 = cir.load %18 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc219)
    cir.store %19, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc316)
    cir.br ^bb4 loc(#loc325)
  ^bb4:  // pred: ^bb3
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc200)
    cir.store %20, %2 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc317)
    %21 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc222)
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc223)
    %23 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc224)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc224)
    %25 = cir.call @fopen(%22, %24) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc222)
    cir.store %25, %2 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc326)
    cir.br ^bb5 loc(#loc327)
  ^bb5:  // pred: ^bb4
    %26 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc229)
    %27 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc230)
    %28 = cir.cmp(ne, %26, %27) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc328)
    cir.brcond %28 ^bb6, ^bb7 loc(#loc329)
  ^bb6:  // pred: ^bb5
    %29 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc232)
    %30 = cir.call @fclose(%29) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc233)
    cir.br ^bb7 loc(#loc228)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc228)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc221)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc218)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc194)
  } loc(#loc314)
  cir.func @_ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_324goodEv() extra(#fn_attr1) {
    cir.call @_ZN59CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32L7goodG2BEv() : () -> () loc(#loc236)
    cir.return loc(#loc235)
  } loc(#loc330)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":160:5)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":160:37)
#loc3 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":63:5)
#loc4 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":63:37)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc9 = loc("/usr/include/arpa/inet.h":34:1)
#loc10 = loc("/usr/include/arpa/inet.h":34:47)
#loc11 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":94:53)
#loc12 = loc("/usr/include/netinet/in.h":402:1)
#loc13 = loc("/usr/include/netinet/in.h":403:40)
#loc14 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc15 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc16 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc17 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc18 = loc("/usr/include/string.h":226:1)
#loc19 = loc("/usr/include/string.h":227:50)
#loc20 = loc("/usr/include/unistd.h":358:1)
#loc21 = loc("/usr/include/unistd.h":358:27)
#loc22 = loc("/usr/include/stdio.h":264:1)
#loc23 = loc("/usr/include/stdio.h":266:3)
#loc24 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":141:33)
#loc25 = loc("/usr/include/stdio.h":184:1)
#loc26 = loc("/usr/include/stdio.h":184:36)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":58:1)
#loc28 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":148:1)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":66:9)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":66:24)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":72:13)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":72:17)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":73:13)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":73:32)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":74:13)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":74:19)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":75:13)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":75:36)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":76:13)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":76:41)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":137:9)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":137:24)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":139:13)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":139:27)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":60:5)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":60:12)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":61:5)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":61:25)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":62:5)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":62:25)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":64:12)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":64:5)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":65:5)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":135:5)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":66:23)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":67:9)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":133:9)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":76:30)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":76:37)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":77:13)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":122:21)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":122:20)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":78:13)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":121:13)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":87:40)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":87:49)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":87:62)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":87:33)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":87:17)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":87:73)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":88:17)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":91:17)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":88:21)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":88:38)
#loc75 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":89:17)
#loc76 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":90:21)
#loc77 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":92:24)
#loc78 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":92:25)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":92:34)
#loc80 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":92:37)
#loc81 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":92:51)
#loc82 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":92:17)
#loc83 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":92:52)
#loc84 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":93:38)
#loc85 = loc("/usr/include/netinet/in.h":249:5)
#loc86 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":93:17)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":94:43)
#loc88 = loc("/usr/include/netinet/in.h":251:20)
#loc89 = loc("/usr/include/netinet/in.h":33:15)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":94:17)
#loc91 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":94:63)
#loc92 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":95:42)
#loc93 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":95:36)
#loc94 = loc("/usr/include/netinet/in.h":250:15)
#loc95 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":95:17)
#loc96 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":95:50)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":96:17)
#loc98 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":99:17)
#loc99 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":96:29)
#loc100 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":96:62)
#loc101 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":96:63)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":96:72)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":96:86)
#loc104 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":96:21)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":96:92)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":97:17)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":98:21)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":103:35)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":103:59)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":103:66)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":103:64)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":103:50)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":103:73)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":103:76)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":103:87)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":103:92)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":103:107)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":103:117)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":103:118)
#loc120 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":103:121)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":103:30)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":103:17)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":103:122)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":104:17)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":107:17)
#loc126 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":104:21)
#loc127 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":104:35)
#loc129 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":104:51)
#loc130 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":104:65)
#loc131 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":105:17)
#loc132 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":106:21)
#loc133 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":109:61)
#loc134 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":109:17)
#loc135 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":109:22)
#loc136 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":109:32)
#loc137 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":109:45)
#loc138 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":109:56)
#loc139 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":109:57)
#loc140 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":111:34)
#loc141 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":111:40)
#loc142 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":111:27)
#loc143 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":111:17)
#loc144 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":111:44)
#loc145 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":112:17)
#loc146 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":115:17)
#loc147 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":112:21)
#loc148 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":113:17)
#loc149 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":114:32)
#loc150 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":114:22)
#loc151 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":114:21)
#loc152 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":116:34)
#loc153 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":116:40)
#loc154 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":116:27)
#loc155 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":116:17)
#loc156 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":116:44)
#loc157 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":117:17)
#loc158 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":120:17)
#loc159 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":117:21)
#loc160 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":118:17)
#loc161 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":119:32)
#loc162 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":119:22)
#loc163 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":119:21)
#loc164 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":123:13)
#loc165 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":126:13)
#loc166 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":123:17)
#loc167 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":123:34)
#loc168 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":124:13)
#loc169 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":125:30)
#loc170 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":125:17)
#loc171 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":134:21)
#loc172 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":134:10)
#loc173 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":134:9)
#loc174 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":136:5)
#loc175 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":147:5)
#loc176 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":137:23)
#loc177 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":138:9)
#loc178 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":146:9)
#loc179 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":141:21)
#loc180 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":141:27)
#loc181 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":141:13)
#loc182 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":141:38)
#loc183 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":142:13)
#loc184 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":145:13)
#loc185 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":142:17)
#loc186 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":142:26)
#loc187 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":143:13)
#loc188 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":144:24)
#loc189 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":144:17)
#loc190 = loc("/usr/include/string.h":149:1)
#loc191 = loc("/usr/include/string.h":150:14)
#loc192 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":165:22)
#loc193 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":155:1)
#loc194 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":180:1)
#loc195 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":163:9)
#loc196 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":163:24)
#loc197 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":169:9)
#loc198 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":169:24)
#loc199 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":171:13)
#loc200 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":171:27)
#loc201 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":157:5)
#loc202 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":157:12)
#loc203 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":158:5)
#loc204 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":158:25)
#loc205 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":159:5)
#loc206 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":159:25)
#loc207 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":161:12)
#loc208 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":161:5)
#loc209 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":162:5)
#loc210 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":167:5)
#loc211 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":163:23)
#loc212 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":165:9)
#loc213 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":165:16)
#loc214 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":166:21)
#loc215 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":166:10)
#loc216 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":166:9)
#loc217 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":168:5)
#loc218 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":179:5)
#loc219 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":169:23)
#loc220 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":170:9)
#loc221 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":178:9)
#loc222 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":173:21)
#loc223 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":173:27)
#loc224 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":173:33)
#loc225 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":173:13)
#loc226 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":173:38)
#loc227 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":174:13)
#loc228 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":177:13)
#loc229 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":174:17)
#loc230 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":174:26)
#loc231 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":175:13)
#loc232 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":176:24)
#loc233 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":176:17)
#loc234 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":182:1)
#loc235 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":185:1)
#loc236 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_fopen_32.cpp":184:5)
#loc237 = loc(fused[#loc1, #loc2])
#loc238 = loc(fused[#loc3, #loc4])
#loc239 = loc(fused[#loc5, #loc6])
#loc240 = loc(fused[#loc7, #loc8])
#loc241 = loc(fused[#loc9, #loc10])
#loc242 = loc(fused[#loc12, #loc13])
#loc243 = loc(fused[#loc14, #loc15])
#loc244 = loc(fused[#loc16, #loc17])
#loc245 = loc(fused[#loc18, #loc19])
#loc246 = loc(fused[#loc20, #loc21])
#loc247 = loc(fused[#loc22, #loc23])
#loc248 = loc(fused[#loc25, #loc26])
#loc249 = loc(fused[#loc27, #loc28])
#loc250 = loc(fused[#loc29, #loc30])
#loc251 = loc(fused[#loc31, #loc32])
#loc252 = loc(fused[#loc33, #loc34])
#loc253 = loc(fused[#loc35, #loc36])
#loc254 = loc(fused[#loc37, #loc38])
#loc255 = loc(fused[#loc39, #loc40])
#loc256 = loc(fused[#loc41, #loc42])
#loc257 = loc(fused[#loc43, #loc44])
#loc258 = loc(fused[#loc45, #loc46])
#loc259 = loc(fused[#loc47, #loc48])
#loc260 = loc(fused[#loc49, #loc50])
#loc261 = loc(fused[#loc52, #loc51])
#loc262 = loc(fused[#loc53, #loc54])
#loc263 = loc(fused[#loc56, #loc57])
#loc264 = loc(fused[#loc60, #loc61])
#loc265 = loc(fused[#loc63, #loc64])
#loc266 = loc(fused[#loc69, #loc70])
#loc267 = loc(fused[#loc71, #loc72])
#loc268 = loc(fused[#loc73, #loc74])
#loc269 = loc(fused[#loc75, #loc72])
#loc270 = loc(fused[#loc77, #loc78])
#loc271 = loc(fused[#loc80, #loc81])
#loc272 = loc(fused[#loc82, #loc83])
#loc273 = loc(fused[#loc86, #loc84])
#loc274 = loc(fused[#loc90, #loc91])
#loc275 = loc(fused[#loc95, #loc96])
#loc276 = loc(fused[#loc97, #loc98])
#loc277 = loc(fused[#loc100, #loc101])
#loc278 = loc(fused[#loc102, #loc103])
#loc279 = loc(fused[#loc104, #loc105])
#loc280 = loc(fused[#loc106, #loc98])
#loc281 = loc(fused[#loc112, #loc113])
#loc282 = loc(fused[#loc114, #loc115])
#loc283 = loc(fused[#loc116, #loc117])
#loc284 = loc(fused[#loc116, #loc118])
#loc285 = loc(fused[#loc114, #loc119])
#loc286 = loc(fused[#loc122, #loc123])
#loc287 = loc(fused[#loc124, #loc125])
#loc288 = loc(fused[#loc126, #loc127])
#loc289 = loc(fused[#loc129, #loc130])
#loc290 = loc(fused[#loc131, #loc125])
#loc291 = loc(fused[#loc137, #loc138])
#loc292 = loc(fused[#loc136, #loc138])
#loc293 = loc(fused[#loc135, #loc138])
#loc294 = loc(fused[#loc134, #loc133])
#loc295 = loc(fused[#loc143, #loc144])
#loc296 = loc(fused[#loc145, #loc146])
#loc297 = loc(fused[#loc148, #loc146])
#loc298 = loc(fused[#loc151, #loc149])
#loc299 = loc(fused[#loc155, #loc156])
#loc300 = loc(fused[#loc157, #loc158])
#loc301 = loc(fused[#loc160, #loc158])
#loc302 = loc(fused[#loc163, #loc161])
#loc303 = loc(fused[#loc164, #loc165])
#loc304 = loc(fused[#loc166, #loc167])
#loc305 = loc(fused[#loc168, #loc165])
#loc306 = loc(fused[#loc173, #loc171])
#loc307 = loc(fused[#loc174, #loc175])
#loc308 = loc(fused[#loc177, #loc178])
#loc309 = loc(fused[#loc181, #loc182])
#loc310 = loc(fused[#loc183, #loc184])
#loc311 = loc(fused[#loc185, #loc186])
#loc312 = loc(fused[#loc187, #loc184])
#loc313 = loc(fused[#loc190, #loc191])
#loc314 = loc(fused[#loc193, #loc194])
#loc315 = loc(fused[#loc195, #loc196])
#loc316 = loc(fused[#loc197, #loc198])
#loc317 = loc(fused[#loc199, #loc200])
#loc318 = loc(fused[#loc201, #loc202])
#loc319 = loc(fused[#loc203, #loc204])
#loc320 = loc(fused[#loc205, #loc206])
#loc321 = loc(fused[#loc208, #loc207])
#loc322 = loc(fused[#loc209, #loc210])
#loc323 = loc(fused[#loc216, #loc214])
#loc324 = loc(fused[#loc217, #loc218])
#loc325 = loc(fused[#loc220, #loc221])
#loc326 = loc(fused[#loc225, #loc226])
#loc327 = loc(fused[#loc227, #loc228])
#loc328 = loc(fused[#loc229, #loc230])
#loc329 = loc(fused[#loc231, #loc228])
#loc330 = loc(fused[#loc234, #loc235])
